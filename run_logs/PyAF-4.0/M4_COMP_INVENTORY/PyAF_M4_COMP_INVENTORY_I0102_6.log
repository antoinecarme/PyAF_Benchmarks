BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0102 N= 78 H= 6 HEAD= [10.  0.  0.  0.  0.] TAIL= [ 0.  0.  0.  0. 11.]
   I0102  Date
0   10.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0102   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0102'], 'Transformations': [('I0102', 'None', '_', 'T+S+R'), ('I0102', 'None', 'Diff_', 'T+S+R'), ('I0102', 'None', 'RelDiff_', 'T+S+R'), ('I0102', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0102', 'Transformation': '_I0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.754, ('TRAINING', {'Signal': 'I0102', 'Transformation': '_I0102'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0102', 'Transformation': 'Diff_I0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.506, ('TRAINING', {'Signal': 'I0102', 'Transformation': 'Diff_I0102'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0102', 'Transformation': 'RelDiff_I0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.629, ('TRAINING', {'Signal': 'I0102', 'Transformation': 'RelDiff_I0102'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0102', 'Transformation': 'CumSum_I0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.507, ('TRAINING', {'Signal': 'I0102', 'Transformation': 'CumSum_I0102'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.397, ('SIGNAL_TRAINING', {'Signals': ['I0102'], 'Transformations': [('I0102', 'None', '_', 'T+S+R'), ('I0102', 'None', 'Diff_', 'T+S+R'), ('I0102', 'None', 'RelDiff_', 'T+S+R'), ('I0102', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0102'], 'Transformations': [('I0102', [('I0102', 'None', 'CumSum_', 'T+S+R'), ('I0102', 'None', 'Diff_', 'T+S+R'), ('I0102', 'None', 'RelDiff_', 'T+S+R'), ('I0102', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0102', 'Transformations': [('I0102', 'None', 'CumSum_', 'T+S+R'), ('I0102', 'None', 'Diff_', 'T+S+R'), ('I0102', 'None', 'RelDiff_', 'T+S+R'), ('I0102', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0102', 'Transformations': [('I0102', 'None', 'CumSum_', 'T+S+R'), ('I0102', 'None', 'Diff_', 'T+S+R'), ('I0102', 'None', 'RelDiff_', 'T+S+R'), ('I0102', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0102', 'Model': 'CumSum_I0102_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0102', 'Model': 'CumSum_I0102_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0102'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.111, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0102'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.136, ('FINALIZE_TRAINING', {'Signals': ['I0102'], 'Transformations': [('I0102', [('I0102', 'None', 'CumSum_', 'T+S+R'), ('I0102', 'None', 'Diff_', 'T+S+R'), ('I0102', 'None', 'RelDiff_', 'T+S+R'), ('I0102', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0102' Length=78  Min=0.0 Max=11.0  Mean=0.782051282051282 StdDev=2.711076216888858
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0102' Min=0.9090909090909091 Max=5.545454545454545  Mean=2.6468531468531453 StdDev=1.3616909798049062
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0102_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0102_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0102_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0102_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0726 MAPE_Forecast=0.0667 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.118 SMAPE_Forecast=0.1333 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.5811 MASE_Forecast=0.4667 MASE_Test=0.8333
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.187750076946753 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.726377346875962 L1_Forecast=0.6666666666666666 L1_Test=1.8333333333333333
INFO:pyaf.std:MODEL_L2 L2_Fit=2.746736539877763 L2_Forecast=2.581988897471611 L2_Test=4.4907311951024935
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0102_ConstantTrend 1.9457735247208945
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0102_ConstantTrend_residue_bestCycle_byMAPE None -0.12759170653907637 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0102  ...  6.670000e-02  1.667000e-01
1   None   CumSum_I0102  ...  6.670000e-02  1.667000e-01
2   None         _I0102  ...  6.670000e-02  1.667000e-01
3   None         _I0102  ...  1.045033e+09  1.185089e+09
4   None   CumSum_I0102  ...  3.831071e+09  3.420599e+09
..   ...            ...  ...           ...           ...
59  None  RelDiff_I0102  ...  9.333333e+18  8.333333e+18
60  None  RelDiff_I0102  ...  9.333333e+18  8.333333e+18
61  None  RelDiff_I0102  ...  9.333333e+18  8.333333e+18
62  None  RelDiff_I0102  ...  9.333333e+18  8.333333e+18
63  None  RelDiff_I0102  ...  9.333333e+18  8.333333e+18

[64 rows x 10 columns]
  Split Transformation  ...  ForecastMAPE      TestMAPE
0  None   CumSum_I0102  ...  6.670000e-02  1.667000e-01
1  None   CumSum_I0102  ...  6.670000e-02  1.667000e-01
2  None         _I0102  ...  6.670000e-02  1.667000e-01
3  None         _I0102  ...  1.045033e+09  1.185089e+09
4  None   CumSum_I0102  ...  3.831071e+09  3.420599e+09

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0102'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.097, ('FORECASTING', {'Signals': ['I0102'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0102, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0102_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0102 I0102 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0102 I0102 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0102 I0102 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0102 I0102 2.7208476066589355
BENCHMARK_PERF_DETAIL_BEST_MODEL I0102 I0102 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0102 I0102 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0102 I0102 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0102 I0102 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0102_6'
