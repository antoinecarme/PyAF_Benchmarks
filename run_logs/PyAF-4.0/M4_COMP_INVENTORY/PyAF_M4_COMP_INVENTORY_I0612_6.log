BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0612 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [  0.   0.   0.   0. 300.]
   I0612  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0612   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0612'], 'Transformations': [('I0612', 'None', '_', 'T+S+R'), ('I0612', 'None', 'Diff_', 'T+S+R'), ('I0612', 'None', 'RelDiff_', 'T+S+R'), ('I0612', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0612', 'Transformation': '_I0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.729, ('TRAINING', {'Signal': 'I0612', 'Transformation': '_I0612'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0612', 'Transformation': 'Diff_I0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.5, ('TRAINING', {'Signal': 'I0612', 'Transformation': 'Diff_I0612'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0612', 'Transformation': 'RelDiff_I0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.623, ('TRAINING', {'Signal': 'I0612', 'Transformation': 'RelDiff_I0612'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0612', 'Transformation': 'CumSum_I0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.477, ('TRAINING', {'Signal': 'I0612', 'Transformation': 'CumSum_I0612'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.331, ('SIGNAL_TRAINING', {'Signals': ['I0612'], 'Transformations': [('I0612', 'None', '_', 'T+S+R'), ('I0612', 'None', 'Diff_', 'T+S+R'), ('I0612', 'None', 'RelDiff_', 'T+S+R'), ('I0612', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0612'], 'Transformations': [('I0612', [('I0612', 'None', 'CumSum_', 'T+S+R'), ('I0612', 'None', 'Diff_', 'T+S+R'), ('I0612', 'None', 'RelDiff_', 'T+S+R'), ('I0612', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0612', 'Transformations': [('I0612', 'None', 'CumSum_', 'T+S+R'), ('I0612', 'None', 'Diff_', 'T+S+R'), ('I0612', 'None', 'RelDiff_', 'T+S+R'), ('I0612', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0612', 'Transformations': [('I0612', 'None', 'CumSum_', 'T+S+R'), ('I0612', 'None', 'Diff_', 'T+S+R'), ('I0612', 'None', 'RelDiff_', 'T+S+R'), ('I0612', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0612', 'Model': 'CumSum_I0612_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0612', 'Model': 'CumSum_I0612_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0612'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.111, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0612'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.136, ('FINALIZE_TRAINING', {'Signals': ['I0612'], 'Transformations': [('I0612', [('I0612', 'None', 'CumSum_', 'T+S+R'), ('I0612', 'None', 'Diff_', 'T+S+R'), ('I0612', 'None', 'RelDiff_', 'T+S+R'), ('I0612', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0612' Length=78  Min=0.0 Max=300.0  Mean=12.115384615384615 StdDev=48.7505373459487
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0612' Min=0.0 Max=3.15  Mean=0.922222222222222 StdDev=0.9331183614864782
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0612_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0612_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0612_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0612_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=24269005848.0409 MAPE_Forecast=0.0667 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2105 SMAPE_Forecast=0.1333 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6285 MASE_Forecast=0.4667 MASE_Test=0.8333
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.259846282372598 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=11.111111111111109 L1_Forecast=10.0 L1_Test=50.0
INFO:pyaf.std:MODEL_L2 L2_Fit=42.604075068890225 L2_Forecast=38.72983346207417 L2_Test=122.47448713915891
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0612_ConstantTrend 0.46111111111111097
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0612_ConstantTrend_residue_bestCycle_byMAPE None -0.37777777777777766 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0612  ...  6.670000e-02  1.667000e-01
1   None   CumSum_I0612  ...  6.670000e-02  1.667000e-01
2   None     Diff_I0612  ...  6.670000e-02  1.667000e-01
3   None  RelDiff_I0612  ...  6.670000e-02  1.667000e-01
4   None  RelDiff_I0612  ...  6.670000e-02  1.667000e-01
..   ...            ...  ...           ...           ...
59  None   CumSum_I0612  ...  2.759633e+11  3.102216e+11
60  None     Diff_I0612  ...  3.715642e+11  8.290518e+11
61  None     Diff_I0612  ...  3.715642e+11  8.290518e+11
62  None     Diff_I0612  ...  4.186240e+11  2.952605e+11
63  None     Diff_I0612  ...  4.186240e+11  2.952605e+11

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0612             T+S+R  ...  2.426901e+10       0.0667   0.1667
1  None   CumSum_I0612             T+S+R  ...  2.426901e+10       0.0667   0.1667
2  None     Diff_I0612             T+S+R  ...  8.770000e-02       0.0667   0.1667
3  None  RelDiff_I0612             T+S+R  ...  8.770000e-02       0.0667   0.1667
4  None  RelDiff_I0612             T+S+R  ...  8.770000e-02       0.0667   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0612'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.1, ('FORECASTING', {'Signals': ['I0612'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0612, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0612_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0612 I0612 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0612 I0612 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0612 I0612 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0612 I0612 2.674450397491455
BENCHMARK_PERF_DETAIL_BEST_MODEL I0612 I0612 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0612 I0612 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0612 I0612 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0612 I0612 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0612_6'
