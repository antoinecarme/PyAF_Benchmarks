BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0410 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [0. 0. 0. 0. 0.]
   I0410  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0410   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0410'], 'Transformations': [('I0410', 'None', '_', 'T+S+R'), ('I0410', 'None', 'Diff_', 'T+S+R'), ('I0410', 'None', 'RelDiff_', 'T+S+R'), ('I0410', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0410', 'Transformation': '_I0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.937, ('TRAINING', {'Signal': 'I0410', 'Transformation': '_I0410'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0410', 'Transformation': 'Diff_I0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.501, ('TRAINING', {'Signal': 'I0410', 'Transformation': 'Diff_I0410'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0410', 'Transformation': 'RelDiff_I0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.645, ('TRAINING', {'Signal': 'I0410', 'Transformation': 'RelDiff_I0410'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0410', 'Transformation': 'CumSum_I0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.458, ('TRAINING', {'Signal': 'I0410', 'Transformation': 'CumSum_I0410'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.543, ('SIGNAL_TRAINING', {'Signals': ['I0410'], 'Transformations': [('I0410', 'None', '_', 'T+S+R'), ('I0410', 'None', 'Diff_', 'T+S+R'), ('I0410', 'None', 'RelDiff_', 'T+S+R'), ('I0410', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0410'], 'Transformations': [('I0410', [('I0410', 'None', 'CumSum_', 'T+S+R'), ('I0410', 'None', 'Diff_', 'T+S+R'), ('I0410', 'None', 'RelDiff_', 'T+S+R'), ('I0410', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0410', 'Transformations': [('I0410', 'None', 'CumSum_', 'T+S+R'), ('I0410', 'None', 'Diff_', 'T+S+R'), ('I0410', 'None', 'RelDiff_', 'T+S+R'), ('I0410', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'I0410', 'Transformations': [('I0410', 'None', 'CumSum_', 'T+S+R'), ('I0410', 'None', 'Diff_', 'T+S+R'), ('I0410', 'None', 'RelDiff_', 'T+S+R'), ('I0410', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0410', 'Model': 'CumSum_I0410_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0410', 'Model': 'CumSum_I0410_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0410'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.11, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0410'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.134, ('FINALIZE_TRAINING', {'Signals': ['I0410'], 'Transformations': [('I0410', [('I0410', 'None', 'CumSum_', 'T+S+R'), ('I0410', 'None', 'Diff_', 'T+S+R'), ('I0410', 'None', 'RelDiff_', 'T+S+R'), ('I0410', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0410' Length=78  Min=0.0 Max=4.0  Mean=0.23076923076923078 StdDev=0.9047322443270439
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0410' Min=0.0 Max=4.5  Mean=1.7628205128205128 StdDev=1.4135887203668736
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0410_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0410_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0410_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0410_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=763311788.2952 MAPE_Forecast=0.1333 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1404 SMAPE_Forecast=0.2667 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6693 MASE_Forecast=0.7 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.03816558941212681 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2868574946137273 L1_Forecast=0.4 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=1.0836110225619733 L2_Forecast=1.1547005383792515 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0410_ConstantTrend 1.087719298245614
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0410_ConstantTrend_residue_bestCycle_byMAPE None -0.08771929824561409 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0410  ...  1.333000e-01  0.000000e+00
1   None   CumSum_I0410  ...  1.333000e-01  0.000000e+00
2   None     Diff_I0410  ...  1.333000e-01  0.000000e+00
3   None  RelDiff_I0410  ...  1.333000e-01  0.000000e+00
4   None  RelDiff_I0410  ...  1.333000e-01  0.000000e+00
..   ...            ...  ...           ...           ...
59  None         _I0410  ...  4.643156e+09  3.314934e+09
60  None         _I0410  ...  5.889539e+09  6.233922e+09
61  None         _I0410  ...  5.903916e+09  6.288096e+09
62  None     Diff_I0410  ...  8.038418e+09  3.466877e+10
63  None     Diff_I0410  ...  8.038418e+09  3.466877e+10

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0410             T+S+R  ...  7.633118e+08       0.1333      0.0
1  None   CumSum_I0410             T+S+R  ...  7.633118e+08       0.1333      0.0
2  None     Diff_I0410             T+S+R  ...  5.260000e-02       0.1333      0.0
3  None  RelDiff_I0410             T+S+R  ...  5.260000e-02       0.1333      0.0
4  None  RelDiff_I0410             T+S+R  ...  5.260000e-02       0.1333      0.0

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0410'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.095, ('FORECASTING', {'Signals': ['I0410'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0410, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0410_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0410 I0410 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0410 I0410 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0410 I0410 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0410 I0410 2.8599319458007812
BENCHMARK_PERF_DETAIL_BEST_MODEL I0410 I0410 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0410 I0410 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0410 I0410 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0410 I0410 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0410_6'
