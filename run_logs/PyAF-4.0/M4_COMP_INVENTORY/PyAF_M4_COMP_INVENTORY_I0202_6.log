BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0202 N= 78 H= 6 HEAD= [1. 0. 0. 0. 0.] TAIL= [0. 0. 0. 0. 0.]
   I0202  Date
0    1.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0202   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0202'], 'Transformations': [('I0202', 'None', '_', 'T+S+R'), ('I0202', 'None', 'Diff_', 'T+S+R'), ('I0202', 'None', 'RelDiff_', 'T+S+R'), ('I0202', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0202', 'Transformation': '_I0202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.992, ('TRAINING', {'Signal': 'I0202', 'Transformation': '_I0202'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0202', 'Transformation': 'Diff_I0202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.515, ('TRAINING', {'Signal': 'I0202', 'Transformation': 'Diff_I0202'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0202', 'Transformation': 'RelDiff_I0202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.59, ('TRAINING', {'Signal': 'I0202', 'Transformation': 'RelDiff_I0202'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0202', 'Transformation': 'CumSum_I0202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.452, ('TRAINING', {'Signal': 'I0202', 'Transformation': 'CumSum_I0202'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.552, ('SIGNAL_TRAINING', {'Signals': ['I0202'], 'Transformations': [('I0202', 'None', '_', 'T+S+R'), ('I0202', 'None', 'Diff_', 'T+S+R'), ('I0202', 'None', 'RelDiff_', 'T+S+R'), ('I0202', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0202'], 'Transformations': [('I0202', [('I0202', 'None', 'CumSum_', 'T+S+R'), ('I0202', 'None', 'Diff_', 'T+S+R'), ('I0202', 'None', 'RelDiff_', 'T+S+R'), ('I0202', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0202', 'Transformations': [('I0202', 'None', 'CumSum_', 'T+S+R'), ('I0202', 'None', 'Diff_', 'T+S+R'), ('I0202', 'None', 'RelDiff_', 'T+S+R'), ('I0202', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0202', 'Transformations': [('I0202', 'None', 'CumSum_', 'T+S+R'), ('I0202', 'None', 'Diff_', 'T+S+R'), ('I0202', 'None', 'RelDiff_', 'T+S+R'), ('I0202', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0202', 'Model': 'CumSum_I0202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0202', 'Model': 'CumSum_I0202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0202'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.109, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0202'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.134, ('FINALIZE_TRAINING', {'Signals': ['I0202'], 'Transformations': [('I0202', [('I0202', 'None', 'CumSum_', 'T+S+R'), ('I0202', 'None', 'Diff_', 'T+S+R'), ('I0202', 'None', 'RelDiff_', 'T+S+R'), ('I0202', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0202' Length=78  Min=0.0 Max=15.0  Mean=0.8076923076923077 StdDev=2.7505602800235778
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0202' Min=0.06666666666666667 Max=4.199999999999999  Mean=2.6017094017093996 StdDev=1.5510670661701775
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0202_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0202_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.6408 MAPE_Forecast=0.1333 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2785 SMAPE_Forecast=0.2667 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7648 MASE_Forecast=0.6222 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.32701881018335327 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=1.5706371191135735 L1_Forecast=0.13333333333333333 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=5.146627790678535 L2_Forecast=0.3651483716701107 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0202_ConstantTrend 2.0350877192982457
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0202_ConstantTrend_residue_bestCycle_byMAPE None -0.43508771929824586 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0202  ...  1.333000e-01  0.000000e+00
1   None   CumSum_I0202  ...  1.333000e-01  0.000000e+00
2   None         _I0202  ...  6.666667e+08  1.666667e+09
3   None   CumSum_I0202  ...  6.666667e+08  1.666667e+09
4   None     Diff_I0202  ...  6.666667e+08  1.666667e+09
..   ...            ...  ...           ...           ...
59  None  RelDiff_I0202  ...  8.666667e+17  1.000000e+18
60  None  RelDiff_I0202  ...  8.666667e+17  1.000000e+18
61  None  RelDiff_I0202  ...  8.666667e+17  1.000000e+18
62  None  RelDiff_I0202  ...  8.666667e+17  1.000000e+18
63  None  RelDiff_I0202  ...  8.666667e+17  1.000000e+18

[64 rows x 10 columns]
  Split Transformation  ...  ForecastMAPE      TestMAPE
0  None   CumSum_I0202  ...  1.333000e-01  0.000000e+00
1  None   CumSum_I0202  ...  1.333000e-01  0.000000e+00
2  None         _I0202  ...  6.666667e+08  1.666667e+09
3  None   CumSum_I0202  ...  6.666667e+08  1.666667e+09
4  None     Diff_I0202  ...  6.666667e+08  1.666667e+09

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0202'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['I0202'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0202, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0202_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0202 I0202 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0202 I0202 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0202 I0202 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0202 I0202 2.876398801803589
BENCHMARK_PERF_DETAIL_BEST_MODEL I0202 I0202 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0202 I0202 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0202 I0202 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0202 I0202 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0202_6'
