BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0801 N= 78 H= 6 HEAD= [ 0.  2. 10.  0.  1.] TAIL= [ 0.  0.  2.  0. 28.]
   I0801  Date
0    0.0     0
1    2.0     1
2   10.0     2
3    0.0     3
4    1.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0801   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0801'], 'Transformations': [('I0801', 'None', '_', 'T+S+R'), ('I0801', 'None', 'Diff_', 'T+S+R'), ('I0801', 'None', 'RelDiff_', 'T+S+R'), ('I0801', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0801', 'Transformation': '_I0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.037, ('TRAINING', {'Signal': 'I0801', 'Transformation': '_I0801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0801', 'Transformation': 'Diff_I0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.514, ('TRAINING', {'Signal': 'I0801', 'Transformation': 'Diff_I0801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0801', 'Transformation': 'RelDiff_I0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.606, ('TRAINING', {'Signal': 'I0801', 'Transformation': 'RelDiff_I0801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0801', 'Transformation': 'CumSum_I0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.474, ('TRAINING', {'Signal': 'I0801', 'Transformation': 'CumSum_I0801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.633, ('SIGNAL_TRAINING', {'Signals': ['I0801'], 'Transformations': [('I0801', 'None', '_', 'T+S+R'), ('I0801', 'None', 'Diff_', 'T+S+R'), ('I0801', 'None', 'RelDiff_', 'T+S+R'), ('I0801', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0801'], 'Transformations': [('I0801', [('I0801', 'None', 'CumSum_', 'T+S+R'), ('I0801', 'None', 'Diff_', 'T+S+R'), ('I0801', 'None', 'RelDiff_', 'T+S+R'), ('I0801', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0801', 'Transformations': [('I0801', 'None', 'CumSum_', 'T+S+R'), ('I0801', 'None', 'Diff_', 'T+S+R'), ('I0801', 'None', 'RelDiff_', 'T+S+R'), ('I0801', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0801', 'Transformations': [('I0801', 'None', 'CumSum_', 'T+S+R'), ('I0801', 'None', 'Diff_', 'T+S+R'), ('I0801', 'None', 'RelDiff_', 'T+S+R'), ('I0801', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0801', 'Model': 'CumSum_I0801_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0801', 'Model': 'CumSum_I0801_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.114, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.14, ('FINALIZE_TRAINING', {'Signals': ['I0801'], 'Transformations': [('I0801', [('I0801', 'None', 'CumSum_', 'T+S+R'), ('I0801', 'None', 'Diff_', 'T+S+R'), ('I0801', 'None', 'RelDiff_', 'T+S+R'), ('I0801', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0801' Length=78  Min=0.0 Max=28.0  Mean=0.7051282051282052 StdDev=3.3592924100744717
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0801' Min=0.0 Max=1.964285714285714  Mean=0.6950549450549455 StdDev=0.23340333393142243
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0801_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0801_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0801_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0801_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=2976300400.2635 MAPE_Forecast=0.0667 MAPE_Test=0.3333
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3158 SMAPE_Forecast=0.1333 SMAPE_Test=0.6667
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.0333 MASE_Forecast=0.4667 MASE_Test=0.7812
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.16665963153497776 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.701138811942136 L1_Forecast=0.13333333333333333 L1_Test=5.0
INFO:pyaf.std:MODEL_L2 L2_Fit=2.69765410984233 L2_Forecast=0.5163977794943222 L2_Test=11.460075625114056
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0801_ConstantTrend 0.6058897243107769
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES CumSum_I0801_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0801  ...  6.670000e-02  3.333000e-01
1   None     Diff_I0801  ...  6.670000e-02  3.333000e-01
2   None  RelDiff_I0801  ...  6.670000e-02  3.333000e-01
3   None  RelDiff_I0801  ...  6.670000e-02  3.333000e-01
4   None  RelDiff_I0801  ...  6.670000e-02  3.333000e-01
..   ...            ...  ...           ...           ...
59  None     Diff_I0801  ...  3.665164e+09  6.368716e+09
60  None     Diff_I0801  ...  3.750751e+09  2.608345e+09
61  None         _I0801  ...  3.766082e+09  2.690058e+09
62  None         _I0801  ...  3.812533e+09  2.904252e+09
63  None         _I0801  ...  3.812533e+09  2.904252e+09

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0801             T+S+R  ...  2.976300e+09       0.0667   0.3333
1  None     Diff_I0801             T+S+R  ...  1.404000e-01       0.0667   0.3333
2  None  RelDiff_I0801             T+S+R  ...  1.404000e-01       0.0667   0.3333
3  None  RelDiff_I0801             T+S+R  ...  1.404000e-01       0.0667   0.3333
4  None  RelDiff_I0801             T+S+R  ...  1.404000e-01       0.0667   0.3333

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0801'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.097, ('FORECASTING', {'Signals': ['I0801'], 'Horizon': 6}))
6 0     0.0
1     0.0
2     0.0
3    42.0
4     0.0
5     0.0
Name: I0801, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0801_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0801 I0801 [0.0, 0.0, 0.0, 42.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0801 I0801 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0801 I0801 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0801 I0801 2.9827024936676025
BENCHMARK_PERF_DETAIL_BEST_MODEL I0801 I0801 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0801 I0801 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0801 I0801 0.1667 0.3333 0.4167
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0801 I0801 7.0 17.146428199482248 -0.19999999999991824
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0801_6'
