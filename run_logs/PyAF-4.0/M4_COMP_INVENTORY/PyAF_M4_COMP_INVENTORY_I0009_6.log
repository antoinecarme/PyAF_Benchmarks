BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0009 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [2. 0. 0. 0. 0.]
   I0009  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0009   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0009'], 'Transformations': [('I0009', 'None', '_', 'T+S+R'), ('I0009', 'None', 'Diff_', 'T+S+R'), ('I0009', 'None', 'RelDiff_', 'T+S+R'), ('I0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0009', 'Transformation': '_I0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.987, ('TRAINING', {'Signal': 'I0009', 'Transformation': '_I0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0009', 'Transformation': 'Diff_I0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.501, ('TRAINING', {'Signal': 'I0009', 'Transformation': 'Diff_I0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0009', 'Transformation': 'RelDiff_I0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.608, ('TRAINING', {'Signal': 'I0009', 'Transformation': 'RelDiff_I0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0009', 'Transformation': 'CumSum_I0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.465, ('TRAINING', {'Signal': 'I0009', 'Transformation': 'CumSum_I0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.562, ('SIGNAL_TRAINING', {'Signals': ['I0009'], 'Transformations': [('I0009', 'None', '_', 'T+S+R'), ('I0009', 'None', 'Diff_', 'T+S+R'), ('I0009', 'None', 'RelDiff_', 'T+S+R'), ('I0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0009'], 'Transformations': [('I0009', [('I0009', 'None', 'CumSum_', 'T+S+R'), ('I0009', 'None', 'Diff_', 'T+S+R'), ('I0009', 'None', 'RelDiff_', 'T+S+R'), ('I0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0009', 'Transformations': [('I0009', 'None', 'CumSum_', 'T+S+R'), ('I0009', 'None', 'Diff_', 'T+S+R'), ('I0009', 'None', 'RelDiff_', 'T+S+R'), ('I0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'I0009', 'Transformations': [('I0009', 'None', 'CumSum_', 'T+S+R'), ('I0009', 'None', 'Diff_', 'T+S+R'), ('I0009', 'None', 'RelDiff_', 'T+S+R'), ('I0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0009', 'Model': 'CumSum_I0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0009', 'Model': 'CumSum_I0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.11, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.135, ('FINALIZE_TRAINING', {'Signals': ['I0009'], 'Transformations': [('I0009', [('I0009', 'None', 'CumSum_', 'T+S+R'), ('I0009', 'None', 'Diff_', 'T+S+R'), ('I0009', 'None', 'RelDiff_', 'T+S+R'), ('I0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0009' Length=78  Min=0.0 Max=2.0  Mean=0.14102564102564102 StdDev=0.4729709421973517
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0009' Min=0.0 Max=5.5  Mean=1.7243589743589745 StdDev=1.6977500871202738
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0009_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0009_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=270852570.0742 MAPE_Forecast=0.2 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1404 SMAPE_Forecast=0.4 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.744 MASE_Forecast=0.4667 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.013542628501077254 CRPS_Forecast=0.0702666666666666 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.07971683594952292 L1_Forecast=0.4 L1_Test=0.3333333333333333
INFO:pyaf.std:MODEL_L2 L2_Fit=0.3073229804604852 L2_Forecast=0.8944271909999159 L2_Test=0.816496580927726
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0009_ConstantTrend 0.7719298245614035
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0009_ConstantTrend_residue_bestCycle_byMAPE None 0.22807017543859653 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0009  ...  2.000000e-01  1.667000e-01
1   None   CumSum_I0009  ...  2.000000e-01  1.667000e-01
2   None     Diff_I0009  ...  2.000000e-01  1.667000e-01
3   None  RelDiff_I0009  ...  2.000000e-01  1.667000e-01
4   None  RelDiff_I0009  ...  2.000000e-01  1.667000e-01
..   ...            ...  ...           ...           ...
59  None         _I0009  ...  4.000000e+09  3.333333e+09
60  None   CumSum_I0009  ...  4.000000e+09  3.333333e+09
61  None     Diff_I0009  ...  4.000000e+09  3.333333e+09
62  None   CumSum_I0009  ...  4.034670e+09  3.235825e+09
63  None   CumSum_I0009  ...  4.034670e+09  3.235825e+09

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0009             T+S+R  ...  2.708526e+08          0.2   0.1667
1  None   CumSum_I0009             T+S+R  ...  2.708526e+08          0.2   0.1667
2  None     Diff_I0009             T+S+R  ...  5.260000e-02          0.2   0.1667
3  None  RelDiff_I0009             T+S+R  ...  5.260000e-02          0.2   0.1667
4  None  RelDiff_I0009             T+S+R  ...  5.260000e-02          0.2   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0009'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.097, ('FORECASTING', {'Signals': ['I0009'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0009, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0009_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0009 I0009 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0009 I0009 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0009 I0009 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0009 I0009 2.8844125270843506
BENCHMARK_PERF_DETAIL_BEST_MODEL I0009 I0009 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0009 I0009 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0009 I0009 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0009 I0009 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0009_6'
