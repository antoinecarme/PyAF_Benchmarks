BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0803 N= 78 H= 6 HEAD= [2. 0. 0. 0. 0.] TAIL= [0. 1. 0. 0. 0.]
   I0803  Date
0    2.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0803   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0803'], 'Transformations': [('I0803', 'None', '_', 'T+S+R'), ('I0803', 'None', 'Diff_', 'T+S+R'), ('I0803', 'None', 'RelDiff_', 'T+S+R'), ('I0803', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0803', 'Transformation': '_I0803'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.868, ('TRAINING', {'Signal': 'I0803', 'Transformation': '_I0803'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0803', 'Transformation': 'Diff_I0803'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.502, ('TRAINING', {'Signal': 'I0803', 'Transformation': 'Diff_I0803'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0803', 'Transformation': 'RelDiff_I0803'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.615, ('TRAINING', {'Signal': 'I0803', 'Transformation': 'RelDiff_I0803'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0803', 'Transformation': 'CumSum_I0803'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.476, ('TRAINING', {'Signal': 'I0803', 'Transformation': 'CumSum_I0803'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.464, ('SIGNAL_TRAINING', {'Signals': ['I0803'], 'Transformations': [('I0803', 'None', '_', 'T+S+R'), ('I0803', 'None', 'Diff_', 'T+S+R'), ('I0803', 'None', 'RelDiff_', 'T+S+R'), ('I0803', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0803'], 'Transformations': [('I0803', [('I0803', 'None', 'CumSum_', 'T+S+R'), ('I0803', 'None', 'Diff_', 'T+S+R'), ('I0803', 'None', 'RelDiff_', 'T+S+R'), ('I0803', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0803', 'Transformations': [('I0803', 'None', 'CumSum_', 'T+S+R'), ('I0803', 'None', 'Diff_', 'T+S+R'), ('I0803', 'None', 'RelDiff_', 'T+S+R'), ('I0803', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'I0803', 'Transformations': [('I0803', 'None', 'CumSum_', 'T+S+R'), ('I0803', 'None', 'Diff_', 'T+S+R'), ('I0803', 'None', 'RelDiff_', 'T+S+R'), ('I0803', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0803', 'Model': 'CumSum_I0803_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0803', 'Model': 'CumSum_I0803_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0803'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.113, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0803'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.14, ('FINALIZE_TRAINING', {'Signals': ['I0803'], 'Transformations': [('I0803', [('I0803', 'None', 'CumSum_', 'T+S+R'), ('I0803', 'None', 'Diff_', 'T+S+R'), ('I0803', 'None', 'RelDiff_', 'T+S+R'), ('I0803', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0803' Length=78  Min=0.0 Max=2.0  Mean=0.15384615384615385 StdDev=0.4259807109188754
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0803' Min=1.0 Max=6.0  Mean=3.2564102564102564 StdDev=1.709220075820289
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0803_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0803_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0803_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0803_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1305 MAPE_Forecast=0.1333 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2252 SMAPE_Forecast=0.2667 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6931 MASE_Forecast=0.9333 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.051704700347359626 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.17328408741151125 L1_Forecast=0.13333333333333333 L1_Test=0.16666666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5505697122438363 L2_Forecast=0.3651483716701107 L2_Test=0.408248290463863
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0803_ConstantTrend 2.43859649122807
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0803_ConstantTrend_residue_bestCycle_byMAPE None -0.4385964912280702 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0803  ...  1.333000e-01  1.667000e-01
1   None   CumSum_I0803  ...  1.333000e-01  1.667000e-01
2   None         _I0803  ...  1.333000e-01  1.667000e-01
3   None         _I0803  ...  4.097885e+07  1.087315e+08
4   None         _I0803  ...  2.564103e+08  3.243284e+08
..   ...            ...  ...           ...           ...
59  None  RelDiff_I0803  ...  1.733333e+18  1.666667e+18
60  None  RelDiff_I0803  ...  1.733333e+18  1.666667e+18
61  None  RelDiff_I0803  ...  1.733333e+18  1.666667e+18
62  None  RelDiff_I0803  ...  1.733333e+18  1.666667e+18
63  None  RelDiff_I0803  ...  1.733333e+18  1.666667e+18

[64 rows x 10 columns]
  Split Transformation  ...  ForecastMAPE      TestMAPE
0  None   CumSum_I0803  ...  1.333000e-01  1.667000e-01
1  None   CumSum_I0803  ...  1.333000e-01  1.667000e-01
2  None         _I0803  ...  1.333000e-01  1.667000e-01
3  None         _I0803  ...  4.097885e+07  1.087315e+08
4  None         _I0803  ...  2.564103e+08  3.243284e+08

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0803'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.098, ('FORECASTING', {'Signals': ['I0803'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0803, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0803_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0803 I0803 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0803 I0803 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0803 I0803 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0803 I0803 2.8062989711761475
BENCHMARK_PERF_DETAIL_BEST_MODEL I0803 I0803 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0803 I0803 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0803 I0803 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0803 I0803 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0803_6'
