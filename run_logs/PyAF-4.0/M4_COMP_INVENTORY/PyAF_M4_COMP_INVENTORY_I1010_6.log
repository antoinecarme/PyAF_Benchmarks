BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I1010 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [10.  0.  0.  0.  0.]
   I1010  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I1010   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I1010'], 'Transformations': [('I1010', 'None', '_', 'T+S+R'), ('I1010', 'None', 'Diff_', 'T+S+R'), ('I1010', 'None', 'RelDiff_', 'T+S+R'), ('I1010', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1010', 'Transformation': '_I1010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.082, ('TRAINING', {'Signal': 'I1010', 'Transformation': '_I1010'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1010', 'Transformation': 'Diff_I1010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.502, ('TRAINING', {'Signal': 'I1010', 'Transformation': 'Diff_I1010'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1010', 'Transformation': 'RelDiff_I1010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.621, ('TRAINING', {'Signal': 'I1010', 'Transformation': 'RelDiff_I1010'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1010', 'Transformation': 'CumSum_I1010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.473, ('TRAINING', {'Signal': 'I1010', 'Transformation': 'CumSum_I1010'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.68, ('SIGNAL_TRAINING', {'Signals': ['I1010'], 'Transformations': [('I1010', 'None', '_', 'T+S+R'), ('I1010', 'None', 'Diff_', 'T+S+R'), ('I1010', 'None', 'RelDiff_', 'T+S+R'), ('I1010', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I1010'], 'Transformations': [('I1010', [('I1010', 'None', 'CumSum_', 'T+S+R'), ('I1010', 'None', 'Diff_', 'T+S+R'), ('I1010', 'None', 'RelDiff_', 'T+S+R'), ('I1010', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I1010', 'Transformations': [('I1010', 'None', 'CumSum_', 'T+S+R'), ('I1010', 'None', 'Diff_', 'T+S+R'), ('I1010', 'None', 'RelDiff_', 'T+S+R'), ('I1010', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'I1010', 'Transformations': [('I1010', 'None', 'CumSum_', 'T+S+R'), ('I1010', 'None', 'Diff_', 'T+S+R'), ('I1010', 'None', 'RelDiff_', 'T+S+R'), ('I1010', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1010', 'Model': 'CumSum_I1010_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1010', 'Model': 'CumSum_I1010_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1010'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.108, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1010'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.135, ('FINALIZE_TRAINING', {'Signals': ['I1010'], 'Transformations': [('I1010', [('I1010', 'None', 'CumSum_', 'T+S+R'), ('I1010', 'None', 'Diff_', 'T+S+R'), ('I1010', 'None', 'RelDiff_', 'T+S+R'), ('I1010', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I1010' Length=78  Min=0.0 Max=31.0  Mean=2.08974358974359 StdDev=6.171036353631659
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I1010' Min=0.0 Max=5.258064516129032  Mean=1.3320926385442515 StdDev=1.6008991591380244
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I1010_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I1010_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I1010_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I1010_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=2822406894.5694 MAPE_Forecast=0.2667 MAPE_Test=0.3333
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3158 SMAPE_Forecast=0.5333 SMAPE_Test=0.6667
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8392 MASE_Forecast=0.6533 MASE_Test=0.9524
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.17680956777909687 CRPS_Forecast=1.3282666666666665 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0190827947060634 L1_Forecast=7.0 L1_Test=2.6666666666666665
INFO:pyaf.std:MODEL_L2 L2_Fit=3.0573888418322634 L2_Forecast=13.906832852953976 L2_Test=4.760952285695233
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I1010_ConstantTrend 0.5189586870401812
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I1010_ConstantTrend_residue_bestCycle_byMAPE None -0.06734578381437478 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I1010  ...  2.667000e-01  3.333000e-01
1   None   CumSum_I1010  ...  2.667000e-01  3.333000e-01
2   None  RelDiff_I1010  ...  2.667000e-01  3.333000e-01
3   None  RelDiff_I1010  ...  2.667000e-01  3.333000e-01
4   None  RelDiff_I1010  ...  2.667000e-01  3.333000e-01
..   ...            ...  ...           ...           ...
59  None         _I1010  ...  5.689345e+10  2.554685e+10
60  None         _I1010  ...  5.689345e+10  2.554685e+10
61  None     Diff_I1010  ...  5.906240e+10  1.134413e+11
62  None     Diff_I1010  ...  1.024689e+11  6.925846e+10
63  None     Diff_I1010  ...  1.024689e+11  6.925846e+10

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I1010             T+S+R  ...  2.822407e+09       0.2667   0.3333
1  None   CumSum_I1010             T+S+R  ...  2.822407e+09       0.2667   0.3333
2  None  RelDiff_I1010             T+S+R  ...  1.404000e-01       0.2667   0.3333
3  None  RelDiff_I1010             T+S+R  ...  1.404000e-01       0.2667   0.3333
4  None  RelDiff_I1010             T+S+R  ...  1.404000e-01       0.2667   0.3333

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I1010'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['I1010'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1010, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1010_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I1010 I1010 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I1010 I1010 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I1010 I1010 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I1010 I1010 3.0065109729766846
BENCHMARK_PERF_DETAIL_BEST_MODEL I1010 I1010 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I1010 I1010 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I1010 I1010 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I1010 I1010 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I1010_6'
