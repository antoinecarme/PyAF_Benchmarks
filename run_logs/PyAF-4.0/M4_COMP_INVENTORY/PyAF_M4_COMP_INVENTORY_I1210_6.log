BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I1210 N= 78 H= 6 HEAD= [0. 3. 1. 0. 0.] TAIL= [ 0. 24.  0.  0.  0.]
   I1210  Date
0    0.0     0
1    3.0     1
2    1.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I1210   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I1210'], 'Transformations': [('I1210', 'None', '_', 'T+S+R'), ('I1210', 'None', 'Diff_', 'T+S+R'), ('I1210', 'None', 'RelDiff_', 'T+S+R'), ('I1210', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1210', 'Transformation': '_I1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.211, ('TRAINING', {'Signal': 'I1210', 'Transformation': '_I1210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1210', 'Transformation': 'Diff_I1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.493, ('TRAINING', {'Signal': 'I1210', 'Transformation': 'Diff_I1210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1210', 'Transformation': 'RelDiff_I1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.579, ('TRAINING', {'Signal': 'I1210', 'Transformation': 'RelDiff_I1210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1210', 'Transformation': 'CumSum_I1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.455, ('TRAINING', {'Signal': 'I1210', 'Transformation': 'CumSum_I1210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.74, ('SIGNAL_TRAINING', {'Signals': ['I1210'], 'Transformations': [('I1210', 'None', '_', 'T+S+R'), ('I1210', 'None', 'Diff_', 'T+S+R'), ('I1210', 'None', 'RelDiff_', 'T+S+R'), ('I1210', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I1210'], 'Transformations': [('I1210', [('I1210', 'None', 'CumSum_', 'T+S+R'), ('I1210', 'None', 'Diff_', 'T+S+R'), ('I1210', 'None', 'RelDiff_', 'T+S+R'), ('I1210', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I1210', 'Transformations': [('I1210', 'None', 'CumSum_', 'T+S+R'), ('I1210', 'None', 'Diff_', 'T+S+R'), ('I1210', 'None', 'RelDiff_', 'T+S+R'), ('I1210', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I1210', 'Transformations': [('I1210', 'None', 'CumSum_', 'T+S+R'), ('I1210', 'None', 'Diff_', 'T+S+R'), ('I1210', 'None', 'RelDiff_', 'T+S+R'), ('I1210', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1210', 'Model': 'CumSum_I1210_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1210', 'Model': 'CumSum_I1210_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.11, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.135, ('FINALIZE_TRAINING', {'Signals': ['I1210'], 'Transformations': [('I1210', [('I1210', 'None', 'CumSum_', 'T+S+R'), ('I1210', 'None', 'Diff_', 'T+S+R'), ('I1210', 'None', 'RelDiff_', 'T+S+R'), ('I1210', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I1210' Length=78  Min=0.0 Max=45.0  Mean=1.9102564102564104 StdDev=7.255742018701195
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I1210' Min=0.0 Max=3.311111111111111  Mean=1.1390313390313387 StdDev=0.976588475732244
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I1210_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I1210_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I1210_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I1210_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=5457063712.0517 MAPE_Forecast=0.2 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3158 SMAPE_Forecast=0.4 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7494 MASE_Forecast=0.5 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.29105468935496626 CRPS_Forecast=0.1405333333333332 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=1.6860572483841176 L1_Forecast=4.0 L1_Test=4.0
INFO:pyaf.std:MODEL_L2 L2_Fit=7.339555649012092 L2_Forecast=10.683320332805403 L2_Test=9.797958971132712
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I1210_ConstantTrend 0.6912280701754382
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I1210_ConstantTrend_residue_bestCycle_byMAPE None -0.26900584795321597 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I1210  ...  2.000000e-01  1.667000e-01
1   None   CumSum_I1210  ...  2.000000e-01  1.667000e-01
2   None     Diff_I1210  ...  2.000000e-01  1.667000e-01
3   None  RelDiff_I1210  ...  2.000000e-01  1.667000e-01
4   None  RelDiff_I1210  ...  2.000000e-01  1.667000e-01
..   ...            ...  ...           ...           ...
59  None     Diff_I1210  ...  3.870748e+10  4.445296e+10
60  None   CumSum_I1210  ...  3.876390e+10  4.646774e+10
61  None   CumSum_I1210  ...  3.876390e+10  4.646774e+10
62  None   CumSum_I1210  ...  3.937854e+10  3.824938e+10
63  None   CumSum_I1210  ...  3.937854e+10  3.824938e+10

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I1210             T+S+R  ...  5.457064e+09          0.2   0.1667
1  None   CumSum_I1210             T+S+R  ...  5.457064e+09          0.2   0.1667
2  None     Diff_I1210             T+S+R  ...  1.404000e-01          0.2   0.1667
3  None  RelDiff_I1210             T+S+R  ...  1.404000e-01          0.2   0.1667
4  None  RelDiff_I1210             T+S+R  ...  1.404000e-01          0.2   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I1210'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['I1210'], 'Horizon': 6}))
6 0     0.0
1     0.0
2     0.0
3    40.0
4     0.0
5     0.0
Name: I1210, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1210_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I1210 I1210 [0.0, 0.0, 0.0, 40.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I1210 I1210 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I1210 I1210 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I1210 I1210 3.0551259517669678
BENCHMARK_PERF_DETAIL_BEST_MODEL I1210 I1210 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I1210 I1210 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I1210 I1210 0.1667 0.3333 0.4167
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I1210 I1210 6.666666666666667 16.32993161855452 -0.19999999999991003
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I1210_6'
