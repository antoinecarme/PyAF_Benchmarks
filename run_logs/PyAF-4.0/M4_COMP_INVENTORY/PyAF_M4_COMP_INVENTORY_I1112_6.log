BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I1112 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [0. 1. 0. 0. 0.]
   I1112  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I1112   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I1112'], 'Transformations': [('I1112', 'None', '_', 'T+S+R'), ('I1112', 'None', 'Diff_', 'T+S+R'), ('I1112', 'None', 'RelDiff_', 'T+S+R'), ('I1112', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1112', 'Transformation': '_I1112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.749, ('TRAINING', {'Signal': 'I1112', 'Transformation': '_I1112'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1112', 'Transformation': 'Diff_I1112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.507, ('TRAINING', {'Signal': 'I1112', 'Transformation': 'Diff_I1112'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1112', 'Transformation': 'RelDiff_I1112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.62, ('TRAINING', {'Signal': 'I1112', 'Transformation': 'RelDiff_I1112'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1112', 'Transformation': 'CumSum_I1112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.646, ('TRAINING', {'Signal': 'I1112', 'Transformation': 'CumSum_I1112'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.523, ('SIGNAL_TRAINING', {'Signals': ['I1112'], 'Transformations': [('I1112', 'None', '_', 'T+S+R'), ('I1112', 'None', 'Diff_', 'T+S+R'), ('I1112', 'None', 'RelDiff_', 'T+S+R'), ('I1112', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I1112'], 'Transformations': [('I1112', [('I1112', 'None', 'CumSum_', 'T+S+R'), ('I1112', 'None', 'Diff_', 'T+S+R'), ('I1112', 'None', 'RelDiff_', 'T+S+R'), ('I1112', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I1112', 'Transformations': [('I1112', 'None', 'CumSum_', 'T+S+R'), ('I1112', 'None', 'Diff_', 'T+S+R'), ('I1112', 'None', 'RelDiff_', 'T+S+R'), ('I1112', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I1112', 'Transformations': [('I1112', 'None', 'CumSum_', 'T+S+R'), ('I1112', 'None', 'Diff_', 'T+S+R'), ('I1112', 'None', 'RelDiff_', 'T+S+R'), ('I1112', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1112', 'Model': 'CumSum_I1112_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1112', 'Model': 'CumSum_I1112_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1112'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.111, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1112'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.136, ('FINALIZE_TRAINING', {'Signals': ['I1112'], 'Transformations': [('I1112', [('I1112', 'None', 'CumSum_', 'T+S+R'), ('I1112', 'None', 'Diff_', 'T+S+R'), ('I1112', 'None', 'RelDiff_', 'T+S+R'), ('I1112', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I1112' Length=78  Min=0.0 Max=100.0  Mean=3.128205128205128 StdDev=15.894168398696678
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I1112' Min=0.0 Max=2.4399999999999995  Mean=1.612692307692309 StdDev=0.7424606923497146
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I1112_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I1112_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I1112_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I1112_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=22997845491.0782 MAPE_Forecast=0.0667 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3509 SMAPE_Forecast=0.1333 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7573 MASE_Forecast=0.9333 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.204853678054786 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=6.545398584179747 L1_Forecast=0.06666666666666667 L1_Test=0.16666666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=25.700703161523915 L2_Forecast=0.2581988897471611 L2_Test=0.408248290463863
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I1112_ConstantTrend 1.310877192982456
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I1112_ConstantTrend_residue_bestCycle_byMAPE None -0.02087719298245605 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I1112  ...  6.670000e-02  1.667000e-01
1   None   CumSum_I1112  ...  6.670000e-02  1.667000e-01
2   None     Diff_I1112  ...  6.670000e-02  1.667000e-01
3   None  RelDiff_I1112  ...  6.670000e-02  1.667000e-01
4   None  RelDiff_I1112  ...  6.670000e-02  1.667000e-01
..   ...            ...  ...           ...           ...
59  None         _I1112  ...  6.576282e+10  8.240317e+10
60  None         _I1112  ...  7.218045e+10  1.087638e+11
61  None         _I1112  ...  7.219333e+10  1.086579e+11
62  None     Diff_I1112  ...  1.043886e+11  2.706025e+11
63  None     Diff_I1112  ...  1.043886e+11  2.706025e+11

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I1112             T+S+R  ...  2.299785e+10       0.0667   0.1667
1  None   CumSum_I1112             T+S+R  ...  2.299785e+10       0.0667   0.1667
2  None     Diff_I1112             T+S+R  ...  1.579000e-01       0.0667   0.1667
3  None  RelDiff_I1112             T+S+R  ...  1.579000e-01       0.0667   0.1667
4  None  RelDiff_I1112             T+S+R  ...  1.579000e-01       0.0667   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I1112'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.097, ('FORECASTING', {'Signals': ['I1112'], 'Horizon': 6}))
6 0     0.0
1     0.0
2     0.0
3     0.0
4    10.0
5     0.0
Name: I1112, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1112_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I1112 I1112 [0.0, 0.0, 0.0, 0.0, 10.0, 0.0]
FORECAST_DETAIL_PREDICTED I1112 I1112 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I1112 I1112 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I1112 I1112 2.8478596210479736
BENCHMARK_PERF_DETAIL_BEST_MODEL I1112 I1112 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I1112 I1112 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I1112 I1112 0.1667 0.3333 0.4167
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I1112 I1112 1.6666666666666667 4.08248290463863 -0.19999999999855977
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I1112_6'
