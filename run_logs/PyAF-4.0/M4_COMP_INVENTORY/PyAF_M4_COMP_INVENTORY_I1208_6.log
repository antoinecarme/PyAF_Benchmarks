BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I1208 N= 78 H= 6 HEAD= [10.  0.  0.  0.  0.] TAIL= [0. 0. 0. 0. 0.]
   I1208  Date
0   10.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I1208   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I1208'], 'Transformations': [('I1208', 'None', '_', 'T+S+R'), ('I1208', 'None', 'Diff_', 'T+S+R'), ('I1208', 'None', 'RelDiff_', 'T+S+R'), ('I1208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1208', 'Transformation': '_I1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.883, ('TRAINING', {'Signal': 'I1208', 'Transformation': '_I1208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1208', 'Transformation': 'Diff_I1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.51, ('TRAINING', {'Signal': 'I1208', 'Transformation': 'Diff_I1208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1208', 'Transformation': 'RelDiff_I1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.615, ('TRAINING', {'Signal': 'I1208', 'Transformation': 'RelDiff_I1208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1208', 'Transformation': 'CumSum_I1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.465, ('TRAINING', {'Signal': 'I1208', 'Transformation': 'CumSum_I1208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.474, ('SIGNAL_TRAINING', {'Signals': ['I1208'], 'Transformations': [('I1208', 'None', '_', 'T+S+R'), ('I1208', 'None', 'Diff_', 'T+S+R'), ('I1208', 'None', 'RelDiff_', 'T+S+R'), ('I1208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I1208'], 'Transformations': [('I1208', [('I1208', 'None', 'CumSum_', 'T+S+R'), ('I1208', 'None', 'Diff_', 'T+S+R'), ('I1208', 'None', 'RelDiff_', 'T+S+R'), ('I1208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I1208', 'Transformations': [('I1208', 'None', 'CumSum_', 'T+S+R'), ('I1208', 'None', 'Diff_', 'T+S+R'), ('I1208', 'None', 'RelDiff_', 'T+S+R'), ('I1208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I1208', 'Transformations': [('I1208', 'None', 'CumSum_', 'T+S+R'), ('I1208', 'None', 'Diff_', 'T+S+R'), ('I1208', 'None', 'RelDiff_', 'T+S+R'), ('I1208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1208', 'Model': 'CumSum_I1208_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1208', 'Model': 'CumSum_I1208_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.111, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.135, ('FINALIZE_TRAINING', {'Signals': ['I1208'], 'Transformations': [('I1208', [('I1208', 'None', 'CumSum_', 'T+S+R'), ('I1208', 'None', 'Diff_', 'T+S+R'), ('I1208', 'None', 'RelDiff_', 'T+S+R'), ('I1208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I1208' Length=78  Min=0.0 Max=100.0  Mean=2.7564102564102564 StdDev=12.574073751314017
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I1208' Min=0.1 Max=2.15  Mean=1.0910256410256416 StdDev=0.811762232688526
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I1208_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I1208_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I1208_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I1208_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1673 MAPE_Forecast=0.1333 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1321 SMAPE_Forecast=0.2667 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7948 MASE_Forecast=0.4667 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.6609726069559863 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=3.6903662665435517 L1_Forecast=4.0 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=16.381277904595347 L2_Forecast=10.954451150103322 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I1208_ConstantTrend 0.7535087719298244
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I1208_ConstantTrend_residue_bestCycle_byMAPE None -0.6535087719298244 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I1208  ...  1.333000e-01  0.000000e+00
1   None   CumSum_I1208  ...  1.333000e-01  0.000000e+00
2   None         _I1208  ...  1.333000e-01  0.000000e+00
3   None         _I1208  ...  3.680960e+09  5.386770e+09
4   None     Diff_I1208  ...  3.789092e+09  1.466688e+10
..   ...            ...  ...           ...           ...
59  None  RelDiff_I1208  ...  8.666667e+18  1.000000e+19
60  None  RelDiff_I1208  ...  8.666667e+18  1.000000e+19
61  None  RelDiff_I1208  ...  8.666667e+18  1.000000e+19
62  None  RelDiff_I1208  ...  8.666667e+18  1.000000e+19
63  None  RelDiff_I1208  ...  8.666667e+18  1.000000e+19

[64 rows x 10 columns]
  Split Transformation  ...  ForecastMAPE      TestMAPE
0  None   CumSum_I1208  ...  1.333000e-01  0.000000e+00
1  None   CumSum_I1208  ...  1.333000e-01  0.000000e+00
2  None         _I1208  ...  1.333000e-01  0.000000e+00
3  None         _I1208  ...  3.680960e+09  5.386770e+09
4  None     Diff_I1208  ...  3.789092e+09  1.466688e+10

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I1208'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.096, ('FORECASTING', {'Signals': ['I1208'], 'Horizon': 6}))
6 0      0.0
1      0.0
2      0.0
3      0.0
4      0.0
5    100.0
Name: I1208, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1208_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I1208 I1208 [0.0, 0.0, 0.0, 0.0, 0.0, 100.0]
FORECAST_DETAIL_PREDICTED I1208 I1208 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I1208 I1208 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I1208 I1208 2.79272723197937
BENCHMARK_PERF_DETAIL_BEST_MODEL I1208 I1208 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I1208 I1208 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I1208 I1208 0.1667 0.3333 0.8333
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I1208 I1208 16.666666666666668 40.824829046386306 -0.19999999999998574
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I1208_6'
