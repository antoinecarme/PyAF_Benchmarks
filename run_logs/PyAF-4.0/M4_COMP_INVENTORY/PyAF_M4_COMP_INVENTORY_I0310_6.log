BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0310 N= 78 H= 6 HEAD= [0. 2. 0. 2. 0.] TAIL= [0. 0. 0. 1. 0.]
   I0310  Date
0    0.0     0
1    2.0     1
2    0.0     2
3    2.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0310   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0310'], 'Transformations': [('I0310', 'None', '_', 'T+S+R'), ('I0310', 'None', 'Diff_', 'T+S+R'), ('I0310', 'None', 'RelDiff_', 'T+S+R'), ('I0310', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0310', 'Transformation': '_I0310'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.187, ('TRAINING', {'Signal': 'I0310', 'Transformation': '_I0310'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0310', 'Transformation': 'Diff_I0310'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.511, ('TRAINING', {'Signal': 'I0310', 'Transformation': 'Diff_I0310'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0310', 'Transformation': 'RelDiff_I0310'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.583, ('TRAINING', {'Signal': 'I0310', 'Transformation': 'RelDiff_I0310'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0310', 'Transformation': 'CumSum_I0310'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.469, ('TRAINING', {'Signal': 'I0310', 'Transformation': 'CumSum_I0310'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.752, ('SIGNAL_TRAINING', {'Signals': ['I0310'], 'Transformations': [('I0310', 'None', '_', 'T+S+R'), ('I0310', 'None', 'Diff_', 'T+S+R'), ('I0310', 'None', 'RelDiff_', 'T+S+R'), ('I0310', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0310'], 'Transformations': [('I0310', [('I0310', 'None', 'CumSum_', 'T+S+R'), ('I0310', 'None', 'Diff_', 'T+S+R'), ('I0310', 'None', 'RelDiff_', 'T+S+R'), ('I0310', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0310', 'Transformations': [('I0310', 'None', 'CumSum_', 'T+S+R'), ('I0310', 'None', 'Diff_', 'T+S+R'), ('I0310', 'None', 'RelDiff_', 'T+S+R'), ('I0310', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0310', 'Transformations': [('I0310', 'None', 'CumSum_', 'T+S+R'), ('I0310', 'None', 'Diff_', 'T+S+R'), ('I0310', 'None', 'RelDiff_', 'T+S+R'), ('I0310', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0310', 'Model': 'CumSum_I0310_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0310', 'Model': 'CumSum_I0310_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0310'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.112, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0310'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.137, ('FINALIZE_TRAINING', {'Signals': ['I0310'], 'Transformations': [('I0310', [('I0310', 'None', 'CumSum_', 'T+S+R'), ('I0310', 'None', 'Diff_', 'T+S+R'), ('I0310', 'None', 'RelDiff_', 'T+S+R'), ('I0310', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0310' Length=78  Min=0.0 Max=60.0  Mean=0.9871794871794872 StdDev=6.788930639224022
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0310' Min=0.0 Max=1.2833333333333334  Mean=1.0782051282051275 StdDev=0.3546426684846087
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0310_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0310_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0310_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0310_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=10612496152.7676 MAPE_Forecast=0.0 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2456 SMAPE_Forecast=0.0 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8822 MASE_Forecast=0.0 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5484694191619396 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=2.3945829485995684 L1_Forecast=0.0 L1_Test=0.16666666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=11.339411687946445 L2_Forecast=0.0 L2_Test=0.408248290463863
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0310_ConstantTrend 1.0081871345029234
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES CumSum_I0310_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0310  ...  0.000000e+00  1.667000e-01
1   None     Diff_I0310  ...  0.000000e+00  1.667000e-01
2   None  RelDiff_I0310  ...  0.000000e+00  1.667000e-01
3   None  RelDiff_I0310  ...  0.000000e+00  1.667000e-01
4   None  RelDiff_I0310  ...  0.000000e+00  1.667000e-01
..   ...            ...  ...           ...           ...
59  None         _I0310  ...  1.437246e+10  1.911935e+10
60  None         _I0310  ...  1.500360e+10  1.264014e+10
61  None         _I0310  ...  1.500360e+10  1.264014e+10
62  None     Diff_I0310  ...  1.651144e+10  3.678753e+10
63  None     Diff_I0310  ...  1.673703e+10  3.711881e+10

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0310             T+S+R  ...  1.061250e+10          0.0   0.1667
1  None     Diff_I0310             T+S+R  ...  1.053000e-01          0.0   0.1667
2  None  RelDiff_I0310             T+S+R  ...  1.053000e-01          0.0   0.1667
3  None  RelDiff_I0310             T+S+R  ...  1.053000e-01          0.0   0.1667
4  None  RelDiff_I0310             T+S+R  ...  1.053000e-01          0.0   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0310'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.096, ('FORECASTING', {'Signals': ['I0310'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0310, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0310_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0310 I0310 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0310 I0310 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0310 I0310 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0310 I0310 3.0725889205932617
BENCHMARK_PERF_DETAIL_BEST_MODEL I0310 I0310 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0310 I0310 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0310 I0310 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0310 I0310 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0310_6'
