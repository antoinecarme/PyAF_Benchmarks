BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0910 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [0. 1. 0. 0. 0.]
   I0910  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0910   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0910'], 'Transformations': [('I0910', 'None', '_', 'T+S+R'), ('I0910', 'None', 'Diff_', 'T+S+R'), ('I0910', 'None', 'RelDiff_', 'T+S+R'), ('I0910', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0910', 'Transformation': '_I0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.054, ('TRAINING', {'Signal': 'I0910', 'Transformation': '_I0910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0910', 'Transformation': 'Diff_I0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.489, ('TRAINING', {'Signal': 'I0910', 'Transformation': 'Diff_I0910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0910', 'Transformation': 'RelDiff_I0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.593, ('TRAINING', {'Signal': 'I0910', 'Transformation': 'RelDiff_I0910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0910', 'Transformation': 'CumSum_I0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.456, ('TRAINING', {'Signal': 'I0910', 'Transformation': 'CumSum_I0910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.593, ('SIGNAL_TRAINING', {'Signals': ['I0910'], 'Transformations': [('I0910', 'None', '_', 'T+S+R'), ('I0910', 'None', 'Diff_', 'T+S+R'), ('I0910', 'None', 'RelDiff_', 'T+S+R'), ('I0910', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0910'], 'Transformations': [('I0910', [('I0910', 'None', 'CumSum_', 'T+S+R'), ('I0910', 'None', 'Diff_', 'T+S+R'), ('I0910', 'None', 'RelDiff_', 'T+S+R'), ('I0910', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0910', 'Transformations': [('I0910', 'None', 'CumSum_', 'T+S+R'), ('I0910', 'None', 'Diff_', 'T+S+R'), ('I0910', 'None', 'RelDiff_', 'T+S+R'), ('I0910', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0910', 'Transformations': [('I0910', 'None', 'CumSum_', 'T+S+R'), ('I0910', 'None', 'Diff_', 'T+S+R'), ('I0910', 'None', 'RelDiff_', 'T+S+R'), ('I0910', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0910', 'Model': 'CumSum_I0910_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.018, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0910', 'Model': 'CumSum_I0910_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.108, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.132, ('FINALIZE_TRAINING', {'Signals': ['I0910'], 'Transformations': [('I0910', [('I0910', 'None', 'CumSum_', 'T+S+R'), ('I0910', 'None', 'Diff_', 'T+S+R'), ('I0910', 'None', 'RelDiff_', 'T+S+R'), ('I0910', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0910' Length=78  Min=0.0 Max=2.0  Mean=0.15384615384615385 StdDev=0.4550830602384318
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0910' Min=0.0 Max=6.0  Mean=2.8076923076923075 StdDev=2.0866344654742317
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0910_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0910_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0910_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0910_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=643274853.924 MAPE_Forecast=0.0667 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2807 SMAPE_Forecast=0.1333 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6914 MASE_Forecast=0.4667 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.041086048454469504 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2222222222222222 L1_Forecast=0.13333333333333333 L1_Test=0.16666666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6811296659464765 L2_Forecast=0.5163977794943222 L2_Test=0.408248290463863
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0910_ConstantTrend 1.8333333333333333
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0910_ConstantTrend_residue_bestCycle_byMAPE None -0.33333333333333326 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0910  ...  6.670000e-02  1.667000e-01
1   None   CumSum_I0910  ...  6.670000e-02  1.667000e-01
2   None     Diff_I0910  ...  6.670000e-02  1.667000e-01
3   None  RelDiff_I0910  ...  6.670000e-02  1.667000e-01
4   None  RelDiff_I0910  ...  6.670000e-02  1.667000e-01
..   ...            ...  ...           ...           ...
59  None     Diff_I0910  ...  4.244755e+09  1.083195e+10
60  None     Diff_I0910  ...  4.244755e+09  1.083195e+10
61  None   CumSum_I0910  ...  4.264641e+09  3.943461e+09
62  None     Diff_I0910  ...  5.259408e+09  3.553816e+09
63  None     Diff_I0910  ...  5.259408e+09  3.553816e+09

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0910             T+S+R  ...  6.432749e+08       0.0667   0.1667
1  None   CumSum_I0910             T+S+R  ...  6.432749e+08       0.0667   0.1667
2  None     Diff_I0910             T+S+R  ...  1.228000e-01       0.0667   0.1667
3  None  RelDiff_I0910             T+S+R  ...  1.228000e-01       0.0667   0.1667
4  None  RelDiff_I0910             T+S+R  ...  1.228000e-01       0.0667   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0910'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['I0910'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0910, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0910_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0910 I0910 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0910 I0910 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0910 I0910 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0910 I0910 2.90765118598938
BENCHMARK_PERF_DETAIL_BEST_MODEL I0910 I0910 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0910 I0910 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0910 I0910 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0910 I0910 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0910_6'
