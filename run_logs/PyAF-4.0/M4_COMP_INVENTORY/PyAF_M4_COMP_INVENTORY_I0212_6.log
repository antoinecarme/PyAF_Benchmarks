BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0212 N= 78 H= 6 HEAD= [0. 0. 0. 3. 0.] TAIL= [0. 0. 1. 0. 0.]
   I0212  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    3.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0212   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0212'], 'Transformations': [('I0212', 'None', '_', 'T+S+R'), ('I0212', 'None', 'Diff_', 'T+S+R'), ('I0212', 'None', 'RelDiff_', 'T+S+R'), ('I0212', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0212', 'Transformation': '_I0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.088, ('TRAINING', {'Signal': 'I0212', 'Transformation': '_I0212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0212', 'Transformation': 'Diff_I0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.502, ('TRAINING', {'Signal': 'I0212', 'Transformation': 'Diff_I0212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0212', 'Transformation': 'RelDiff_I0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.593, ('TRAINING', {'Signal': 'I0212', 'Transformation': 'RelDiff_I0212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0212', 'Transformation': 'CumSum_I0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.448, ('TRAINING', {'Signal': 'I0212', 'Transformation': 'CumSum_I0212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.633, ('SIGNAL_TRAINING', {'Signals': ['I0212'], 'Transformations': [('I0212', 'None', '_', 'T+S+R'), ('I0212', 'None', 'Diff_', 'T+S+R'), ('I0212', 'None', 'RelDiff_', 'T+S+R'), ('I0212', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0212'], 'Transformations': [('I0212', [('I0212', 'None', 'CumSum_', 'T+S+R'), ('I0212', 'None', 'Diff_', 'T+S+R'), ('I0212', 'None', 'RelDiff_', 'T+S+R'), ('I0212', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0212', 'Transformations': [('I0212', 'None', 'CumSum_', 'T+S+R'), ('I0212', 'None', 'Diff_', 'T+S+R'), ('I0212', 'None', 'RelDiff_', 'T+S+R'), ('I0212', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0212', 'Transformations': [('I0212', 'None', 'CumSum_', 'T+S+R'), ('I0212', 'None', 'Diff_', 'T+S+R'), ('I0212', 'None', 'RelDiff_', 'T+S+R'), ('I0212', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0212', 'Model': 'CumSum_I0212_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.018, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0212', 'Model': 'CumSum_I0212_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.108, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.133, ('FINALIZE_TRAINING', {'Signals': ['I0212'], 'Transformations': [('I0212', [('I0212', 'None', 'CumSum_', 'T+S+R'), ('I0212', 'None', 'Diff_', 'T+S+R'), ('I0212', 'None', 'RelDiff_', 'T+S+R'), ('I0212', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0212' Length=78  Min=0.0 Max=5.0  Mean=0.3076923076923077 StdDev=0.9379149311883018
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0212' Min=0.0 Max=4.800000000000001  Mean=2.648717948717948 StdDev=1.6213909500039667
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0212_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0212_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0212_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0212_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=1683594952.4509 MAPE_Forecast=0.0 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3509 SMAPE_Forecast=0.0 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7448 MASE_Forecast=0.0 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.10666395814096649 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.571868267159126 L1_Forecast=0.0 L1_Test=0.16666666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=1.7121477426946905 L2_Forecast=0.0 L2_Test=0.408248290463863
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0212_ConstantTrend 1.9192982456140355
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0212_ConstantTrend_residue_bestCycle_byMAPE None -0.11929824561403546 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0212  ...  0.000000e+00  1.667000e-01
1   None   CumSum_I0212  ...  0.000000e+00  1.667000e-01
2   None  RelDiff_I0212  ...  0.000000e+00  1.667000e-01
3   None  RelDiff_I0212  ...  0.000000e+00  1.667000e-01
4   None  RelDiff_I0212  ...  0.000000e+00  1.667000e-01
..   ...            ...  ...           ...           ...
59  None     Diff_I0212  ...  4.349588e+10  5.304863e+10
60  None     Diff_I0212  ...  6.433817e+10  1.080038e+11
61  None     Diff_I0212  ...  6.433817e+10  1.080038e+11
62  None     Diff_I0212  ...  6.872580e+10  1.252703e+11
63  None     Diff_I0212  ...  6.872580e+10  1.252703e+11

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0212             T+S+R  ...  1.683595e+09          0.0   0.1667
1  None   CumSum_I0212             T+S+R  ...  1.683595e+09          0.0   0.1667
2  None  RelDiff_I0212             T+S+R  ...  1.579000e-01          0.0   0.1667
3  None  RelDiff_I0212             T+S+R  ...  1.579000e-01          0.0   0.1667
4  None  RelDiff_I0212             T+S+R  ...  1.579000e-01          0.0   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0212'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.106, ('FORECASTING', {'Signals': ['I0212'], 'Horizon': 6}))
6 0    1.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0212, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0212_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0212 I0212 [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0212 I0212 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0212 I0212 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0212 I0212 2.9651265144348145
BENCHMARK_PERF_DETAIL_BEST_MODEL I0212 I0212 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0212 I0212 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0212 I0212 0.1667 0.3333 0.8333
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0212 I0212 0.16666666666666666 0.408248290463863 -0.1999999998559998
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0212_6'
