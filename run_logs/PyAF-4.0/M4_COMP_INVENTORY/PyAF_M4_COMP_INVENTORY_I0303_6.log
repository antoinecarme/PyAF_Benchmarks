BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0303 N= 78 H= 6 HEAD= [23.  0.  0.  0.  0.] TAIL= [0. 0. 0. 0. 0.]
   I0303  Date
0   23.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0303   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0303'], 'Transformations': [('I0303', 'None', '_', 'T+S+R'), ('I0303', 'None', 'Diff_', 'T+S+R'), ('I0303', 'None', 'RelDiff_', 'T+S+R'), ('I0303', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0303', 'Transformation': '_I0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.901, ('TRAINING', {'Signal': 'I0303', 'Transformation': '_I0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0303', 'Transformation': 'Diff_I0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.513, ('TRAINING', {'Signal': 'I0303', 'Transformation': 'Diff_I0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0303', 'Transformation': 'RelDiff_I0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.618, ('TRAINING', {'Signal': 'I0303', 'Transformation': 'RelDiff_I0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0303', 'Transformation': 'CumSum_I0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.46, ('TRAINING', {'Signal': 'I0303', 'Transformation': 'CumSum_I0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.494, ('SIGNAL_TRAINING', {'Signals': ['I0303'], 'Transformations': [('I0303', 'None', '_', 'T+S+R'), ('I0303', 'None', 'Diff_', 'T+S+R'), ('I0303', 'None', 'RelDiff_', 'T+S+R'), ('I0303', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0303'], 'Transformations': [('I0303', [('I0303', 'None', 'CumSum_', 'T+S+R'), ('I0303', 'None', 'Diff_', 'T+S+R'), ('I0303', 'None', 'RelDiff_', 'T+S+R'), ('I0303', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0303', 'Transformations': [('I0303', 'None', 'CumSum_', 'T+S+R'), ('I0303', 'None', 'Diff_', 'T+S+R'), ('I0303', 'None', 'RelDiff_', 'T+S+R'), ('I0303', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0303', 'Transformations': [('I0303', 'None', 'CumSum_', 'T+S+R'), ('I0303', 'None', 'Diff_', 'T+S+R'), ('I0303', 'None', 'RelDiff_', 'T+S+R'), ('I0303', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0303', 'Model': 'CumSum_I0303_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0303', 'Model': 'CumSum_I0303_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.111, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.136, ('FINALIZE_TRAINING', {'Signals': ['I0303'], 'Transformations': [('I0303', [('I0303', 'None', 'CumSum_', 'T+S+R'), ('I0303', 'None', 'Diff_', 'T+S+R'), ('I0303', 'None', 'RelDiff_', 'T+S+R'), ('I0303', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0303' Length=78  Min=0.0 Max=50.0  Mean=2.6025641025641026 StdDev=8.623670084892527
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0303' Min=0.46 Max=4.06  Mean=2.244615384615385 StdDev=1.241904753261525
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0303_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0303_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0303_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0303_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.134 MAPE_Forecast=0.1333 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1954 SMAPE_Forecast=0.2667 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6968 MASE_Forecast=0.4667 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.8698449632854068 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=3.521083410280086 L1_Forecast=2.6666666666666665 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=12.343549338521983 L2_Forecast=7.302967433402215 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0303_ConstantTrend 1.674035087719298
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0303_ConstantTrend_residue_bestCycle_byMAPE None -0.21403508771929802 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0303  ...  1.333000e-01  0.000000e+00
1   None   CumSum_I0303  ...  1.333000e-01  0.000000e+00
2   None         _I0303  ...  1.333000e-01  0.000000e+00
3   None         _I0303  ...  6.438986e+08  1.007326e+09
4   None         _I0303  ...  6.626895e+09  1.461310e+10
..   ...            ...  ...           ...           ...
59  None  RelDiff_I0303  ...  1.993333e+19  2.300000e+19
60  None  RelDiff_I0303  ...  1.993333e+19  2.300000e+19
61  None  RelDiff_I0303  ...  1.993333e+19  2.300000e+19
62  None  RelDiff_I0303  ...  1.993333e+19  2.300000e+19
63  None  RelDiff_I0303  ...  1.993333e+19  2.300000e+19

[64 rows x 10 columns]
  Split Transformation  ...  ForecastMAPE      TestMAPE
0  None   CumSum_I0303  ...  1.333000e-01  0.000000e+00
1  None   CumSum_I0303  ...  1.333000e-01  0.000000e+00
2  None         _I0303  ...  1.333000e-01  0.000000e+00
3  None         _I0303  ...  6.438986e+08  1.007326e+09
4  None         _I0303  ...  6.626895e+09  1.461310e+10

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0303'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.096, ('FORECASTING', {'Signals': ['I0303'], 'Horizon': 6}))
6 0     0.0
1     0.0
2     0.0
3    20.0
4     0.0
5     0.0
Name: I0303, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0303_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0303 I0303 [0.0, 0.0, 0.0, 20.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0303 I0303 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0303 I0303 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0303 I0303 2.8189339637756348
BENCHMARK_PERF_DETAIL_BEST_MODEL I0303 I0303 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0303 I0303 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0303 I0303 0.1667 0.3333 0.4167
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0303 I0303 3.3333333333333335 8.16496580927726 -0.19999999999964002
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0303_6'
