BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0808 N= 78 H= 6 HEAD= [0. 0. 0. 0. 0.] TAIL= [0. 1. 0. 0. 5.]
   I0808  Date
0    0.0     0
1    0.0     1
2    0.0     2
3    0.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0808   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0808'], 'Transformations': [('I0808', 'None', '_', 'T+S+R'), ('I0808', 'None', 'Diff_', 'T+S+R'), ('I0808', 'None', 'RelDiff_', 'T+S+R'), ('I0808', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0808', 'Transformation': '_I0808'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.983, ('TRAINING', {'Signal': 'I0808', 'Transformation': '_I0808'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0808', 'Transformation': 'Diff_I0808'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.521, ('TRAINING', {'Signal': 'I0808', 'Transformation': 'Diff_I0808'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0808', 'Transformation': 'RelDiff_I0808'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.6, ('TRAINING', {'Signal': 'I0808', 'Transformation': 'RelDiff_I0808'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0808', 'Transformation': 'CumSum_I0808'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.467, ('TRAINING', {'Signal': 'I0808', 'Transformation': 'CumSum_I0808'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.573, ('SIGNAL_TRAINING', {'Signals': ['I0808'], 'Transformations': [('I0808', 'None', '_', 'T+S+R'), ('I0808', 'None', 'Diff_', 'T+S+R'), ('I0808', 'None', 'RelDiff_', 'T+S+R'), ('I0808', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0808'], 'Transformations': [('I0808', [('I0808', 'None', 'CumSum_', 'T+S+R'), ('I0808', 'None', 'Diff_', 'T+S+R'), ('I0808', 'None', 'RelDiff_', 'T+S+R'), ('I0808', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0808', 'Transformations': [('I0808', 'None', 'CumSum_', 'T+S+R'), ('I0808', 'None', 'Diff_', 'T+S+R'), ('I0808', 'None', 'RelDiff_', 'T+S+R'), ('I0808', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'I0808', 'Transformations': [('I0808', 'None', 'CumSum_', 'T+S+R'), ('I0808', 'None', 'Diff_', 'T+S+R'), ('I0808', 'None', 'RelDiff_', 'T+S+R'), ('I0808', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0808', 'Model': 'CumSum_I0808_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0808', 'Model': 'CumSum_I0808_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0808'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.11, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0808'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.136, ('FINALIZE_TRAINING', {'Signals': ['I0808'], 'Transformations': [('I0808', [('I0808', 'None', 'CumSum_', 'T+S+R'), ('I0808', 'None', 'Diff_', 'T+S+R'), ('I0808', 'None', 'RelDiff_', 'T+S+R'), ('I0808', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0808' Length=78  Min=0.0 Max=5.0  Mean=0.21794871794871795 StdDev=0.7450251397829559
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0808' Min=0.0 Max=3.4  Mean=1.1307692307692316 StdDev=0.8868422361805777
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0808_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0808_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0808_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0808_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=627885503.337 MAPE_Forecast=0.0667 MAPE_Test=0.3333
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2456 SMAPE_Forecast=0.1333 SMAPE_Test=0.6667
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7847 MASE_Forecast=0.4667 MASE_Test=0.7143
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.04031658092599921 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.23822714681440443 L1_Forecast=0.06666666666666667 L1_Test=1.0
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7586791877523471 L2_Forecast=0.2581988897471611 L2_Test=2.0816659994661326
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0808_ConstantTrend 0.7157894736842105
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0808_ConstantTrend_residue_bestCycle_byMAPE None -0.3157894736842105 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0808  ...  6.670000e-02  3.333000e-01
1   None   CumSum_I0808  ...  6.670000e-02  3.333000e-01
2   None  RelDiff_I0808  ...  6.670000e-02  3.333000e-01
3   None  RelDiff_I0808  ...  6.670000e-02  3.333000e-01
4   None  RelDiff_I0808  ...  6.670000e-02  3.333000e-01
..   ...            ...  ...           ...           ...
59  None     Diff_I0808  ...  1.336340e+10  1.338615e+10
60  None     Diff_I0808  ...  1.401409e+10  2.449824e+10
61  None     Diff_I0808  ...  1.401616e+10  2.451335e+10
62  None     Diff_I0808  ...  1.738292e+10  2.396389e+10
63  None     Diff_I0808  ...  1.913177e+10  2.540198e+10

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0808             T+S+R  ...  6.278855e+08       0.0667   0.3333
1  None   CumSum_I0808             T+S+R  ...  6.278855e+08       0.0667   0.3333
2  None  RelDiff_I0808             T+S+R  ...  1.053000e-01       0.0667   0.3333
3  None  RelDiff_I0808             T+S+R  ...  1.053000e-01       0.0667   0.3333
4  None  RelDiff_I0808             T+S+R  ...  1.053000e-01       0.0667   0.3333

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0808'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.095, ('FORECASTING', {'Signals': ['I0808'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    2.0
Name: I0808, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0808_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0808 I0808 [0.0, 0.0, 0.0, 0.0, 0.0, 2.0]
FORECAST_DETAIL_PREDICTED I0808 I0808 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0808 I0808 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0808 I0808 2.912018299102783
BENCHMARK_PERF_DETAIL_BEST_MODEL I0808 I0808 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0808 I0808 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0808 I0808 0.1667 0.3333 0.8333
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0808 I0808 0.3333333333333333 0.816496580927726 -0.19999999996399986
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0808_6'
