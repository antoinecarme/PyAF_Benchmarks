BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I1211 N= 78 H= 6 HEAD= [ 0. 10.  0.  2.  0.] TAIL= [0. 0. 4. 0. 0.]
   I1211  Date
0    0.0     0
1   10.0     1
2    0.0     2
3    2.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I1211   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I1211'], 'Transformations': [('I1211', 'None', '_', 'T+S+R'), ('I1211', 'None', 'Diff_', 'T+S+R'), ('I1211', 'None', 'RelDiff_', 'T+S+R'), ('I1211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1211', 'Transformation': '_I1211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.953, ('TRAINING', {'Signal': 'I1211', 'Transformation': '_I1211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1211', 'Transformation': 'Diff_I1211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.516, ('TRAINING', {'Signal': 'I1211', 'Transformation': 'Diff_I1211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1211', 'Transformation': 'RelDiff_I1211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.61, ('TRAINING', {'Signal': 'I1211', 'Transformation': 'RelDiff_I1211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I1211', 'Transformation': 'CumSum_I1211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.462, ('TRAINING', {'Signal': 'I1211', 'Transformation': 'CumSum_I1211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.543, ('SIGNAL_TRAINING', {'Signals': ['I1211'], 'Transformations': [('I1211', 'None', '_', 'T+S+R'), ('I1211', 'None', 'Diff_', 'T+S+R'), ('I1211', 'None', 'RelDiff_', 'T+S+R'), ('I1211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I1211'], 'Transformations': [('I1211', [('I1211', 'None', 'CumSum_', 'T+S+R'), ('I1211', 'None', 'Diff_', 'T+S+R'), ('I1211', 'None', 'RelDiff_', 'T+S+R'), ('I1211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I1211', 'Transformations': [('I1211', 'None', 'CumSum_', 'T+S+R'), ('I1211', 'None', 'Diff_', 'T+S+R'), ('I1211', 'None', 'RelDiff_', 'T+S+R'), ('I1211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I1211', 'Transformations': [('I1211', 'None', 'CumSum_', 'T+S+R'), ('I1211', 'None', 'Diff_', 'T+S+R'), ('I1211', 'None', 'RelDiff_', 'T+S+R'), ('I1211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1211', 'Model': 'CumSum_I1211_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I1211', 'Model': 'CumSum_I1211_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.11, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I1211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.135, ('FINALIZE_TRAINING', {'Signals': ['I1211'], 'Transformations': [('I1211', [('I1211', 'None', 'CumSum_', 'T+S+R'), ('I1211', 'None', 'Diff_', 'T+S+R'), ('I1211', 'None', 'RelDiff_', 'T+S+R'), ('I1211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I1211' Length=78  Min=0.0 Max=10.0  Mean=0.5641025641025641 StdDev=1.9973684199128694
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I1211' Min=0.0 Max=4.4  Mean=2.7307692307692304 StdDev=1.288141942758748
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I1211_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I1211_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I1211_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I1211_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=3933518005.6805 MAPE_Forecast=0.0 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3158 SMAPE_Forecast=0.0 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8287 MASE_Forecast=0.0 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.21452051180583026 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0951061865189287 L1_Forecast=0.0 L1_Test=0.6666666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=3.799131020466028 L2_Forecast=0.0 L2_Test=1.632993161855452
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I1211_ConstantTrend 2.2421052631578937
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I1211_ConstantTrend_residue_bestCycle_byMAPE None -0.6421052631578938 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I1211  ...  0.000000e+00  1.667000e-01
1   None   CumSum_I1211  ...  0.000000e+00  1.667000e-01
2   None  RelDiff_I1211  ...  0.000000e+00  1.667000e-01
3   None  RelDiff_I1211  ...  0.000000e+00  1.667000e-01
4   None  RelDiff_I1211  ...  0.000000e+00  1.667000e-01
..   ...            ...  ...           ...           ...
59  None     Diff_I1211  ...  2.541852e+10  2.766572e+10
60  None     Diff_I1211  ...  3.010247e+10  5.738170e+10
61  None     Diff_I1211  ...  4.050692e+10  6.742377e+10
62  None     Diff_I1211  ...  5.089361e+10  9.300266e+10
63  None     Diff_I1211  ...  5.094179e+10  9.303461e+10

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I1211             T+S+R  ...  3.933518e+09          0.0   0.1667
1  None   CumSum_I1211             T+S+R  ...  3.933518e+09          0.0   0.1667
2  None  RelDiff_I1211             T+S+R  ...  1.404000e-01          0.0   0.1667
3  None  RelDiff_I1211             T+S+R  ...  1.404000e-01          0.0   0.1667
4  None  RelDiff_I1211             T+S+R  ...  1.404000e-01          0.0   0.1667

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I1211'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.099, ('FORECASTING', {'Signals': ['I1211'], 'Horizon': 6}))
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1211, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I1211_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I1211 I1211 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I1211 I1211 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I1211 I1211 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I1211 I1211 2.8525919914245605
BENCHMARK_PERF_DETAIL_BEST_MODEL I1211 I1211 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I1211 I1211 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I1211 I1211 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I1211 I1211 0.0 0.0 1.0
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I1211_6'
