BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0002 N= 78 H= 6 HEAD= [ 2.  0.  0. 10.  0.] TAIL= [0. 0. 3. 0. 0.]
   I0002  Date
0    2.0     0
1    0.0     1
2    0.0     2
3   10.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0002   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0002'], 'Transformations': [('I0002', 'None', '_', 'T+S+R'), ('I0002', 'None', 'Diff_', 'T+S+R'), ('I0002', 'None', 'RelDiff_', 'T+S+R'), ('I0002', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0002', 'Transformation': '_I0002'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.017, ('TRAINING', {'Signal': 'I0002', 'Transformation': '_I0002'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0002', 'Transformation': 'Diff_I0002'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.509, ('TRAINING', {'Signal': 'I0002', 'Transformation': 'Diff_I0002'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0002', 'Transformation': 'RelDiff_I0002'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.599, ('TRAINING', {'Signal': 'I0002', 'Transformation': 'RelDiff_I0002'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0002', 'Transformation': 'CumSum_I0002'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.459, ('TRAINING', {'Signal': 'I0002', 'Transformation': 'CumSum_I0002'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.588, ('SIGNAL_TRAINING', {'Signals': ['I0002'], 'Transformations': [('I0002', 'None', '_', 'T+S+R'), ('I0002', 'None', 'Diff_', 'T+S+R'), ('I0002', 'None', 'RelDiff_', 'T+S+R'), ('I0002', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0002'], 'Transformations': [('I0002', [('I0002', 'None', 'CumSum_', 'T+S+R'), ('I0002', 'None', 'Diff_', 'T+S+R'), ('I0002', 'None', 'RelDiff_', 'T+S+R'), ('I0002', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0002', 'Transformations': [('I0002', 'None', 'CumSum_', 'T+S+R'), ('I0002', 'None', 'Diff_', 'T+S+R'), ('I0002', 'None', 'RelDiff_', 'T+S+R'), ('I0002', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I0002', 'Transformations': [('I0002', 'None', 'CumSum_', 'T+S+R'), ('I0002', 'None', 'Diff_', 'T+S+R'), ('I0002', 'None', 'RelDiff_', 'T+S+R'), ('I0002', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0002', 'Model': 'CumSum_I0002_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.019, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0002', 'Model': 'CumSum_I0002_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0002'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.108, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0002'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.133, ('FINALIZE_TRAINING', {'Signals': ['I0002'], 'Transformations': [('I0002', [('I0002', 'None', 'CumSum_', 'T+S+R'), ('I0002', 'None', 'Diff_', 'T+S+R'), ('I0002', 'None', 'RelDiff_', 'T+S+R'), ('I0002', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0002' Length=78  Min=0.0 Max=10.0  Mean=0.2948717948717949 StdDev=1.220644789245487
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0002' Min=0.2 Max=2.3000000000000003  Mean=1.7487179487179492 StdDev=0.3950798652604988
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0002_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0002_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0002_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0002_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2667 MAPE_Forecast=0.0 MAPE_Test=0.1667
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3082 SMAPE_Forecast=0.0 SMAPE_Test=0.3333
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8843 MASE_Forecast=0.0 MASE_Test=0.4167
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.15281273358835687 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5684826100338565 L1_Forecast=0.0 L1_Test=0.5
INFO:pyaf.std:MODEL_L2 L2_Fit=2.3599771963775615 L2_Forecast=0.0 L2_Test=1.224744871391589
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0002_ConstantTrend 1.6403508771929824
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES CumSum_I0002_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0002  ...  0.000000e+00  1.667000e-01
1   None         _I0002  ...  0.000000e+00  5.000000e+09
2   None   CumSum_I0002  ...  0.000000e+00  5.000000e+09
3   None     Diff_I0002  ...  0.000000e+00  5.000000e+09
4   None         _I0002  ...  0.000000e+00  1.667000e-01
..   ...            ...  ...           ...           ...
59  None  RelDiff_I0002  ...  2.000000e+18  1.666667e+18
60  None  RelDiff_I0002  ...  2.000000e+18  1.666667e+18
61  None  RelDiff_I0002  ...  2.000000e+18  1.666667e+18
62  None  RelDiff_I0002  ...  2.000000e+18  1.666667e+18
63  None  RelDiff_I0002  ...  2.000000e+18  1.666667e+18

[64 rows x 10 columns]
  Split Transformation  ... ForecastMAPE      TestMAPE
0  None   CumSum_I0002  ...          0.0  1.667000e-01
1  None         _I0002  ...          0.0  5.000000e+09
2  None   CumSum_I0002  ...          0.0  5.000000e+09
3  None     Diff_I0002  ...          0.0  5.000000e+09
4  None         _I0002  ...          0.0  1.667000e-01

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0002'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.093, ('FORECASTING', {'Signals': ['I0002'], 'Horizon': 6}))
6 0    3.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0002, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0002_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0002 I0002 [3.0, 0.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0002 I0002 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0002 I0002 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0002 I0002 2.9101009368896484
BENCHMARK_PERF_DETAIL_BEST_MODEL I0002 I0002 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0002 I0002 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0002 I0002 0.1667 0.3333 0.8333
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0002 I0002 0.5 1.224744871391589 -0.1999999999840001
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0002_6'
