BENCH_DATA M4_COMP_INVENTORY
TIME :  Date N= 78 H= 6 HEAD= [0 1 2 3 4] TAIL= [73 74 75 76 77]
SIGNAL :  I0309 N= 78 H= 6 HEAD= [ 0.  0.  0. 10.  0.] TAIL= [0. 0. 0. 0. 0.]
   I0309  Date
0    0.0     0
1    0.0     1
2    0.0     2
3   10.0     3
4    0.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   I0309   78 non-null     float64
 1   Date    78 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I0309'], 'Transformations': [('I0309', 'None', '_', 'T+S+R'), ('I0309', 'None', 'Diff_', 'T+S+R'), ('I0309', 'None', 'RelDiff_', 'T+S+R'), ('I0309', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0309', 'Transformation': '_I0309'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.975, ('TRAINING', {'Signal': 'I0309', 'Transformation': '_I0309'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0309', 'Transformation': 'Diff_I0309'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.518, ('TRAINING', {'Signal': 'I0309', 'Transformation': 'Diff_I0309'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0309', 'Transformation': 'RelDiff_I0309'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.616, ('TRAINING', {'Signal': 'I0309', 'Transformation': 'RelDiff_I0309'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I0309', 'Transformation': 'CumSum_I0309'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.457, ('TRAINING', {'Signal': 'I0309', 'Transformation': 'CumSum_I0309'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.569, ('SIGNAL_TRAINING', {'Signals': ['I0309'], 'Transformations': [('I0309', 'None', '_', 'T+S+R'), ('I0309', 'None', 'Diff_', 'T+S+R'), ('I0309', 'None', 'RelDiff_', 'T+S+R'), ('I0309', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I0309'], 'Transformations': [('I0309', [('I0309', 'None', 'CumSum_', 'T+S+R'), ('I0309', 'None', 'Diff_', 'T+S+R'), ('I0309', 'None', 'RelDiff_', 'T+S+R'), ('I0309', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I0309', 'Transformations': [('I0309', 'None', 'CumSum_', 'T+S+R'), ('I0309', 'None', 'Diff_', 'T+S+R'), ('I0309', 'None', 'RelDiff_', 'T+S+R'), ('I0309', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.015, ('MODEL_SELECTION', {'Signal': 'I0309', 'Transformations': [('I0309', 'None', 'CumSum_', 'T+S+R'), ('I0309', 'None', 'Diff_', 'T+S+R'), ('I0309', 'None', 'RelDiff_', 'T+S+R'), ('I0309', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0309', 'Model': 'CumSum_I0309_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I0309', 'Model': 'CumSum_I0309_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0309'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.11, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I0309'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.148, ('FINALIZE_TRAINING', {'Signals': ['I0309'], 'Transformations': [('I0309', [('I0309', 'None', 'CumSum_', 'T+S+R'), ('I0309', 'None', 'Diff_', 'T+S+R'), ('I0309', 'None', 'RelDiff_', 'T+S+R'), ('I0309', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=56 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I0309' Length=78  Min=0.0 Max=50.0  Mean=1.3717948717948718 StdDev=6.251377231559121
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I0309' Min=0.0 Max=2.14  Mean=1.0466666666666669 StdDev=0.7004955510879547
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I0309_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I0309_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I0309_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I0309_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=5817174515.3583 MAPE_Forecast=0.1333 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2807 SMAPE_Forecast=0.2667 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8826 MASE_Forecast=0.525 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.3226221342830763 CRPS_Forecast=0.0 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=2.301015697137581 L1_Forecast=0.6 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=8.61398901357299 L2_Forecast=2.0816659994661326 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_I0309_ConstantTrend 0.6631578947368423
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I0309_ConstantTrend_residue_bestCycle_byMAPE None -0.14315789473684226 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_I0309  ...  1.333000e-01  0.000000e+00
1   None   CumSum_I0309  ...  1.333000e-01  0.000000e+00
2   None  RelDiff_I0309  ...  1.333000e-01  0.000000e+00
3   None  RelDiff_I0309  ...  1.333000e-01  0.000000e+00
4   None  RelDiff_I0309  ...  1.333000e-01  0.000000e+00
..   ...            ...  ...           ...           ...
59  None     Diff_I0309  ...  7.000331e+11  1.293241e+12
60  None     Diff_I0309  ...  1.021121e+12  2.439274e+12
61  None     Diff_I0309  ...  1.021121e+12  2.439274e+12
62  None     Diff_I0309  ...  1.141494e+12  2.884063e+12
63  None     Diff_I0309  ...  1.141494e+12  2.884063e+12

[64 rows x 10 columns]
  Split Transformation DecompositionType  ...       FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_I0309             T+S+R  ...  5.817175e+09       0.1333      0.0
1  None   CumSum_I0309             T+S+R  ...  5.817175e+09       0.1333      0.0
2  None  RelDiff_I0309             T+S+R  ...  1.228000e-01       0.1333      0.0
3  None  RelDiff_I0309             T+S+R  ...  1.228000e-01       0.1333      0.0
4  None  RelDiff_I0309             T+S+R  ...  1.228000e-01       0.1333      0.0

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I0309'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.095, ('FORECASTING', {'Signals': ['I0309'], 'Horizon': 6}))
6 0     0.0
1    20.0
2     0.0
3     0.0
4     0.0
5     0.0
Name: I0309, dtype: float64
6 0    0.0
1    0.0
2    0.0
3    0.0
4    0.0
5    0.0
Name: I0309_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I0309 I0309 [0.0, 20.0, 0.0, 0.0, 0.0, 0.0]
FORECAST_DETAIL_PREDICTED I0309 I0309 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I0309 I0309 78 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I0309 I0309 2.907294988632202
BENCHMARK_PERF_DETAIL_BEST_MODEL I0309 I0309 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I0309 I0309 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I0309 I0309 0.1667 0.3333 0.4167
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I0309 I0309 3.3333333333333335 8.16496580927726 -0.19999999999964024
BENCHMARK_SUCCESS 'M4_COMP_INVENTORY_I0309_6'
