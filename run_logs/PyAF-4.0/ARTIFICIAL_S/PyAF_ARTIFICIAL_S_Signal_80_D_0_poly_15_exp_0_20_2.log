Exception ignored in: <_io.FileIO name='/home/antoine/dev/python/packages/timeseries/pyaf/logs/ARTIFICIAL_S/PyAF_ARTIFICIAL_S_Signal_80_D_0_poly_15__2_0_2.log' mode='ab' closefd=True>
Traceback (most recent call last):
  File "/home/antoine/dev/python/packages/timeseries/pyaf/pyaf/Bench/GenericBenchmark.py", line 40, in set_pyaf_logger
    pyaf_logger.handlers = []
ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/antoine/dev/python/packages/timeseries/pyaf/logs/ARTIFICIAL_S/PyAF_ARTIFICIAL_S_Signal_80_D_0_poly_15__2_0_2.log' mode='a' encoding='UTF-8'>
BENCH_DATA ARTIFICIAL_S
TIME :  Date N= 78 H= 2 HEAD= ['2000-01-01T00:00:00.000000000' '2000-01-02T00:00:00.000000000'
 '2000-01-03T00:00:00.000000000' '2000-01-04T00:00:00.000000000'
 '2000-01-05T00:00:00.000000000'] TAIL= ['2000-03-14T00:00:00.000000000' '2000-03-15T00:00:00.000000000'
 '2000-03-16T00:00:00.000000000' '2000-03-17T00:00:00.000000000'
 '2000-03-18T00:00:00.000000000']
SIGNAL :  Signal_80_D_0_poly_15_exp_0_20 N= 78 H= 2 HEAD= [0.09697197 0.00673795 0.0017761  0.09697197 0.02556153] TAIL= [0.36787944 0.01312373 0.09697197 0.00673795 0.0017761 ]
   Signal_80_D_0_poly_15_exp_0_20       Date
0                        0.096972 2000-01-01
1                        0.006738 2000-01-02
2                        0.001776 2000-01-03
3                        0.096972 2000-01-04
4                        0.025562 2000-01-05
<class 'pandas.core.frame.DataFrame'>
Int64Index: 78 entries, 0 to 77
Data columns (total 2 columns):
 #   Column                          Non-Null Count  Dtype         
---  ------                          --------------  -----         
 0   Signal_80_D_0_poly_15_exp_0_20  78 non-null     float64       
 1   Date                            78 non-null     datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['Signal_80_D_0_poly_15_exp_0_20'], 'Transformations': [('Signal_80_D_0_poly_15_exp_0_20', 'None', '_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'Diff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'RelDiff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': '_Signal_80_D_0_poly_15_exp_0_20'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.617, ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': '_Signal_80_D_0_poly_15_exp_0_20'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': 'Diff_Signal_80_D_0_poly_15_exp_0_20'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.807, ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': 'Diff_Signal_80_D_0_poly_15_exp_0_20'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': 'RelDiff_Signal_80_D_0_poly_15_exp_0_20'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.731, ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': 'RelDiff_Signal_80_D_0_poly_15_exp_0_20'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': 'CumSum_Signal_80_D_0_poly_15_exp_0_20'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.55, ('TRAINING', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformation': 'CumSum_Signal_80_D_0_poly_15_exp_0_20'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.707, ('SIGNAL_TRAINING', {'Signals': ['Signal_80_D_0_poly_15_exp_0_20'], 'Transformations': [('Signal_80_D_0_poly_15_exp_0_20', 'None', '_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'Diff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'RelDiff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['Signal_80_D_0_poly_15_exp_0_20'], 'Transformations': [('Signal_80_D_0_poly_15_exp_0_20', [('Signal_80_D_0_poly_15_exp_0_20', 'None', 'CumSum_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'Diff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'RelDiff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformations': [('Signal_80_D_0_poly_15_exp_0_20', 'None', 'CumSum_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'Diff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'RelDiff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Transformations': [('Signal_80_D_0_poly_15_exp_0_20', 'None', 'CumSum_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'Diff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'RelDiff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Model': 'CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20', 'Model': 'CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.047, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'Signal_80_D_0_poly_15_exp_0_20'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.076, ('FINALIZE_TRAINING', {'Signals': ['Signal_80_D_0_poly_15_exp_0_20'], 'Transformations': [('Signal_80_D_0_poly_15_exp_0_20', [('Signal_80_D_0_poly_15_exp_0_20', 'None', 'CumSum_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'Diff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', 'RelDiff_', 'T+S+R'), ('Signal_80_D_0_poly_15_exp_0_20', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2000-01-01T00:00:00.000000 TimeMax=2000-02-29T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Signal_80_D_0_poly_15_exp_0_20' Length=78  Min=0.0002403694764195145 Max=0.36787944117144233  Mean=0.057481746546584715 StdDev=0.09599594460940664
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_Signal_80_D_0_poly_15_exp_0_20' Min=0.263115663800364 Max=12.144594400392544  Mean=6.119888175020231 StdDev=3.557172972170349
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=1.1522 MAPE_Forecast=0.8957 MAPE_Test=0.9145
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=1.7077 SMAPE_Forecast=1.7285 SMAPE_Test=1.6927
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8741 MASE_Forecast=0.6339 MASE_Test=0.8095
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.022042928534612285 CRPS_Forecast=0.01101294504076368 CRPS_Test=0.002008327897995204
INFO:pyaf.std:MODEL_L1 L1_Fit=0.08366702421548496 L1_Forecast=0.060546506167910574 L1_Test=0.004016655795990408
INFO:pyaf.std:MODEL_L2 L2_Fit=0.23858204283467985 L2_Forecast=0.11245796818592878 L2_Test=0.004721069412469393
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1150.9550291087598 LnQ_Forecast=330.6666666666665 LnQ_Test=15.1111111111111
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.012883359260521442 MedAE_Forecast=0.012883359260521442 MedAE_Test=0.004016655795990408
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend 4.693284205499459
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_Signal_80_D_0_poly_15_exp_0_20_ConstantTrend_residue_bestCycle_byMAPE None 0.18212468813970473 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split                          Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_Signal_80_D_0_poly_15_exp_0_20  ...  8.957000e-01  9.145000e-01
1   None   CumSum_Signal_80_D_0_poly_15_exp_0_20  ...  8.957000e-01  9.145000e-01
2   None     Diff_Signal_80_D_0_poly_15_exp_0_20  ...  2.500300e+00  5.175900e+00
3   None     Diff_Signal_80_D_0_poly_15_exp_0_20  ...  2.500300e+00  5.175900e+00
4   None         _Signal_80_D_0_poly_15_exp_0_20  ...  2.902800e+00  3.038900e+00
..   ...                                     ...  ...           ...           ...
59  None  RelDiff_Signal_80_D_0_poly_15_exp_0_20  ...  4.199022e+09  3.440953e+09
60  None  RelDiff_Signal_80_D_0_poly_15_exp_0_20  ...  4.199022e+09  3.440953e+09
61  None  RelDiff_Signal_80_D_0_poly_15_exp_0_20  ...  4.199022e+09  3.440953e+09
62  None  RelDiff_Signal_80_D_0_poly_15_exp_0_20  ...  4.199022e+09  3.440953e+09
63  None  RelDiff_Signal_80_D_0_poly_15_exp_0_20  ...  4.199022e+09  3.440953e+09

[64 rows x 10 columns]
  Split                         Transformation  ... ForecastMAPE TestMAPE
0  None  CumSum_Signal_80_D_0_poly_15_exp_0_20  ...       0.8957   0.9145
1  None  CumSum_Signal_80_D_0_poly_15_exp_0_20  ...       0.8957   0.9145
2  None    Diff_Signal_80_D_0_poly_15_exp_0_20  ...       2.5003   5.1759
3  None    Diff_Signal_80_D_0_poly_15_exp_0_20  ...       2.5003   5.1759
4  None        _Signal_80_D_0_poly_15_exp_0_20  ...       2.9028   3.0389

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['Signal_80_D_0_poly_15_exp_0_20'], 'Horizon': 2}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.042, ('FORECASTING', {'Signals': ['Signal_80_D_0_poly_15_exp_0_20'], 'Horizon': 2}))
2 0    0.096972
1    0.025562
Name: Signal_80_D_0_poly_15_exp_0_20, dtype: float64
2 0    0.00024
1    0.00024
Name: Signal_80_D_0_poly_15_exp_0_20_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 [0.09697196786440505, 0.025561533206507402]
FORECAST_DETAIL_PREDICTED Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 [0.0002403694764195145, 0.0002403694764195145]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 78 2
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 3.902353525161743
BENCHMARK_PERF_DETAIL_BEST_MODEL Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 2
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 0.9941 1.9764 0.8546
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Signal_80_D_0_poly_15_exp_0_20 Signal_80_D_0_poly_15_exp_0_20 0.06102638105903671 0.07070418466873246 -2.9212710069366934
BENCHMARK_SUCCESS 'ARTIFICIAL_S_Signal_80_D_0_poly_15_exp_0_20_2'
