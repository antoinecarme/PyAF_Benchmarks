BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1705 N= 37 H= 6 HEAD= [1.6263 1.8517 2.0607 2.2661 2.6137] TAIL= [147.4089 176.8466 200.4679 243.8038 248.2496]
   ECON1705  Date
0    1.6263     0
1    1.8517     1
2    2.0607     2
3    2.2661     3
4    2.6137     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1705  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1705'], 'Transformations': [('ECON1705', 'None', '_', 'T+S+R'), ('ECON1705', 'None', 'Diff_', 'T+S+R'), ('ECON1705', 'None', 'RelDiff_', 'T+S+R'), ('ECON1705', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1705', 'Transformation': '_ECON1705'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.756, ('TRAINING', {'Signal': 'ECON1705', 'Transformation': '_ECON1705'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1705', 'Transformation': 'Diff_ECON1705'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.464, ('TRAINING', {'Signal': 'ECON1705', 'Transformation': 'Diff_ECON1705'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1705', 'Transformation': 'RelDiff_ECON1705'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.568, ('TRAINING', {'Signal': 'ECON1705', 'Transformation': 'RelDiff_ECON1705'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1705', 'Transformation': 'CumSum_ECON1705'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.443, ('TRAINING', {'Signal': 'ECON1705', 'Transformation': 'CumSum_ECON1705'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.232, ('SIGNAL_TRAINING', {'Signals': ['ECON1705'], 'Transformations': [('ECON1705', 'None', '_', 'T+S+R'), ('ECON1705', 'None', 'Diff_', 'T+S+R'), ('ECON1705', 'None', 'RelDiff_', 'T+S+R'), ('ECON1705', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1705'], 'Transformations': [('ECON1705', [('ECON1705', 'None', 'CumSum_', 'T+S+R'), ('ECON1705', 'None', 'Diff_', 'T+S+R'), ('ECON1705', 'None', 'RelDiff_', 'T+S+R'), ('ECON1705', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1705', 'Transformations': [('ECON1705', 'None', 'CumSum_', 'T+S+R'), ('ECON1705', 'None', 'Diff_', 'T+S+R'), ('ECON1705', 'None', 'RelDiff_', 'T+S+R'), ('ECON1705', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1705', 'Transformations': [('ECON1705', 'None', 'CumSum_', 'T+S+R'), ('ECON1705', 'None', 'Diff_', 'T+S+R'), ('ECON1705', 'None', 'RelDiff_', 'T+S+R'), ('ECON1705', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1705', 'Model': 'Diff_ECON1705_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1705', 'Model': 'Diff_ECON1705_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1705'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.124, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1705'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.151, ('FINALIZE_TRAINING', {'Signals': ['ECON1705'], 'Transformations': [('ECON1705', [('ECON1705', 'None', 'CumSum_', 'T+S+R'), ('ECON1705', 'None', 'Diff_', 'T+S+R'), ('ECON1705', 'None', 'RelDiff_', 'T+S+R'), ('ECON1705', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1705' Length=37  Min=1.6263 Max=248.2496  Mean=62.55422702702703 StdDev=70.6257162275231
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1705' Min=-0.007863004022734266 Max=0.1757169740247576  Mean=0.02702702702702703 StdDev=0.036910205538724365
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1705_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1705_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1705_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1705_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.63 MAPE_Forecast=0.0543 MAPE_Test=0.1811
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4362 SMAPE_Forecast=0.0567 SMAPE_Test=0.2062
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.136 MASE_Forecast=0.6388 MASE_Test=1.7645
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=8.189089990011416 CRPS_Forecast=6.4382120352250505 CRPS_Test=17.784619477739707
INFO:pyaf.std:MODEL_L1 L1_Fit=6.438498273401822 L1_Forecast=5.844628913894326 L1_Test=39.22467228881276
INFO:pyaf.std:MODEL_L2 L2_Fit=8.474359972666946 L2_Forecast=7.4794652725727815 L2_Test=48.00903387168054
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=7.212631154014601 LnQ_Forecast=0.03566700375966381 LnQ_Test=0.3551386767972342
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=4.9186632705479365 MedAE_Forecast=6.416418321917817 MedAE_Test=35.94751566780819
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (-0.00151607388205258, array([0.02645846]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1705_LinearTrend_residue_bestCycle_byMAPE None -0.0013890708056675755 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1705             T+S+R  ...  0.2811       0.0464   0.0645
1   None     Diff_ECON1705             T+S+R  ...  0.2811       0.0464   0.0645
2   None     Diff_ECON1705             T+S+R  ...  0.6300       0.0543   0.1811
3   None     Diff_ECON1705             T+S+R  ...  0.6300       0.0543   0.1811
4   None     Diff_ECON1705             T+S+R  ...  0.6291       0.0543   0.1809
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1705             T+S+R  ...  0.6793       0.9841   0.9911
60  None  RelDiff_ECON1705             T+S+R  ...  0.6793       0.9841   0.9911
61  None  RelDiff_ECON1705             T+S+R  ...  0.6793       0.9841   0.9911
62  None  RelDiff_ECON1705             T+S+R  ...  0.6793       0.9841   0.9911
63  None  RelDiff_ECON1705             T+S+R  ...  0.6793       0.9841   0.9911

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  Diff_ECON1705             T+S+R  ...  0.2811       0.0464   0.0645
1  None  Diff_ECON1705             T+S+R  ...  0.2811       0.0464   0.0645
2  None  Diff_ECON1705             T+S+R  ...  0.6300       0.0543   0.1811
3  None  Diff_ECON1705             T+S+R  ...  0.6300       0.0543   0.1811
4  None  Diff_ECON1705             T+S+R  ...  0.6291       0.0543   0.1809

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1705'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.101, ('FORECASTING', {'Signals': ['ECON1705'], 'Horizon': 6}))
6 0    264.5237
1    274.8640
2    275.8408
3    322.2475
4    338.2635
5    333.2192
Name: ECON1705, dtype: float64
6 0    186.864529
1    197.271516
2    207.962211
3    218.936613
4    230.194723
5    241.736540
Name: ECON1705_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1705 ECON1705 [264.5237, 274.864, 275.8408, 322.2475, 338.2635, 333.2192]
FORECAST_DETAIL_PREDICTED ECON1705 ECON1705 [186.86452910958909, 197.27151626712333, 207.96221095890414, 218.93661318493153, 230.19472294520554, 241.73654023972605]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1705 ECON1705 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1705 ECON1705 2.577296018600464
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1705 ECON1705 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1705 ECON1705 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1705 ECON1705 0.2894 0.3389 5.5636
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1705 ECON1705 87.66542788242005 88.86330340367498 -7.578321776972128
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1705_6'
