BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 16 H= 6 HEAD= [0 1 2 3 4] TAIL= [11 12 13 14 15]
SIGNAL :  ECON1801 N= 16 H= 6 HEAD= [5.447 6.324 5.256 3.284 2.396] TAIL= [3.474 5.046 4.476 2.717 1.729]
   ECON1801  Date
0     5.447     0
1     6.324     1
2     5.256     2
3     3.284     3
4     2.396     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 16 entries, 0 to 15
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1801  16 non-null     float64
 1   Date      16 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 384.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1801'], 'Transformations': [('ECON1801', 'None', '_', 'T+S+R'), ('ECON1801', 'None', 'Diff_', 'T+S+R'), ('ECON1801', 'None', 'RelDiff_', 'T+S+R'), ('ECON1801', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1801', 'Transformation': '_ECON1801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.871, ('TRAINING', {'Signal': 'ECON1801', 'Transformation': '_ECON1801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1801', 'Transformation': 'Diff_ECON1801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.675, ('TRAINING', {'Signal': 'ECON1801', 'Transformation': 'Diff_ECON1801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1801', 'Transformation': 'RelDiff_ECON1801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.556, ('TRAINING', {'Signal': 'ECON1801', 'Transformation': 'RelDiff_ECON1801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1801', 'Transformation': 'CumSum_ECON1801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.423, ('TRAINING', {'Signal': 'ECON1801', 'Transformation': 'CumSum_ECON1801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.526, ('SIGNAL_TRAINING', {'Signals': ['ECON1801'], 'Transformations': [('ECON1801', 'None', '_', 'T+S+R'), ('ECON1801', 'None', 'Diff_', 'T+S+R'), ('ECON1801', 'None', 'RelDiff_', 'T+S+R'), ('ECON1801', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1801'], 'Transformations': [('ECON1801', [('ECON1801', 'None', 'CumSum_', 'T+S+R'), ('ECON1801', 'None', 'Diff_', 'T+S+R'), ('ECON1801', 'None', 'RelDiff_', 'T+S+R'), ('ECON1801', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1801', 'Transformations': [('ECON1801', 'None', 'CumSum_', 'T+S+R'), ('ECON1801', 'None', 'Diff_', 'T+S+R'), ('ECON1801', 'None', 'RelDiff_', 'T+S+R'), ('ECON1801', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1801', 'Transformations': [('ECON1801', 'None', 'CumSum_', 'T+S+R'), ('ECON1801', 'None', 'Diff_', 'T+S+R'), ('ECON1801', 'None', 'RelDiff_', 'T+S+R'), ('ECON1801', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1801', 'Model': 'CumSum_ECON1801_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.018, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1801', 'Model': 'CumSum_ECON1801_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.109, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.134, ('FINALIZE_TRAINING', {'Signals': ['ECON1801'], 'Transformations': [('ECON1801', [('ECON1801', 'None', 'CumSum_', 'T+S+R'), ('ECON1801', 'None', 'Diff_', 'T+S+R'), ('ECON1801', 'None', 'RelDiff_', 'T+S+R'), ('ECON1801', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=15 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1801' Length=16  Min=-0.125 Max=6.324  Mean=3.0680625 StdDev=1.8048570742842076
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_ECON1801' Min=0.8640099240192278 Max=7.92200341138161  Mean=4.5723852535276786 StdDev=1.954754328636403
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_ECON1801_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_ECON1801_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_ECON1801_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_ECON1801_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=1.2186 MAPE_Forecast=1.2186 MAPE_Test=1.2186
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=1.8359 SMAPE_Forecast=1.8359 SMAPE_Test=1.8359
INFO:pyaf.std:MODEL_MASE MASE_Fit=4.0693 MASE_Forecast=4.0693 MASE_Test=4.0693
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.122744140625 CRPS_Forecast=2.122744140625 CRPS_Test=2.122744140625
INFO:pyaf.std:MODEL_L1 L1_Fit=4.339519531250001 L1_Forecast=4.339519531250001 L1_Test=4.339519531250001
INFO:pyaf.std:MODEL_L2 L2_Fit=6.8745249971027835 L2_Forecast=6.8745249971027835 L2_Test=6.8745249971027835
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.8725 MedAE_Forecast=2.8725 MedAE_Test=2.8725
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_ECON1801_ConstantTrend 4.5723852535276786
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_ECON1801_ConstantTrend_residue_bestCycle_byMAPE None -0.4465517909753447 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...   FitMAPE ForecastMAPE  TestMAPE
0   None   CumSum_ECON1801             T+S+R  ...    1.2186       1.2186    1.2186
1   None   CumSum_ECON1801             T+S+R  ...    1.2186       1.2186    1.2186
2   None   CumSum_ECON1801             T+S+R  ...    1.3490       1.3490    1.3490
3   None   CumSum_ECON1801             T+S+R  ...    1.3490       1.3490    1.3490
4   None   CumSum_ECON1801             T+S+R  ...    1.3754       1.3754    1.3754
..   ...               ...               ...  ...       ...          ...       ...
59  None  RelDiff_ECON1801             T+S+R  ...  168.5854     168.5854  168.5854
60  None  RelDiff_ECON1801             T+S+R  ...  176.0276     176.0276  176.0276
61  None  RelDiff_ECON1801             T+S+R  ...  176.0276     176.0276  176.0276
62  None  RelDiff_ECON1801             T+S+R  ...  217.0509     217.0509  217.0509
63  None  RelDiff_ECON1801             T+S+R  ...  217.0509     217.0509  217.0509

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON1801             T+S+R  ...  1.2186       1.2186   1.2186
1  None  CumSum_ECON1801             T+S+R  ...  1.2186       1.2186   1.2186
2  None  CumSum_ECON1801             T+S+R  ...  1.3490       1.3490   1.3490
3  None  CumSum_ECON1801             T+S+R  ...  1.3490       1.3490   1.3490
4  None  CumSum_ECON1801             T+S+R  ...  1.3754       1.3754   1.3754

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1801'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['ECON1801'], 'Horizon': 6}))
6 0    1.193
1    1.533
2    0.602
3    0.635
4    1.400
5    1.904
Name: ECON1801, dtype: float64
6 0   -0.125
1   -0.125
2   -0.125
3   -0.125
4   -0.125
5   -0.125
Name: ECON1801_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1801 ECON1801 [1.193, 1.533, 0.602, 0.635, 1.4, 1.904]
FORECAST_DETAIL_PREDICTED ECON1801 ECON1801 [-0.125, -0.125, -0.125, -0.125, -0.125, -0.125]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1801 ECON1801 16 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1801 ECON1801 2.847456216812134
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1801 ECON1801 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1801 ECON1801 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1801 ECON1801 1.1243 2.0 2.5965
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1801 ECON1801 1.3361666666666665 1.4162558031655157 -8.09902166175378
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1801_6'
