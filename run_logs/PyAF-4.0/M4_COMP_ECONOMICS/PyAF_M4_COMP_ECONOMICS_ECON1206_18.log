BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1206 N= 131 H= 18 HEAD= [100.1 101.4 102.9 102.3 103. ] TAIL= [ 98.1  99.1 100.6  99.  100. ]
   ECON1206  Date
0     100.1     0
1     101.4     1
2     102.9     2
3     102.3     3
4     103.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1206  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1206'], 'Transformations': [('ECON1206', 'None', '_', 'T+S+R'), ('ECON1206', 'None', 'Diff_', 'T+S+R'), ('ECON1206', 'None', 'RelDiff_', 'T+S+R'), ('ECON1206', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1206', 'Transformation': '_ECON1206'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.268, ('TRAINING', {'Signal': 'ECON1206', 'Transformation': '_ECON1206'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1206', 'Transformation': 'Diff_ECON1206'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.552, ('TRAINING', {'Signal': 'ECON1206', 'Transformation': 'Diff_ECON1206'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1206', 'Transformation': 'RelDiff_ECON1206'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.648, ('TRAINING', {'Signal': 'ECON1206', 'Transformation': 'RelDiff_ECON1206'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1206', 'Transformation': 'CumSum_ECON1206'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.479, ('TRAINING', {'Signal': 'ECON1206', 'Transformation': 'CumSum_ECON1206'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.951, ('SIGNAL_TRAINING', {'Signals': ['ECON1206'], 'Transformations': [('ECON1206', 'None', '_', 'T+S+R'), ('ECON1206', 'None', 'Diff_', 'T+S+R'), ('ECON1206', 'None', 'RelDiff_', 'T+S+R'), ('ECON1206', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1206'], 'Transformations': [('ECON1206', [('ECON1206', 'None', 'CumSum_', 'T+S+R'), ('ECON1206', 'None', 'Diff_', 'T+S+R'), ('ECON1206', 'None', 'RelDiff_', 'T+S+R'), ('ECON1206', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1206', 'Transformations': [('ECON1206', 'None', 'CumSum_', 'T+S+R'), ('ECON1206', 'None', 'Diff_', 'T+S+R'), ('ECON1206', 'None', 'RelDiff_', 'T+S+R'), ('ECON1206', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1206', 'Transformations': [('ECON1206', 'None', 'CumSum_', 'T+S+R'), ('ECON1206', 'None', 'Diff_', 'T+S+R'), ('ECON1206', 'None', 'RelDiff_', 'T+S+R'), ('ECON1206', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1206', 'Model': 'Diff_ECON1206_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1206', 'Model': 'Diff_ECON1206_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1206'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.364, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1206'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.392, ('FINALIZE_TRAINING', {'Signals': ['ECON1206'], 'Transformations': [('ECON1206', [('ECON1206', 'None', 'CumSum_', 'T+S+R'), ('ECON1206', 'None', 'Diff_', 'T+S+R'), ('ECON1206', 'None', 'RelDiff_', 'T+S+R'), ('ECON1206', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1206' Length=131  Min=97.8 Max=106.5  Mean=101.32748091603055 StdDev=1.657048485938267
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1206' Min=-0.6206896551724143 Max=0.28735632183908033  Mean=-8.774238834780585e-05 StdDev=0.18675678283834243
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1206_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1206_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1206_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1206_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0175 MAPE_Forecast=0.0092 MAPE_Test=0.0149
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0177 SMAPE_Forecast=0.0092 SMAPE_Test=0.0148
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.3809 MASE_Forecast=0.7742 MASE_Test=1.0381
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4695735802469155 CRPS_Forecast=0.2173671497584546 CRPS_Test=0.5541666666666667
INFO:pyaf.std:MODEL_L1 L1_Fit=1.7966666666666677 L1_Forecast=0.9220289855072474 L1_Test=1.4777777777777814
INFO:pyaf.std:MODEL_L2 L2_Fit=2.2161010138763326 L2_Forecast=1.143821039345016 L2_Test=1.6975232502635118
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.042515715525745644 LnQ_Forecast=0.0029941026081896777 LnQ_Test=0.005195735510317677
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.3766666666666652 MedAE_Forecast=0.7533333333333445 MedAE_Test=1.4766666666666666
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.2643678160919536
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON1206_ConstantTrend 0.000766283524904225
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON1206_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ... ForecastMAPE      TestMAPE
0   None         _ECON1206  ...       0.0032  5.100000e-03
1   None         _ECON1206  ...       0.0032  5.100000e-03
2   None     Diff_ECON1206  ...       0.0041  8.900000e-03
3   None         _ECON1206  ...       0.0042  4.700000e-03
4   None     Diff_ECON1206  ...       0.0042  9.400000e-03
..   ...               ...  ...          ...           ...
59  None  RelDiff_ECON1206  ...     150.6594  1.412387e+03
60  None  RelDiff_ECON1206  ...     288.7310  1.124796e+04
61  None  RelDiff_ECON1206  ...  108533.1333  1.465438e+06
62  None  RelDiff_ECON1206  ...  352349.1406  2.254693e+06
63  None  RelDiff_ECON1206  ...  745817.7092  2.308369e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON1206             T+S+R  ...  0.0049       0.0032   0.0051
1  None      _ECON1206             T+S+R  ...  0.0049       0.0032   0.0051
2  None  Diff_ECON1206             T+S+R  ...  0.0232       0.0041   0.0089
3  None      _ECON1206             T+S+R  ...  0.0047       0.0042   0.0047
4  None  Diff_ECON1206             T+S+R  ...  0.0244       0.0042   0.0094

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1206'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.272, ('FORECASTING', {'Signals': ['ECON1206'], 'Horizon': 18}))
18 0     103.3
1      98.3
2      99.6
3     102.9
4     100.7
5     101.8
6     104.0
7      99.7
8     100.3
9     102.1
10    100.8
11    101.6
12    104.2
13    100.0
14    101.3
15    103.5
16    102.1
17    103.5
Name: ECON1206, dtype: float64
18 0     100.980000
1     100.986667
2     100.993333
3     101.000000
4     101.006667
5     101.013333
6     101.020000
7     101.026667
8     101.033333
9     101.040000
10    101.046667
11    101.053333
12    101.060000
13    101.066667
14    101.073333
15    101.080000
16    101.086667
17    101.093333
Name: ECON1206_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1206 ECON1206 [103.3, 98.3, 99.6, 102.9, 100.7, 101.8, 104.0, 99.7, 100.3, 102.1, 100.8, 101.6, 104.2, 100.0, 101.3, 103.5, 102.1, 103.5]
FORECAST_DETAIL_PREDICTED ECON1206 ECON1206 [100.98, 100.98666666666668, 100.99333333333334, 101.0, 101.00666666666667, 101.01333333333334, 101.02000000000001, 101.02666666666667, 101.03333333333335, 101.04, 101.04666666666667, 101.05333333333334, 101.06, 101.06666666666668, 101.07333333333334, 101.08000000000001, 101.08666666666667, 101.09333333333333]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1206 ECON1206 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1206 ECON1206 3.7144904136657715
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1206 ECON1206 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1206 ECON1206 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1206 ECON1206 0.0144 0.0145 0.678
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1206 ECON1206 1.4755555555555548 1.751989345477496 -0.1251481519170634
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1206_18'
