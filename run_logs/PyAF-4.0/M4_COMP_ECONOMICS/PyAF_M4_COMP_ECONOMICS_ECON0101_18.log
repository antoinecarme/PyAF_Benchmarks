BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 599 H= 18 HEAD= [0 1 2 3 4] TAIL= [594 595 596 597 598]
SIGNAL :  ECON0101 N= 599 H= 18 HEAD= [21.3 21.5 21.6 21.5 21.4] TAIL= [215.1 214.7 199.1 181.3 180.4]
   ECON0101  Date
0      21.3     0
1      21.5     1
2      21.6     2
3      21.5     3
4      21.4     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 599 entries, 0 to 598
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0101  599 non-null    float64
 1   Date      599 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 14.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0101'], 'Transformations': [('ECON0101', 'None', '_', 'T+S+R'), ('ECON0101', 'None', 'Diff_', 'T+S+R'), ('ECON0101', 'None', 'RelDiff_', 'T+S+R'), ('ECON0101', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0101', 'Transformation': '_ECON0101'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.989, ('TRAINING', {'Signal': 'ECON0101', 'Transformation': '_ECON0101'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0101', 'Transformation': 'Diff_ECON0101'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.933, ('TRAINING', {'Signal': 'ECON0101', 'Transformation': 'Diff_ECON0101'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0101', 'Transformation': 'RelDiff_ECON0101'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.786, ('TRAINING', {'Signal': 'ECON0101', 'Transformation': 'RelDiff_ECON0101'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0101', 'Transformation': 'CumSum_ECON0101'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.635, ('TRAINING', {'Signal': 'ECON0101', 'Transformation': 'CumSum_ECON0101'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.346, ('SIGNAL_TRAINING', {'Signals': ['ECON0101'], 'Transformations': [('ECON0101', 'None', '_', 'T+S+R'), ('ECON0101', 'None', 'Diff_', 'T+S+R'), ('ECON0101', 'None', 'RelDiff_', 'T+S+R'), ('ECON0101', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0101'], 'Transformations': [('ECON0101', [('ECON0101', 'None', 'CumSum_', 'T+S+R'), ('ECON0101', 'None', 'Diff_', 'T+S+R'), ('ECON0101', 'None', 'RelDiff_', 'T+S+R'), ('ECON0101', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0101', 'Transformations': [('ECON0101', 'None', 'CumSum_', 'T+S+R'), ('ECON0101', 'None', 'Diff_', 'T+S+R'), ('ECON0101', 'None', 'RelDiff_', 'T+S+R'), ('ECON0101', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0101', 'Transformations': [('ECON0101', 'None', 'CumSum_', 'T+S+R'), ('ECON0101', 'None', 'Diff_', 'T+S+R'), ('ECON0101', 'None', 'RelDiff_', 'T+S+R'), ('ECON0101', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0101', 'Model': '_ECON0101_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0101', 'Model': '_ECON0101_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0101'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.41, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0101'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.44, ('FINALIZE_TRAINING', {'Signals': ['ECON0101'], 'Transformations': [('ECON0101', [('ECON0101', 'None', 'CumSum_', 'T+S+R'), ('ECON0101', 'None', 'Diff_', 'T+S+R'), ('ECON0101', 'None', 'RelDiff_', 'T+S+R'), ('ECON0101', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=463 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0101' Length=599  Min=21.3 Max=215.1  Mean=74.49799666110191 StdDev=45.84531365326887
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0101' Min=0.0 Max=1.0  Mean=0.2744994667755512 StdDev=0.23655992597145958
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0101_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0101_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0101_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0101_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0094 MAPE_Forecast=0.0197 MAPE_Test=0.041
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0094 SMAPE_Forecast=0.0198 SMAPE_Test=0.0409
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9978 MASE_Forecast=0.9955 MASE_Test=0.9579
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=9.938883960980037 CRPS_Forecast=5.2276429249762595 CRPS_Test=5.12962962962963
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6588362068965519 L1_Forecast=2.5111111111111097 L1_Test=7.922222222222221
INFO:pyaf.std:MODEL_L2 L2_Fit=1.1755684611695534 L2_Forecast=3.430481763281234 L2_Test=10.107423014794621
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.0965025019496697 LnQ_Forecast=0.08127032177330772 LnQ_Test=0.04859197233213633
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.20000000000000284 MedAE_Forecast=1.7000000000000028 MedAE_Test=7.349999999999994
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0101_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0101             T+S+R  ...  0.0199       0.0195   0.0407
1   None         _ECON0101             T+S+R  ...  0.0100       0.0195   0.0404
2   None         _ECON0101             T+S+R  ...  0.0100       0.0195   0.0403
3   None         _ECON0101             T+S+R  ...  0.0094       0.0197   0.0410
4   None   CumSum_ECON0101             T+S+R  ...  0.0094       0.0197   0.0410
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0101             T+S+R  ...  0.4456       0.8231   0.8897
60  None  RelDiff_ECON0101             T+S+R  ...  0.4456       0.8231   0.8897
61  None  RelDiff_ECON0101             T+S+R  ...  0.4456       0.8231   0.8897
62  None  RelDiff_ECON0101             T+S+R  ...  0.4456       0.8231   0.8897
63  None  RelDiff_ECON0101             T+S+R  ...  0.4456       0.8231   0.8897

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0101             T+S+R  ...  0.0199       0.0195   0.0407
1  None        _ECON0101             T+S+R  ...  0.0100       0.0195   0.0404
2  None        _ECON0101             T+S+R  ...  0.0100       0.0195   0.0403
3  None        _ECON0101             T+S+R  ...  0.0094       0.0197   0.0410
4  None  CumSum_ECON0101             T+S+R  ...  0.0094       0.0197   0.0410

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0101'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.303, ('FORECASTING', {'Signals': ['ECON0101'], 'Horizon': 18}))
18 0     185.200
1     183.567
2     184.451
3     196.929
4     207.265
5     219.071
6     221.088
7     217.274
8     209.294
9     209.637
10    207.588
11    219.009
12    217.506
13    219.465
14    219.311
15    230.505
16    240.194
17    257.106
Name: ECON0101, dtype: float64
18 0     180.4
1     180.4
2     180.4
3     180.4
4     180.4
5     180.4
6     180.4
7     180.4
8     180.4
9     180.4
10    180.4
11    180.4
12    180.4
13    180.4
14    180.4
15    180.4
16    180.4
17    180.4
Name: ECON0101_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0101 ECON0101 [185.2, 183.567, 184.451, 196.929, 207.265, 219.071, 221.088, 217.274, 209.294, 209.637, 207.588, 219.009, 217.506, 219.465, 219.311, 230.505, 240.194, 257.106]
FORECAST_DETAIL_PREDICTED ECON0101 ECON0101 [180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4, 180.4]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0101 ECON0101 599 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0101 ECON0101 4.195743560791016
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0101 ECON0101 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0101 ECON0101 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0101 ECON0101 0.1491 0.1645 5.3129
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0101 ECON0101 33.18111111111111 37.90427630961386 -3.279203577655446
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0101_18'
