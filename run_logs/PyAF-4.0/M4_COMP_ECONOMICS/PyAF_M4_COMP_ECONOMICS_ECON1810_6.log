BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 215 H= 6 HEAD= [0 1 2 3 4] TAIL= [210 211 212 213 214]
SIGNAL :  ECON1810 N= 215 H= 6 HEAD= [269.51 287.29 273.78 291.13 294.12] TAIL= [1133.65 1130.59  978.96  865.12  774.36]
   ECON1810  Date
0    269.51     0
1    287.29     1
2    273.78     2
3    291.13     3
4    294.12     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 215 entries, 0 to 214
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1810  215 non-null    float64
 1   Date      215 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1810'], 'Transformations': [('ECON1810', 'None', '_', 'T+S+R'), ('ECON1810', 'None', 'Diff_', 'T+S+R'), ('ECON1810', 'None', 'RelDiff_', 'T+S+R'), ('ECON1810', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1810', 'Transformation': '_ECON1810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.928, ('TRAINING', {'Signal': 'ECON1810', 'Transformation': '_ECON1810'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1810', 'Transformation': 'Diff_ECON1810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.567, ('TRAINING', {'Signal': 'ECON1810', 'Transformation': 'Diff_ECON1810'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1810', 'Transformation': 'RelDiff_ECON1810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.637, ('TRAINING', {'Signal': 'ECON1810', 'Transformation': 'RelDiff_ECON1810'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1810', 'Transformation': 'CumSum_ECON1810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.548, ('TRAINING', {'Signal': 'ECON1810', 'Transformation': 'CumSum_ECON1810'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.682, ('SIGNAL_TRAINING', {'Signals': ['ECON1810'], 'Transformations': [('ECON1810', 'None', '_', 'T+S+R'), ('ECON1810', 'None', 'Diff_', 'T+S+R'), ('ECON1810', 'None', 'RelDiff_', 'T+S+R'), ('ECON1810', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1810'], 'Transformations': [('ECON1810', [('ECON1810', 'None', 'CumSum_', 'T+S+R'), ('ECON1810', 'None', 'Diff_', 'T+S+R'), ('ECON1810', 'None', 'RelDiff_', 'T+S+R'), ('ECON1810', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1810', 'Transformations': [('ECON1810', 'None', 'CumSum_', 'T+S+R'), ('ECON1810', 'None', 'Diff_', 'T+S+R'), ('ECON1810', 'None', 'RelDiff_', 'T+S+R'), ('ECON1810', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1810', 'Transformations': [('ECON1810', 'None', 'CumSum_', 'T+S+R'), ('ECON1810', 'None', 'Diff_', 'T+S+R'), ('ECON1810', 'None', 'RelDiff_', 'T+S+R'), ('ECON1810', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1810', 'Model': '_ECON1810_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1810', 'Model': '_ECON1810_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1810'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.13, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1810'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.159, ('FINALIZE_TRAINING', {'Signals': ['ECON1810'], 'Transformations': [('ECON1810', [('ECON1810', 'None', 'CumSum_', 'T+S+R'), ('ECON1810', 'None', 'Diff_', 'T+S+R'), ('ECON1810', 'None', 'RelDiff_', 'T+S+R'), ('ECON1810', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=166 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1810' Length=215  Min=251.53 Max=1655.8  Mean=818.0278604651165 StdDev=391.311445180659
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1810' Min=0.0 Max=1.0  Mean=0.4034109255806337 StdDev=0.2786582674134312
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1810_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1810_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1810_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1810_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0484 MAPE_Forecast=0.0299 MAPE_Test=0.0907
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0484 SMAPE_Forecast=0.0299 SMAPE_Test=0.0852
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.994 MASE_Forecast=0.9913 MASE_Test=1.1467
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=104.24280478673421 CRPS_Forecast=48.6380123537415 CRPS_Test=62.712499999999984
INFO:pyaf.std:MODEL_L1 L1_Fit=36.4845508982036 L1_Forecast=35.22000000000001 L1_Test=86.21500000000002
INFO:pyaf.std:MODEL_L2 L2_Fit=54.6744468004399 L2_Forecast=47.192153756641325 L2_Test=103.6480285228169
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7612251164640549 LnQ_Forecast=0.06181405941171665 LnQ_Test=0.06195723562838963
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=21.690000000000055 MedAE_Forecast=29.80000000000001 MedAE_Test=102.30000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.01280380553597242
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON1810_Lag1Trend_residue_bestCycle_byMAPE None 0.002129220164213439 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0   None         _ECON1810             T+S+R  ...   0.0465       0.0283    0.0918
1   None         _ECON1810             T+S+R  ...   0.0465       0.0283    0.0918
2   None         _ECON1810             T+S+R  ...   0.0484       0.0299    0.0907
3   None         _ECON1810             T+S+R  ...   0.0484       0.0299    0.0907
4   None   CumSum_ECON1810             T+S+R  ...   0.0488       0.0299    0.0907
..   ...               ...               ...  ...      ...          ...       ...
59  None  RelDiff_ECON1810             T+S+R  ...  33.3229      38.2579   48.1148
60  None  RelDiff_ECON1810             T+S+R  ...   3.0081      74.8902  292.4068
61  None  RelDiff_ECON1810             T+S+R  ...   3.0081      74.8902  292.4068
62  None  RelDiff_ECON1810             T+S+R  ...   8.4370     162.8489  559.9246
63  None  RelDiff_ECON1810             T+S+R  ...   8.4370     162.8489  559.9246

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1810             T+S+R  ...  0.0465       0.0283   0.0918
1  None        _ECON1810             T+S+R  ...  0.0465       0.0283   0.0918
2  None        _ECON1810             T+S+R  ...  0.0484       0.0299   0.0907
3  None        _ECON1810             T+S+R  ...  0.0484       0.0299   0.0907
4  None  CumSum_ECON1810             T+S+R  ...  0.0488       0.0299   0.0907

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1810'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.102, ('FORECASTING', {'Signals': ['ECON1810'], 'Horizon': 6}))
6 0    797.06
1    731.49
2    643.76
3    676.86
4    775.38
5    799.85
Name: ECON1810, dtype: float64
6 0    774.36
1    774.36
2    774.36
3    774.36
4    774.36
5    774.36
Name: ECON1810_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1810 ECON1810 [797.06, 731.49, 643.76, 676.86, 775.38, 799.85]
FORECAST_DETAIL_PREDICTED ECON1810 ECON1810 [774.36, 774.36, 774.36, 774.36, 774.36, 774.36]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1810 ECON1810 215 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1810 ECON1810 3.0200846195220947
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1810 ECON1810 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1810 ECON1810 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1810 ECON1810 0.0779 0.073 0.8624
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1810 ECON1810 53.36333333333332 70.1979550984215 -0.38353518433680445
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1810_6'
