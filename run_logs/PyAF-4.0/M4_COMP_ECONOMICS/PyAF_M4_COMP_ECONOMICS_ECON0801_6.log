BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 69 H= 6 HEAD= [0 1 2 3 4] TAIL= [64 65 66 67 68]
SIGNAL :  ECON0801 N= 69 H= 6 HEAD= [ 5035.  6657.  7735.  9091. 10512.] TAIL= [640164. 666774. 704676. 757593. 783112.]
   ECON0801  Date
0    5035.0     0
1    6657.0     1
2    7735.0     2
3    9091.0     3
4   10512.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 69 entries, 0 to 68
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0801  69 non-null     float64
 1   Date      69 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0801'], 'Transformations': [('ECON0801', 'None', '_', 'T+S+R'), ('ECON0801', 'None', 'Diff_', 'T+S+R'), ('ECON0801', 'None', 'RelDiff_', 'T+S+R'), ('ECON0801', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0801', 'Transformation': '_ECON0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.123, ('TRAINING', {'Signal': 'ECON0801', 'Transformation': '_ECON0801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0801', 'Transformation': 'Diff_ECON0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.555, ('TRAINING', {'Signal': 'ECON0801', 'Transformation': 'Diff_ECON0801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0801', 'Transformation': 'RelDiff_ECON0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.604, ('TRAINING', {'Signal': 'ECON0801', 'Transformation': 'RelDiff_ECON0801'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0801', 'Transformation': 'CumSum_ECON0801'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.499, ('TRAINING', {'Signal': 'ECON0801', 'Transformation': 'CumSum_ECON0801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.784, ('SIGNAL_TRAINING', {'Signals': ['ECON0801'], 'Transformations': [('ECON0801', 'None', '_', 'T+S+R'), ('ECON0801', 'None', 'Diff_', 'T+S+R'), ('ECON0801', 'None', 'RelDiff_', 'T+S+R'), ('ECON0801', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0801'], 'Transformations': [('ECON0801', [('ECON0801', 'None', 'CumSum_', 'T+S+R'), ('ECON0801', 'None', 'Diff_', 'T+S+R'), ('ECON0801', 'None', 'RelDiff_', 'T+S+R'), ('ECON0801', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0801', 'Transformations': [('ECON0801', 'None', 'CumSum_', 'T+S+R'), ('ECON0801', 'None', 'Diff_', 'T+S+R'), ('ECON0801', 'None', 'RelDiff_', 'T+S+R'), ('ECON0801', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0801', 'Transformations': [('ECON0801', 'None', 'CumSum_', 'T+S+R'), ('ECON0801', 'None', 'Diff_', 'T+S+R'), ('ECON0801', 'None', 'RelDiff_', 'T+S+R'), ('ECON0801', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0801', 'Model': 'Diff_ECON0801_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0801', 'Model': 'Diff_ECON0801_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.126, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0801'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FINALIZE_TRAINING', {'Signals': ['ECON0801'], 'Transformations': [('ECON0801', [('ECON0801', 'None', 'CumSum_', 'T+S+R'), ('ECON0801', 'None', 'Diff_', 'T+S+R'), ('ECON0801', 'None', 'RelDiff_', 'T+S+R'), ('ECON0801', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=49 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0801' Length=69  Min=5035.0 Max=783112.0  Mean=209802.15942028986 StdDev=235525.4806859269
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0801' Min=-0.013266039222339179 Max=0.06800997844686318  Mean=0.014492753623188406 StdDev=0.018013305239684096
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0801_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0801_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0801_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0801_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.8906 MAPE_Forecast=0.0393 MAPE_Test=0.0499
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.9641 SMAPE_Forecast=0.0387 SMAPE_Test=0.0482
INFO:pyaf.std:MODEL_MASE MASE_Fit=4.7332 MASE_Forecast=1.0546 MASE_Test=0.8923
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=34834.076718824435 CRPS_Forecast=25550.244350715842 CRPS_Test=23418.791317490628
INFO:pyaf.std:MODEL_L1 L1_Fit=37959.70354132747 L1_Forecast=20302.03232888385 L1_Test=32408.63443685684
INFO:pyaf.std:MODEL_L2 L2_Fit=45927.27504637907 L2_Forecast=24063.29684101088 L2_Test=38563.88974768696
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=0.025639934577788827 LnQ_Test=0.02042907396562219
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=27267.312920747667 MedAE_Forecast=18274.65126468183 MedAE_Test=38407.32605767343
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (-0.004448941386900296, array([0.02744839]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON0801_LinearTrend_residue_bestCycle_byMAPE None 9.932270324004063e-05 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0801             T+S+R  ...  0.1434       0.0298   0.0233
1   None   CumSum_ECON0801             T+S+R  ...  0.1825       0.0332   0.0246
2   None         _ECON0801             T+S+R  ...  0.2349       0.0344   0.0363
3   None         _ECON0801             T+S+R  ...  0.2349       0.0344   0.0363
4   None     Diff_ECON0801             T+S+R  ...  0.8906       0.0393   0.0499
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0801             T+S+R  ...  0.8040       0.9897   0.9927
60  None  RelDiff_ECON0801             T+S+R  ...  0.8040       0.9897   0.9927
61  None  RelDiff_ECON0801             T+S+R  ...  0.8040       0.9897   0.9927
62  None  RelDiff_ECON0801             T+S+R  ...  0.8040       0.9897   0.9927
63  None  RelDiff_ECON0801             T+S+R  ...  0.8040       0.9897   0.9927

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0801             T+S+R  ...  0.1434       0.0298   0.0233
1  None  CumSum_ECON0801             T+S+R  ...  0.1825       0.0332   0.0246
2  None        _ECON0801             T+S+R  ...  0.2349       0.0344   0.0363
3  None        _ECON0801             T+S+R  ...  0.2349       0.0344   0.0363
4  None    Diff_ECON0801             T+S+R  ...  0.8906       0.0393   0.0499

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0801'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.102, ('FORECASTING', {'Signals': ['ECON0801'], 'Horizon': 6}))
6 0    788264.0
1    795708.0
2    849259.0
3    868027.0
4    884574.0
5    904935.0
Name: ECON0801, dtype: float64
6 0    815314.599071
1    842362.920011
2    869847.097235
3    897767.130743
4    926123.020536
5    954914.766613
Name: ECON0801_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0801 ECON0801 [788264.0, 795708.0, 849259.0, 868027.0, 884574.0, 904935.0]
FORECAST_DETAIL_PREDICTED ECON0801 ECON0801 [815314.599071292, 842362.920010926, 869847.0972349476, 897767.1307433567, 926123.0205361532, 954914.7666133374]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0801 ECON0801 69 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0801 ECON0801 3.1581263542175293
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0801 ECON0801 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0801 ECON0801 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0801 ECON0801 0.0423 0.0413 1.5397
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0801 ECON0801 35927.089035002144 37507.90977462098 0.2519101850413099
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0801_6'
