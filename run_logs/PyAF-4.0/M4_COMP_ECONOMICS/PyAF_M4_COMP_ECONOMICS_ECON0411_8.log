BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 75 H= 8 HEAD= [0 1 2 3 4] TAIL= [70 71 72 73 74]
SIGNAL :  ECON0411 N= 75 H= 8 HEAD= [87.314 88.838 89.635 90.466 90.352] TAIL= [164.186 167.059 170.018 171.974 172.649]
   ECON0411  Date
0    87.314     0
1    88.838     1
2    89.635     2
3    90.466     3
4    90.352     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 75 entries, 0 to 74
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0411  75 non-null     float64
 1   Date      75 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0411'], 'Transformations': [('ECON0411', 'None', '_', 'T+S+R'), ('ECON0411', 'None', 'Diff_', 'T+S+R'), ('ECON0411', 'None', 'RelDiff_', 'T+S+R'), ('ECON0411', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0411', 'Transformation': '_ECON0411'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.973, ('TRAINING', {'Signal': 'ECON0411', 'Transformation': '_ECON0411'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0411', 'Transformation': 'Diff_ECON0411'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.468, ('TRAINING', {'Signal': 'ECON0411', 'Transformation': 'Diff_ECON0411'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0411', 'Transformation': 'RelDiff_ECON0411'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.587, ('TRAINING', {'Signal': 'ECON0411', 'Transformation': 'RelDiff_ECON0411'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0411', 'Transformation': 'CumSum_ECON0411'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.464, ('TRAINING', {'Signal': 'ECON0411', 'Transformation': 'CumSum_ECON0411'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.495, ('SIGNAL_TRAINING', {'Signals': ['ECON0411'], 'Transformations': [('ECON0411', 'None', '_', 'T+S+R'), ('ECON0411', 'None', 'Diff_', 'T+S+R'), ('ECON0411', 'None', 'RelDiff_', 'T+S+R'), ('ECON0411', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0411'], 'Transformations': [('ECON0411', [('ECON0411', 'None', 'CumSum_', 'T+S+R'), ('ECON0411', 'None', 'Diff_', 'T+S+R'), ('ECON0411', 'None', 'RelDiff_', 'T+S+R'), ('ECON0411', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0411', 'Transformations': [('ECON0411', 'None', 'CumSum_', 'T+S+R'), ('ECON0411', 'None', 'Diff_', 'T+S+R'), ('ECON0411', 'None', 'RelDiff_', 'T+S+R'), ('ECON0411', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0411', 'Transformations': [('ECON0411', 'None', 'CumSum_', 'T+S+R'), ('ECON0411', 'None', 'Diff_', 'T+S+R'), ('ECON0411', 'None', 'RelDiff_', 'T+S+R'), ('ECON0411', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0411', 'Model': '_ECON0411_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0411', 'Model': '_ECON0411_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0411'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.166, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0411'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.195, ('FINALIZE_TRAINING', {'Signals': ['ECON0411'], 'Transformations': [('ECON0411', [('ECON0411', 'None', 'CumSum_', 'T+S+R'), ('ECON0411', 'None', 'Diff_', 'T+S+R'), ('ECON0411', 'None', 'RelDiff_', 'T+S+R'), ('ECON0411', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=52 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0411' Length=75  Min=87.314 Max=172.649  Mean=120.74237333333333 StdDev=25.769878514665567
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0411' Min=0.0 Max=1.0  Mean=0.39173109900197267 StdDev=0.30198486570182886
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0411_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0411_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0411_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0411_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0091 MAPE_Forecast=0.012 MAPE_Test=0.0087
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0092 SMAPE_Forecast=0.0121 SMAPE_Test=0.0088
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9811 MASE_Forecast=0.9659 MASE_Test=0.9085
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.136823989218329 CRPS_Forecast=2.2117695666666672 CRPS_Test=1.6668749999999992
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0056226415094325 L1_Forecast=1.8050714285714295 L1_Test=1.4657499999999999
INFO:pyaf.std:MODEL_L2 L2_Fit=1.2371652167697336 L2_Forecast=2.146640781047714 L2_Test=1.7536086364978916
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.00633269772043889 LnQ_Forecast=0.002840251995064055 LnQ_Test=0.0008801309845671867
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9710000000000036 MedAE_Forecast=1.6370000000000005 MedAE_Test=1.2180000000000035
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0411_Lag1Trend_residue_bestCycle_byMAPE None 0.011378684010077966 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON0411             T+S+R  ...  0.0054       0.0070   0.0067
1   None     Diff_ECON0411             T+S+R  ...  0.0054       0.0070   0.0067
2   None   CumSum_ECON0411             T+S+R  ...  0.0062       0.0074   0.0076
3   None         _ECON0411             T+S+R  ...  0.0058       0.0078   0.0063
4   None         _ECON0411             T+S+R  ...  0.0058       0.0078   0.0063
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0411             T+S+R  ...  0.1671       0.4067   0.4756
60  None  RelDiff_ECON0411             T+S+R  ...  0.1671       0.4067   0.4756
61  None  RelDiff_ECON0411             T+S+R  ...  0.1671       0.4067   0.4756
62  None  RelDiff_ECON0411             T+S+R  ...  0.1671       0.4067   0.4756
63  None  RelDiff_ECON0411             T+S+R  ...  0.1671       0.4067   0.4756

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON0411             T+S+R  ...  0.0054       0.0070   0.0067
1  None    Diff_ECON0411             T+S+R  ...  0.0054       0.0070   0.0067
2  None  CumSum_ECON0411             T+S+R  ...  0.0062       0.0074   0.0076
3  None        _ECON0411             T+S+R  ...  0.0058       0.0078   0.0063
4  None        _ECON0411             T+S+R  ...  0.0058       0.0078   0.0063

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0411'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.125, ('FORECASTING', {'Signals': ['ECON0411'], 'Horizon': 8}))
8 0    172.958
1    172.559
2    172.523
3    174.407
4    175.283
5    176.886
6    178.211
7    180.134
Name: ECON0411, dtype: float64
8 0    172.649
1    172.649
2    172.649
3    172.649
4    172.649
5    172.649
6    172.649
7    172.649
Name: ECON0411_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0411 ECON0411 [172.958, 172.559, 172.523, 174.407, 175.283, 176.886, 178.211, 180.134]
FORECAST_DETAIL_PREDICTED ECON0411 ECON0411 [172.649, 172.649, 172.649, 172.649, 172.649, 172.649, 172.649, 172.649]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0411 ECON0411 75 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0411 ECON0411 2.9012234210968018
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0411 ECON0411 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0411 ECON0411 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0411 ECON0411 0.0156 0.0158 2.4144
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0411 ECON0411 2.775124999999999 3.792446687166476 -1.0611038514600715
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0411_8'
