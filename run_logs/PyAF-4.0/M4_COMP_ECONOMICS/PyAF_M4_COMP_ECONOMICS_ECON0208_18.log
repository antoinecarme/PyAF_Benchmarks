BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 575 H= 18 HEAD= [0 1 2 3 4] TAIL= [570 571 572 573 574]
SIGNAL :  ECON0208 N= 575 H= 18 HEAD= [18.392 18.117 17.971 18.246 18.131] TAIL= [43.372 41.192 40.875 40.022 40.461]
   ECON0208  Date
0    18.392     0
1    18.117     1
2    17.971     2
3    18.246     3
4    18.131     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 575 entries, 0 to 574
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0208  575 non-null    float64
 1   Date      575 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 13.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0208'], 'Transformations': [('ECON0208', 'None', '_', 'T+S+R'), ('ECON0208', 'None', 'Diff_', 'T+S+R'), ('ECON0208', 'None', 'RelDiff_', 'T+S+R'), ('ECON0208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0208', 'Transformation': '_ECON0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.043, ('TRAINING', {'Signal': 'ECON0208', 'Transformation': '_ECON0208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0208', 'Transformation': 'Diff_ECON0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.631, ('TRAINING', {'Signal': 'ECON0208', 'Transformation': 'Diff_ECON0208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0208', 'Transformation': 'RelDiff_ECON0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.747, ('TRAINING', {'Signal': 'ECON0208', 'Transformation': 'RelDiff_ECON0208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0208', 'Transformation': 'CumSum_ECON0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.655, ('TRAINING', {'Signal': 'ECON0208', 'Transformation': 'CumSum_ECON0208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.079, ('SIGNAL_TRAINING', {'Signals': ['ECON0208'], 'Transformations': [('ECON0208', 'None', '_', 'T+S+R'), ('ECON0208', 'None', 'Diff_', 'T+S+R'), ('ECON0208', 'None', 'RelDiff_', 'T+S+R'), ('ECON0208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0208'], 'Transformations': [('ECON0208', [('ECON0208', 'None', 'CumSum_', 'T+S+R'), ('ECON0208', 'None', 'Diff_', 'T+S+R'), ('ECON0208', 'None', 'RelDiff_', 'T+S+R'), ('ECON0208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0208', 'Transformations': [('ECON0208', 'None', 'CumSum_', 'T+S+R'), ('ECON0208', 'None', 'Diff_', 'T+S+R'), ('ECON0208', 'None', 'RelDiff_', 'T+S+R'), ('ECON0208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0208', 'Transformations': [('ECON0208', 'None', 'CumSum_', 'T+S+R'), ('ECON0208', 'None', 'Diff_', 'T+S+R'), ('ECON0208', 'None', 'RelDiff_', 'T+S+R'), ('ECON0208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0208', 'Model': '_ECON0208_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0208', 'Model': '_ECON0208_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.412, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.444, ('FINALIZE_TRAINING', {'Signals': ['ECON0208'], 'Transformations': [('ECON0208', [('ECON0208', 'None', 'CumSum_', 'T+S+R'), ('ECON0208', 'None', 'Diff_', 'T+S+R'), ('ECON0208', 'None', 'RelDiff_', 'T+S+R'), ('ECON0208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=444 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0208' Length=575  Min=17.609 Max=62.616  Mean=38.57242956521739 StdDev=12.475644046589853
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0208' Min=0.0 Max=1.0  Mean=0.46578153543265244 StdDev=0.2771934153929356
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0208_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0208_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0208_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0208_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0163 MAPE_Forecast=0.025 MAPE_Test=0.0237
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0163 SMAPE_Forecast=0.0249 SMAPE_Test=0.0236
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9978 MASE_Forecast=1.0127 MASE_Test=0.975
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.132815558840924 CRPS_Forecast=1.2903522023809524 CRPS_Test=0.5222615740740739
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6608134831460671 L1_Forecast=1.0651428571428572 L1_Test=1.0173888888888887
INFO:pyaf.std:MODEL_L2 L2_Fit=1.0332490198779052 L2_Forecast=1.4147590216307913 L2_Test=1.2685249745712972
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2335620291391732 LnQ_Forecast=0.12264756481896652 LnQ_Test=0.015451902955248936
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.3990000000000009 MedAE_Forecast=0.7780000000000022 MedAE_Test=0.8264999999999993
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.017397293754304835
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0208_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON0208             T+S+R  ...  0.0127       0.0204   0.0215
1   None     Diff_ECON0208             T+S+R  ...  0.0132       0.0205   0.0213
2   None         _ECON0208             T+S+R  ...  0.0125       0.0215   0.0213
3   None         _ECON0208             T+S+R  ...  0.0125       0.0215   0.0213
4   None   CumSum_ECON0208             T+S+R  ...  0.0168       0.0244   0.0255
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0208             T+S+R  ...  0.2064       2.6737   4.5673
60  None  RelDiff_ECON0208             T+S+R  ...  0.2065       2.7356   4.7636
61  None  RelDiff_ECON0208             T+S+R  ...  1.1949       3.9876   6.1040
62  None  RelDiff_ECON0208             T+S+R  ...  1.1949       3.9876   6.1040
63  None  RelDiff_ECON0208             T+S+R  ...  0.3453       7.5810  15.6037

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON0208             T+S+R  ...  0.0127       0.0204   0.0215
1  None    Diff_ECON0208             T+S+R  ...  0.0132       0.0205   0.0213
2  None        _ECON0208             T+S+R  ...  0.0125       0.0215   0.0213
3  None        _ECON0208             T+S+R  ...  0.0125       0.0215   0.0213
4  None  CumSum_ECON0208             T+S+R  ...  0.0168       0.0244   0.0255

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0208'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.302, ('FORECASTING', {'Signals': ['ECON0208'], 'Horizon': 18}))
18 0     41.420
1     43.062
2     41.129
3     39.053
4     40.912
5     42.620
6     42.113
7     41.276
8     40.099
9     40.913
10    40.591
11    40.906
12    41.774
13    43.300
14    41.960
15    40.668
16    42.716
17    44.140
Name: ECON0208, dtype: float64
18 0     40.461
1     40.461
2     40.461
3     40.461
4     40.461
5     40.461
6     40.461
7     40.461
8     40.461
9     40.461
10    40.461
11    40.461
12    40.461
13    40.461
14    40.461
15    40.461
16    40.461
17    40.461
Name: ECON0208_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0208 ECON0208 [41.42, 43.062, 41.129, 39.053, 40.912, 42.62, 42.113, 41.276, 40.099, 40.913, 40.591, 40.906, 41.774, 43.3, 41.96, 40.668, 42.716, 44.14]
FORECAST_DETAIL_PREDICTED ECON0208 ECON0208 [40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461, 40.461]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0208 ECON0208 575 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0208 ECON0208 3.923556327819824
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0208 ECON0208 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0208 ECON0208 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0208 ECON0208 0.0314 0.0321 1.0405
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0208 ECON0208 1.3274444444444455 1.660248642690473 -0.8652637615767078
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0208_18'
