BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0909 N= 47 H= 18 HEAD= [ 95.5  97.2  99.9 102.2  98.8] TAIL= [ 97.9  98.  103.5  97.7 100.9]
   ECON0909  Date
0      95.5     0
1      97.2     1
2      99.9     2
3     102.2     3
4      98.8     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0909  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0909'], 'Transformations': [('ECON0909', 'None', '_', 'T+S+R'), ('ECON0909', 'None', 'Diff_', 'T+S+R'), ('ECON0909', 'None', 'RelDiff_', 'T+S+R'), ('ECON0909', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0909', 'Transformation': '_ECON0909'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.096, ('TRAINING', {'Signal': 'ECON0909', 'Transformation': '_ECON0909'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0909', 'Transformation': 'Diff_ECON0909'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.471, ('TRAINING', {'Signal': 'ECON0909', 'Transformation': 'Diff_ECON0909'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0909', 'Transformation': 'RelDiff_ECON0909'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.57, ('TRAINING', {'Signal': 'ECON0909', 'Transformation': 'RelDiff_ECON0909'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0909', 'Transformation': 'CumSum_ECON0909'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.428, ('TRAINING', {'Signal': 'ECON0909', 'Transformation': 'CumSum_ECON0909'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.565, ('SIGNAL_TRAINING', {'Signals': ['ECON0909'], 'Transformations': [('ECON0909', 'None', '_', 'T+S+R'), ('ECON0909', 'None', 'Diff_', 'T+S+R'), ('ECON0909', 'None', 'RelDiff_', 'T+S+R'), ('ECON0909', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0909'], 'Transformations': [('ECON0909', [('ECON0909', 'None', 'CumSum_', 'T+S+R'), ('ECON0909', 'None', 'Diff_', 'T+S+R'), ('ECON0909', 'None', 'RelDiff_', 'T+S+R'), ('ECON0909', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0909', 'Transformations': [('ECON0909', 'None', 'CumSum_', 'T+S+R'), ('ECON0909', 'None', 'Diff_', 'T+S+R'), ('ECON0909', 'None', 'RelDiff_', 'T+S+R'), ('ECON0909', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0909', 'Transformations': [('ECON0909', 'None', 'CumSum_', 'T+S+R'), ('ECON0909', 'None', 'Diff_', 'T+S+R'), ('ECON0909', 'None', 'RelDiff_', 'T+S+R'), ('ECON0909', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0909', 'Model': '_ECON0909_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0909', 'Model': '_ECON0909_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0909'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.352, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0909'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.379, ('FINALIZE_TRAINING', {'Signals': ['ECON0909'], 'Transformations': [('ECON0909', [('ECON0909', 'None', 'CumSum_', 'T+S+R'), ('ECON0909', 'None', 'Diff_', 'T+S+R'), ('ECON0909', 'None', 'RelDiff_', 'T+S+R'), ('ECON0909', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0909' Length=47  Min=87.9 Max=103.5  Mean=98.62127659574466 StdDev=3.3341518536307344
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0909' Min=0.0 Max=1.0  Mean=0.6872613202400436 StdDev=0.21372768292504718
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0909_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0909_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0909_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0909_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.025 MAPE_Forecast=0.025 MAPE_Test=0.025
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0248 SMAPE_Forecast=0.0248 SMAPE_Test=0.0248
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7075 MASE_Forecast=0.7075 MASE_Test=0.7075
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.28879975683890585 CRPS_Forecast=0.28879975683890585 CRPS_Test=0.28879975683890585
INFO:pyaf.std:MODEL_L1 L1_Fit=2.4268899954730654 L1_Forecast=2.4268899954730654 L1_Test=2.4268899954730654
INFO:pyaf.std:MODEL_L2 L2_Fit=3.3341518536307344 L2_Forecast=3.3341518536307344 L2_Test=3.3341518536307344
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.056206646955226876 LnQ_Forecast=0.056206646955226876 LnQ_Test=0.056206646955226876
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.9212765957446862 MedAE_Forecast=1.9212765957446862 MedAE_Test=1.9212765957446862
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON0909_ConstantTrend 0.6872613202400436
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0909_ConstantTrend_residue_bestCycle_byMAPE None -0.014184397163120255 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0909  ...  2.290000e-02  2.290000e-02
1   None         _ECON0909  ...  2.290000e-02  2.290000e-02
2   None         _ECON0909  ...  2.290000e-02  2.290000e-02
3   None         _ECON0909  ...  2.290000e-02  2.290000e-02
4   None         _ECON0909  ...  2.310000e-02  2.310000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0909  ...  4.669598e+06  4.669598e+06
60  None  RelDiff_ECON0909  ...  5.477575e+06  5.477575e+06
61  None  RelDiff_ECON0909  ...  5.477575e+06  5.477575e+06
62  None  RelDiff_ECON0909  ...  5.489081e+06  5.489081e+06
63  None  RelDiff_ECON0909  ...  5.489081e+06  5.489081e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0909             T+S+R  ...  0.0229       0.0229   0.0229
1  None      _ECON0909             T+S+R  ...  0.0229       0.0229   0.0229
2  None      _ECON0909             T+S+R  ...  0.0229       0.0229   0.0229
3  None      _ECON0909             T+S+R  ...  0.0229       0.0229   0.0229
4  None      _ECON0909             T+S+R  ...  0.0231       0.0231   0.0231

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0909'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.264, ('FORECASTING', {'Signals': ['ECON0909'], 'Horizon': 18}))
18 0     103.7
1     103.3
2     102.2
3     102.1
4     102.6
5     100.2
6      99.0
7      96.3
8     103.8
9     103.4
10    104.3
11    105.9
12     99.0
13    102.0
14    101.0
15     93.0
16    103.9
17    103.9
Name: ECON0909, dtype: float64
18 0     98.621277
1     98.621277
2     98.621277
3     98.621277
4     98.621277
5     98.621277
6     98.621277
7     98.621277
8     98.621277
9     98.621277
10    98.621277
11    98.621277
12    98.621277
13    98.621277
14    98.621277
15    98.621277
16    98.621277
17    98.621277
Name: ECON0909_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0909 ECON0909 [103.7, 103.3, 102.2, 102.1, 102.6, 100.2, 99.0, 96.3, 103.8, 103.4, 104.3, 105.9, 99.0, 102.0, 101.0, 93.0, 103.9, 103.9]
FORECAST_DETAIL_PREDICTED ECON0909 ECON0909 [98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469, 98.62127659574469]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0909 ECON0909 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0909 ECON0909 3.311035633087158
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0909 ECON0909 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0909 ECON0909 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0909 ECON0909 0.0382 0.0389 1.3662
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0909 ECON0909 3.905673758865243 4.319697993493545 -0.9600112186548255
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0909_18'
