BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0503 N= 235 H= 8 HEAD= [50.1 51.2 51.9 55.3 55. ] TAIL= [1058.7 1076.1 1083.3 1113.6 1126.7]
   ECON0503  Date
0      50.1     0
1      51.2     1
2      51.9     2
3      55.3     3
4      55.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0503  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0503'], 'Transformations': [('ECON0503', 'None', '_', 'T+S+R'), ('ECON0503', 'None', 'Diff_', 'T+S+R'), ('ECON0503', 'None', 'RelDiff_', 'T+S+R'), ('ECON0503', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0503', 'Transformation': '_ECON0503'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.281, ('TRAINING', {'Signal': 'ECON0503', 'Transformation': '_ECON0503'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0503', 'Transformation': 'Diff_ECON0503'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.589, ('TRAINING', {'Signal': 'ECON0503', 'Transformation': 'Diff_ECON0503'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0503', 'Transformation': 'RelDiff_ECON0503'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.656, ('TRAINING', {'Signal': 'ECON0503', 'Transformation': 'RelDiff_ECON0503'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0503', 'Transformation': 'CumSum_ECON0503'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.54, ('TRAINING', {'Signal': 'ECON0503', 'Transformation': 'CumSum_ECON0503'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.066, ('SIGNAL_TRAINING', {'Signals': ['ECON0503'], 'Transformations': [('ECON0503', 'None', '_', 'T+S+R'), ('ECON0503', 'None', 'Diff_', 'T+S+R'), ('ECON0503', 'None', 'RelDiff_', 'T+S+R'), ('ECON0503', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0503'], 'Transformations': [('ECON0503', [('ECON0503', 'None', 'CumSum_', 'T+S+R'), ('ECON0503', 'None', 'Diff_', 'T+S+R'), ('ECON0503', 'None', 'RelDiff_', 'T+S+R'), ('ECON0503', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0503', 'Transformations': [('ECON0503', 'None', 'CumSum_', 'T+S+R'), ('ECON0503', 'None', 'Diff_', 'T+S+R'), ('ECON0503', 'None', 'RelDiff_', 'T+S+R'), ('ECON0503', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON0503', 'Transformations': [('ECON0503', 'None', 'CumSum_', 'T+S+R'), ('ECON0503', 'None', 'Diff_', 'T+S+R'), ('ECON0503', 'None', 'RelDiff_', 'T+S+R'), ('ECON0503', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0503', 'Model': '_ECON0503_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0503', 'Model': '_ECON0503_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0503'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0503'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.2, ('FINALIZE_TRAINING', {'Signals': ['ECON0503'], 'Transformations': [('ECON0503', [('ECON0503', 'None', 'CumSum_', 'T+S+R'), ('ECON0503', 'None', 'Diff_', 'T+S+R'), ('ECON0503', 'None', 'RelDiff_', 'T+S+R'), ('ECON0503', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0503' Length=235  Min=50.1 Max=1126.7  Mean=313.7195744680851 StdDev=269.662366120945
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0503' Min=0.0 Max=1.0  Mean=0.24486306378235648 StdDev=0.25047591131427177
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0503_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0503_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0503_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0503_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0319 MAPE_Forecast=0.022 MAPE_Test=0.0132
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0321 SMAPE_Forecast=0.0223 SMAPE_Test=0.0133
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9823 MASE_Test=0.929
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=30.549158379373846 CRPS_Forecast=44.786408695652185 CRPS_Test=15.424999999999997
INFO:pyaf.std:MODEL_L1 L1_Fit=5.749171270718231 L1_Forecast=15.206521739130432 L1_Test=14.1875
INFO:pyaf.std:MODEL_L2 L2_Fit=8.072680892713404 L2_Forecast=20.529835129264498 L2_Test=16.135171210743316
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3458487219649392 LnQ_Forecast=0.035560383678986375 LnQ_Test=0.001797795116600926
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.9000000000000057 MedAE_Forecast=10.950000000000017 MedAE_Test=12.150000000000091
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0503_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0503             T+S+R  ...  0.0323       0.0157   0.0063
1   None     Diff_ECON0503             T+S+R  ...  0.0389       0.0181   0.0074
2   None     Diff_ECON0503             T+S+R  ...  0.0389       0.0181   0.0074
3   None   CumSum_ECON0503             T+S+R  ...  0.0473       0.0188   0.0076
4   None         _ECON0503             T+S+R  ...  0.0308       0.0195   0.0113
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0503             T+S+R  ...  0.6085       0.9194   0.9531
60  None  RelDiff_ECON0503             T+S+R  ...  0.6085       0.9194   0.9531
61  None  RelDiff_ECON0503             T+S+R  ...  0.6085       0.9194   0.9531
62  None  RelDiff_ECON0503             T+S+R  ...  0.6085       0.9194   0.9531
63  None  RelDiff_ECON0503             T+S+R  ...  0.6085       0.9194   0.9531

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0503             T+S+R  ...  0.0323       0.0157   0.0063
1  None    Diff_ECON0503             T+S+R  ...  0.0389       0.0181   0.0074
2  None    Diff_ECON0503             T+S+R  ...  0.0389       0.0181   0.0074
3  None  CumSum_ECON0503             T+S+R  ...  0.0473       0.0188   0.0076
4  None        _ECON0503             T+S+R  ...  0.0308       0.0195   0.0113

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0503'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.132, ('FORECASTING', {'Signals': ['ECON0503'], 'Horizon': 8}))
8 0    1098.4
1    1142.3
2    1139.4
3    1152.1
4    1167.9
5    1183.7
6    1189.9
7    1205.0
Name: ECON0503, dtype: float64
8 0    1126.7
1    1126.7
2    1126.7
3    1126.7
4    1126.7
5    1126.7
6    1126.7
7    1126.7
Name: ECON0503_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0503 ECON0503 [1098.4, 1142.3, 1139.4, 1152.1, 1167.9, 1183.7, 1189.9, 1205.0]
FORECAST_DETAIL_PREDICTED ECON0503 ECON0503 [1126.7, 1126.7, 1126.7, 1126.7, 1126.7, 1126.7, 1126.7, 1126.7]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0503 ECON0503 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0503 ECON0503 3.500762939453125
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0503 ECON0503 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0503 ECON0503 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0503 ECON0503 0.0343 0.035 2.5043
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0503 ECON0503 40.21249999999998 45.992214014983006 -1.0795368367046514
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0503_8'
