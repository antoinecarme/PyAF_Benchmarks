BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 313 H= 26 HEAD= [0 1 2 3 4] TAIL= [308 309 310 311 312]
SIGNAL :  ECON0302 N= 313 H= 26 HEAD= [1.75 1.77 1.7  1.56 1.53] TAIL= [4.18 1.72 1.96 1.6  1.79]
   ECON0302  Date
0      1.75     0
1      1.77     1
2      1.70     2
3      1.56     3
4      1.53     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 313 entries, 0 to 312
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0302  313 non-null    float64
 1   Date      313 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 7.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0302'], 'Transformations': [('ECON0302', 'None', '_', 'T+S+R'), ('ECON0302', 'None', 'Diff_', 'T+S+R'), ('ECON0302', 'None', 'RelDiff_', 'T+S+R'), ('ECON0302', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0302', 'Transformation': '_ECON0302'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.214, ('TRAINING', {'Signal': 'ECON0302', 'Transformation': '_ECON0302'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0302', 'Transformation': 'Diff_ECON0302'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.641, ('TRAINING', {'Signal': 'ECON0302', 'Transformation': 'Diff_ECON0302'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0302', 'Transformation': 'RelDiff_ECON0302'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.797, ('TRAINING', {'Signal': 'ECON0302', 'Transformation': 'RelDiff_ECON0302'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0302', 'Transformation': 'CumSum_ECON0302'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('TRAINING', {'Signal': 'ECON0302', 'Transformation': 'CumSum_ECON0302'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.235, ('SIGNAL_TRAINING', {'Signals': ['ECON0302'], 'Transformations': [('ECON0302', 'None', '_', 'T+S+R'), ('ECON0302', 'None', 'Diff_', 'T+S+R'), ('ECON0302', 'None', 'RelDiff_', 'T+S+R'), ('ECON0302', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0302'], 'Transformations': [('ECON0302', [('ECON0302', 'None', 'CumSum_', 'T+S+R'), ('ECON0302', 'None', 'Diff_', 'T+S+R'), ('ECON0302', 'None', 'RelDiff_', 'T+S+R'), ('ECON0302', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0302', 'Transformations': [('ECON0302', 'None', 'CumSum_', 'T+S+R'), ('ECON0302', 'None', 'Diff_', 'T+S+R'), ('ECON0302', 'None', 'RelDiff_', 'T+S+R'), ('ECON0302', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0302', 'Transformations': [('ECON0302', 'None', 'CumSum_', 'T+S+R'), ('ECON0302', 'None', 'Diff_', 'T+S+R'), ('ECON0302', 'None', 'RelDiff_', 'T+S+R'), ('ECON0302', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0302', 'Model': '_ECON0302_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0302', 'Model': '_ECON0302_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0302'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.624, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0302'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.654, ('FINALIZE_TRAINING', {'Signals': ['ECON0302'], 'Transformations': [('ECON0302', [('ECON0302', 'None', 'CumSum_', 'T+S+R'), ('ECON0302', 'None', 'Diff_', 'T+S+R'), ('ECON0302', 'None', 'RelDiff_', 'T+S+R'), ('ECON0302', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=228 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0302' Length=313  Min=0.12 Max=4.18  Mean=1.5907667731629394 StdDev=0.6636018860560352
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0302' Min=0.0 Max=1.0  Mean=0.3622578259022018 StdDev=0.16344874040789054
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0302_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0302_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0302_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0302_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0545 MAPE_Forecast=0.1313 MAPE_Test=0.1663
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0546 SMAPE_Forecast=0.1176 SMAPE_Test=0.1474
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9956 MASE_Forecast=1.0056 MASE_Test=0.9963
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.15139201232982272 CRPS_Forecast=0.23917956650246305 CRPS_Test=0.29379999999999995
INFO:pyaf.std:MODEL_L1 L1_Fit=0.07222707423580786 L1_Forecast=0.09862068965517246 L1_Test=0.2976923076923076
INFO:pyaf.std:MODEL_L2 L2_Fit=0.09118338927869124 L2_Forecast=0.12617721527745182 L2_Test=0.5607138307550474
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.366655066117135 LnQ_Forecast=2.7598814351096514 LnQ_Test=1.4390624953490034
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.06000000000000005 MedAE_Forecast=0.07999999999999999 MedAE_Test=0.16499999999999992
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4014778325123153
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0302_Lag1Trend_residue_bestCycle_byMAPE None 0.0024630541871920597 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0302             T+S+R  ...  0.0526       0.1292   0.1682
1   None         _ECON0302             T+S+R  ...  0.0526       0.1292   0.1682
2   None         _ECON0302             T+S+R  ...  0.0545       0.1313   0.1663
3   None         _ECON0302             T+S+R  ...  0.0545       0.1313   0.1663
4   None   CumSum_ECON0302             T+S+R  ...  0.0585       0.1313   0.1663
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0302             T+S+R  ...  0.9833       7.4325   1.4731
60  None  RelDiff_ECON0302             T+S+R  ...  0.6902       8.1434   1.8099
61  None  RelDiff_ECON0302             T+S+R  ...  0.6902       8.1434   1.8099
62  None  RelDiff_ECON0302             T+S+R  ...  0.9449       8.2213   6.1313
63  None  RelDiff_ECON0302             T+S+R  ...  0.9449       8.2213   6.1313

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0302             T+S+R  ...  0.0526       0.1292   0.1682
1  None        _ECON0302             T+S+R  ...  0.0526       0.1292   0.1682
2  None        _ECON0302             T+S+R  ...  0.0545       0.1313   0.1663
3  None        _ECON0302             T+S+R  ...  0.0545       0.1313   0.1663
4  None  CumSum_ECON0302             T+S+R  ...  0.0585       0.1313   0.1663

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0302'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.415, ('FORECASTING', {'Signals': ['ECON0302'], 'Horizon': 26}))
26 0     1.79
1     1.74
2     1.49
3     1.52
4     1.50
5     1.38
6     1.12
7     1.26
8     1.39
9     1.43
10    1.50
11    1.14
12    0.96
13    0.98
14    1.06
15    1.05
16    1.24
17    1.17
18    1.14
19    1.02
20    1.02
21    1.06
22    1.01
23    1.13
24    1.24
25    1.31
Name: ECON0302, dtype: float64
26 0     1.79
1     1.79
2     1.79
3     1.79
4     1.79
5     1.79
6     1.79
7     1.79
8     1.79
9     1.79
10    1.79
11    1.79
12    1.79
13    1.79
14    1.79
15    1.79
16    1.79
17    1.79
18    1.79
19    1.79
20    1.79
21    1.79
22    1.79
23    1.79
24    1.79
25    1.79
Name: ECON0302_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0302 ECON0302 [1.79, 1.74, 1.49, 1.52, 1.5, 1.38, 1.12, 1.26, 1.39, 1.43, 1.5, 1.14, 0.96, 0.98, 1.06, 1.05, 1.24, 1.17, 1.14, 1.02, 1.02, 1.06, 1.01, 1.13, 1.24, 1.31]
FORECAST_DETAIL_PREDICTED ECON0302 ECON0302 [1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0302 ECON0302 313 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0302 ECON0302 4.405350685119629
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0302 ECON0302 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0302 ECON0302 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0302 ECON0302 0.4697 0.3635 5.2171
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0302 ECON0302 0.5342307692307693 0.5809177089875852 -5.481882111783011
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0302_26'
