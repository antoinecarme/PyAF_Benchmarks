BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 262 H= 18 HEAD= [0 1 2 3 4] TAIL= [257 258 259 260 261]
SIGNAL :  ECON0611 N= 262 H= 18 HEAD= [1141.  1037.4 1029.1 1098.2 1242.6] TAIL= [4630.5 4559.9 4605.3 4349.6 4660.3]
   ECON0611  Date
0    1141.0     0
1    1037.4     1
2    1029.1     2
3    1098.2     3
4    1242.6     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 262 entries, 0 to 261
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0611  262 non-null    float64
 1   Date      262 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0611'], 'Transformations': [('ECON0611', 'None', '_', 'T+S+R'), ('ECON0611', 'None', 'Diff_', 'T+S+R'), ('ECON0611', 'None', 'RelDiff_', 'T+S+R'), ('ECON0611', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0611', 'Transformation': '_ECON0611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.871, ('TRAINING', {'Signal': 'ECON0611', 'Transformation': '_ECON0611'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0611', 'Transformation': 'Diff_ECON0611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.645, ('TRAINING', {'Signal': 'ECON0611', 'Transformation': 'Diff_ECON0611'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0611', 'Transformation': 'RelDiff_ECON0611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.7, ('TRAINING', {'Signal': 'ECON0611', 'Transformation': 'RelDiff_ECON0611'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0611', 'Transformation': 'CumSum_ECON0611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.562, ('TRAINING', {'Signal': 'ECON0611', 'Transformation': 'CumSum_ECON0611'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.782, ('SIGNAL_TRAINING', {'Signals': ['ECON0611'], 'Transformations': [('ECON0611', 'None', '_', 'T+S+R'), ('ECON0611', 'None', 'Diff_', 'T+S+R'), ('ECON0611', 'None', 'RelDiff_', 'T+S+R'), ('ECON0611', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0611'], 'Transformations': [('ECON0611', [('ECON0611', 'None', 'CumSum_', 'T+S+R'), ('ECON0611', 'None', 'Diff_', 'T+S+R'), ('ECON0611', 'None', 'RelDiff_', 'T+S+R'), ('ECON0611', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0611', 'Transformations': [('ECON0611', 'None', 'CumSum_', 'T+S+R'), ('ECON0611', 'None', 'Diff_', 'T+S+R'), ('ECON0611', 'None', 'RelDiff_', 'T+S+R'), ('ECON0611', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0611', 'Transformations': [('ECON0611', 'None', 'CumSum_', 'T+S+R'), ('ECON0611', 'None', 'Diff_', 'T+S+R'), ('ECON0611', 'None', 'RelDiff_', 'T+S+R'), ('ECON0611', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0611', 'Model': '_ECON0611_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0611', 'Model': '_ECON0611_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0611'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.403, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0611'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.434, ('FINALIZE_TRAINING', {'Signals': ['ECON0611'], 'Transformations': [('ECON0611', [('ECON0611', 'None', 'CumSum_', 'T+S+R'), ('ECON0611', 'None', 'Diff_', 'T+S+R'), ('ECON0611', 'None', 'RelDiff_', 'T+S+R'), ('ECON0611', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=194 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0611' Length=262  Min=1029.1 Max=5080.5  Mean=2528.0480916030533 StdDev=1033.2215031801084
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0611' Min=0.0 Max=1.0  Mean=0.3699827446322393 StdDev=0.2550282626203555
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0611_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0611_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0611_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0611_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1177 MAPE_Forecast=0.0756 MAPE_Test=0.1189
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.116 SMAPE_Forecast=0.0763 SMAPE_Test=0.1286
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.2788 MASE_Forecast=0.8039 MASE_Test=1.77
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=188.05173110428007 CRPS_Forecast=63.30493934965822 CRPS_Test=211.5703907184301
INFO:pyaf.std:MODEL_L1 L1_Fit=231.58971514125207 L1_Forecast=272.5335486468855 L1_Test=548.3219966731135
INFO:pyaf.std:MODEL_L2 L2_Fit=284.08470165272865 L2_Forecast=328.708772726537 L2_Test=629.3361119612808
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.7686279230214605 LnQ_Forecast=0.4126985612293983 LnQ_Test=0.3830716047758066
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=202.32109690108337 MedAE_Forecast=244.25104943636188 MedAE_Test=523.0489675728797
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (-0.01978806450900783, array([0.56058096]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0611_LinearTrend_residue_bestCycle_byMAPE None -0.0016995760486889777 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0611  ...  7.200000e-02  5.030000e-02
1   None         _ECON0611  ...  7.200000e-02  5.030000e-02
2   None         _ECON0611  ...  7.560000e-02  1.189000e-01
3   None         _ECON0611  ...  7.560000e-02  1.189000e-01
4   None     Diff_ECON0611  ...  7.700000e-02  6.110000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0611  ...  2.017749e+06  1.629486e+04
60  None  RelDiff_ECON0611  ...  3.151392e+06  2.540006e+06
61  None  RelDiff_ECON0611  ...  3.151392e+06  2.540006e+06
62  None  RelDiff_ECON0611  ...  3.151392e+06  2.540006e+06
63  None  RelDiff_ECON0611  ...  3.151392e+06  2.540006e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0611             T+S+R  ...  0.0693       0.0720   0.0503
1  None      _ECON0611             T+S+R  ...  0.0693       0.0720   0.0503
2  None      _ECON0611             T+S+R  ...  0.1177       0.0756   0.1189
3  None      _ECON0611             T+S+R  ...  0.1177       0.0756   0.1189
4  None  Diff_ECON0611             T+S+R  ...  0.0742       0.0770   0.0611

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0611'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.297, ('FORECASTING', {'Signals': ['ECON0611'], 'Horizon': 18}))
18 0     4593.6
1     4226.1
2     4063.1
3     3839.6
4     4675.0
5     4615.3
6     5135.4
7     4953.2
8     5022.5
9     4704.3
10    4651.8
11    5587.5
12    5201.3
13    4408.4
14    4581.4
15    4838.4
16    4664.0
17    5102.4
Name: ECON0611, dtype: float64
18 0     4016.137225
1     4027.844120
2     4039.551015
3     4051.257911
4     4062.964806
5     4074.671702
6     4086.378597
7     4098.085492
8     4109.792388
9     4121.499283
10    4133.206178
11    4144.913074
12    4156.619969
13    4168.326865
14    4180.033760
15    4191.740655
16    4203.447551
17    4215.154446
Name: ECON0611_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0611 ECON0611 [4593.6, 4226.1, 4063.1, 3839.6, 4675.0, 4615.3, 5135.4, 4953.2, 5022.5, 4704.3, 4651.8, 5587.5, 5201.3, 4408.4, 4581.4, 4838.4, 4664.0, 5102.4]
FORECAST_DETAIL_PREDICTED ECON0611 ECON0611 [4016.1372246605333, 4027.8441200392067, 4039.551015417879, 4051.2579107965526, 4062.9648061752255, 4074.6717015538984, 4086.3785969325713, 4098.085492311244, 4109.792387689917, 4121.49928306859, 4133.2061784472635, 4144.913073825936, 4156.61996920461, 4168.326864583283, 4180.033759961956, 4191.740655340629, 4203.447550719302, 4215.154446097975]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0611 ECON0611 262 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0611 ECON0611 3.6098780632019043
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0611 ECON0611 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0611 ECON0611 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0611 ECON0611 0.1268 0.1376 1.7789
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0611 ECON0611 622.4994880425852 713.6335569699904 -1.9896245221085636
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0611_18'
