BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0908 N= 47 H= 18 HEAD= [97.6 96.3 97.8 96.4 96.5] TAIL= [102.6 100.3 100.8  98.8 101.1]
   ECON0908  Date
0      97.6     0
1      96.3     1
2      97.8     2
3      96.4     3
4      96.5     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0908  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0908'], 'Transformations': [('ECON0908', 'None', '_', 'T+S+R'), ('ECON0908', 'None', 'Diff_', 'T+S+R'), ('ECON0908', 'None', 'RelDiff_', 'T+S+R'), ('ECON0908', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0908', 'Transformation': '_ECON0908'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.116, ('TRAINING', {'Signal': 'ECON0908', 'Transformation': '_ECON0908'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0908', 'Transformation': 'Diff_ECON0908'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.471, ('TRAINING', {'Signal': 'ECON0908', 'Transformation': 'Diff_ECON0908'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0908', 'Transformation': 'RelDiff_ECON0908'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.552, ('TRAINING', {'Signal': 'ECON0908', 'Transformation': 'RelDiff_ECON0908'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0908', 'Transformation': 'CumSum_ECON0908'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.421, ('TRAINING', {'Signal': 'ECON0908', 'Transformation': 'CumSum_ECON0908'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.561, ('SIGNAL_TRAINING', {'Signals': ['ECON0908'], 'Transformations': [('ECON0908', 'None', '_', 'T+S+R'), ('ECON0908', 'None', 'Diff_', 'T+S+R'), ('ECON0908', 'None', 'RelDiff_', 'T+S+R'), ('ECON0908', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0908'], 'Transformations': [('ECON0908', [('ECON0908', 'None', 'CumSum_', 'T+S+R'), ('ECON0908', 'None', 'Diff_', 'T+S+R'), ('ECON0908', 'None', 'RelDiff_', 'T+S+R'), ('ECON0908', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0908', 'Transformations': [('ECON0908', 'None', 'CumSum_', 'T+S+R'), ('ECON0908', 'None', 'Diff_', 'T+S+R'), ('ECON0908', 'None', 'RelDiff_', 'T+S+R'), ('ECON0908', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON0908', 'Transformations': [('ECON0908', 'None', 'CumSum_', 'T+S+R'), ('ECON0908', 'None', 'Diff_', 'T+S+R'), ('ECON0908', 'None', 'RelDiff_', 'T+S+R'), ('ECON0908', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0908', 'Model': '_ECON0908_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0908', 'Model': '_ECON0908_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0908'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.344, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0908'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.37, ('FINALIZE_TRAINING', {'Signals': ['ECON0908'], 'Transformations': [('ECON0908', [('ECON0908', 'None', 'CumSum_', 'T+S+R'), ('ECON0908', 'None', 'Diff_', 'T+S+R'), ('ECON0908', 'None', 'RelDiff_', 'T+S+R'), ('ECON0908', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0908' Length=47  Min=95.1 Max=102.9  Mean=99.02127659574472 StdDev=1.886112310255953
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0908' Min=0.0 Max=1.0  Mean=0.5027277686852154 StdDev=0.24180927054563464
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0908_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0908_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0908_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0908_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0158 MAPE_Forecast=0.0158 MAPE_Test=0.0158
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0158 SMAPE_Forecast=0.0158 SMAPE_Test=0.0158
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.3198 MASE_Forecast=1.3198 MASE_Test=1.3198
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.1908797568389057 CRPS_Forecast=0.1908797568389057 CRPS_Test=0.1908797568389057
INFO:pyaf.std:MODEL_L1 L1_Fit=1.5578995020371202 L1_Forecast=1.5578995020371202 L1_Test=1.5578995020371202
INFO:pyaf.std:MODEL_L2 L2_Fit=1.886112310255953 L2_Forecast=1.886112310255953 L2_Test=1.886112310255953
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.01715340141199675 LnQ_Forecast=0.01715340141199675 LnQ_Test=0.01715340141199675
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.3212765957446777 MedAE_Forecast=1.3212765957446777 MedAE_Test=1.3212765957446777
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON0908_ConstantTrend 0.5027277686852154
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0908_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...   FitMAPE ForecastMAPE  TestMAPE
0   None         _ECON0908             T+S+R  ...    0.0108       0.0108    0.0108
1   None         _ECON0908             T+S+R  ...    0.0108       0.0108    0.0108
2   None     Diff_ECON0908             T+S+R  ...    0.0111       0.0111    0.0111
3   None     Diff_ECON0908             T+S+R  ...    0.0111       0.0111    0.0111
4   None         _ECON0908             T+S+R  ...    0.0114       0.0114    0.0114
..   ...               ...               ...  ...       ...          ...       ...
59  None  RelDiff_ECON0908             T+S+R  ...  488.8863     488.8863  488.8863
60  None  RelDiff_ECON0908             T+S+R  ...  724.8700     724.8700  724.8700
61  None  RelDiff_ECON0908             T+S+R  ...  724.8700     724.8700  724.8700
62  None  RelDiff_ECON0908             T+S+R  ...  772.1755     772.1755  772.1755
63  None  RelDiff_ECON0908             T+S+R  ...  772.1755     772.1755  772.1755

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0908             T+S+R  ...  0.0108       0.0108   0.0108
1  None      _ECON0908             T+S+R  ...  0.0108       0.0108   0.0108
2  None  Diff_ECON0908             T+S+R  ...  0.0111       0.0111   0.0111
3  None  Diff_ECON0908             T+S+R  ...  0.0111       0.0111   0.0111
4  None      _ECON0908             T+S+R  ...  0.0114       0.0114   0.0114

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0908'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.269, ('FORECASTING', {'Signals': ['ECON0908'], 'Horizon': 18}))
18 0     100.2
1     100.3
2     100.9
3     103.5
4     101.3
5     101.1
6     100.3
7     100.1
8     100.2
9      97.7
10    100.1
11     98.2
12     98.8
13     98.2
14     99.1
15     97.1
16     96.8
17     95.4
Name: ECON0908, dtype: float64
18 0     99.021277
1     99.021277
2     99.021277
3     99.021277
4     99.021277
5     99.021277
6     99.021277
7     99.021277
8     99.021277
9     99.021277
10    99.021277
11    99.021277
12    99.021277
13    99.021277
14    99.021277
15    99.021277
16    99.021277
17    99.021277
Name: ECON0908_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0908 ECON0908 [100.2, 100.3, 100.9, 103.5, 101.3, 101.1, 100.3, 100.1, 100.2, 97.7, 100.1, 98.2, 98.8, 98.2, 99.1, 97.1, 96.8, 95.4]
FORECAST_DETAIL_PREDICTED ECON0908 ECON0908 [99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468, 99.02127659574468]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0908 ECON0908 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0908 ECON0908 3.303046226501465
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0908 ECON0908 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0908 ECON0908 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0908 ECON0908 0.0161 0.0161 1.4028
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0908 ECON0908 1.6008274231678474 1.920178090490629 -0.041721690782810184
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0908_18'
