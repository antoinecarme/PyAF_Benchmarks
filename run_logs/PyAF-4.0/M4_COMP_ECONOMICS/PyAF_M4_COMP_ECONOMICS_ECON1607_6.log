BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1607 N= 37 H= 6 HEAD= [5.101019  5.1440618 5.4532677 5.8525123 6.196416 ] TAIL= [77.6221012 81.0778286 84.3205376 88.6814828 92.2127547]
   ECON1607  Date
0  5.101019     0
1  5.144062     1
2  5.453268     2
3  5.852512     3
4  6.196416     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1607  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1607'], 'Transformations': [('ECON1607', 'None', '_', 'T+S+R'), ('ECON1607', 'None', 'Diff_', 'T+S+R'), ('ECON1607', 'None', 'RelDiff_', 'T+S+R'), ('ECON1607', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1607', 'Transformation': '_ECON1607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.999, ('TRAINING', {'Signal': 'ECON1607', 'Transformation': '_ECON1607'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1607', 'Transformation': 'Diff_ECON1607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.462, ('TRAINING', {'Signal': 'ECON1607', 'Transformation': 'Diff_ECON1607'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1607', 'Transformation': 'RelDiff_ECON1607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.572, ('TRAINING', {'Signal': 'ECON1607', 'Transformation': 'RelDiff_ECON1607'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1607', 'Transformation': 'CumSum_ECON1607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.444, ('TRAINING', {'Signal': 'ECON1607', 'Transformation': 'CumSum_ECON1607'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.48, ('SIGNAL_TRAINING', {'Signals': ['ECON1607'], 'Transformations': [('ECON1607', 'None', '_', 'T+S+R'), ('ECON1607', 'None', 'Diff_', 'T+S+R'), ('ECON1607', 'None', 'RelDiff_', 'T+S+R'), ('ECON1607', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1607'], 'Transformations': [('ECON1607', [('ECON1607', 'None', 'CumSum_', 'T+S+R'), ('ECON1607', 'None', 'Diff_', 'T+S+R'), ('ECON1607', 'None', 'RelDiff_', 'T+S+R'), ('ECON1607', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1607', 'Transformations': [('ECON1607', 'None', 'CumSum_', 'T+S+R'), ('ECON1607', 'None', 'Diff_', 'T+S+R'), ('ECON1607', 'None', 'RelDiff_', 'T+S+R'), ('ECON1607', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'ECON1607', 'Transformations': [('ECON1607', 'None', 'CumSum_', 'T+S+R'), ('ECON1607', 'None', 'Diff_', 'T+S+R'), ('ECON1607', 'None', 'RelDiff_', 'T+S+R'), ('ECON1607', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1607', 'Model': 'CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1607', 'Model': 'CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1607'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.13, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1607'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.162, ('FINALIZE_TRAINING', {'Signals': ['ECON1607'], 'Transformations': [('ECON1607', [('ECON1607', 'None', 'CumSum_', 'T+S+R'), ('ECON1607', 'None', 'Diff_', 'T+S+R'), ('ECON1607', 'None', 'RelDiff_', 'T+S+R'), ('ECON1607', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1607' Length=37  Min=5.101019 Max=92.2127547  Mean=33.64744971351351 StdDev=29.268462058670696
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_ECON1607' Min=0.0 Max=12.124863864926983  Mean=2.824319958527234 StdDev=3.5996528098246228
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_ECON1607_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0943 MAPE_Forecast=0.016 MAPE_Test=0.0143
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0816 SMAPE_Forecast=0.0162 SMAPE_Test=0.0144
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6807 MASE_Forecast=0.2652 MASE_Test=0.3168
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.017479114142399 CRPS_Forecast=2.7516365349247827 CRPS_Test=2.7827155022374725
INFO:pyaf.std:MODEL_L1 L1_Fit=1.1384902417998417 L1_Forecast=0.9357540649848995 L1_Test=1.166163505313359
INFO:pyaf.std:MODEL_L2 L2_Fit=1.7377094929633148 L2_Forecast=1.087390684627392 L2_Test=1.2634723287807392
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6112796043363639 LnQ_Forecast=0.0024520168446738864 LnQ_Test=0.0015099077321782367
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5041673747750997 MedAE_Forecast=0.9985756411197002 MedAE_Test=1.0094195855079633
INFO:pyaf.std:MODEL_COMPLEXITY 9.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE None 0.0343785292065992 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag1 0.18366552378053858
INFO:pyaf.std:AR_MODEL_COEFF 2 CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag2 0.15085950090736155
INFO:pyaf.std:AR_MODEL_COEFF 3 CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag3 0.12242751409772087
INFO:pyaf.std:AR_MODEL_COEFF 4 CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag4 0.09865013013402697
INFO:pyaf.std:AR_MODEL_COEFF 5 CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag5 0.08066105344203797
INFO:pyaf.std:AR_MODEL_COEFF 6 CumSum_ECON1607_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 0.06502000174063068
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON1607             T+S+R  ...  0.0943       0.0160   0.0143
1   None   CumSum_ECON1607             T+S+R  ...  0.0943       0.0160   0.0143
2   None     Diff_ECON1607             T+S+R  ...  0.3074       0.0261   0.0767
3   None     Diff_ECON1607             T+S+R  ...  0.3074       0.0261   0.0767
4   None     Diff_ECON1607             T+S+R  ...  0.3063       0.0262   0.0766
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1607             T+S+R  ...  0.4407       0.9120   0.9382
60  None  RelDiff_ECON1607             T+S+R  ...  0.4407       0.9120   0.9382
61  None  RelDiff_ECON1607             T+S+R  ...  0.4407       0.9120   0.9382
62  None  RelDiff_ECON1607             T+S+R  ...  0.4407       0.9120   0.9382
63  None  RelDiff_ECON1607             T+S+R  ...  0.4407       0.9120   0.9382

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON1607             T+S+R  ...  0.0943       0.0160   0.0143
1  None  CumSum_ECON1607             T+S+R  ...  0.0943       0.0160   0.0143
2  None    Diff_ECON1607             T+S+R  ...  0.3074       0.0261   0.0767
3  None    Diff_ECON1607             T+S+R  ...  0.3074       0.0261   0.0767
4  None    Diff_ECON1607             T+S+R  ...  0.3063       0.0262   0.0766

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1607'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.106, ('FORECASTING', {'Signals': ['ECON1607'], 'Horizon': 6}))
6 0     94.057449
1     95.862614
2     97.483310
3    100.000000
4    102.837316
5    105.387250
Name: ECON1607, dtype: float64
6 0     94.848244
1     97.245577
2     99.432257
3    101.429152
4    103.247670
5    104.829311
Name: ECON1607_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1607 ECON1607 [94.0574491, 95.8626142, 97.4833099, 100.0, 102.8373156, 105.3872497]
FORECAST_DETAIL_PREDICTED ECON1607 ECON1607 [94.84824358472552, 97.24557688226615, 99.43225727314858, 101.42915174097841, 103.24766957522458, 104.82931080955758]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1607 ECON1607 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1607 ECON1607 2.8515844345092773
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1607 ECON1607 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1607 ECON1607 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1607 ECON1607 0.0111 0.011 0.4796
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1607 ECON1607 1.0866915244642783 1.2150787663157359 0.904390179930525
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1607_6'
