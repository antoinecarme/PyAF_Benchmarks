BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 313 H= 26 HEAD= [0 1 2 3 4] TAIL= [308 309 310 311 312]
SIGNAL :  ECON0304 N= 313 H= 26 HEAD= [2.25 2.22 2.13 2.01 1.97] TAIL= [3.97 1.93 2.23 1.82 1.91]
   ECON0304  Date
0      2.25     0
1      2.22     1
2      2.13     2
3      2.01     3
4      1.97     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 313 entries, 0 to 312
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0304  313 non-null    float64
 1   Date      313 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 7.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0304'], 'Transformations': [('ECON0304', 'None', '_', 'T+S+R'), ('ECON0304', 'None', 'Diff_', 'T+S+R'), ('ECON0304', 'None', 'RelDiff_', 'T+S+R'), ('ECON0304', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0304', 'Transformation': '_ECON0304'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.201, ('TRAINING', {'Signal': 'ECON0304', 'Transformation': '_ECON0304'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0304', 'Transformation': 'Diff_ECON0304'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.704, ('TRAINING', {'Signal': 'ECON0304', 'Transformation': 'Diff_ECON0304'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0304', 'Transformation': 'RelDiff_ECON0304'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.781, ('TRAINING', {'Signal': 'ECON0304', 'Transformation': 'RelDiff_ECON0304'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0304', 'Transformation': 'CumSum_ECON0304'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.582, ('TRAINING', {'Signal': 'ECON0304', 'Transformation': 'CumSum_ECON0304'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.27, ('SIGNAL_TRAINING', {'Signals': ['ECON0304'], 'Transformations': [('ECON0304', 'None', '_', 'T+S+R'), ('ECON0304', 'None', 'Diff_', 'T+S+R'), ('ECON0304', 'None', 'RelDiff_', 'T+S+R'), ('ECON0304', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0304'], 'Transformations': [('ECON0304', [('ECON0304', 'None', 'CumSum_', 'T+S+R'), ('ECON0304', 'None', 'Diff_', 'T+S+R'), ('ECON0304', 'None', 'RelDiff_', 'T+S+R'), ('ECON0304', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0304', 'Transformations': [('ECON0304', 'None', 'CumSum_', 'T+S+R'), ('ECON0304', 'None', 'Diff_', 'T+S+R'), ('ECON0304', 'None', 'RelDiff_', 'T+S+R'), ('ECON0304', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0304', 'Transformations': [('ECON0304', 'None', 'CumSum_', 'T+S+R'), ('ECON0304', 'None', 'Diff_', 'T+S+R'), ('ECON0304', 'None', 'RelDiff_', 'T+S+R'), ('ECON0304', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0304', 'Model': '_ECON0304_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0304', 'Model': '_ECON0304_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0304'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.574, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0304'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.606, ('FINALIZE_TRAINING', {'Signals': ['ECON0304'], 'Transformations': [('ECON0304', [('ECON0304', 'None', 'CumSum_', 'T+S+R'), ('ECON0304', 'None', 'Diff_', 'T+S+R'), ('ECON0304', 'None', 'RelDiff_', 'T+S+R'), ('ECON0304', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=228 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0304' Length=313  Min=0.63 Max=3.97  Mean=1.8322364217252414 StdDev=0.5287934137791483
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0304' Min=0.0 Max=1.0  Mean=0.3599510244686346 StdDev=0.1583213813710025
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0304_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0304_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0304_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0304_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.038 MAPE_Forecast=0.0628 MAPE_Test=0.1197
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0381 SMAPE_Forecast=0.0618 SMAPE_Test=0.1081
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9956 MASE_Forecast=1.0005 MASE_Test=0.9957
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.11191021423067045 CRPS_Forecast=0.19099296551724135 CRPS_Test=0.2646307692307692
INFO:pyaf.std:MODEL_L1 L1_Fit=0.06410480349344976 L1_Forecast=0.08758620689655171 L1_Test=0.24692307692307697
INFO:pyaf.std:MODEL_L2 L2_Fit=0.08243033316278363 L2_Forecast=0.10646352783287188 L2_Test=0.46887754674984583
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6058228222663162 LnQ_Forecast=0.42387611716242424 LnQ_Test=0.8349917452703018
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.050000000000000266 MedAE_Forecast=0.07500000000000007 MedAE_Test=0.09999999999999998
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.48502994011976047
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0304_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0304             T+S+R  ...  0.0410       0.0608   0.1361
1   None   CumSum_ECON0304             T+S+R  ...  0.0410       0.0608   0.1361
2   None         _ECON0304             T+S+R  ...  0.0360       0.0615   0.1229
3   None         _ECON0304             T+S+R  ...  0.0362       0.0616   0.1231
4   None         _ECON0304             T+S+R  ...  0.0377       0.0622   0.1205
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0304             T+S+R  ...  0.9598       3.1927   2.8356
60  None  RelDiff_ECON0304             T+S+R  ...  0.6879       4.0623   4.7466
61  None  RelDiff_ECON0304             T+S+R  ...  0.6879       4.0623   4.7466
62  None  RelDiff_ECON0304             T+S+R  ...  0.5482       4.2678   1.5713
63  None  RelDiff_ECON0304             T+S+R  ...  0.5482       4.2678   1.5713

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0304             T+S+R  ...  0.0410       0.0608   0.1361
1  None  CumSum_ECON0304             T+S+R  ...  0.0410       0.0608   0.1361
2  None        _ECON0304             T+S+R  ...  0.0360       0.0615   0.1229
3  None        _ECON0304             T+S+R  ...  0.0362       0.0616   0.1231
4  None        _ECON0304             T+S+R  ...  0.0377       0.0622   0.1205

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0304'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.413, ('FORECASTING', {'Signals': ['ECON0304'], 'Horizon': 26}))
26 0     1.95
1     1.89
2     1.60
3     1.68
4     1.61
5     1.54
6     1.34
7     1.42
8     1.62
9     1.69
10    1.71
11    1.31
12    1.12
13    1.16
14    1.26
15    1.26
16    1.39
17    1.36
18    1.40
19    1.29
20    1.28
21    1.36
22    1.33
23    1.47
24    1.54
25    1.55
Name: ECON0304, dtype: float64
26 0     1.91
1     1.91
2     1.91
3     1.91
4     1.91
5     1.91
6     1.91
7     1.91
8     1.91
9     1.91
10    1.91
11    1.91
12    1.91
13    1.91
14    1.91
15    1.91
16    1.91
17    1.91
18    1.91
19    1.91
20    1.91
21    1.91
22    1.91
23    1.91
24    1.91
25    1.91
Name: ECON0304_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0304 ECON0304 [1.95, 1.89, 1.6, 1.68, 1.61, 1.54, 1.34, 1.42, 1.62, 1.69, 1.71, 1.31, 1.12, 1.16, 1.26, 1.26, 1.39, 1.36, 1.4, 1.29, 1.28, 1.36, 1.33, 1.47, 1.54, 1.55]
FORECAST_DETAIL_PREDICTED ECON0304 ECON0304 [1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997, 1.9099999999999997]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0304 ECON0304 313 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0304 ECON0304 4.389404535293579
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0304 ECON0304 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0304 ECON0304 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0304 ECON0304 0.329 0.2725 4.4299
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0304 ECON0304 0.44653846153846116 0.48912402076805367 -4.618104067662472
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0304_26'
