BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 191 H= 18 HEAD= [0 1 2 3 4] TAIL= [186 187 188 189 190]
SIGNAL :  ECON0211 N= 191 H= 18 HEAD= [284.355 285.986 284.721 285.51  286.72 ] TAIL= [830.525 827.9   828.181 831.145 838.558]
   ECON0211  Date
0   284.355     0
1   285.986     1
2   284.721     2
3   285.510     3
4   286.720     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 191 entries, 0 to 190
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0211  191 non-null    float64
 1   Date      191 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 4.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0211'], 'Transformations': [('ECON0211', 'None', '_', 'T+S+R'), ('ECON0211', 'None', 'Diff_', 'T+S+R'), ('ECON0211', 'None', 'RelDiff_', 'T+S+R'), ('ECON0211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0211', 'Transformation': '_ECON0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.088, ('TRAINING', {'Signal': 'ECON0211', 'Transformation': '_ECON0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0211', 'Transformation': 'Diff_ECON0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.69, ('TRAINING', {'Signal': 'ECON0211', 'Transformation': 'Diff_ECON0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0211', 'Transformation': 'RelDiff_ECON0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.697, ('TRAINING', {'Signal': 'ECON0211', 'Transformation': 'RelDiff_ECON0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0211', 'Transformation': 'CumSum_ECON0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.559, ('TRAINING', {'Signal': 'ECON0211', 'Transformation': 'CumSum_ECON0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.036, ('SIGNAL_TRAINING', {'Signals': ['ECON0211'], 'Transformations': [('ECON0211', 'None', '_', 'T+S+R'), ('ECON0211', 'None', 'Diff_', 'T+S+R'), ('ECON0211', 'None', 'RelDiff_', 'T+S+R'), ('ECON0211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0211'], 'Transformations': [('ECON0211', [('ECON0211', 'None', 'CumSum_', 'T+S+R'), ('ECON0211', 'None', 'Diff_', 'T+S+R'), ('ECON0211', 'None', 'RelDiff_', 'T+S+R'), ('ECON0211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0211', 'Transformations': [('ECON0211', 'None', 'CumSum_', 'T+S+R'), ('ECON0211', 'None', 'Diff_', 'T+S+R'), ('ECON0211', 'None', 'RelDiff_', 'T+S+R'), ('ECON0211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0211', 'Transformations': [('ECON0211', 'None', 'CumSum_', 'T+S+R'), ('ECON0211', 'None', 'Diff_', 'T+S+R'), ('ECON0211', 'None', 'RelDiff_', 'T+S+R'), ('ECON0211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0211', 'Model': 'Diff_ECON0211_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0211', 'Model': 'Diff_ECON0211_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.439, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.469, ('FINALIZE_TRAINING', {'Signals': ['ECON0211'], 'Transformations': [('ECON0211', [('ECON0211', 'None', 'CumSum_', 'T+S+R'), ('ECON0211', 'None', 'Diff_', 'T+S+R'), ('ECON0211', 'None', 'RelDiff_', 'T+S+R'), ('ECON0211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=137 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0211' Length=191  Min=284.355 Max=838.558  Mean=532.2653926701572 StdDev=167.4292798905178
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0211' Min=-0.046149154732110786 Max=0.06248973751495385  Mean=0.005235602094240838 StdDev=0.010381960563239962
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0211_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0211_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0211_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0211_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0247 MAPE_Forecast=0.0121 MAPE_Test=0.0182
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0248 SMAPE_Forecast=0.0122 SMAPE_Test=0.018
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.3851 MASE_Forecast=2.0646 MASE_Test=3.9584
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=31.423409604208782 CRPS_Forecast=12.152073086992463 CRPS_Test=9.651133411341872
INFO:pyaf.std:MODEL_L1 L1_Fit=10.997047714989716 L1_Forecast=8.74209691185508 L1_Test=15.008028664703886
INFO:pyaf.std:MODEL_L2 L2_Fit=13.13363958981407 L2_Forecast=10.464979562632836 L2_Test=17.73603804585431
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.11658973377270385 LnQ_Forecast=0.007509610235721479 LnQ_Test=0.008038863109482361
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=10.12403626758811 MedAE_Forecast=8.336327028474898 MedAE_Test=14.177337322957385
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.003039565094552764, array([0.00356634]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON0211_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0211             T+S+R  ...  0.0088       0.0044   0.0035
1   None         _ECON0211             T+S+R  ...  0.0088       0.0044   0.0035
2   None   CumSum_ECON0211             T+S+R  ...  0.0096       0.0050   0.0037
3   None     Diff_ECON0211             T+S+R  ...  0.0087       0.0057   0.0061
4   None     Diff_ECON0211             T+S+R  ...  0.0087       0.0057   0.0061
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0211             T+S+R  ...  0.3260       0.6090   0.6514
60  None  RelDiff_ECON0211             T+S+R  ...  0.3260       0.6090   0.6514
61  None  RelDiff_ECON0211             T+S+R  ...  0.3260       0.6090   0.6514
62  None  RelDiff_ECON0211             T+S+R  ...  0.3260       0.6090   0.6514
63  None  RelDiff_ECON0211             T+S+R  ...  0.3260       0.6090   0.6514

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0211             T+S+R  ...  0.0088       0.0044   0.0035
1  None        _ECON0211             T+S+R  ...  0.0088       0.0044   0.0035
2  None  CumSum_ECON0211             T+S+R  ...  0.0096       0.0050   0.0037
3  None    Diff_ECON0211             T+S+R  ...  0.0087       0.0057   0.0061
4  None    Diff_ECON0211             T+S+R  ...  0.0087       0.0057   0.0061

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0211'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.324, ('FORECASTING', {'Signals': ['ECON0211'], 'Horizon': 18}))
18 0     845.969
1     844.743
2     848.342
3     851.809
4     852.345
5     853.259
6     851.941
7     854.425
8     854.975
9     857.837
10    859.322
11    866.914
12    871.713
13    867.852
14    864.302
15    873.282
16    866.919
17    872.264
Name: ECON0211, dtype: float64
18 0     872.316663
1     876.771155
2     881.240073
3     885.723418
4     890.221190
5     894.733389
6     899.260014
7     903.801067
8     908.356546
9     912.926453
10    917.510786
11    922.109546
12    926.722732
13    931.350346
14    935.992386
15    940.648854
16    945.319748
17    950.005069
Name: ECON0211_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0211 ECON0211 [845.969, 844.743, 848.342, 851.809, 852.345, 853.259, 851.941, 854.425, 854.975, 857.837, 859.322, 866.914, 871.713, 867.852, 864.302, 873.282, 866.919, 872.264]
FORECAST_DETAIL_PREDICTED ECON0211 ECON0211 [872.3166632362396, 876.771154651485, 881.2400729173612, 885.7234180338686, 890.2211900010069, 894.7333888187761, 899.2600144871765, 903.8010670062077, 908.35654637587, 912.9264525961632, 917.5107856670875, 922.1095455886427, 926.722732360829, 931.3503459836462, 935.9923864570944, 940.6488537811737, 945.3197479558838, 950.0050689812249]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0211 ECON0211 191 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0211 ECON0211 3.9251010417938232
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0211 ECON0211 LinearTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0211 ECON0211 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0211 ECON0211 0.0604 0.0585 15.0134
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0211 ECON0211 52.04424638331872 54.27679845826421 -34.912326468932335
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0211_18'
