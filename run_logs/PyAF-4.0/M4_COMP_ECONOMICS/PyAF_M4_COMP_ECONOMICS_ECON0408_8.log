BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 75 H= 8 HEAD= [0 1 2 3 4] TAIL= [70 71 72 73 74]
SIGNAL :  ECON0408 N= 75 H= 8 HEAD= [79.969 80.395 81.008 81.049 82.242] TAIL= [160.105 161.754 160.832 163.15  165.269]
   ECON0408  Date
0    79.969     0
1    80.395     1
2    81.008     2
3    81.049     3
4    82.242     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 75 entries, 0 to 74
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0408  75 non-null     float64
 1   Date      75 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0408'], 'Transformations': [('ECON0408', 'None', '_', 'T+S+R'), ('ECON0408', 'None', 'Diff_', 'T+S+R'), ('ECON0408', 'None', 'RelDiff_', 'T+S+R'), ('ECON0408', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0408', 'Transformation': '_ECON0408'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.196, ('TRAINING', {'Signal': 'ECON0408', 'Transformation': '_ECON0408'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0408', 'Transformation': 'Diff_ECON0408'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.49, ('TRAINING', {'Signal': 'ECON0408', 'Transformation': 'Diff_ECON0408'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0408', 'Transformation': 'RelDiff_ECON0408'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.576, ('TRAINING', {'Signal': 'ECON0408', 'Transformation': 'RelDiff_ECON0408'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0408', 'Transformation': 'CumSum_ECON0408'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.459, ('TRAINING', {'Signal': 'ECON0408', 'Transformation': 'CumSum_ECON0408'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.722, ('SIGNAL_TRAINING', {'Signals': ['ECON0408'], 'Transformations': [('ECON0408', 'None', '_', 'T+S+R'), ('ECON0408', 'None', 'Diff_', 'T+S+R'), ('ECON0408', 'None', 'RelDiff_', 'T+S+R'), ('ECON0408', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0408'], 'Transformations': [('ECON0408', [('ECON0408', 'None', 'CumSum_', 'T+S+R'), ('ECON0408', 'None', 'Diff_', 'T+S+R'), ('ECON0408', 'None', 'RelDiff_', 'T+S+R'), ('ECON0408', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0408', 'Transformations': [('ECON0408', 'None', 'CumSum_', 'T+S+R'), ('ECON0408', 'None', 'Diff_', 'T+S+R'), ('ECON0408', 'None', 'RelDiff_', 'T+S+R'), ('ECON0408', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0408', 'Transformations': [('ECON0408', 'None', 'CumSum_', 'T+S+R'), ('ECON0408', 'None', 'Diff_', 'T+S+R'), ('ECON0408', 'None', 'RelDiff_', 'T+S+R'), ('ECON0408', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0408', 'Model': 'Diff_ECON0408_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0408', 'Model': 'Diff_ECON0408_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0408'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0408'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.2, ('FINALIZE_TRAINING', {'Signals': ['ECON0408'], 'Transformations': [('ECON0408', [('ECON0408', 'None', 'CumSum_', 'T+S+R'), ('ECON0408', 'None', 'Diff_', 'T+S+R'), ('ECON0408', 'None', 'RelDiff_', 'T+S+R'), ('ECON0408', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=52 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0408' Length=75  Min=79.969 Max=165.269  Mean=115.26294666666666 StdDev=25.078927253449702
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0408' Min=-0.07988276670574468 Max=0.0630480656506448  Mean=0.013333333333333334 StdDev=0.017389029483201607
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0408_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0408_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0408_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0408_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0248 MAPE_Forecast=0.0131 MAPE_Test=0.0127
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0246 SMAPE_Forecast=0.0131 SMAPE_Test=0.0127
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.4767 MASE_Forecast=0.8935 MASE_Test=0.6913
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.552922248358425 CRPS_Forecast=1.9578590589379434 CRPS_Test=1.7321887804171254
INFO:pyaf.std:MODEL_L1 L1_Fit=2.6426426194255592 L1_Forecast=1.9038650742301602 L1_Test=2.0217061229575037
INFO:pyaf.std:MODEL_L2 L2_Fit=3.305239791795033 L2_Forecast=2.4158620850299117 L2_Test=2.5739515825656634
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.04741529121409482 LnQ_Forecast=0.0037170550679352385 LnQ_Test=0.0021219515456736577
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.3807215438573763 MedAE_Forecast=1.5926473923893667 MedAE_Test=1.5703260706104203
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.006185227919638411, array([0.01034272]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON0408_LinearTrend_residue_bestCycle_byMAPE None 0.0004404438280688561 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0408             T+S+R  ...  0.0074       0.0074   0.0139
1   None   CumSum_ECON0408             T+S+R  ...  0.0111       0.0080   0.0184
2   None   CumSum_ECON0408             T+S+R  ...  0.0111       0.0080   0.0184
3   None         _ECON0408             T+S+R  ...  0.0063       0.0089   0.0149
4   None         _ECON0408             T+S+R  ...  0.0062       0.0089   0.0152
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0408             T+S+R  ...  0.1968       0.4370   0.5004
60  None  RelDiff_ECON0408             T+S+R  ...  0.1968       0.4370   0.5004
61  None  RelDiff_ECON0408             T+S+R  ...  0.1968       0.4370   0.5004
62  None  RelDiff_ECON0408             T+S+R  ...  0.1968       0.4370   0.5004
63  None  RelDiff_ECON0408             T+S+R  ...  0.1968       0.4370   0.5004

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0408             T+S+R  ...  0.0074       0.0074   0.0139
1  None  CumSum_ECON0408             T+S+R  ...  0.0111       0.0080   0.0184
2  None  CumSum_ECON0408             T+S+R  ...  0.0111       0.0080   0.0184
3  None        _ECON0408             T+S+R  ...  0.0063       0.0089   0.0149
4  None        _ECON0408             T+S+R  ...  0.0062       0.0089   0.0152

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0408'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.131, ('FORECASTING', {'Signals': ['ECON0408'], 'Horizon': 8}))
8 0    163.456
1    165.701
2    164.838
3    165.507
4    169.503
5    172.878
6    172.859
7    172.913
Name: ECON0408, dtype: float64
8 0    168.419810
1    170.236828
2    172.070814
3    173.921765
4    175.789682
5    177.674565
6    179.576414
7    181.495229
Name: ECON0408_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0408 ECON0408 [163.456, 165.701, 164.838, 165.507, 169.503, 172.878, 172.859, 172.913]
FORECAST_DETAIL_PREDICTED ECON0408 ECON0408 [168.41980951215186, 170.2368284924895, 172.07081351281133, 173.92176457311723, 175.78968167340727, 177.6745648136814, 179.57641399393967, 181.49522921418202]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0408 ECON0408 75 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0408 ECON0408 3.1444225311279297
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0408 ECON0408 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0408 ECON0408 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0408 ECON0408 0.0382 0.0375 4.0183
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0408 ECON0408 6.441263223222538 6.611001329636467 -2.05957768219519
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0408_8'
