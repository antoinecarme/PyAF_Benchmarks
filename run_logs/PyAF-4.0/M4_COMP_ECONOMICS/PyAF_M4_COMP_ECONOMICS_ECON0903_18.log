BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0903 N= 47 H= 18 HEAD= [94.9 94.  93.5 94.  92.2] TAIL= [98.3 99.1 98.4 98.1 97.4]
   ECON0903  Date
0      94.9     0
1      94.0     1
2      93.5     2
3      94.0     3
4      92.2     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0903  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0903'], 'Transformations': [('ECON0903', 'None', '_', 'T+S+R'), ('ECON0903', 'None', 'Diff_', 'T+S+R'), ('ECON0903', 'None', 'RelDiff_', 'T+S+R'), ('ECON0903', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0903', 'Transformation': '_ECON0903'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.967, ('TRAINING', {'Signal': 'ECON0903', 'Transformation': '_ECON0903'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0903', 'Transformation': 'Diff_ECON0903'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.475, ('TRAINING', {'Signal': 'ECON0903', 'Transformation': 'Diff_ECON0903'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0903', 'Transformation': 'RelDiff_ECON0903'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.574, ('TRAINING', {'Signal': 'ECON0903', 'Transformation': 'RelDiff_ECON0903'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0903', 'Transformation': 'CumSum_ECON0903'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.552, ('TRAINING', {'Signal': 'ECON0903', 'Transformation': 'CumSum_ECON0903'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.569, ('SIGNAL_TRAINING', {'Signals': ['ECON0903'], 'Transformations': [('ECON0903', 'None', '_', 'T+S+R'), ('ECON0903', 'None', 'Diff_', 'T+S+R'), ('ECON0903', 'None', 'RelDiff_', 'T+S+R'), ('ECON0903', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0903'], 'Transformations': [('ECON0903', [('ECON0903', 'None', 'CumSum_', 'T+S+R'), ('ECON0903', 'None', 'Diff_', 'T+S+R'), ('ECON0903', 'None', 'RelDiff_', 'T+S+R'), ('ECON0903', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0903', 'Transformations': [('ECON0903', 'None', 'CumSum_', 'T+S+R'), ('ECON0903', 'None', 'Diff_', 'T+S+R'), ('ECON0903', 'None', 'RelDiff_', 'T+S+R'), ('ECON0903', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0903', 'Transformations': [('ECON0903', 'None', 'CumSum_', 'T+S+R'), ('ECON0903', 'None', 'Diff_', 'T+S+R'), ('ECON0903', 'None', 'RelDiff_', 'T+S+R'), ('ECON0903', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0903', 'Model': 'Diff_ECON0903_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0903', 'Model': 'Diff_ECON0903_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0903'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.376, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0903'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.404, ('FINALIZE_TRAINING', {'Signals': ['ECON0903'], 'Transformations': [('ECON0903', [('ECON0903', 'None', 'CumSum_', 'T+S+R'), ('ECON0903', 'None', 'Diff_', 'T+S+R'), ('ECON0903', 'None', 'RelDiff_', 'T+S+R'), ('ECON0903', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0903' Length=47  Min=91.8 Max=104.6  Mean=97.0723404255319 StdDev=2.885451557836501
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0903' Min=-0.3671875000000003 Max=0.3749999999999999  Mean=0.004155585106382981 StdDev=0.16117448487026367
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0903_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0903_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0903_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0903_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0213 MAPE_Forecast=0.0213 MAPE_Test=0.0213
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0215 SMAPE_Forecast=0.0215 SMAPE_Test=0.0215
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.2968 MASE_Forecast=1.2968 MASE_Test=1.2968
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4360238090926719 CRPS_Forecast=0.4360238090926719 CRPS_Test=0.4360238090926719
INFO:pyaf.std:MODEL_L1 L1_Fit=2.08334087822544 L1_Forecast=2.08334087822544 L1_Test=2.08334087822544
INFO:pyaf.std:MODEL_L2 L2_Fit=2.619586184702757 L2_Forecast=2.619586184702757 L2_Test=2.619586184702757
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.03378813690197463 LnQ_Forecast=0.03378813690197463 LnQ_Test=0.03378813690197463
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.8595744680850999 MedAE_Forecast=1.8595744680850999 MedAE_Test=1.8595744680850999
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.24218750000000072
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON0903_ConstantTrend 0.004155585106382981
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON0903_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_ECON0903  ...  1.320000e-02  1.320000e-02
1   None   CumSum_ECON0903  ...  1.320000e-02  1.320000e-02
2   None         _ECON0903  ...  1.350000e-02  1.350000e-02
3   None         _ECON0903  ...  1.350000e-02  1.350000e-02
4   None         _ECON0903  ...  1.360000e-02  1.360000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0903  ...  5.358898e+05  5.358898e+05
60  None  RelDiff_ECON0903  ...  1.086120e+06  1.086120e+06
61  None  RelDiff_ECON0903  ...  1.086120e+06  1.086120e+06
62  None  RelDiff_ECON0903  ...  1.271560e+06  1.271560e+06
63  None  RelDiff_ECON0903  ...  1.271560e+06  1.271560e+06

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0903             T+S+R  ...  0.0132       0.0132   0.0132
1  None  CumSum_ECON0903             T+S+R  ...  0.0132       0.0132   0.0132
2  None        _ECON0903             T+S+R  ...  0.0135       0.0135   0.0135
3  None        _ECON0903             T+S+R  ...  0.0135       0.0135   0.0135
4  None        _ECON0903             T+S+R  ...  0.0136       0.0136   0.0136

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0903'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.273, ('FORECASTING', {'Signals': ['ECON0903'], 'Horizon': 18}))
18 0     101.5
1      98.0
2      97.8
3      99.5
4      98.4
5      95.1
6      99.2
7      99.7
8     101.2
9      98.9
10    101.4
11    100.6
12    103.1
13    104.6
14    103.9
15    101.8
16    102.1
17    102.2
Name: ECON0903, dtype: float64
18 0     97.453191
1     97.506383
2     97.559574
3     97.612766
4     97.665957
5     97.719149
6     97.772340
7     97.825532
8     97.878723
9     97.931915
10    97.985106
11    98.038298
12    98.091489
13    98.144681
14    98.197872
15    98.251064
16    98.304255
17    98.357447
Name: ECON0903_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0903 ECON0903 [101.5, 98.0, 97.8, 99.5, 98.4, 95.1, 99.2, 99.7, 101.2, 98.9, 101.4, 100.6, 103.1, 104.6, 103.9, 101.8, 102.1, 102.2]
FORECAST_DETAIL_PREDICTED ECON0903 ECON0903 [97.4531914893617, 97.50638297872341, 97.55957446808512, 97.61276595744681, 97.66595744680852, 97.71914893617021, 97.77234042553192, 97.82553191489362, 97.87872340425533, 97.93191489361702, 97.98510638297873, 98.03829787234042, 98.09148936170213, 98.14468085106384, 98.19787234042553, 98.25106382978724, 98.30425531914894, 98.35744680851064]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0903 ECON0903 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0903 ECON0903 3.3495752811431885
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0903 ECON0903 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0903 ECON0903 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0903 ECON0903 0.0284 0.0289 1.7093
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0903 ECON0903 2.8856973995271837 3.3699710151014046 -1.0949035003793322
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0903_18'
