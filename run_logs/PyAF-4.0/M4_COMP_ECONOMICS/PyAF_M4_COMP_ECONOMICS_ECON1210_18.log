BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1210 N= 131 H= 18 HEAD= [97.4 97.6 97.6 98.1 98. ] TAIL= [98.4 98.4 98.6 98.6 98.7]
   ECON1210  Date
0      97.4     0
1      97.6     1
2      97.6     2
3      98.1     3
4      98.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1210  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1210'], 'Transformations': [('ECON1210', 'None', '_', 'T+S+R'), ('ECON1210', 'None', 'Diff_', 'T+S+R'), ('ECON1210', 'None', 'RelDiff_', 'T+S+R'), ('ECON1210', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1210', 'Transformation': '_ECON1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.269, ('TRAINING', {'Signal': 'ECON1210', 'Transformation': '_ECON1210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1210', 'Transformation': 'Diff_ECON1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.535, ('TRAINING', {'Signal': 'ECON1210', 'Transformation': 'Diff_ECON1210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1210', 'Transformation': 'RelDiff_ECON1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.603, ('TRAINING', {'Signal': 'ECON1210', 'Transformation': 'RelDiff_ECON1210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1210', 'Transformation': 'CumSum_ECON1210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.528, ('TRAINING', {'Signal': 'ECON1210', 'Transformation': 'CumSum_ECON1210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.936, ('SIGNAL_TRAINING', {'Signals': ['ECON1210'], 'Transformations': [('ECON1210', 'None', '_', 'T+S+R'), ('ECON1210', 'None', 'Diff_', 'T+S+R'), ('ECON1210', 'None', 'RelDiff_', 'T+S+R'), ('ECON1210', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1210'], 'Transformations': [('ECON1210', [('ECON1210', 'None', 'CumSum_', 'T+S+R'), ('ECON1210', 'None', 'Diff_', 'T+S+R'), ('ECON1210', 'None', 'RelDiff_', 'T+S+R'), ('ECON1210', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1210', 'Transformations': [('ECON1210', 'None', 'CumSum_', 'T+S+R'), ('ECON1210', 'None', 'Diff_', 'T+S+R'), ('ECON1210', 'None', 'RelDiff_', 'T+S+R'), ('ECON1210', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1210', 'Transformations': [('ECON1210', 'None', 'CumSum_', 'T+S+R'), ('ECON1210', 'None', 'Diff_', 'T+S+R'), ('ECON1210', 'None', 'RelDiff_', 'T+S+R'), ('ECON1210', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1210', 'Model': '_ECON1210_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1210', 'Model': '_ECON1210_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.377, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.41, ('FINALIZE_TRAINING', {'Signals': ['ECON1210'], 'Transformations': [('ECON1210', [('ECON1210', 'None', 'CumSum_', 'T+S+R'), ('ECON1210', 'None', 'Diff_', 'T+S+R'), ('ECON1210', 'None', 'RelDiff_', 'T+S+R'), ('ECON1210', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1210' Length=131  Min=97.4 Max=104.3  Mean=100.4137404580153 StdDev=1.6803200058176229
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1210' Min=0.0 Max=1.0  Mean=0.43677397942250196 StdDev=0.24352463852429335
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1210_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1210_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1210_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1210_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0153 MAPE_Forecast=0.0084 MAPE_Test=0.0136
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0153 SMAPE_Forecast=0.0084 SMAPE_Test=0.0135
INFO:pyaf.std:MODEL_MASE MASE_Fit=8.1376 MASE_Forecast=3.5405 MASE_Test=4.5787
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.25572740740740757 CRPS_Forecast=0.35027777777777896 CRPS_Test=0.6351388888888891
INFO:pyaf.std:MODEL_L1 L1_Fit=1.5452345679012347 L1_Forecast=0.8529468599033809 L1_Test=1.3466666666666671
INFO:pyaf.std:MODEL_L2 L2_Fit=1.852264546607013 L2_Forecast=1.0127186880719414 L2_Test=1.4483894844845542
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.0303346576672317 LnQ_Forecast=0.0023045007759551024 LnQ_Test=0.0038053559099990425
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.2000000000000028 MedAE_Forecast=0.7422222222222246 MedAE_Test=1.4577777777777783
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON1210_ConstantTrend 0.44315619967793857
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON1210_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
1   None         _ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
2   None   CumSum_ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
3   None     Diff_ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
4   None   CumSum_ECON1210             T+S+R  ...  0.0024       0.0026   0.0034
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1210             T+S+R  ...  0.0301       0.0381   0.0172
60  None  RelDiff_ECON1210             T+S+R  ...  0.0301       0.0381   0.0172
61  None         _ECON1210             T+S+R  ...  0.0035       0.0455   0.1030
62  None         _ECON1210             T+S+R  ...  0.0035       0.0455   0.1030
63  None     Diff_ECON1210             T+S+R  ...  0.0259       0.0563   0.0695

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
1  None        _ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
2  None  CumSum_ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
3  None    Diff_ECON1210             T+S+R  ...  0.0019       0.0025   0.0029
4  None  CumSum_ECON1210             T+S+R  ...  0.0024       0.0026   0.0034

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1210'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.282, ('FORECASTING', {'Signals': ['ECON1210'], 'Horizon': 18}))
18 0     99.2
1     98.3
2     98.4
3     98.2
4     98.3
5     98.0
6     97.6
7     97.0
8     97.5
9     97.6
10    97.7
11    97.6
12    98.0
13    97.0
14    97.2
15    96.8
16    97.3
17    97.3
Name: ECON1210, dtype: float64
18 0     100.457778
1     100.457778
2     100.457778
3     100.457778
4     100.457778
5     100.457778
6     100.457778
7     100.457778
8     100.457778
9     100.457778
10    100.457778
11    100.457778
12    100.457778
13    100.457778
14    100.457778
15    100.457778
16    100.457778
17    100.457778
Name: ECON1210_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1210 ECON1210 [99.2, 98.3, 98.4, 98.2, 98.3, 98.0, 97.6, 97.0, 97.5, 97.6, 97.7, 97.6, 98.0, 97.0, 97.2, 96.8, 97.3, 97.3]
FORECAST_DETAIL_PREDICTED ECON1210 ECON1210 [100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778, 100.45777777777778]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1210 ECON1210 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1210 ECON1210 3.7228479385375977
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1210 ECON1210 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1210 ECON1210 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1210 ECON1210 0.028 0.0276 7.8821
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1210 ECON1210 2.735555555555557 2.7989071941530126 -21.34311267570225
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1210_18'
