BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1201 N= 131 H= 18 HEAD= [86.8 87.2 87.5 88.  88.3] TAIL= [102.5 102.9 103.  103.2 103.4]
   ECON1201  Date
0      86.8     0
1      87.2     1
2      87.5     2
3      88.0     3
4      88.3     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1201  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1201'], 'Transformations': [('ECON1201', 'None', '_', 'T+S+R'), ('ECON1201', 'None', 'Diff_', 'T+S+R'), ('ECON1201', 'None', 'RelDiff_', 'T+S+R'), ('ECON1201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1201', 'Transformation': '_ECON1201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.26, ('TRAINING', {'Signal': 'ECON1201', 'Transformation': '_ECON1201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1201', 'Transformation': 'Diff_ECON1201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.52, ('TRAINING', {'Signal': 'ECON1201', 'Transformation': 'Diff_ECON1201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1201', 'Transformation': 'RelDiff_ECON1201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.594, ('TRAINING', {'Signal': 'ECON1201', 'Transformation': 'RelDiff_ECON1201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1201', 'Transformation': 'CumSum_ECON1201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.518, ('TRAINING', {'Signal': 'ECON1201', 'Transformation': 'CumSum_ECON1201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.894, ('SIGNAL_TRAINING', {'Signals': ['ECON1201'], 'Transformations': [('ECON1201', 'None', '_', 'T+S+R'), ('ECON1201', 'None', 'Diff_', 'T+S+R'), ('ECON1201', 'None', 'RelDiff_', 'T+S+R'), ('ECON1201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1201'], 'Transformations': [('ECON1201', [('ECON1201', 'None', 'CumSum_', 'T+S+R'), ('ECON1201', 'None', 'Diff_', 'T+S+R'), ('ECON1201', 'None', 'RelDiff_', 'T+S+R'), ('ECON1201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1201', 'Transformations': [('ECON1201', 'None', 'CumSum_', 'T+S+R'), ('ECON1201', 'None', 'Diff_', 'T+S+R'), ('ECON1201', 'None', 'RelDiff_', 'T+S+R'), ('ECON1201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON1201', 'Transformations': [('ECON1201', 'None', 'CumSum_', 'T+S+R'), ('ECON1201', 'None', 'Diff_', 'T+S+R'), ('ECON1201', 'None', 'RelDiff_', 'T+S+R'), ('ECON1201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1201', 'Model': '_ECON1201_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1201', 'Model': '_ECON1201_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.403, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.43, ('FINALIZE_TRAINING', {'Signals': ['ECON1201'], 'Transformations': [('ECON1201', [('ECON1201', 'None', 'CumSum_', 'T+S+R'), ('ECON1201', 'None', 'Diff_', 'T+S+R'), ('ECON1201', 'None', 'RelDiff_', 'T+S+R'), ('ECON1201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1201' Length=131  Min=86.8 Max=103.4  Mean=94.55114503816796 StdDev=4.155036792852296
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1201' Min=0.0 Max=1.0  Mean=0.46693644808240586 StdDev=0.2503034212561623
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1201_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1201_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1201_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1201_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0043 MAPE_Forecast=0.0086 MAPE_Test=0.0252
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0043 SMAPE_Forecast=0.0086 SMAPE_Test=0.0255
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.3093 MASE_Forecast=3.0423 MASE_Test=9.9032
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.6663955062778428 CRPS_Forecast=0.3576753961743469 CRPS_Test=1.0600593140217616
INFO:pyaf.std:MODEL_L1 L1_Fit=0.3957383989391096 L1_Forecast=0.8435415436528646 L1_Test=2.563174183599081
INFO:pyaf.std:MODEL_L2 L2_Fit=0.48991991806340013 L2_Forecast=0.9331351278907765 L2_Test=2.654943248179867
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.002621290058215131 LnQ_Forecast=0.002077571011974937 LnQ_Test=0.012530441016962785
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.34411557814559757 MedAE_Forecast=0.7955439207147776 MedAE_Test=2.194999599496093
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.09664165410833234, array([0.46575284]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON1201_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON1201             T+S+R  ...  0.0027       0.0020   0.0018
1   None         _ECON1201             T+S+R  ...  0.0027       0.0020   0.0018
2   None   CumSum_ECON1201             T+S+R  ...  0.0031       0.0021   0.0017
3   None   CumSum_ECON1201             T+S+R  ...  0.0031       0.0021   0.0021
4   None   CumSum_ECON1201             T+S+R  ...  0.0031       0.0021   0.0021
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1201             T+S+R  ...  0.0585       0.1144   0.1449
60  None  RelDiff_ECON1201             T+S+R  ...  0.0585       0.1144   0.1449
61  None  RelDiff_ECON1201             T+S+R  ...  0.0585       0.1144   0.1449
62  None  RelDiff_ECON1201             T+S+R  ...  0.0585       0.1144   0.1449
63  None  RelDiff_ECON1201             T+S+R  ...  0.0585       0.1144   0.1449

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1201             T+S+R  ...  0.0027       0.0020   0.0018
1  None        _ECON1201             T+S+R  ...  0.0027       0.0020   0.0018
2  None  CumSum_ECON1201             T+S+R  ...  0.0031       0.0021   0.0017
3  None  CumSum_ECON1201             T+S+R  ...  0.0031       0.0021   0.0021
4  None  CumSum_ECON1201             T+S+R  ...  0.0031       0.0021   0.0021

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1201'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.276, ('FORECASTING', {'Signals': ['ECON1201'], 'Horizon': 18}))
18 0     104.0
1     103.2
2     103.7
3     104.2
4     104.5
5     104.8
6     105.0
7     104.4
8     104.7
9     104.8
10    105.3
11    105.6
12    106.2
13    105.5
14    106.3
15    106.7
16    107.6
17    108.3
Name: ECON1201, dtype: float64
18 0      99.784320
1      99.871191
2      99.958062
3     100.044932
4     100.131803
5     100.218674
6     100.305545
7     100.392415
8     100.479286
9     100.566157
10    100.653028
11    100.739898
12    100.826769
13    100.913640
14    101.000511
15    101.087382
16    101.174252
17    101.261123
Name: ECON1201_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1201 ECON1201 [104.0, 103.2, 103.7, 104.2, 104.5, 104.8, 105.0, 104.4, 104.7, 104.8, 105.3, 105.6, 106.2, 105.5, 106.3, 106.7, 107.6, 108.3]
FORECAST_DETAIL_PREDICTED ECON1201 ECON1201 [99.7843201992325, 99.87119095298084, 99.9580617067292, 100.04493246047755, 100.1318032142259, 100.21867396797425, 100.30554472172261, 100.39241547547095, 100.47928622921931, 100.56615698296767, 100.65302773671601, 100.73989849046437, 100.82676924421273, 100.91363999796107, 101.00051075170943, 101.08738150545778, 101.17425225920613, 101.26112301295449]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1201 ECON1201 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1201 ECON1201 3.6929948329925537
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1201 ECON1201 LinearTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1201 ECON1201 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1201 ECON1201 0.045 0.046 9.4879
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1201 ECON1201 4.7439450605731786 4.827992116751738 -12.783546052172383
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1201_18'
