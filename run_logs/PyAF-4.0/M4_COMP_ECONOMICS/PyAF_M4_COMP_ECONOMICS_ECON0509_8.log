BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 187 H= 8 HEAD= [0 1 2 3 4] TAIL= [182 183 184 185 186]
SIGNAL :  ECON0509 N= 187 H= 8 HEAD= [18.531 18.625 18.747 18.855 18.915] TAIL= [ 98.078  98.527  99.229  99.768 100.172]
   ECON0509  Date
0    18.531     0
1    18.625     1
2    18.747     2
3    18.855     3
4    18.915     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 187 entries, 0 to 186
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0509  187 non-null    float64
 1   Date      187 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 4.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0509'], 'Transformations': [('ECON0509', 'None', '_', 'T+S+R'), ('ECON0509', 'None', 'Diff_', 'T+S+R'), ('ECON0509', 'None', 'RelDiff_', 'T+S+R'), ('ECON0509', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0509', 'Transformation': '_ECON0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.102, ('TRAINING', {'Signal': 'ECON0509', 'Transformation': '_ECON0509'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0509', 'Transformation': 'Diff_ECON0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.576, ('TRAINING', {'Signal': 'ECON0509', 'Transformation': 'Diff_ECON0509'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0509', 'Transformation': 'RelDiff_ECON0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.67, ('TRAINING', {'Signal': 'ECON0509', 'Transformation': 'RelDiff_ECON0509'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0509', 'Transformation': 'CumSum_ECON0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.553, ('TRAINING', {'Signal': 'ECON0509', 'Transformation': 'CumSum_ECON0509'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.903, ('SIGNAL_TRAINING', {'Signals': ['ECON0509'], 'Transformations': [('ECON0509', 'None', '_', 'T+S+R'), ('ECON0509', 'None', 'Diff_', 'T+S+R'), ('ECON0509', 'None', 'RelDiff_', 'T+S+R'), ('ECON0509', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0509'], 'Transformations': [('ECON0509', [('ECON0509', 'None', 'CumSum_', 'T+S+R'), ('ECON0509', 'None', 'Diff_', 'T+S+R'), ('ECON0509', 'None', 'RelDiff_', 'T+S+R'), ('ECON0509', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0509', 'Transformations': [('ECON0509', 'None', 'CumSum_', 'T+S+R'), ('ECON0509', 'None', 'Diff_', 'T+S+R'), ('ECON0509', 'None', 'RelDiff_', 'T+S+R'), ('ECON0509', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0509', 'Transformations': [('ECON0509', 'None', 'CumSum_', 'T+S+R'), ('ECON0509', 'None', 'Diff_', 'T+S+R'), ('ECON0509', 'None', 'RelDiff_', 'T+S+R'), ('ECON0509', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0509', 'Model': 'Diff_ECON0509_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0509', 'Model': 'Diff_ECON0509_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0509'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0509'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.202, ('FINALIZE_TRAINING', {'Signals': ['ECON0509'], 'Transformations': [('ECON0509', [('ECON0509', 'None', 'CumSum_', 'T+S+R'), ('ECON0509', 'None', 'Diff_', 'T+S+R'), ('ECON0509', 'None', 'RelDiff_', 'T+S+R'), ('ECON0509', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=142 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0509' Length=187  Min=18.531 Max=100.172  Mean=53.329518716577546 StdDev=27.920610795829965
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0509' Min=0.0 Max=0.013645104788035378  Mean=0.0053475935828877 StdDev=0.003098230981997524
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0509_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0509_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0509_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0509_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2967 MAPE_Forecast=0.0108 MAPE_Test=0.0185
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2421 SMAPE_Forecast=0.0107 SMAPE_Test=0.0183
INFO:pyaf.std:MODEL_MASE MASE_Fit=19.6877 MASE_Forecast=2.5983 MASE_Test=3.3445
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.25062208154921 CRPS_Forecast=1.241784736485728 CRPS_Test=0.9237517482516928
INFO:pyaf.std:MODEL_L1 L1_Fit=8.818586727957326 L1_Forecast=0.996643162393088 L1_Test=1.812253496503395
INFO:pyaf.std:MODEL_L2 L2_Fit=10.411481128826313 L2_Forecast=1.2392895982748453 L2_Test=1.8284248853847067
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=12.821807999950227 LnQ_Forecast=0.00629745361577054 LnQ_Test=0.002732806233490373
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=8.269279720279677 MedAE_Forecast=1.1286188811187827 MedAE_Test=1.8475034965033856
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON0509_ConstantTrend 0.005448122999353386
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON0509_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0509             T+S+R  ...  0.0079       0.0010   0.0010
1   None   CumSum_ECON0509             T+S+R  ...  0.0031       0.0010   0.0011
2   None         _ECON0509             T+S+R  ...  0.0078       0.0011   0.0010
3   None         _ECON0509             T+S+R  ...  0.0085       0.0013   0.0009
4   None   CumSum_ECON0509             T+S+R  ...  0.0090       0.0013   0.0024
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0509             T+S+R  ...  0.4285       0.7923   0.8115
60  None  RelDiff_ECON0509             T+S+R  ...  0.4285       0.7923   0.8115
61  None  RelDiff_ECON0509             T+S+R  ...  0.4285       0.7923   0.8115
62  None  RelDiff_ECON0509             T+S+R  ...  0.4285       0.7923   0.8115
63  None  RelDiff_ECON0509             T+S+R  ...  0.4285       0.7923   0.8115

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0509             T+S+R  ...  0.0079       0.0010   0.0010
1  None  CumSum_ECON0509             T+S+R  ...  0.0031       0.0010   0.0011
2  None        _ECON0509             T+S+R  ...  0.0078       0.0011   0.0010
3  None        _ECON0509             T+S+R  ...  0.0085       0.0013   0.0009
4  None  CumSum_ECON0509             T+S+R  ...  0.0090       0.0013   0.0024

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0509'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.168, ('FORECASTING', {'Signals': ['ECON0509'], 'Horizon': 8}))
8 0    100.831
1    101.325
2    102.057
3    102.630
4    103.154
5    103.862
6    104.318
7    104.904
Name: ECON0509, dtype: float64
8 0    102.151559
1    102.596350
2    103.041140
3    103.485930
4    103.930720
5    104.375510
6    104.820301
7    105.265091
Name: ECON0509_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0509 ECON0509 [100.831, 101.325, 102.057, 102.63, 103.154, 103.862, 104.318, 104.904]
FORECAST_DETAIL_PREDICTED ECON0509 ECON0509 [102.15155944055937, 102.5963496503496, 103.04113986013982, 103.48593006993002, 103.93072027972025, 104.37551048951048, 104.82030069930067, 105.2650909090909]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0509 ECON0509 187 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0509 ECON0509 3.3606669902801514
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0509 ECON0509 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0509 ECON0509 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0509 ECON0509 0.008 0.008 1.4148
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0509 ECON0509 0.8232001748251392 0.8881888011096638 0.5665457869649595
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0509_8'
