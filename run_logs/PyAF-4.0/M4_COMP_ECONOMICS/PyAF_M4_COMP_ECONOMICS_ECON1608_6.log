BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1608 N= 37 H= 6 HEAD= [1.8514 2.0473 2.3695 2.8869 3.2617] TAIL= [162.    165.63  168.997 170.151 183.262]
   ECON1608  Date
0    1.8514     0
1    2.0473     1
2    2.3695     2
3    2.8869     3
4    3.2617     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1608  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1608'], 'Transformations': [('ECON1608', 'None', '_', 'T+S+R'), ('ECON1608', 'None', 'Diff_', 'T+S+R'), ('ECON1608', 'None', 'RelDiff_', 'T+S+R'), ('ECON1608', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1608', 'Transformation': '_ECON1608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.035, ('TRAINING', {'Signal': 'ECON1608', 'Transformation': '_ECON1608'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1608', 'Transformation': 'Diff_ECON1608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.464, ('TRAINING', {'Signal': 'ECON1608', 'Transformation': 'Diff_ECON1608'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1608', 'Transformation': 'RelDiff_ECON1608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.567, ('TRAINING', {'Signal': 'ECON1608', 'Transformation': 'RelDiff_ECON1608'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1608', 'Transformation': 'CumSum_ECON1608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.429, ('TRAINING', {'Signal': 'ECON1608', 'Transformation': 'CumSum_ECON1608'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.497, ('SIGNAL_TRAINING', {'Signals': ['ECON1608'], 'Transformations': [('ECON1608', 'None', '_', 'T+S+R'), ('ECON1608', 'None', 'Diff_', 'T+S+R'), ('ECON1608', 'None', 'RelDiff_', 'T+S+R'), ('ECON1608', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1608'], 'Transformations': [('ECON1608', [('ECON1608', 'None', 'CumSum_', 'T+S+R'), ('ECON1608', 'None', 'Diff_', 'T+S+R'), ('ECON1608', 'None', 'RelDiff_', 'T+S+R'), ('ECON1608', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1608', 'Transformations': [('ECON1608', 'None', 'CumSum_', 'T+S+R'), ('ECON1608', 'None', 'Diff_', 'T+S+R'), ('ECON1608', 'None', 'RelDiff_', 'T+S+R'), ('ECON1608', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON1608', 'Transformations': [('ECON1608', 'None', 'CumSum_', 'T+S+R'), ('ECON1608', 'None', 'Diff_', 'T+S+R'), ('ECON1608', 'None', 'RelDiff_', 'T+S+R'), ('ECON1608', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1608', 'Model': 'Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1608', 'Model': 'Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1608'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.13, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1608'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FINALIZE_TRAINING', {'Signals': ['ECON1608'], 'Transformations': [('ECON1608', [('ECON1608', 'None', 'CumSum_', 'T+S+R'), ('ECON1608', 'None', 'Diff_', 'T+S+R'), ('ECON1608', 'None', 'RelDiff_', 'T+S+R'), ('ECON1608', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1608' Length=37  Min=1.8514 Max=183.262  Mean=56.21410540540541 StdDev=61.678460750283776
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1608' Min=0.0 Max=0.10268969949936768  Mean=0.02702702702702703 StdDev=0.02736056513328271
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1608_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.402 MAPE_Forecast=0.0253 MAPE_Test=0.0447
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3161 SMAPE_Forecast=0.0251 SMAPE_Test=0.0434
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.0422 MASE_Forecast=0.2209 MASE_Test=1.3252
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.3400251956206874 CRPS_Forecast=9.003749614734959 CRPS_Test=5.915876513116689
INFO:pyaf.std:MODEL_L1 L1_Fit=2.7606899344508746 L1_Forecast=2.5862217339611635 L1_Test=7.5172530262333765
INFO:pyaf.std:MODEL_L2 L2_Fit=3.1672005236071494 L2_Forecast=3.0966781824960536 L2_Test=8.968029922213278
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.294821180449298 LnQ_Forecast=0.005935584459029159 LnQ_Test=0.0159733168884098
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.1829557521137763 MedAE_Forecast=2.249447907598878 MedAE_Test=8.640813099886984
INFO:pyaf.std:MODEL_COMPLEXITY 9.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE None 0.000886111395916225 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag3 0.0001276060373076211
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag4 0.00011316441817469125
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag2 9.548101765631348e-05
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag7 7.53529104855216e-05
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 3.942487558966319e-05
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_ECON1608_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag9 2.2426034282306284e-05
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1608             T+S+R  ...  0.4020       0.0253   0.0447
1   None     Diff_ECON1608             T+S+R  ...  0.4020       0.0253   0.0447
2   None     Diff_ECON1608             T+S+R  ...  0.3056       0.0471   0.2810
3   None     Diff_ECON1608             T+S+R  ...  0.3056       0.0471   0.2810
4   None     Diff_ECON1608             T+S+R  ...  0.3054       0.0471   0.2808
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1608             T+S+R  ...  0.6645       0.9809   0.9889
60  None  RelDiff_ECON1608             T+S+R  ...  0.6645       0.9809   0.9889
61  None  RelDiff_ECON1608             T+S+R  ...  0.6645       0.9809   0.9889
62  None  RelDiff_ECON1608             T+S+R  ...  0.6645       0.9809   0.9889
63  None  RelDiff_ECON1608             T+S+R  ...  0.6645       0.9809   0.9889

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  Diff_ECON1608             T+S+R  ...  0.4020       0.0253   0.0447
1  None  Diff_ECON1608             T+S+R  ...  0.4020       0.0253   0.0447
2  None  Diff_ECON1608             T+S+R  ...  0.3056       0.0471   0.2810
3  None  Diff_ECON1608             T+S+R  ...  0.3056       0.0471   0.2810
4  None  Diff_ECON1608             T+S+R  ...  0.3054       0.0471   0.2808

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1608'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.108, ('FORECASTING', {'Signals': ['ECON1608'], 'Horizon': 6}))
6 0    192.081
1    197.670
2    205.469
3    219.728
4    236.857
5    248.783
Name: ECON1608, dtype: float64
6 0    199.146298
1    215.448638
2    232.170006
3    249.310662
4    266.869394
5    284.846418
Name: ECON1608_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1608 ECON1608 [192.081, 197.67, 205.469, 219.728, 236.857, 248.783]
FORECAST_DETAIL_PREDICTED ECON1608 ECON1608 [199.14629838335358, 215.44863764463796, 232.17000574330538, 249.31066171182852, 266.8693939958488, 284.8464176945276]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1608 ECON1608 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1608 ECON1608 2.8568789958953857
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1608 ECON1608 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1608 ECON1608 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1608 ECON1608 0.1105 0.1041 2.1634
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1608 ECON1608 24.533902528916972 26.316629307270386 -0.6365352333644374
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1608_6'
