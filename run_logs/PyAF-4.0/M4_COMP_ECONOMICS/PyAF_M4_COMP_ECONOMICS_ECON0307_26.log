BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 206 H= 26 HEAD= [0 1 2 3 4] TAIL= [201 202 203 204 205]
SIGNAL :  ECON0307 N= 206 H= 26 HEAD= [1.7  1.69 1.67 1.55 1.62] TAIL= [4.03 3.4  3.48 3.05 2.91]
   ECON0307  Date
0      1.70     0
1      1.69     1
2      1.67     2
3      1.55     3
4      1.62     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 206 entries, 0 to 205
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0307  206 non-null    float64
 1   Date      206 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 4.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0307'], 'Transformations': [('ECON0307', 'None', '_', 'T+S+R'), ('ECON0307', 'None', 'Diff_', 'T+S+R'), ('ECON0307', 'None', 'RelDiff_', 'T+S+R'), ('ECON0307', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0307', 'Transformation': '_ECON0307'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.473, ('TRAINING', {'Signal': 'ECON0307', 'Transformation': '_ECON0307'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0307', 'Transformation': 'Diff_ECON0307'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.905, ('TRAINING', {'Signal': 'ECON0307', 'Transformation': 'Diff_ECON0307'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0307', 'Transformation': 'RelDiff_ECON0307'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.032, ('TRAINING', {'Signal': 'ECON0307', 'Transformation': 'RelDiff_ECON0307'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0307', 'Transformation': 'CumSum_ECON0307'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.862, ('TRAINING', {'Signal': 'ECON0307', 'Transformation': 'CumSum_ECON0307'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.274, ('SIGNAL_TRAINING', {'Signals': ['ECON0307'], 'Transformations': [('ECON0307', 'None', '_', 'T+S+R'), ('ECON0307', 'None', 'Diff_', 'T+S+R'), ('ECON0307', 'None', 'RelDiff_', 'T+S+R'), ('ECON0307', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0307'], 'Transformations': [('ECON0307', [('ECON0307', 'None', 'CumSum_', 'T+S+R'), ('ECON0307', 'None', 'Diff_', 'T+S+R'), ('ECON0307', 'None', 'RelDiff_', 'T+S+R'), ('ECON0307', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0307', 'Transformations': [('ECON0307', 'None', 'CumSum_', 'T+S+R'), ('ECON0307', 'None', 'Diff_', 'T+S+R'), ('ECON0307', 'None', 'RelDiff_', 'T+S+R'), ('ECON0307', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'ECON0307', 'Transformations': [('ECON0307', 'None', 'CumSum_', 'T+S+R'), ('ECON0307', 'None', 'Diff_', 'T+S+R'), ('ECON0307', 'None', 'RelDiff_', 'T+S+R'), ('ECON0307', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0307', 'Model': '_ECON0307_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.036, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0307', 'Model': '_ECON0307_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0307'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.922, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0307'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.969, ('FINALIZE_TRAINING', {'Signals': ['ECON0307'], 'Transformations': [('ECON0307', [('ECON0307', 'None', 'CumSum_', 'T+S+R'), ('ECON0307', 'None', 'Diff_', 'T+S+R'), ('ECON0307', 'None', 'RelDiff_', 'T+S+R'), ('ECON0307', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=143 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0307' Length=206  Min=0.61 Max=4.03  Mean=2.015679611650484 StdDev=0.591104999684723
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0307' Min=0.0 Max=1.0  Mean=0.41101743030716004 StdDev=0.17283771920605936
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0307_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0307_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0307_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0307_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0243 MAPE_Forecast=0.0872 MAPE_Test=0.0823
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0243 SMAPE_Forecast=0.0848 SMAPE_Test=0.0845
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9931 MASE_Forecast=1.0261 MASE_Test=1.0077
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.08626075641025643 CRPS_Forecast=0.09558650793650793 CRPS_Test=0.2934230769230769
INFO:pyaf.std:MODEL_L1 L1_Fit=0.05145833333333335 L1_Forecast=0.10055555555555551 L1_Test=0.1930769230769231
INFO:pyaf.std:MODEL_L2 L2_Fit=0.06406919003008475 L2_Forecast=0.12521093313995293 L2_Test=0.2840368340143987
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.13634784017776044 LnQ_Forecast=0.44898316775320685 LnQ_Test=0.33695715999556614
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.04000000000000048 MedAE_Forecast=0.07999999999999996 MedAE_Test=0.11999999999999988
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.31871345029239756
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0307_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0307             T+S+R  ...  0.0317       0.0851   0.0805
1   None   CumSum_ECON0307             T+S+R  ...  0.0317       0.0851   0.0805
2   None         _ECON0307             T+S+R  ...  0.0239       0.0864   0.0815
3   None         _ECON0307             T+S+R  ...  0.0239       0.0864   0.0815
4   None         _ECON0307             T+S+R  ...  0.0243       0.0872   0.0823
..   ...               ...               ...  ...     ...          ...      ...
59  None         _ECON0307             T+S+R  ...  0.0683       1.3277   0.6346
60  None  RelDiff_ECON0307             T+S+R  ...  0.0791       1.3291   0.5177
61  None  RelDiff_ECON0307             T+S+R  ...  0.0791       1.3291   0.5177
62  None   CumSum_ECON0307             T+S+R  ...  0.1527       1.9969   1.1053
63  None   CumSum_ECON0307             T+S+R  ...  0.1606       2.0039   1.1014

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0307             T+S+R  ...  0.0317       0.0851   0.0805
1  None  CumSum_ECON0307             T+S+R  ...  0.0317       0.0851   0.0805
2  None        _ECON0307             T+S+R  ...  0.0239       0.0864   0.0815
3  None        _ECON0307             T+S+R  ...  0.0239       0.0864   0.0815
4  None        _ECON0307             T+S+R  ...  0.0243       0.0872   0.0823

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0307'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.66, ('FORECASTING', {'Signals': ['ECON0307'], 'Horizon': 26}))
26 0     2.98
1     2.83
2     2.35
3     2.39
4     2.27
5     2.17
6     1.92
7     2.01
8     2.25
9     2.30
10    2.32
11    1.81
12    1.45
13    1.46
14    1.55
15    1.48
16    1.62
17    1.65
18    1.76
19    1.66
20    1.57
21    1.59
22    1.54
23    1.64
24    1.71
25    1.78
Name: ECON0307, dtype: float64
26 0     2.91
1     2.91
2     2.91
3     2.91
4     2.91
5     2.91
6     2.91
7     2.91
8     2.91
9     2.91
10    2.91
11    2.91
12    2.91
13    2.91
14    2.91
15    2.91
16    2.91
17    2.91
18    2.91
19    2.91
20    2.91
21    2.91
22    2.91
23    2.91
24    2.91
25    2.91
Name: ECON0307_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0307 ECON0307 [2.98, 2.83, 2.35, 2.39, 2.27, 2.17, 1.92, 2.01, 2.25, 2.3, 2.32, 1.81, 1.45, 1.46, 1.55, 1.48, 1.62, 1.65, 1.76, 1.66, 1.57, 1.59, 1.54, 1.64, 1.71, 1.78]
FORECAST_DETAIL_PREDICTED ECON0307 ECON0307 [2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91, 2.91]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0307 ECON0307 206 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0307 ECON0307 6.030596494674683
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0307 ECON0307 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0307 ECON0307 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0307 ECON0307 0.5773 0.4259 7.3661
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0307 ECON0307 0.9900000000000001 1.0691189758934152 -5.58616551182829
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0307_26'
