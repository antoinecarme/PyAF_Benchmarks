BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0404 N= 235 H= 8 HEAD= [21.2   21.583 21.916 22.479 22.293] TAIL= [117.696 118.274 118.118 119.107 119.879]
   ECON0404  Date
0    21.200     0
1    21.583     1
2    21.916     2
3    22.479     3
4    22.293     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0404  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0404'], 'Transformations': [('ECON0404', 'None', '_', 'T+S+R'), ('ECON0404', 'None', 'Diff_', 'T+S+R'), ('ECON0404', 'None', 'RelDiff_', 'T+S+R'), ('ECON0404', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0404', 'Transformation': '_ECON0404'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.022, ('TRAINING', {'Signal': 'ECON0404', 'Transformation': '_ECON0404'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0404', 'Transformation': 'Diff_ECON0404'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.574, ('TRAINING', {'Signal': 'ECON0404', 'Transformation': 'Diff_ECON0404'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0404', 'Transformation': 'RelDiff_ECON0404'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.707, ('TRAINING', {'Signal': 'ECON0404', 'Transformation': 'RelDiff_ECON0404'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0404', 'Transformation': 'CumSum_ECON0404'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.563, ('TRAINING', {'Signal': 'ECON0404', 'Transformation': 'CumSum_ECON0404'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.87, ('SIGNAL_TRAINING', {'Signals': ['ECON0404'], 'Transformations': [('ECON0404', 'None', '_', 'T+S+R'), ('ECON0404', 'None', 'Diff_', 'T+S+R'), ('ECON0404', 'None', 'RelDiff_', 'T+S+R'), ('ECON0404', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0404'], 'Transformations': [('ECON0404', [('ECON0404', 'None', 'CumSum_', 'T+S+R'), ('ECON0404', 'None', 'Diff_', 'T+S+R'), ('ECON0404', 'None', 'RelDiff_', 'T+S+R'), ('ECON0404', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0404', 'Transformations': [('ECON0404', 'None', 'CumSum_', 'T+S+R'), ('ECON0404', 'None', 'Diff_', 'T+S+R'), ('ECON0404', 'None', 'RelDiff_', 'T+S+R'), ('ECON0404', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0404', 'Transformations': [('ECON0404', 'None', 'CumSum_', 'T+S+R'), ('ECON0404', 'None', 'Diff_', 'T+S+R'), ('ECON0404', 'None', 'RelDiff_', 'T+S+R'), ('ECON0404', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0404', 'Model': 'Diff_ECON0404_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0404', 'Model': 'Diff_ECON0404_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0404'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.178, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0404'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.207, ('FINALIZE_TRAINING', {'Signals': ['ECON0404'], 'Transformations': [('ECON0404', [('ECON0404', 'None', 'CumSum_', 'T+S+R'), ('ECON0404', 'None', 'Diff_', 'T+S+R'), ('ECON0404', 'None', 'RelDiff_', 'T+S+R'), ('ECON0404', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0404' Length=235  Min=21.2 Max=119.879  Mean=61.15064255319147 StdDev=34.71531681880029
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0404' Min=-0.021828352537013873 Max=0.04433567425693408  Mean=0.00425531914893617 StdDev=0.007236117283455625
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0404_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0404_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0404_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0404_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.4047 MAPE_Forecast=0.0154 MAPE_Test=0.0352
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.3111 SMAPE_Forecast=0.0153 SMAPE_Test=0.0346
INFO:pyaf.std:MODEL_MASE MASE_Fit=27.1516 MASE_Forecast=2.111 MASE_Test=4.9443
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=7.990960919414311 CRPS_Forecast=1.557857606670977 CRPS_Test=1.9139751381213639
INFO:pyaf.std:MODEL_L1 L1_Fit=14.132730869021017 L1_Forecast=1.6822932981020846 L1_Test=4.134825276242726
INFO:pyaf.std:MODEL_L2 L2_Fit=16.995181513860008 L2_Forecast=1.945143684793723 L2_Test=4.184087464678062
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=26.47048200021697 LnQ_Forecast=0.014111017728892337 LnQ_Test=0.009832822242597211
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=12.658878453038685 MedAE_Forecast=1.5688149171267582 MedAE_Test=3.863897790054864
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON0404_ConstantTrend 0.004400898297448521
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON0404_ConstantTrend_residue_bestCycle_byMAPE None -0.001299934566563559 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0404             T+S+R  ...  0.0107       0.0068   0.0051
1   None         _ECON0404             T+S+R  ...  0.0107       0.0068   0.0051
2   None     Diff_ECON0404             T+S+R  ...  0.0109       0.0069   0.0066
3   None     Diff_ECON0404             T+S+R  ...  0.0109       0.0069   0.0066
4   None         _ECON0404             T+S+R  ...  0.0113       0.0070   0.0069
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0404             T+S+R  ...  0.4175       0.8042   0.8197
60  None  RelDiff_ECON0404             T+S+R  ...  0.4175       0.8042   0.8197
61  None  RelDiff_ECON0404             T+S+R  ...  0.4175       0.8042   0.8197
62  None  RelDiff_ECON0404             T+S+R  ...  0.4175       0.8042   0.8197
63  None  RelDiff_ECON0404             T+S+R  ...  0.4175       0.8042   0.8197

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0404             T+S+R  ...  0.0107       0.0068   0.0051
1  None      _ECON0404             T+S+R  ...  0.0107       0.0068   0.0051
2  None  Diff_ECON0404             T+S+R  ...  0.0109       0.0069   0.0066
3  None  Diff_ECON0404             T+S+R  ...  0.0109       0.0069   0.0066
4  None      _ECON0404             T+S+R  ...  0.0113       0.0070   0.0069

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0404'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.14, ('FORECASTING', {'Signals': ['ECON0404'], 'Horizon': 8}))
8 0    120.685
1    121.552
2    121.854
3    122.981
4    124.944
5    126.028
6    125.899
7    125.122
Name: ECON0404, dtype: float64
8 0    123.689193
1    124.123470
2    124.557746
3    124.992022
4    125.426298
5    125.860575
6    126.294851
7    126.729127
Name: ECON0404_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0404 ECON0404 [120.685, 121.552, 121.854, 122.981, 124.944, 126.028, 125.899, 125.122]
FORECAST_DETAIL_PREDICTED ECON0404 ECON0404 [123.68919337016541, 124.12346961325935, 124.55774585635328, 124.99202209944721, 125.42629834254114, 125.86057458563506, 126.294850828729, 126.72912707182293]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0404 ECON0404 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0404 ECON0404 3.2988951206207275
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0404 ECON0404 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0404 ECON0404 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0404 ECON0404 0.0132 0.0131 1.8123
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0404 ECON0404 1.617891574585407 1.9362426107560535 0.0453738900167896
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0404_8'
