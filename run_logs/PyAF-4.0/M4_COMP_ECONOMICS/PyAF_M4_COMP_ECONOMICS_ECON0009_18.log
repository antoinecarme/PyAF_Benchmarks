BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0009 N= 815 H= 18 HEAD= [1860. 1867. 1877. 1887. 1888.] TAIL= [13128. 13146. 13147. 13191. 13254.]
   ECON0009  Date
0    1860.0     0
1    1867.0     1
2    1877.0     2
3    1887.0     3
4    1888.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0009  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0009'], 'Transformations': [('ECON0009', 'None', '_', 'T+S+R'), ('ECON0009', 'None', 'Diff_', 'T+S+R'), ('ECON0009', 'None', 'RelDiff_', 'T+S+R'), ('ECON0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0009', 'Transformation': '_ECON0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.362, ('TRAINING', {'Signal': 'ECON0009', 'Transformation': '_ECON0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0009', 'Transformation': 'Diff_ECON0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.74, ('TRAINING', {'Signal': 'ECON0009', 'Transformation': 'Diff_ECON0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0009', 'Transformation': 'RelDiff_ECON0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.792, ('TRAINING', {'Signal': 'ECON0009', 'Transformation': 'RelDiff_ECON0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0009', 'Transformation': 'CumSum_ECON0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.699, ('TRAINING', {'Signal': 'ECON0009', 'Transformation': 'CumSum_ECON0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.595, ('SIGNAL_TRAINING', {'Signals': ['ECON0009'], 'Transformations': [('ECON0009', 'None', '_', 'T+S+R'), ('ECON0009', 'None', 'Diff_', 'T+S+R'), ('ECON0009', 'None', 'RelDiff_', 'T+S+R'), ('ECON0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0009'], 'Transformations': [('ECON0009', [('ECON0009', 'None', 'CumSum_', 'T+S+R'), ('ECON0009', 'None', 'Diff_', 'T+S+R'), ('ECON0009', 'None', 'RelDiff_', 'T+S+R'), ('ECON0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0009', 'Transformations': [('ECON0009', 'None', 'CumSum_', 'T+S+R'), ('ECON0009', 'None', 'Diff_', 'T+S+R'), ('ECON0009', 'None', 'RelDiff_', 'T+S+R'), ('ECON0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0009', 'Transformations': [('ECON0009', 'None', 'CumSum_', 'T+S+R'), ('ECON0009', 'None', 'Diff_', 'T+S+R'), ('ECON0009', 'None', 'RelDiff_', 'T+S+R'), ('ECON0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0009', 'Model': '_ECON0009_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0009', 'Model': '_ECON0009_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.435, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.466, ('FINALIZE_TRAINING', {'Signals': ['ECON0009'], 'Transformations': [('ECON0009', [('ECON0009', 'None', 'CumSum_', 'T+S+R'), ('ECON0009', 'None', 'Diff_', 'T+S+R'), ('ECON0009', 'None', 'RelDiff_', 'T+S+R'), ('ECON0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0009' Length=815  Min=1860.0 Max=13254.0  Mean=6141.305521472393 StdDev=3413.6148270767503
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0009' Min=0.0 Max=1.0  Mean=0.37575087953944125 StdDev=0.2995975800488633
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0009_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0009_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0009_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0009_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.004 MAPE_Forecast=0.0025 MAPE_Test=0.0025
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.004 SMAPE_Forecast=0.0025 SMAPE_Test=0.0025
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9971 MASE_Test=1.011
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=638.0174113856069 CRPS_Forecast=266.1402326923077 CRPS_Test=44.65972222222223
INFO:pyaf.std:MODEL_L1 L1_Fit=17.621664050235477 L1_Forecast=28.1875 L1_Test=32.05555555555556
INFO:pyaf.std:MODEL_L2 L2_Fit=24.690899180766742 L2_Forecast=33.507648380630954 L2_Test=36.85482027873393
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.01933962039540072 LnQ_Forecast=0.0014744209655967796 LnQ_Test=0.0001439353760947611
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=14.0 MedAE_Forecast=27.0 MedAE_Test=29.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0009_Lag1Trend_residue_bestCycle_byMAPE None 0.0009654203967000285 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0009             T+S+R  ...  0.0031       0.0017   0.0017
1   None   CumSum_ECON0009             T+S+R  ...  0.0092       0.0019   0.0022
2   None   CumSum_ECON0009             T+S+R  ...  0.0092       0.0019   0.0022
3   None         _ECON0009             T+S+R  ...  0.0034       0.0019   0.0020
4   None         _ECON0009             T+S+R  ...  0.0034       0.0019   0.0020
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0009             T+S+R  ...  0.5086       0.8327   0.8570
60  None  RelDiff_ECON0009             T+S+R  ...  0.5086       0.8327   0.8570
61  None  RelDiff_ECON0009             T+S+R  ...  0.5086       0.8327   0.8570
62  None  RelDiff_ECON0009             T+S+R  ...  0.5086       0.8327   0.8570
63  None  RelDiff_ECON0009             T+S+R  ...  0.5086       0.8327   0.8570

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0009             T+S+R  ...  0.0031       0.0017   0.0017
1  None  CumSum_ECON0009             T+S+R  ...  0.0092       0.0019   0.0022
2  None  CumSum_ECON0009             T+S+R  ...  0.0092       0.0019   0.0022
3  None        _ECON0009             T+S+R  ...  0.0034       0.0019   0.0020
4  None        _ECON0009             T+S+R  ...  0.0034       0.0019   0.0020

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0009'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.335, ('FORECASTING', {'Signals': ['ECON0009'], 'Horizon': 18}))
18 0     13303.0
1     13322.0
2     13341.0
3     13354.0
4     13371.0
5     13408.0
6     13421.0
7     13419.0
8     13418.0
9     13468.0
10    13507.0
11    13544.0
12    13551.0
13    13534.0
14    13529.0
15    13528.0
16    13512.0
17    13495.0
Name: ECON0009, dtype: float64
18 0     13254.0
1     13254.0
2     13254.0
3     13254.0
4     13254.0
5     13254.0
6     13254.0
7     13254.0
8     13254.0
9     13254.0
10    13254.0
11    13254.0
12    13254.0
13    13254.0
14    13254.0
15    13254.0
16    13254.0
17    13254.0
Name: ECON0009_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0009 ECON0009 [13303.0, 13322.0, 13341.0, 13354.0, 13371.0, 13408.0, 13421.0, 13419.0, 13418.0, 13468.0, 13507.0, 13544.0, 13551.0, 13534.0, 13529.0, 13528.0, 13512.0, 13495.0]
FORECAST_DETAIL_PREDICTED ECON0009 ECON0009 [13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0, 13254.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0009 ECON0009 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0009 ECON0009 4.489993572235107
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0009 ECON0009 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0009 ECON0009 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0009 ECON0009 0.0142 0.0144 10.5199
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0009 ECON0009 191.83333333333334 208.14911855579777 -5.6389627857680935
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0009_18'
