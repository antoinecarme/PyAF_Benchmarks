BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 17 H= 6 HEAD= [0 1 2 3 4] TAIL= [12 13 14 15 16]
SIGNAL :  ECON1910 N= 17 H= 6 HEAD= [3.561 3.335 3.33  3.133 3.156] TAIL= [2.979 3.072 3.153 3.187 3.14 ]
   ECON1910  Date
0     3.561     0
1     3.335     1
2     3.330     2
3     3.133     3
4     3.156     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 17 entries, 0 to 16
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1910  17 non-null     float64
 1   Date      17 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 408.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1910'], 'Transformations': [('ECON1910', 'None', '_', 'T+S+R'), ('ECON1910', 'None', 'Diff_', 'T+S+R'), ('ECON1910', 'None', 'RelDiff_', 'T+S+R'), ('ECON1910', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1910', 'Transformation': '_ECON1910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.457, ('TRAINING', {'Signal': 'ECON1910', 'Transformation': '_ECON1910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1910', 'Transformation': 'Diff_ECON1910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.8, ('TRAINING', {'Signal': 'ECON1910', 'Transformation': 'Diff_ECON1910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1910', 'Transformation': 'RelDiff_ECON1910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.926, ('TRAINING', {'Signal': 'ECON1910', 'Transformation': 'RelDiff_ECON1910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1910', 'Transformation': 'CumSum_ECON1910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.742, ('TRAINING', {'Signal': 'ECON1910', 'Transformation': 'CumSum_ECON1910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.929, ('SIGNAL_TRAINING', {'Signals': ['ECON1910'], 'Transformations': [('ECON1910', 'None', '_', 'T+S+R'), ('ECON1910', 'None', 'Diff_', 'T+S+R'), ('ECON1910', 'None', 'RelDiff_', 'T+S+R'), ('ECON1910', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1910'], 'Transformations': [('ECON1910', [('ECON1910', 'None', 'CumSum_', 'T+S+R'), ('ECON1910', 'None', 'Diff_', 'T+S+R'), ('ECON1910', 'None', 'RelDiff_', 'T+S+R'), ('ECON1910', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1910', 'Transformations': [('ECON1910', 'None', 'CumSum_', 'T+S+R'), ('ECON1910', 'None', 'Diff_', 'T+S+R'), ('ECON1910', 'None', 'RelDiff_', 'T+S+R'), ('ECON1910', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'ECON1910', 'Transformations': [('ECON1910', 'None', 'CumSum_', 'T+S+R'), ('ECON1910', 'None', 'Diff_', 'T+S+R'), ('ECON1910', 'None', 'RelDiff_', 'T+S+R'), ('ECON1910', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1910', 'Model': '_ECON1910_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.039, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1910', 'Model': '_ECON1910_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.214, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.265, ('FINALIZE_TRAINING', {'Signals': ['ECON1910'], 'Transformations': [('ECON1910', [('ECON1910', 'None', 'CumSum_', 'T+S+R'), ('ECON1910', 'None', 'Diff_', 'T+S+R'), ('ECON1910', 'None', 'RelDiff_', 'T+S+R'), ('ECON1910', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=16 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1910' Length=17  Min=2.979 Max=3.561  Mean=3.2254117647058824 StdDev=0.15251347436076487
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1910' Min=0.0 Max=1.0  Mean=0.4233879118657771 StdDev=0.26205064323155486
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1910_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1910_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1910_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1910_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0311 MAPE_Forecast=0.0311 MAPE_Test=0.0311
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0311 SMAPE_Forecast=0.0311 SMAPE_Test=0.0311
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.1371 MASE_Forecast=1.1371 MASE_Test=1.1371
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.026318849793638233 CRPS_Forecast=0.026318849793638233 CRPS_Test=0.026318849793638233
INFO:pyaf.std:MODEL_L1 L1_Fit=0.10041787218076455 L1_Forecast=0.10041787218076455 L1_Test=0.10041787218076455
INFO:pyaf.std:MODEL_L2 L2_Fit=0.12339753842795528 L2_Forecast=0.12339753842795528 L2_Test=0.12339753842795528
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.02457339354591334 LnQ_Forecast=0.02457339354591334 LnQ_Test=0.02457339354591334
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.09249309000708728 MedAE_Forecast=0.09249309000708728 MedAE_Test=0.09249309000708728
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.5908619316562793, array([-0.33494804]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON1910_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...   FitMAPE ForecastMAPE  TestMAPE
0   None         _ECON1910             T+S+R  ...    0.0228       0.0228    0.0228
1   None         _ECON1910             T+S+R  ...    0.0228       0.0228    0.0228
2   None         _ECON1910             T+S+R  ...    0.0234       0.0234    0.0234
3   None         _ECON1910             T+S+R  ...    0.0234       0.0234    0.0234
4   None         _ECON1910             T+S+R  ...    0.0236       0.0236    0.0236
..   ...               ...               ...  ...       ...          ...       ...
59  None  RelDiff_ECON1910             T+S+R  ...  590.0407     590.0407  590.0407
60  None  RelDiff_ECON1910             T+S+R  ...  687.4607     687.4607  687.4607
61  None  RelDiff_ECON1910             T+S+R  ...  687.4607     687.4607  687.4607
62  None  RelDiff_ECON1910             T+S+R  ...  909.5507     909.5507  909.5507
63  None  RelDiff_ECON1910             T+S+R  ...  909.5507     909.5507  909.5507

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON1910             T+S+R  ...  0.0228       0.0228   0.0228
1  None      _ECON1910             T+S+R  ...  0.0228       0.0228   0.0228
2  None      _ECON1910             T+S+R  ...  0.0234       0.0234   0.0234
3  None      _ECON1910             T+S+R  ...  0.0234       0.0234   0.0234
4  None      _ECON1910             T+S+R  ...  0.0236       0.0236   0.0236

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1910'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.173, ('FORECASTING', {'Signals': ['ECON1910'], 'Horizon': 6}))
6 0    3.118
1    3.047
2    2.953
3    2.942
4    2.919
5    2.916
Name: ECON1910, dtype: float64
6 0    3.115758
1    3.103574
2    3.091391
3    3.079207
4    3.067023
5    3.054839
Name: ECON1910_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1910 ECON1910 [3.118, 3.047, 2.953, 2.942, 2.919, 2.916]
FORECAST_DETAIL_PREDICTED ECON1910 ECON1910 [3.115758150248051, 3.103574415308292, 3.091390680368533, 3.079206945428774, 3.067023210489015, 3.054839475549256]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1910 ECON1910 17 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1910 ECON1910 4.503856658935547
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1910 ECON1910 LinearTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1910 ECON1910 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1910 ECON1910 0.0352 0.0344 2.563
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1910 ECON1910 0.1035460961493031 0.11716845953498828 -1.459891212997387
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1910_6'
