BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 15 H= 6 HEAD= [0 1 2 3 4] TAIL= [10 11 12 13 14]
SIGNAL :  ECON0702 N= 15 H= 6 HEAD= [ 4444.  7500.  9801. 11437. 11945.] TAIL= [12029. 12009. 12454. 12625. 12872.]
   ECON0702  Date
0    4444.0     0
1    7500.0     1
2    9801.0     2
3   11437.0     3
4   11945.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 15 entries, 0 to 14
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0702  15 non-null     float64
 1   Date      15 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 360.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0702'], 'Transformations': [('ECON0702', 'None', '_', 'T+S+R'), ('ECON0702', 'None', 'Diff_', 'T+S+R'), ('ECON0702', 'None', 'RelDiff_', 'T+S+R'), ('ECON0702', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0702', 'Transformation': '_ECON0702'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.982, ('TRAINING', {'Signal': 'ECON0702', 'Transformation': '_ECON0702'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0702', 'Transformation': 'Diff_ECON0702'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.605, ('TRAINING', {'Signal': 'ECON0702', 'Transformation': 'Diff_ECON0702'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0702', 'Transformation': 'RelDiff_ECON0702'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.559, ('TRAINING', {'Signal': 'ECON0702', 'Transformation': 'RelDiff_ECON0702'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0702', 'Transformation': 'CumSum_ECON0702'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.431, ('TRAINING', {'Signal': 'ECON0702', 'Transformation': 'CumSum_ECON0702'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.58, ('SIGNAL_TRAINING', {'Signals': ['ECON0702'], 'Transformations': [('ECON0702', 'None', '_', 'T+S+R'), ('ECON0702', 'None', 'Diff_', 'T+S+R'), ('ECON0702', 'None', 'RelDiff_', 'T+S+R'), ('ECON0702', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0702'], 'Transformations': [('ECON0702', [('ECON0702', 'None', 'CumSum_', 'T+S+R'), ('ECON0702', 'None', 'Diff_', 'T+S+R'), ('ECON0702', 'None', 'RelDiff_', 'T+S+R'), ('ECON0702', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0702', 'Transformations': [('ECON0702', 'None', 'CumSum_', 'T+S+R'), ('ECON0702', 'None', 'Diff_', 'T+S+R'), ('ECON0702', 'None', 'RelDiff_', 'T+S+R'), ('ECON0702', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0702', 'Transformations': [('ECON0702', 'None', 'CumSum_', 'T+S+R'), ('ECON0702', 'None', 'Diff_', 'T+S+R'), ('ECON0702', 'None', 'RelDiff_', 'T+S+R'), ('ECON0702', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0702', 'Model': '_ECON0702_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0702', 'Model': '_ECON0702_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0702'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.12, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0702'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.148, ('FINALIZE_TRAINING', {'Signals': ['ECON0702'], 'Transformations': [('ECON0702', [('ECON0702', 'None', 'CumSum_', 'T+S+R'), ('ECON0702', 'None', 'Diff_', 'T+S+R'), ('ECON0702', 'None', 'RelDiff_', 'T+S+R'), ('ECON0702', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=14 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0702' Length=15  Min=4444.0 Max=12872.0  Mean=11084.6 StdDev=2184.150782340816
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0702' Min=0.0 Max=1.0  Mean=0.787921214997627 StdDev=0.259154103267776
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0702_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0702_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0702_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0702_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0675 MAPE_Forecast=0.0675 MAPE_Test=0.0675
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0773 SMAPE_Forecast=0.0773 SMAPE_Test=0.0773
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9333 MASE_Forecast=0.9333 MASE_Test=0.9333
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=730.5057999999999 CRPS_Forecast=730.5057999999999 CRPS_Test=730.5057999999999
INFO:pyaf.std:MODEL_L1 L1_Fit=648.6666666666666 L1_Forecast=648.6666666666666 L1_Test=648.6666666666666
INFO:pyaf.std:MODEL_L2 L2_Fit=1102.8429927540305 L2_Forecast=1102.8429927540305 L2_Test=1102.8429927540305
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.37587520310792655 LnQ_Forecast=0.37587520310792655 LnQ_Test=0.37587520310792655
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=252.0 MedAE_Forecast=252.0 MedAE_Test=252.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0702_Lag1Trend_residue_bestCycle_byMAPE None 0.02930707166587565 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON0702             T+S+R  ...  0.0650       0.0650   0.0650
1   None     Diff_ECON0702             T+S+R  ...  0.0650       0.0650   0.0650
2   None         _ECON0702             T+S+R  ...  0.0675       0.0675   0.0675
3   None         _ECON0702             T+S+R  ...  0.0675       0.0675   0.0675
4   None   CumSum_ECON0702             T+S+R  ...  0.0675       0.0675   0.0675
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0702             T+S+R  ...  0.5681       0.5681   0.5681
60  None  RelDiff_ECON0702             T+S+R  ...  0.5681       0.5681   0.5681
61  None  RelDiff_ECON0702             T+S+R  ...  0.5681       0.5681   0.5681
62  None   CumSum_ECON0702             T+S+R  ...  1.2592       1.2592   1.2592
63  None   CumSum_ECON0702             T+S+R  ...  1.2592       1.2592   1.2592

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON0702             T+S+R  ...  0.0650       0.0650   0.0650
1  None    Diff_ECON0702             T+S+R  ...  0.0650       0.0650   0.0650
2  None        _ECON0702             T+S+R  ...  0.0675       0.0675   0.0675
3  None        _ECON0702             T+S+R  ...  0.0675       0.0675   0.0675
4  None  CumSum_ECON0702             T+S+R  ...  0.0675       0.0675   0.0675

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0702'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['ECON0702'], 'Horizon': 6}))
6 0    12995.0
1    12881.0
2    12212.0
3    12414.0
4    12647.0
5    12981.0
Name: ECON0702, dtype: float64
6 0    12872.0
1    12872.0
2    12872.0
3    12872.0
4    12872.0
5    12872.0
Name: ECON0702_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0702 ECON0702 [12995.0, 12881.0, 12212.0, 12414.0, 12647.0, 12981.0]
FORECAST_DETAIL_PREDICTED ECON0702 ECON0702 [12872.0, 12872.0, 12872.0, 12872.0, 12872.0, 12872.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0702 ECON0702 15 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0702 ECON0702 2.920273542404175
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0702 ECON0702 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0702 ECON0702 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0702 ECON0702 0.0212 0.0209 0.8505
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0702 ECON0702 264.0 347.1503036630291 -0.38872421797677115
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0702_6'
