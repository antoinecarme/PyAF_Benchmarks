BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 40 H= 18 HEAD= [0 1 2 3 4] TAIL= [35 36 37 38 39]
SIGNAL :  ECON0308 N= 40 H= 18 HEAD= [2.31 2.18 2.07 1.94 1.95] TAIL= [2.47 2.27 2.34 2.45 2.34]
   ECON0308  Date
0      2.31     0
1      2.18     1
2      2.07     2
3      1.94     3
4      1.95     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 40 entries, 0 to 39
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0308  40 non-null     float64
 1   Date      40 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 960.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0308'], 'Transformations': [('ECON0308', 'None', '_', 'T+S+R'), ('ECON0308', 'None', 'Diff_', 'T+S+R'), ('ECON0308', 'None', 'RelDiff_', 'T+S+R'), ('ECON0308', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0308', 'Transformation': '_ECON0308'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.129, ('TRAINING', {'Signal': 'ECON0308', 'Transformation': '_ECON0308'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0308', 'Transformation': 'Diff_ECON0308'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.471, ('TRAINING', {'Signal': 'ECON0308', 'Transformation': 'Diff_ECON0308'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0308', 'Transformation': 'RelDiff_ECON0308'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.564, ('TRAINING', {'Signal': 'ECON0308', 'Transformation': 'RelDiff_ECON0308'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0308', 'Transformation': 'CumSum_ECON0308'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.447, ('TRAINING', {'Signal': 'ECON0308', 'Transformation': 'CumSum_ECON0308'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.613, ('SIGNAL_TRAINING', {'Signals': ['ECON0308'], 'Transformations': [('ECON0308', 'None', '_', 'T+S+R'), ('ECON0308', 'None', 'Diff_', 'T+S+R'), ('ECON0308', 'None', 'RelDiff_', 'T+S+R'), ('ECON0308', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0308'], 'Transformations': [('ECON0308', [('ECON0308', 'None', 'CumSum_', 'T+S+R'), ('ECON0308', 'None', 'Diff_', 'T+S+R'), ('ECON0308', 'None', 'RelDiff_', 'T+S+R'), ('ECON0308', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0308', 'Transformations': [('ECON0308', 'None', 'CumSum_', 'T+S+R'), ('ECON0308', 'None', 'Diff_', 'T+S+R'), ('ECON0308', 'None', 'RelDiff_', 'T+S+R'), ('ECON0308', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0308', 'Transformations': [('ECON0308', 'None', 'CumSum_', 'T+S+R'), ('ECON0308', 'None', 'Diff_', 'T+S+R'), ('ECON0308', 'None', 'RelDiff_', 'T+S+R'), ('ECON0308', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0308', 'Model': '_ECON0308_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0308', 'Model': '_ECON0308_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0308'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.373, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0308'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.4, ('FINALIZE_TRAINING', {'Signals': ['ECON0308'], 'Transformations': [('ECON0308', [('ECON0308', 'None', 'CumSum_', 'T+S+R'), ('ECON0308', 'None', 'Diff_', 'T+S+R'), ('ECON0308', 'None', 'RelDiff_', 'T+S+R'), ('ECON0308', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=39 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0308' Length=40  Min=1.37 Max=2.47  Mean=1.9260000000000002 StdDev=0.3122803227870754
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0308' Min=0.0 Max=1.0  Mean=0.5054545454545452 StdDev=0.28389120253370487
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0308_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0308_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0308_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0308_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0638 MAPE_Forecast=0.0638 MAPE_Test=0.0638
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0641 SMAPE_Forecast=0.0641 SMAPE_Test=0.0641
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.975 MASE_Forecast=0.975 MASE_Test=0.975
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.07924085714285714 CRPS_Forecast=0.07924085714285714 CRPS_Test=0.07924085714285714
INFO:pyaf.std:MODEL_L1 L1_Fit=0.11775000000000002 L1_Forecast=0.11775000000000002 L1_Test=0.11775000000000002
INFO:pyaf.std:MODEL_L2 L2_Fit=0.14839979784352805 L2_Forecast=0.14839979784352805 L2_Test=0.14839979784352805
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2862878770769511 LnQ_Forecast=0.2862878770769511 LnQ_Test=0.2862878770769511
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.11000000000000032 MedAE_Forecast=0.11000000000000032 MedAE_Test=0.11000000000000032
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8545454545454544
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0308_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0308  ...  6.150000e-02  6.150000e-02
1   None         _ECON0308  ...  6.150000e-02  6.150000e-02
2   None         _ECON0308  ...  6.380000e-02  6.380000e-02
3   None         _ECON0308  ...  6.380000e-02  6.380000e-02
4   None     Diff_ECON0308  ...  6.380000e-02  6.380000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0308  ...  1.671597e+07  1.671597e+07
60  None  RelDiff_ECON0308  ...  2.708704e+07  2.708704e+07
61  None  RelDiff_ECON0308  ...  2.708704e+07  2.708704e+07
62  None  RelDiff_ECON0308  ...  2.807682e+07  2.807682e+07
63  None  RelDiff_ECON0308  ...  2.807682e+07  2.807682e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0308             T+S+R  ...  0.0615       0.0615   0.0615
1  None      _ECON0308             T+S+R  ...  0.0615       0.0615   0.0615
2  None      _ECON0308             T+S+R  ...  0.0638       0.0638   0.0638
3  None      _ECON0308             T+S+R  ...  0.0638       0.0638   0.0638
4  None  Diff_ECON0308             T+S+R  ...  0.0638       0.0638   0.0638

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0308'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.27, ('FORECASTING', {'Signals': ['ECON0308'], 'Horizon': 18}))
18 0     2.26
1     2.44
2     2.34
3     2.08
4     2.15
5     2.27
6     2.65
7     2.61
8     2.41
9     2.17
10    2.05
11    1.44
12    1.37
13    0.94
14    0.75
15    0.35
16    0.69
17    0.81
Name: ECON0308, dtype: float64
18 0     2.34
1     2.34
2     2.34
3     2.34
4     2.34
5     2.34
6     2.34
7     2.34
8     2.34
9     2.34
10    2.34
11    2.34
12    2.34
13    2.34
14    2.34
15    2.34
16    2.34
17    2.34
Name: ECON0308_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0308 ECON0308 [2.26, 2.44, 2.34, 2.08, 2.15, 2.27, 2.65, 2.61, 2.41, 2.17, 2.05, 1.44, 1.37, 0.94, 0.75, 0.35, 0.69, 0.81]
FORECAST_DETAIL_PREDICTED ECON0308 ECON0308 [2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34, 2.34]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0308 ECON0308 40 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0308 ECON0308 3.3781280517578125
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0308 ECON0308 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0308 ECON0308 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0308 ECON0308 0.8721 0.4001 2.8895
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0308 ECON0308 0.6577777777777778 0.9331666517830562 -0.6101666670305925
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0308_18'
