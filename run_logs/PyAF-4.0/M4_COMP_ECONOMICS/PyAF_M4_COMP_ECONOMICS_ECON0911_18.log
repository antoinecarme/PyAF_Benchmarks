BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0911 N= 47 H= 18 HEAD= [ 97.9 104.3 101.8 100.6  97. ] TAIL= [ 98.5 101.6 103.4  98.8  98.2]
   ECON0911  Date
0      97.9     0
1     104.3     1
2     101.8     2
3     100.6     3
4      97.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0911  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0911'], 'Transformations': [('ECON0911', 'None', '_', 'T+S+R'), ('ECON0911', 'None', 'Diff_', 'T+S+R'), ('ECON0911', 'None', 'RelDiff_', 'T+S+R'), ('ECON0911', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0911', 'Transformation': '_ECON0911'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.181, ('TRAINING', {'Signal': 'ECON0911', 'Transformation': '_ECON0911'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0911', 'Transformation': 'Diff_ECON0911'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.477, ('TRAINING', {'Signal': 'ECON0911', 'Transformation': 'Diff_ECON0911'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0911', 'Transformation': 'RelDiff_ECON0911'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.567, ('TRAINING', {'Signal': 'ECON0911', 'Transformation': 'RelDiff_ECON0911'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0911', 'Transformation': 'CumSum_ECON0911'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.443, ('TRAINING', {'Signal': 'ECON0911', 'Transformation': 'CumSum_ECON0911'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.67, ('SIGNAL_TRAINING', {'Signals': ['ECON0911'], 'Transformations': [('ECON0911', 'None', '_', 'T+S+R'), ('ECON0911', 'None', 'Diff_', 'T+S+R'), ('ECON0911', 'None', 'RelDiff_', 'T+S+R'), ('ECON0911', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0911'], 'Transformations': [('ECON0911', [('ECON0911', 'None', 'CumSum_', 'T+S+R'), ('ECON0911', 'None', 'Diff_', 'T+S+R'), ('ECON0911', 'None', 'RelDiff_', 'T+S+R'), ('ECON0911', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0911', 'Transformations': [('ECON0911', 'None', 'CumSum_', 'T+S+R'), ('ECON0911', 'None', 'Diff_', 'T+S+R'), ('ECON0911', 'None', 'RelDiff_', 'T+S+R'), ('ECON0911', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0911', 'Transformations': [('ECON0911', 'None', 'CumSum_', 'T+S+R'), ('ECON0911', 'None', 'Diff_', 'T+S+R'), ('ECON0911', 'None', 'RelDiff_', 'T+S+R'), ('ECON0911', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0911', 'Model': '_ECON0911_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0911', 'Model': '_ECON0911_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0911'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.372, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0911'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.4, ('FINALIZE_TRAINING', {'Signals': ['ECON0911'], 'Transformations': [('ECON0911', [('ECON0911', 'None', 'CumSum_', 'T+S+R'), ('ECON0911', 'None', 'Diff_', 'T+S+R'), ('ECON0911', 'None', 'RelDiff_', 'T+S+R'), ('ECON0911', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0911' Length=47  Min=91.8 Max=106.9  Mean=99.8468085106383 StdDev=2.857230549000263
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0911' Min=0.0 Max=1.0  Mean=0.5329012258700858 StdDev=0.1892205661589577
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0911_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0911_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0911_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0911_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0221 MAPE_Forecast=0.0221 MAPE_Test=0.0221
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0221 SMAPE_Forecast=0.0221 SMAPE_Test=0.0221
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6928 MASE_Forecast=0.6928 MASE_Test=0.6928
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.26849775075987864 CRPS_Forecast=0.26849775075987864 CRPS_Test=0.26849775075987864
INFO:pyaf.std:MODEL_L1 L1_Fit=2.2095065640561344 L1_Forecast=2.2095065640561344 L1_Test=2.2095065640561344
INFO:pyaf.std:MODEL_L2 L2_Fit=2.8572305490002625 L2_Forecast=2.8572305490002625 L2_Test=2.8572305490002625
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.038580533568347036 LnQ_Forecast=0.038580533568347036 LnQ_Test=0.038580533568347036
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.9468085106382915 MedAE_Forecast=1.9468085106382915 MedAE_Test=1.9468085106382915
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON0911_ConstantTrend 0.5329012258700858
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0911_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0911  ...  2.010000e-02  2.010000e-02
1   None         _ECON0911  ...  2.010000e-02  2.010000e-02
2   None         _ECON0911  ...  2.020000e-02  2.020000e-02
3   None         _ECON0911  ...  2.020000e-02  2.020000e-02
4   None         _ECON0911  ...  2.020000e-02  2.020000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0911  ...  2.658550e+06  2.658550e+06
60  None  RelDiff_ECON0911  ...  2.662611e+06  2.662611e+06
61  None  RelDiff_ECON0911  ...  2.662611e+06  2.662611e+06
62  None  RelDiff_ECON0911  ...  2.791082e+06  2.791082e+06
63  None  RelDiff_ECON0911  ...  2.791082e+06  2.791082e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0911             T+S+R  ...  0.0201       0.0201   0.0201
1  None      _ECON0911             T+S+R  ...  0.0201       0.0201   0.0201
2  None      _ECON0911             T+S+R  ...  0.0202       0.0202   0.0202
3  None      _ECON0911             T+S+R  ...  0.0202       0.0202   0.0202
4  None      _ECON0911             T+S+R  ...  0.0202       0.0202   0.0202

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0911'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.35, ('FORECASTING', {'Signals': ['ECON0911'], 'Horizon': 18}))
18 0      98.0
1     102.6
2     103.4
3     102.0
4     101.8
5     105.7
6     103.2
7     103.6
8     106.5
9     100.6
10    105.8
11    102.6
12    107.7
13    108.3
14    104.1
15     98.2
16    103.8
17    101.5
Name: ECON0911, dtype: float64
18 0     99.846809
1     99.846809
2     99.846809
3     99.846809
4     99.846809
5     99.846809
6     99.846809
7     99.846809
8     99.846809
9     99.846809
10    99.846809
11    99.846809
12    99.846809
13    99.846809
14    99.846809
15    99.846809
16    99.846809
17    99.846809
Name: ECON0911_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0911 ECON0911 [98.0, 102.6, 103.4, 102.0, 101.8, 105.7, 103.2, 103.6, 106.5, 100.6, 105.8, 102.6, 107.7, 108.3, 104.1, 98.2, 103.8, 101.5]
FORECAST_DETAIL_PREDICTED ECON0911 ECON0911 [99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383, 99.8468085106383]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0911 ECON0911 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0911 ECON0911 3.5386126041412354
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0911 ECON0911 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0911 ECON0911 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0911 ECON0911 0.0367 0.0376 1.1938
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0911 ECON0911 3.841371158392434 4.420919752969973 -1.5648991420191392
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0911_18'
