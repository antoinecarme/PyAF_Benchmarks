BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0006 N= 815 H= 18 HEAD= [11098. 11221. 11383. 11182. 11298.] TAIL= [22566. 22559. 22537. 22467. 22433.]
   ECON0006  Date
0   11098.0     0
1   11221.0     1
2   11383.0     2
3   11182.0     3
4   11298.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0006  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0006'], 'Transformations': [('ECON0006', 'None', '_', 'T+S+R'), ('ECON0006', 'None', 'Diff_', 'T+S+R'), ('ECON0006', 'None', 'RelDiff_', 'T+S+R'), ('ECON0006', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0006', 'Transformation': '_ECON0006'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.302, ('TRAINING', {'Signal': 'ECON0006', 'Transformation': '_ECON0006'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0006', 'Transformation': 'Diff_ECON0006'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.739, ('TRAINING', {'Signal': 'ECON0006', 'Transformation': 'Diff_ECON0006'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0006', 'Transformation': 'RelDiff_ECON0006'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.804, ('TRAINING', {'Signal': 'ECON0006', 'Transformation': 'RelDiff_ECON0006'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0006', 'Transformation': 'CumSum_ECON0006'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.7, ('TRAINING', {'Signal': 'ECON0006', 'Transformation': 'CumSum_ECON0006'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.547, ('SIGNAL_TRAINING', {'Signals': ['ECON0006'], 'Transformations': [('ECON0006', 'None', '_', 'T+S+R'), ('ECON0006', 'None', 'Diff_', 'T+S+R'), ('ECON0006', 'None', 'RelDiff_', 'T+S+R'), ('ECON0006', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0006'], 'Transformations': [('ECON0006', [('ECON0006', 'None', 'CumSum_', 'T+S+R'), ('ECON0006', 'None', 'Diff_', 'T+S+R'), ('ECON0006', 'None', 'RelDiff_', 'T+S+R'), ('ECON0006', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0006', 'Transformations': [('ECON0006', 'None', 'CumSum_', 'T+S+R'), ('ECON0006', 'None', 'Diff_', 'T+S+R'), ('ECON0006', 'None', 'RelDiff_', 'T+S+R'), ('ECON0006', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0006', 'Transformations': [('ECON0006', 'None', 'CumSum_', 'T+S+R'), ('ECON0006', 'None', 'Diff_', 'T+S+R'), ('ECON0006', 'None', 'RelDiff_', 'T+S+R'), ('ECON0006', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0006', 'Model': '_ECON0006_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0006', 'Model': '_ECON0006_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0006'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.556, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0006'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.587, ('FINALIZE_TRAINING', {'Signals': ['ECON0006'], 'Transformations': [('ECON0006', [('ECON0006', 'None', 'CumSum_', 'T+S+R'), ('ECON0006', 'None', 'Diff_', 'T+S+R'), ('ECON0006', 'None', 'RelDiff_', 'T+S+R'), ('ECON0006', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0006' Length=815  Min=11098.0 Max=25163.0  Mean=20981.622085889572 StdDev=2969.2286737979002
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0006' Min=0.0 Max=1.0  Mean=0.7027104220326746 StdDev=0.2111076198932029
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0006_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0006_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0006_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0006_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0059 MAPE_Forecast=0.0021 MAPE_Test=0.0016
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0059 SMAPE_Forecast=0.0021 SMAPE_Test=0.0016
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=1.0027 MASE_Test=0.9564
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=899.7939973560275 CRPS_Forecast=274.70615576923075 CRPS_Test=58.27314814814815
INFO:pyaf.std:MODEL_L1 L1_Fit=110.66562009419152 L1_Forecast=48.9875 L1_Test=35.611111111111114
INFO:pyaf.std:MODEL_L2 L2_Fit=165.88827546636819 L2_Forecast=62.0967994344314 L2_Test=44.560196488695055
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.05921271310849638 LnQ_Forecast=0.0011355495294967997 LnQ_Test=7.10710934124939e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=80.0 MedAE_Forecast=42.5 MedAE_Test=25.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0006_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0006             T+S+R  ...  0.0074       0.0013   0.0012
1   None   CumSum_ECON0006             T+S+R  ...  0.0074       0.0013   0.0012
2   None   CumSum_ECON0006             T+S+R  ...  0.0048       0.0013   0.0011
3   None   CumSum_ECON0006             T+S+R  ...  0.0058       0.0014   0.0014
4   None   CumSum_ECON0006             T+S+R  ...  0.0058       0.0014   0.0014
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0006             T+S+R  ...  0.4408       0.5194   0.5053
60  None  RelDiff_ECON0006             T+S+R  ...  0.4408       0.5194   0.5053
61  None  RelDiff_ECON0006             T+S+R  ...  0.4408       0.5194   0.5053
62  None  RelDiff_ECON0006             T+S+R  ...  0.4408       0.5194   0.5053
63  None  RelDiff_ECON0006             T+S+R  ...  0.4408       0.5194   0.5053

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0006             T+S+R  ...  0.0074       0.0013   0.0012
1  None  CumSum_ECON0006             T+S+R  ...  0.0074       0.0013   0.0012
2  None  CumSum_ECON0006             T+S+R  ...  0.0048       0.0013   0.0011
3  None  CumSum_ECON0006             T+S+R  ...  0.0058       0.0014   0.0014
4  None  CumSum_ECON0006             T+S+R  ...  0.0058       0.0014   0.0014

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0006'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.329, ('FORECASTING', {'Signals': ['ECON0006'], 'Horizon': 18}))
18 0     22455.0
1     22465.0
2     22347.0
3     22392.0
4     22333.0
5     22307.0
6     22289.0
7     22251.0
8     22151.0
9     22099.0
10    22069.0
11    22072.0
12    22043.0
13    21981.0
14    21887.0
15    21800.0
16    21679.0
17    21612.0
Name: ECON0006, dtype: float64
18 0     22433.0
1     22433.0
2     22433.0
3     22433.0
4     22433.0
5     22433.0
6     22433.0
7     22433.0
8     22433.0
9     22433.0
10    22433.0
11    22433.0
12    22433.0
13    22433.0
14    22433.0
15    22433.0
16    22433.0
17    22433.0
Name: ECON0006_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0006 ECON0006 [22455.0, 22465.0, 22347.0, 22392.0, 22333.0, 22307.0, 22289.0, 22251.0, 22151.0, 22099.0, 22069.0, 22072.0, 22043.0, 21981.0, 21887.0, 21800.0, 21679.0, 21612.0]
FORECAST_DETAIL_PREDICTED ECON0006 ECON0006 [22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0, 22433.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0006 ECON0006 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0006 ECON0006 4.55682897567749
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0006 ECON0006 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0006 ECON0006 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0006 ECON0006 0.0144 0.0142 5.5839
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0006 ECON0006 315.0 397.3512300220046 -1.529972599227651
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0006_18'
