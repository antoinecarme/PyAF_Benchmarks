BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1802 N= 37 H= 6 HEAD= [5.1  3.59 3.42 3.98 4.09] TAIL= [9.46 7.24 5.32 4.48 3.27]
   ECON1802  Date
0      5.10     0
1      3.59     1
2      3.42     2
3      3.98     3
4      4.09     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1802  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1802'], 'Transformations': [('ECON1802', 'None', '_', 'T+S+R'), ('ECON1802', 'None', 'Diff_', 'T+S+R'), ('ECON1802', 'None', 'RelDiff_', 'T+S+R'), ('ECON1802', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1802', 'Transformation': '_ECON1802'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.702, ('TRAINING', {'Signal': 'ECON1802', 'Transformation': '_ECON1802'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1802', 'Transformation': 'Diff_ECON1802'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.713, ('TRAINING', {'Signal': 'ECON1802', 'Transformation': 'Diff_ECON1802'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1802', 'Transformation': 'RelDiff_ECON1802'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.599, ('TRAINING', {'Signal': 'ECON1802', 'Transformation': 'RelDiff_ECON1802'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1802', 'Transformation': 'CumSum_ECON1802'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.449, ('TRAINING', {'Signal': 'ECON1802', 'Transformation': 'CumSum_ECON1802'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.465, ('SIGNAL_TRAINING', {'Signals': ['ECON1802'], 'Transformations': [('ECON1802', 'None', '_', 'T+S+R'), ('ECON1802', 'None', 'Diff_', 'T+S+R'), ('ECON1802', 'None', 'RelDiff_', 'T+S+R'), ('ECON1802', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1802'], 'Transformations': [('ECON1802', [('ECON1802', 'None', 'CumSum_', 'T+S+R'), ('ECON1802', 'None', 'Diff_', 'T+S+R'), ('ECON1802', 'None', 'RelDiff_', 'T+S+R'), ('ECON1802', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1802', 'Transformations': [('ECON1802', 'None', 'CumSum_', 'T+S+R'), ('ECON1802', 'None', 'Diff_', 'T+S+R'), ('ECON1802', 'None', 'RelDiff_', 'T+S+R'), ('ECON1802', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1802', 'Transformations': [('ECON1802', 'None', 'CumSum_', 'T+S+R'), ('ECON1802', 'None', 'Diff_', 'T+S+R'), ('ECON1802', 'None', 'RelDiff_', 'T+S+R'), ('ECON1802', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1802', 'Model': '_ECON1802_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1802', 'Model': '_ECON1802_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1802'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.119, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1802'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.146, ('FINALIZE_TRAINING', {'Signals': ['ECON1802'], 'Transformations': [('ECON1802', [('ECON1802', 'None', 'CumSum_', 'T+S+R'), ('ECON1802', 'None', 'Diff_', 'T+S+R'), ('ECON1802', 'None', 'RelDiff_', 'T+S+R'), ('ECON1802', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1802' Length=37  Min=3.27 Max=12.35  Mean=6.196486486486488 StdDev=2.42558682363806
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1802' Min=0.0 Max=1.0  Mean=0.32230027384212406 StdDev=0.2671351127354692
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1802_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1802_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1802_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1802_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2924 MAPE_Forecast=0.1549 MAPE_Test=0.2227
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2844 SMAPE_Forecast=0.1669 SMAPE_Test=0.1951
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9583 MASE_Forecast=0.8798 MASE_Test=0.9299
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.8884027777777779 CRPS_Forecast=0.42714285714285716 CRPS_Test=0.9958333333333336
INFO:pyaf.std:MODEL_L1 L1_Fit=1.9691666666666665 L1_Forecast=0.9414285714285713 L1_Test=1.2033333333333338
INFO:pyaf.std:MODEL_L2 L2_Fit=2.544002751570839 L2_Forecast=1.2623956816873454 L2_Test=1.3799396122053076
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.0014062664160712 LnQ_Forecast=0.3476660435000376 LnQ_Test=0.3033045688722936
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.755 MedAE_Forecast=0.6099999999999994 MedAE_Test=1.0250000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.20154185022026427
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON1802_Lag1Trend_residue_bestCycle_byMAPE None -0.009361233480176208 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ... ForecastMAPE      TestMAPE
0   None         _ECON1802  ...       0.1549  2.227000e-01
1   None         _ECON1802  ...       0.1549  2.227000e-01
2   None   CumSum_ECON1802  ...       0.1549  2.227000e-01
3   None   CumSum_ECON1802  ...       0.1549  2.227000e-01
4   None     Diff_ECON1802  ...       0.1549  2.227000e-01
..   ...               ...  ...          ...           ...
59  None  RelDiff_ECON1802  ...  448639.0993  2.889123e+06
60  None  RelDiff_ECON1802  ...  710076.6664  2.061515e+07
61  None  RelDiff_ECON1802  ...  710076.6664  2.061515e+07
62  None  RelDiff_ECON1802  ...  900489.5313  2.519767e+07
63  None  RelDiff_ECON1802  ...  900489.5313  2.519767e+07

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1802             T+S+R  ...  0.2924       0.1549   0.2227
1  None        _ECON1802             T+S+R  ...  0.2924       0.1549   0.2227
2  None  CumSum_ECON1802             T+S+R  ...  0.2786       0.1549   0.2227
3  None  CumSum_ECON1802             T+S+R  ...  0.2786       0.1549   0.2227
4  None    Diff_ECON1802             T+S+R  ...  0.2924       0.1549   0.2227

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1802'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['ECON1802'], 'Horizon': 6}))
6 0    3.30
1    3.52
2    2.96
3    4.39
4    4.26
5    3.32
Name: ECON1802, dtype: float64
6 0    3.27
1    3.27
2    3.27
3    3.27
4    3.27
5    3.27
Name: ECON1802_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1802 ECON1802 [3.3, 3.52, 2.96, 4.39, 4.26, 3.32]
FORECAST_DETAIL_PREDICTED ECON1802 ECON1802 [3.27, 3.27, 3.27, 3.27, 3.27, 3.27]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1802 ECON1802 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1802 ECON1802 2.800806760787964
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1802 ECON1802 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1802 ECON1802 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1802 ECON1802 0.1146 0.1255 0.6987
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1802 ECON1802 0.4583333333333332 0.6319941982856064 -0.4609686956161201
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1802_6'
