BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 323 H= 18 HEAD= [0 1 2 3 4] TAIL= [318 319 320 321 322]
SIGNAL :  ECON1805 N= 323 H= 18 HEAD= [8.06 8.39 9.37 9.36 8.59] TAIL= [4.01 3.88 3.75 3.79 3.71]
   ECON1805  Date
0      8.06     0
1      8.39     1
2      9.37     2
3      9.36     3
4      8.59     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 323 entries, 0 to 322
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1805  323 non-null    float64
 1   Date      323 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 7.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1805'], 'Transformations': [('ECON1805', 'None', '_', 'T+S+R'), ('ECON1805', 'None', 'Diff_', 'T+S+R'), ('ECON1805', 'None', 'RelDiff_', 'T+S+R'), ('ECON1805', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1805', 'Transformation': '_ECON1805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.311, ('TRAINING', {'Signal': 'ECON1805', 'Transformation': '_ECON1805'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1805', 'Transformation': 'Diff_ECON1805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.678, ('TRAINING', {'Signal': 'ECON1805', 'Transformation': 'Diff_ECON1805'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1805', 'Transformation': 'RelDiff_ECON1805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.706, ('TRAINING', {'Signal': 'ECON1805', 'Transformation': 'RelDiff_ECON1805'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1805', 'Transformation': 'CumSum_ECON1805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.602, ('TRAINING', {'Signal': 'ECON1805', 'Transformation': 'CumSum_ECON1805'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.299, ('SIGNAL_TRAINING', {'Signals': ['ECON1805'], 'Transformations': [('ECON1805', 'None', '_', 'T+S+R'), ('ECON1805', 'None', 'Diff_', 'T+S+R'), ('ECON1805', 'None', 'RelDiff_', 'T+S+R'), ('ECON1805', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1805'], 'Transformations': [('ECON1805', [('ECON1805', 'None', 'CumSum_', 'T+S+R'), ('ECON1805', 'None', 'Diff_', 'T+S+R'), ('ECON1805', 'None', 'RelDiff_', 'T+S+R'), ('ECON1805', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1805', 'Transformations': [('ECON1805', 'None', 'CumSum_', 'T+S+R'), ('ECON1805', 'None', 'Diff_', 'T+S+R'), ('ECON1805', 'None', 'RelDiff_', 'T+S+R'), ('ECON1805', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1805', 'Transformations': [('ECON1805', 'None', 'CumSum_', 'T+S+R'), ('ECON1805', 'None', 'Diff_', 'T+S+R'), ('ECON1805', 'None', 'RelDiff_', 'T+S+R'), ('ECON1805', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1805', 'Model': '_ECON1805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1805', 'Model': '_ECON1805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1805'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.421, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1805'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.455, ('FINALIZE_TRAINING', {'Signals': ['ECON1805'], 'Transformations': [('ECON1805', [('ECON1805', 'None', 'CumSum_', 'T+S+R'), ('ECON1805', 'None', 'Diff_', 'T+S+R'), ('ECON1805', 'None', 'RelDiff_', 'T+S+R'), ('ECON1805', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=243 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1805' Length=323  Min=3.07 Max=10.59  Mean=6.383250773993806 StdDev=1.7949832796614313
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1805' Min=0.0 Max=1.0  Mean=0.4405918582438578 StdDev=0.23869458506136054
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1805_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1805_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0256 MAPE_Forecast=0.0302 MAPE_Test=0.0319
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0256 SMAPE_Forecast=0.03 SMAPE_Test=0.0321
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9959 MASE_Forecast=1.0038 MASE_Test=1.0317
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4100314387656702 CRPS_Forecast=0.15743391100702575 CRPS_Test=0.11391203703703702
INFO:pyaf.std:MODEL_L1 L1_Fit=0.17500000000000004 L1_Forecast=0.13016393442622945 L1_Test=0.1116666666666667
INFO:pyaf.std:MODEL_L2 L2_Fit=0.22846601784833426 L2_Forecast=0.15479229870282601 L2_Test=0.13100042408752394
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.26338128136937544 LnQ_Forecast=0.08030818870965074 LnQ_Test=0.025832877414605885
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1499999999999997 MedAE_Forecast=0.1299999999999999 MedAE_Test=0.1200000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6635638297872342
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON1805_Lag1Trend_residue_bestCycle_byMAPE None -0.003989361702127492 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON1805             T+S+R  ...  0.0239       0.0287   0.0314
1   None         _ECON1805             T+S+R  ...  0.0239       0.0287   0.0314
2   None   CumSum_ECON1805             T+S+R  ...  0.0274       0.0300   0.0334
3   None   CumSum_ECON1805             T+S+R  ...  0.0274       0.0300   0.0334
4   None         _ECON1805             T+S+R  ...  0.0256       0.0302   0.0319
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1805             T+S+R  ...  0.2475       0.8513   1.2973
60  None  RelDiff_ECON1805             T+S+R  ...  0.2443       0.9347   3.5171
61  None  RelDiff_ECON1805             T+S+R  ...  0.2443       0.9347   3.5171
62  None  RelDiff_ECON1805             T+S+R  ...  0.2515       1.3416   4.3857
63  None  RelDiff_ECON1805             T+S+R  ...  0.2515       1.3416   4.3857

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1805             T+S+R  ...  0.0239       0.0287   0.0314
1  None        _ECON1805             T+S+R  ...  0.0239       0.0287   0.0314
2  None  CumSum_ECON1805             T+S+R  ...  0.0274       0.0300   0.0334
3  None  CumSum_ECON1805             T+S+R  ...  0.0274       0.0300   0.0334
4  None        _ECON1805             T+S+R  ...  0.0256       0.0302   0.0319

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1805'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.33, ('FORECASTING', {'Signals': ['ECON1805'], 'Horizon': 18}))
18 0     3.77
1     4.02
2     4.05
3     3.94
4     4.15
5     4.28
6     4.56
7     4.50
8     4.30
9     4.22
10    4.28
11    4.09
12    4.21
13    4.03
14    3.95
15    3.80
16    4.04
17    4.20
Name: ECON1805, dtype: float64
18 0     3.71
1     3.71
2     3.71
3     3.71
4     3.71
5     3.71
6     3.71
7     3.71
8     3.71
9     3.71
10    3.71
11    3.71
12    3.71
13    3.71
14    3.71
15    3.71
16    3.71
17    3.71
Name: ECON1805_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1805 ECON1805 [3.77, 4.02, 4.05, 3.94, 4.15, 4.28, 4.56, 4.5, 4.3, 4.22, 4.28, 4.09, 4.21, 4.03, 3.95, 3.8, 4.04, 4.2]
FORECAST_DETAIL_PREDICTED ECON1805 ECON1805 [3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71, 3.71]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1805 ECON1805 323 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1805 ECON1805 4.17411732673645
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1805 ECON1805 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1805 ECON1805 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1805 ECON1805 0.1001 0.1065 2.8408
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1805 ECON1805 0.4227777777777778 0.4701004620763996 -4.230217455722428
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1805_18'
