BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1212 N= 131 H= 18 HEAD= [72.5 72.6 72.8 73.  73.3] TAIL= [103.5 103.6 103.8 104.2 104.5]
   ECON1212  Date
0      72.5     0
1      72.6     1
2      72.8     2
3      73.0     3
4      73.3     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1212  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1212'], 'Transformations': [('ECON1212', 'None', '_', 'T+S+R'), ('ECON1212', 'None', 'Diff_', 'T+S+R'), ('ECON1212', 'None', 'RelDiff_', 'T+S+R'), ('ECON1212', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1212', 'Transformation': '_ECON1212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.972, ('TRAINING', {'Signal': 'ECON1212', 'Transformation': '_ECON1212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1212', 'Transformation': 'Diff_ECON1212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.537, ('TRAINING', {'Signal': 'ECON1212', 'Transformation': 'Diff_ECON1212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1212', 'Transformation': 'RelDiff_ECON1212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.635, ('TRAINING', {'Signal': 'ECON1212', 'Transformation': 'RelDiff_ECON1212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1212', 'Transformation': 'CumSum_ECON1212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.49, ('TRAINING', {'Signal': 'ECON1212', 'Transformation': 'CumSum_ECON1212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.636, ('SIGNAL_TRAINING', {'Signals': ['ECON1212'], 'Transformations': [('ECON1212', 'None', '_', 'T+S+R'), ('ECON1212', 'None', 'Diff_', 'T+S+R'), ('ECON1212', 'None', 'RelDiff_', 'T+S+R'), ('ECON1212', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1212'], 'Transformations': [('ECON1212', [('ECON1212', 'None', 'CumSum_', 'T+S+R'), ('ECON1212', 'None', 'Diff_', 'T+S+R'), ('ECON1212', 'None', 'RelDiff_', 'T+S+R'), ('ECON1212', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1212', 'Transformations': [('ECON1212', 'None', 'CumSum_', 'T+S+R'), ('ECON1212', 'None', 'Diff_', 'T+S+R'), ('ECON1212', 'None', 'RelDiff_', 'T+S+R'), ('ECON1212', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1212', 'Transformations': [('ECON1212', 'None', 'CumSum_', 'T+S+R'), ('ECON1212', 'None', 'Diff_', 'T+S+R'), ('ECON1212', 'None', 'RelDiff_', 'T+S+R'), ('ECON1212', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1212', 'Model': 'Diff_ECON1212_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1212', 'Model': 'Diff_ECON1212_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.386, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.414, ('FINALIZE_TRAINING', {'Signals': ['ECON1212'], 'Transformations': [('ECON1212', [('ECON1212', 'None', 'CumSum_', 'T+S+R'), ('ECON1212', 'None', 'Diff_', 'T+S+R'), ('ECON1212', 'None', 'RelDiff_', 'T+S+R'), ('ECON1212', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1212' Length=131  Min=72.5 Max=104.5  Mean=88.06183206106871 StdDev=9.266243901002458
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1212' Min=0.0 Max=0.02499999999999991  Mean=0.007633587786259542 StdDev=0.003959636244512677
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1212_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1212_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1212_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1212_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0048 MAPE_Forecast=0.0031 MAPE_Test=0.0027
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0048 SMAPE_Forecast=0.0031 SMAPE_Test=0.0028
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.6069 MASE_Forecast=1.207 MASE_Test=1.043
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.8332450617283942 CRPS_Forecast=0.5838043478260806 CRPS_Test=0.462777777777781
INFO:pyaf.std:MODEL_L1 L1_Fit=0.3900000000000009 L1_Forecast=0.30173913043474854 L1_Test=0.2822222222222916
INFO:pyaf.std:MODEL_L2 L2_Fit=0.46016905106227785 L2_Forecast=0.3310326399248666 L2_Test=0.3258493175960666
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.002854481850959681 LnQ_Forecast=0.0002664262341846515 LnQ_Test=0.00018036473306699458
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.3400000000000105 MedAE_Forecast=0.2599999999999767 MedAE_Test=0.25000000000007105
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON1212_ConstantTrend 0.007499999999999998
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON1212_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON1212             T+S+R  ...  0.0011       0.0009   0.0012
1   None         _ECON1212             T+S+R  ...  0.0012       0.0010   0.0012
2   None         _ECON1212             T+S+R  ...  0.0012       0.0010   0.0012
3   None   CumSum_ECON1212             T+S+R  ...  0.0016       0.0011   0.0012
4   None   CumSum_ECON1212             T+S+R  ...  0.0029       0.0015   0.0016
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1212             T+S+R  ...  0.1218       0.2501   0.2903
60  None  RelDiff_ECON1212             T+S+R  ...  0.1218       0.2501   0.2903
61  None  RelDiff_ECON1212             T+S+R  ...  0.1218       0.2501   0.2903
62  None  RelDiff_ECON1212             T+S+R  ...  0.1218       0.2501   0.2903
63  None  RelDiff_ECON1212             T+S+R  ...  0.1218       0.2501   0.2903

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1212             T+S+R  ...  0.0011       0.0009   0.0012
1  None        _ECON1212             T+S+R  ...  0.0012       0.0010   0.0012
2  None        _ECON1212             T+S+R  ...  0.0012       0.0010   0.0012
3  None  CumSum_ECON1212             T+S+R  ...  0.0016       0.0011   0.0012
4  None  CumSum_ECON1212             T+S+R  ...  0.0029       0.0015   0.0016

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1212'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.276, ('FORECASTING', {'Signals': ['ECON1212'], 'Horizon': 18}))
18 0     104.7
1     104.9
2     105.2
3     105.7
4     106.3
5     106.6
6     106.9
7     107.2
8     107.4
9     107.6
10    107.9
11    108.0
12    108.3
13    108.3
14    108.7
15    109.2
16    110.4
17    110.8
Name: ECON1212, dtype: float64
18 0     104.18
1     104.42
2     104.66
3     104.90
4     105.14
5     105.38
6     105.62
7     105.86
8     106.10
9     106.34
10    106.58
11    106.82
12    107.06
13    107.30
14    107.54
15    107.78
16    108.02
17    108.26
Name: ECON1212_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1212 ECON1212 [104.7, 104.9, 105.2, 105.7, 106.3, 106.6, 106.9, 107.2, 107.4, 107.6, 107.9, 108.0, 108.3, 108.3, 108.7, 109.2, 110.4, 110.8]
FORECAST_DETAIL_PREDICTED ECON1212 ECON1212 [104.17999999999991, 104.4199999999999, 104.65999999999991, 104.8999999999999, 105.1399999999999, 105.37999999999991, 105.61999999999992, 105.85999999999991, 106.09999999999991, 106.33999999999992, 106.57999999999993, 106.81999999999992, 107.05999999999992, 107.29999999999993, 107.53999999999994, 107.77999999999993, 108.01999999999992, 108.25999999999993]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1212 ECON1212 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1212 ECON1212 3.4112560749053955
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1212 ECON1212 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1212 ECON1212 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1212 ECON1212 0.0114 0.0115 3.4279
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1212 ECON1212 1.2300000000000837 1.3360056553440596 0.371571638142968
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1212_18'
