BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1203 N= 131 H= 18 HEAD= [71.9 72.6 72.7 73.2 73.5] TAIL= [103.4 103.8 103.7 103.9 103.4]
   ECON1203  Date
0      71.9     0
1      72.6     1
2      72.7     2
3      73.2     3
4      73.5     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1203  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1203'], 'Transformations': [('ECON1203', 'None', '_', 'T+S+R'), ('ECON1203', 'None', 'Diff_', 'T+S+R'), ('ECON1203', 'None', 'RelDiff_', 'T+S+R'), ('ECON1203', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1203', 'Transformation': '_ECON1203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.23, ('TRAINING', {'Signal': 'ECON1203', 'Transformation': '_ECON1203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1203', 'Transformation': 'Diff_ECON1203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.537, ('TRAINING', {'Signal': 'ECON1203', 'Transformation': 'Diff_ECON1203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1203', 'Transformation': 'RelDiff_ECON1203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.602, ('TRAINING', {'Signal': 'ECON1203', 'Transformation': 'RelDiff_ECON1203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1203', 'Transformation': 'CumSum_ECON1203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.483, ('TRAINING', {'Signal': 'ECON1203', 'Transformation': 'CumSum_ECON1203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.855, ('SIGNAL_TRAINING', {'Signals': ['ECON1203'], 'Transformations': [('ECON1203', 'None', '_', 'T+S+R'), ('ECON1203', 'None', 'Diff_', 'T+S+R'), ('ECON1203', 'None', 'RelDiff_', 'T+S+R'), ('ECON1203', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1203'], 'Transformations': [('ECON1203', [('ECON1203', 'None', 'CumSum_', 'T+S+R'), ('ECON1203', 'None', 'Diff_', 'T+S+R'), ('ECON1203', 'None', 'RelDiff_', 'T+S+R'), ('ECON1203', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1203', 'Transformations': [('ECON1203', 'None', 'CumSum_', 'T+S+R'), ('ECON1203', 'None', 'Diff_', 'T+S+R'), ('ECON1203', 'None', 'RelDiff_', 'T+S+R'), ('ECON1203', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1203', 'Transformations': [('ECON1203', 'None', 'CumSum_', 'T+S+R'), ('ECON1203', 'None', 'Diff_', 'T+S+R'), ('ECON1203', 'None', 'RelDiff_', 'T+S+R'), ('ECON1203', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1203', 'Model': 'Diff_ECON1203_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1203', 'Model': 'Diff_ECON1203_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.378, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.407, ('FINALIZE_TRAINING', {'Signals': ['ECON1203'], 'Transformations': [('ECON1203', [('ECON1203', 'None', 'CumSum_', 'T+S+R'), ('ECON1203', 'None', 'Diff_', 'T+S+R'), ('ECON1203', 'None', 'RelDiff_', 'T+S+R'), ('ECON1203', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1203' Length=131  Min=71.9 Max=103.9  Mean=89.72519083969466 StdDev=9.351967123857822
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1203' Min=-0.02187500000000009 Max=0.08749999999999991  Mean=0.007514312977099237 StdDev=0.016012739748738326
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1203_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1203_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1203_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1203_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0127 MAPE_Forecast=0.0081 MAPE_Test=0.0069
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0127 SMAPE_Forecast=0.008 SMAPE_Test=0.0069
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.7175 MASE_Forecast=1.825 MASE_Test=1.7797
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.080944409111999 CRPS_Forecast=0.5264501808494136 CRPS_Test=0.43048516969094613
INFO:pyaf.std:MODEL_L1 L1_Fit=1.071744866874929 L1_Forecast=0.7880503501480658 L1_Test=0.70140067139019
INFO:pyaf.std:MODEL_L2 L2_Fit=1.2825080447486434 L2_Forecast=0.9633669368224149 L2_Test=0.8099549793452294
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.020864686030391277 LnQ_Forecast=0.002219734051098795 LnQ_Test=0.0011450823558279825
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9767645109847294 MedAE_Forecast=0.5892510576944119 MedAE_Test=0.6722320446816639
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.01037062540505508, array([-0.00386625]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON1203_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1203             T+S+R  ...  0.0044       0.0040   0.0035
1   None     Diff_ECON1203             T+S+R  ...  0.0044       0.0040   0.0035
2   None         _ECON1203             T+S+R  ...  0.0043       0.0041   0.0037
3   None         _ECON1203             T+S+R  ...  0.0043       0.0041   0.0037
4   None   CumSum_ECON1203             T+S+R  ...  0.0047       0.0041   0.0038
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1203             T+S+R  ...  0.1493       0.2646   0.2937
60  None  RelDiff_ECON1203             T+S+R  ...  0.1493       0.2646   0.2937
61  None  RelDiff_ECON1203             T+S+R  ...  0.1493       0.2646   0.2937
62  None  RelDiff_ECON1203             T+S+R  ...  0.1493       0.2646   0.2937
63  None  RelDiff_ECON1203             T+S+R  ...  0.1493       0.2646   0.2937

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON1203             T+S+R  ...  0.0044       0.0040   0.0035
1  None    Diff_ECON1203             T+S+R  ...  0.0044       0.0040   0.0035
2  None        _ECON1203             T+S+R  ...  0.0043       0.0041   0.0037
3  None        _ECON1203             T+S+R  ...  0.0043       0.0041   0.0037
4  None  CumSum_ECON1203             T+S+R  ...  0.0047       0.0041   0.0038

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1203'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.288, ('FORECASTING', {'Signals': ['ECON1203'], 'Horizon': 18}))
18 0     103.0
1     104.5
2     105.1
3     105.6
4     107.0
5     106.8
6     107.1
7     106.9
8     107.0
9     107.1
10    106.8
11    106.4
12    105.7
13    106.9
14    108.1
15    108.2
16    111.5
17    112.0
Name: ECON1203, dtype: float64
18 0     103.686608
1     103.834973
2     103.981948
3     104.127533
4     104.271728
5     104.414532
6     104.555947
7     104.695971
8     104.834606
9     104.971850
10    105.107704
11    105.242168
12    105.375242
13    105.506926
14    105.637219
15    105.766123
16    105.893637
17    106.019760
Name: ECON1203_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1203 ECON1203 [103.0, 104.5, 105.1, 105.6, 107.0, 106.8, 107.1, 106.9, 107.0, 107.1, 106.8, 106.4, 105.7, 106.9, 108.1, 108.2, 111.5, 112.0]
FORECAST_DETAIL_PREDICTED ECON1203 ECON1203 [103.68660773190999, 103.8349728749627, 103.98194790536459, 104.12753282311564, 104.27172762821587, 104.41453232066529, 104.55594690046388, 104.69597136761163, 104.83460572210856, 104.97184996395467, 105.10770409314995, 105.2421681096944, 105.37524201358802, 105.50692580483081, 105.6372194834228, 105.76612304936396, 105.89363650265426, 106.01975984329377]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1203 ECON1203 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1203 ECON1203 3.6495585441589355
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1203 ECON1203 LinearTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1203 ECON1203 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1203 ECON1203 0.0201 0.0204 2.9344
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1203 ECON1203 2.1749300736360646 2.618819849955893 -0.5850024178886255
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1203_18'
