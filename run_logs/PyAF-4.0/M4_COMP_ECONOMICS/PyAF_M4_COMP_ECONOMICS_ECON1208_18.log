BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1208 N= 131 H= 18 HEAD= [78.  78.  78.1 78.8 79.1] TAIL= [105.5 105.8 102.9 101.5 101.1]
   ECON1208  Date
0      78.0     0
1      78.0     1
2      78.1     2
3      78.8     3
4      79.1     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1208  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1208'], 'Transformations': [('ECON1208', 'None', '_', 'T+S+R'), ('ECON1208', 'None', 'Diff_', 'T+S+R'), ('ECON1208', 'None', 'RelDiff_', 'T+S+R'), ('ECON1208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1208', 'Transformation': '_ECON1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.19, ('TRAINING', {'Signal': 'ECON1208', 'Transformation': '_ECON1208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1208', 'Transformation': 'Diff_ECON1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.549, ('TRAINING', {'Signal': 'ECON1208', 'Transformation': 'Diff_ECON1208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1208', 'Transformation': 'RelDiff_ECON1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.617, ('TRAINING', {'Signal': 'ECON1208', 'Transformation': 'RelDiff_ECON1208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1208', 'Transformation': 'CumSum_ECON1208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.515, ('TRAINING', {'Signal': 'ECON1208', 'Transformation': 'CumSum_ECON1208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.874, ('SIGNAL_TRAINING', {'Signals': ['ECON1208'], 'Transformations': [('ECON1208', 'None', '_', 'T+S+R'), ('ECON1208', 'None', 'Diff_', 'T+S+R'), ('ECON1208', 'None', 'RelDiff_', 'T+S+R'), ('ECON1208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1208'], 'Transformations': [('ECON1208', [('ECON1208', 'None', 'CumSum_', 'T+S+R'), ('ECON1208', 'None', 'Diff_', 'T+S+R'), ('ECON1208', 'None', 'RelDiff_', 'T+S+R'), ('ECON1208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1208', 'Transformations': [('ECON1208', 'None', 'CumSum_', 'T+S+R'), ('ECON1208', 'None', 'Diff_', 'T+S+R'), ('ECON1208', 'None', 'RelDiff_', 'T+S+R'), ('ECON1208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON1208', 'Transformations': [('ECON1208', 'None', 'CumSum_', 'T+S+R'), ('ECON1208', 'None', 'Diff_', 'T+S+R'), ('ECON1208', 'None', 'RelDiff_', 'T+S+R'), ('ECON1208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1208', 'Model': 'Diff_ECON1208_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1208', 'Model': 'Diff_ECON1208_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.373, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.402, ('FINALIZE_TRAINING', {'Signals': ['ECON1208'], 'Transformations': [('ECON1208', [('ECON1208', 'None', 'CumSum_', 'T+S+R'), ('ECON1208', 'None', 'Diff_', 'T+S+R'), ('ECON1208', 'None', 'RelDiff_', 'T+S+R'), ('ECON1208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1208' Length=131  Min=78.0 Max=105.8  Mean=90.50152671755721 StdDev=6.726250100704338
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1208' Min=-0.10431654676258961 Max=0.08992805755395694  Mean=0.006343017189301992 StdDev=0.029498452386200802
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1208_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1208_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1208_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1208_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0199 MAPE_Forecast=0.0123 MAPE_Test=0.0402
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0201 SMAPE_Forecast=0.0124 SMAPE_Test=0.0412
INFO:pyaf.std:MODEL_MASE MASE_Fit=3.4113 MASE_Forecast=1.6002 MASE_Test=4.2076
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.3312967078189315 CRPS_Forecast=0.6213647342995162 CRPS_Test=1.848611111111125
INFO:pyaf.std:MODEL_L1 L1_Fit=1.732469135802469 L1_Forecast=1.1928502415459004 L1_Test=4.133333333333363
INFO:pyaf.std:MODEL_L2 L2_Fit=2.0185658845954646 L2_Forecast=1.4867165636507202 L2_Test=4.38402017807981
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.04961470183338135 LnQ_Forecast=0.005460086892451762 LnQ_Test=0.03417208729935525
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.9222222222222172 MedAE_Forecast=1.02222222222224 MedAE_Test=4.097777777777814
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON1208_ConstantTrend 0.005915267785771382
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON1208_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON1208             T+S+R  ...  0.0072       0.0071   0.0112
1   None   CumSum_ECON1208             T+S+R  ...  0.0072       0.0071   0.0112
2   None         _ECON1208             T+S+R  ...  0.0055       0.0074   0.0088
3   None         _ECON1208             T+S+R  ...  0.0055       0.0074   0.0088
4   None   CumSum_ECON1208             T+S+R  ...  0.0059       0.0074   0.0086
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1208             T+S+R  ...  0.0993       0.1858   0.2372
60  None  RelDiff_ECON1208             T+S+R  ...  0.0993       0.1858   0.2372
61  None  RelDiff_ECON1208             T+S+R  ...  0.0993       0.1858   0.2372
62  None  RelDiff_ECON1208             T+S+R  ...  0.0993       0.1858   0.2372
63  None  RelDiff_ECON1208             T+S+R  ...  0.0993       0.1858   0.2372

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON1208             T+S+R  ...  0.0072       0.0071   0.0112
1  None  CumSum_ECON1208             T+S+R  ...  0.0072       0.0071   0.0112
2  None        _ECON1208             T+S+R  ...  0.0055       0.0074   0.0088
3  None        _ECON1208             T+S+R  ...  0.0055       0.0074   0.0088
4  None  CumSum_ECON1208             T+S+R  ...  0.0059       0.0074   0.0086

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1208'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.282, ('FORECASTING', {'Signals': ['ECON1208'], 'Horizon': 18}))
18 0     102.8
1     102.1
2     102.8
3     103.1
4     104.5
5     106.1
6     106.8
7     108.0
8     108.6
9     105.7
10    106.6
11    107.0
12    108.7
13    108.6
14    109.1
15    110.3
16    110.8
17    112.7
Name: ECON1208, dtype: float64
18 0      99.706667
1      99.871111
2     100.035556
3     100.200000
4     100.364444
5     100.528889
6     100.693333
7     100.857778
8     101.022222
9     101.186667
10    101.351111
11    101.515556
12    101.680000
13    101.844444
14    102.008889
15    102.173333
16    102.337778
17    102.502222
Name: ECON1208_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1208 ECON1208 [102.8, 102.1, 102.8, 103.1, 104.5, 106.1, 106.8, 108.0, 108.6, 105.7, 106.6, 107.0, 108.7, 108.6, 109.1, 110.3, 110.8, 112.7]
FORECAST_DETAIL_PREDICTED ECON1208 ECON1208 [99.70666666666662, 99.87111111111108, 100.0355555555555, 100.19999999999996, 100.3644444444444, 100.52888888888884, 100.69333333333329, 100.85777777777773, 101.02222222222217, 101.18666666666661, 101.35111111111107, 101.5155555555555, 101.67999999999995, 101.84444444444439, 102.00888888888883, 102.17333333333328, 102.33777777777772, 102.50222222222216]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1208 ECON1208 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1208 ECON1208 3.6593575477600098
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1208 ECON1208 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1208 ECON1208 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1208 ECON1208 0.0538 0.0554 5.7005
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1208 ECON1208 5.801111111111159 6.1882633502608515 -3.4606570724237447
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1208_18'
