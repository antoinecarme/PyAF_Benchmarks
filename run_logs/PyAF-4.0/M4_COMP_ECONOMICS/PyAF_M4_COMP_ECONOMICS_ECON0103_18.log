BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 1127 H= 18 HEAD= [0 1 2 3 4] TAIL= [1122 1123 1124 1125 1126]
SIGNAL :  ECON0103 N= 1127 H= 18 HEAD= [9.7 9.6 9.6 9.7 9.6] TAIL= [195.  195.5 196.2 197.1 196.8]
   ECON0103  Date
0       9.7     0
1       9.6     1
2       9.6     2
3       9.7     3
4       9.6     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1127 entries, 0 to 1126
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0103  1127 non-null   float64
 1   Date      1127 non-null   int64  
dtypes: float64(1), int64(1)
memory usage: 26.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0103'], 'Transformations': [('ECON0103', 'None', '_', 'T+S+R'), ('ECON0103', 'None', 'Diff_', 'T+S+R'), ('ECON0103', 'None', 'RelDiff_', 'T+S+R'), ('ECON0103', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0103', 'Transformation': '_ECON0103'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.14, ('TRAINING', {'Signal': 'ECON0103', 'Transformation': '_ECON0103'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0103', 'Transformation': 'Diff_ECON0103'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.979, ('TRAINING', {'Signal': 'ECON0103', 'Transformation': 'Diff_ECON0103'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0103', 'Transformation': 'RelDiff_ECON0103'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.867, ('TRAINING', {'Signal': 'ECON0103', 'Transformation': 'RelDiff_ECON0103'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0103', 'Transformation': 'CumSum_ECON0103'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.749, ('TRAINING', {'Signal': 'ECON0103', 'Transformation': 'CumSum_ECON0103'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.736, ('SIGNAL_TRAINING', {'Signals': ['ECON0103'], 'Transformations': [('ECON0103', 'None', '_', 'T+S+R'), ('ECON0103', 'None', 'Diff_', 'T+S+R'), ('ECON0103', 'None', 'RelDiff_', 'T+S+R'), ('ECON0103', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0103'], 'Transformations': [('ECON0103', [('ECON0103', 'None', 'CumSum_', 'T+S+R'), ('ECON0103', 'None', 'Diff_', 'T+S+R'), ('ECON0103', 'None', 'RelDiff_', 'T+S+R'), ('ECON0103', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0103', 'Transformations': [('ECON0103', 'None', 'CumSum_', 'T+S+R'), ('ECON0103', 'None', 'Diff_', 'T+S+R'), ('ECON0103', 'None', 'RelDiff_', 'T+S+R'), ('ECON0103', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON0103', 'Transformations': [('ECON0103', 'None', 'CumSum_', 'T+S+R'), ('ECON0103', 'None', 'Diff_', 'T+S+R'), ('ECON0103', 'None', 'RelDiff_', 'T+S+R'), ('ECON0103', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0103', 'Model': '_ECON0103_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0103', 'Model': '_ECON0103_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0103'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.467, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0103'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.5, ('FINALIZE_TRAINING', {'Signals': ['ECON0103'], 'Transformations': [('ECON0103', [('ECON0103', 'None', 'CumSum_', 'T+S+R'), ('ECON0103', 'None', 'Diff_', 'T+S+R'), ('ECON0103', 'None', 'RelDiff_', 'T+S+R'), ('ECON0103', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=886 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0103' Length=1127  Min=9.4 Max=197.1  Mean=58.768234250221845 StdDev=56.07090455731846
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0103' Min=0.0 Max=1.0  Mean=0.2630166981897811 StdDev=0.2987261830437849
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0103_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0103_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0103_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0103_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0103 MAPE_Forecast=0.003 MAPE_Test=0.0023
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0103 SMAPE_Forecast=0.003 SMAPE_Test=0.0023
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9989 MASE_Forecast=0.9975 MASE_Test=0.9687
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.696269951937341 CRPS_Forecast=5.910889321321321 CRPS_Test=0.7037037037037029
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2544532130777903 L1_Forecast=0.4378378378378376 L1_Test=0.44444444444444287
INFO:pyaf.std:MODEL_L2 L2_Fit=0.383642425586977 L2_Forecast=0.5799192239496 L2_Test=0.53019912401956
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22657829292770681 LnQ_Forecast=0.003633049005586128 LnQ_Test=0.00013445997657244446
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1999999999999993 MedAE_Forecast=0.3499999999999943 MedAE_Test=0.45000000000000284
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.001598295151838034
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0103_Lag1Trend_residue_bestCycle_byMAPE None 0.0005327650506126713 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0103             T+S+R  ...  0.0099       0.0023   0.0018
1   None     Diff_ECON0103             T+S+R  ...  0.0109       0.0023   0.0017
2   None     Diff_ECON0103             T+S+R  ...  0.0109       0.0023   0.0017
3   None         _ECON0103             T+S+R  ...  0.0107       0.0025   0.0020
4   None         _ECON0103             T+S+R  ...  0.0107       0.0025   0.0020
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0103             T+S+R  ...  0.4662       0.7873   0.7997
60  None   CumSum_ECON0103             T+S+R  ...  0.9468       0.8180   0.8606
61  None   CumSum_ECON0103             T+S+R  ...  0.9468       0.8180   0.8606
62  None   CumSum_ECON0103             T+S+R  ...  1.1183       0.9366   0.9515
63  None   CumSum_ECON0103             T+S+R  ...  1.1183       0.9366   0.9515

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0103             T+S+R  ...  0.0099       0.0023   0.0018
1  None    Diff_ECON0103             T+S+R  ...  0.0109       0.0023   0.0017
2  None    Diff_ECON0103             T+S+R  ...  0.0109       0.0023   0.0017
3  None        _ECON0103             T+S+R  ...  0.0107       0.0025   0.0020
4  None        _ECON0103             T+S+R  ...  0.0107       0.0025   0.0020

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0103'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.356, ('FORECASTING', {'Signals': ['ECON0103'], 'Horizon': 18}))
18 0     197.000
1     198.812
2     200.000
3     200.403
4     200.820
5     201.791
6     202.441
7     203.121
8     203.885
9     204.941
10    205.796
11    206.277
12    206.704
13    208.618
14    209.166
15    209.385
16    211.102
17    212.054
Name: ECON0103, dtype: float64
18 0     196.8
1     196.8
2     196.8
3     196.8
4     196.8
5     196.8
6     196.8
7     196.8
8     196.8
9     196.8
10    196.8
11    196.8
12    196.8
13    196.8
14    196.8
15    196.8
16    196.8
17    196.8
Name: ECON0103_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0103 ECON0103 [197.0, 198.812, 200.0, 200.403, 200.82, 201.791, 202.441, 203.121, 203.885, 204.941, 205.796, 206.277, 206.704, 208.618, 209.166, 209.385, 211.102, 212.054]
FORECAST_DETAIL_PREDICTED ECON0103 ECON0103 [196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8, 196.8]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0103 ECON0103 1127 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0103 ECON0103 4.699645519256592
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0103 ECON0103 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0103 ECON0103 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0103 ECON0103 0.0376 0.0385 8.7779
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0103 ECON0103 7.773111111111098 8.862082298572185 -3.3353814392053245
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0103_18'
