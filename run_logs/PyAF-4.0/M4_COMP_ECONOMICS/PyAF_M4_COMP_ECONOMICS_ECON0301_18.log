BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0301 N= 47 H= 18 HEAD= [1.65 1.24 1.09 1.36 1.18] TAIL= [2.46 2.27 2.38 2.51 2.41]
   ECON0301  Date
0      1.65     0
1      1.24     1
2      1.09     2
3      1.36     3
4      1.18     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0301  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0301'], 'Transformations': [('ECON0301', 'None', '_', 'T+S+R'), ('ECON0301', 'None', 'Diff_', 'T+S+R'), ('ECON0301', 'None', 'RelDiff_', 'T+S+R'), ('ECON0301', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0301', 'Transformation': '_ECON0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.935, ('TRAINING', {'Signal': 'ECON0301', 'Transformation': '_ECON0301'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0301', 'Transformation': 'Diff_ECON0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.439, ('TRAINING', {'Signal': 'ECON0301', 'Transformation': 'Diff_ECON0301'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0301', 'Transformation': 'RelDiff_ECON0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.521, ('TRAINING', {'Signal': 'ECON0301', 'Transformation': 'RelDiff_ECON0301'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0301', 'Transformation': 'CumSum_ECON0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.426, ('TRAINING', {'Signal': 'ECON0301', 'Transformation': 'CumSum_ECON0301'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.324, ('SIGNAL_TRAINING', {'Signals': ['ECON0301'], 'Transformations': [('ECON0301', 'None', '_', 'T+S+R'), ('ECON0301', 'None', 'Diff_', 'T+S+R'), ('ECON0301', 'None', 'RelDiff_', 'T+S+R'), ('ECON0301', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0301'], 'Transformations': [('ECON0301', [('ECON0301', 'None', 'CumSum_', 'T+S+R'), ('ECON0301', 'None', 'Diff_', 'T+S+R'), ('ECON0301', 'None', 'RelDiff_', 'T+S+R'), ('ECON0301', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0301', 'Transformations': [('ECON0301', 'None', 'CumSum_', 'T+S+R'), ('ECON0301', 'None', 'Diff_', 'T+S+R'), ('ECON0301', 'None', 'RelDiff_', 'T+S+R'), ('ECON0301', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0301', 'Transformations': [('ECON0301', 'None', 'CumSum_', 'T+S+R'), ('ECON0301', 'None', 'Diff_', 'T+S+R'), ('ECON0301', 'None', 'RelDiff_', 'T+S+R'), ('ECON0301', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0301', 'Model': '_ECON0301_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0301', 'Model': '_ECON0301_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0301'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.37, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0301'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.397, ('FINALIZE_TRAINING', {'Signals': ['ECON0301'], 'Transformations': [('ECON0301', [('ECON0301', 'None', 'CumSum_', 'T+S+R'), ('ECON0301', 'None', 'Diff_', 'T+S+R'), ('ECON0301', 'None', 'RelDiff_', 'T+S+R'), ('ECON0301', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0301' Length=47  Min=0.52 Max=2.51  Mean=1.5048936170212768 StdDev=0.5126687468549362
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0301' Min=0.0 Max=1.0  Mean=0.49492141558858116 StdDev=0.2576224858567519
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0301_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0301_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0301_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0301_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1286 MAPE_Forecast=0.1286 MAPE_Test=0.1286
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1284 SMAPE_Forecast=0.1284 SMAPE_Test=0.1284
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9787 MASE_Forecast=0.9787 MASE_Test=0.9787
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.12187168389057752 CRPS_Forecast=0.12187168389057752 CRPS_Test=0.12187168389057752
INFO:pyaf.std:MODEL_L1 L1_Fit=0.16127659574468078 L1_Forecast=0.16127659574468078 L1_Test=0.16127659574468078
INFO:pyaf.std:MODEL_L2 L2_Fit=0.19802213501890845 L2_Forecast=0.19802213501890845 L2_Test=0.19802213501890845
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.567453697595965 LnQ_Forecast=1.567453697595965 LnQ_Test=1.567453697595965
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1399999999999999 MedAE_Forecast=0.1399999999999999 MedAE_Test=0.1399999999999999
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5678391959798995
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0301_Lag1Trend_residue_bestCycle_byMAPE None 0.010050251256281423 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0301  ...  1.219000e-01  1.219000e-01
1   None         _ECON0301  ...  1.219000e-01  1.219000e-01
2   None     Diff_ECON0301  ...  1.259000e-01  1.259000e-01
3   None     Diff_ECON0301  ...  1.259000e-01  1.259000e-01
4   None   CumSum_ECON0301  ...  1.266000e-01  1.266000e-01
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0301  ...  6.433380e+06  6.433380e+06
60  None  RelDiff_ECON0301  ...  1.054098e+07  1.054098e+07
61  None  RelDiff_ECON0301  ...  1.054098e+07  1.054098e+07
62  None  RelDiff_ECON0301  ...  1.700143e+07  1.700143e+07
63  None  RelDiff_ECON0301  ...  1.700143e+07  1.700143e+07

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0301             T+S+R  ...  0.1219       0.1219   0.1219
1  None        _ECON0301             T+S+R  ...  0.1219       0.1219   0.1219
2  None    Diff_ECON0301             T+S+R  ...  0.1259       0.1259   0.1259
3  None    Diff_ECON0301             T+S+R  ...  0.1259       0.1259   0.1259
4  None  CumSum_ECON0301             T+S+R  ...  0.1266       0.1266   0.1266

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0301'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.273, ('FORECASTING', {'Signals': ['ECON0301'], 'Horizon': 18}))
18 0     2.28
1     2.47
2     2.34
3     2.04
4     2.12
5     2.29
6     2.65
7     2.60
8     2.39
9     2.14
10    2.01
11    1.35
12    1.27
13    0.86
14    0.65
15    0.23
16    0.62
17    0.79
Name: ECON0301, dtype: float64
18 0     2.41
1     2.41
2     2.41
3     2.41
4     2.41
5     2.41
6     2.41
7     2.41
8     2.41
9     2.41
10    2.41
11    2.41
12    2.41
13    2.41
14    2.41
15    2.41
16    2.41
17    2.41
Name: ECON0301_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0301 ECON0301 [2.28, 2.47, 2.34, 2.04, 2.12, 2.29, 2.65, 2.6, 2.39, 2.14, 2.01, 1.35, 1.27, 0.86, 0.65, 0.23, 0.62, 0.79]
FORECAST_DETAIL_PREDICTED ECON0301 ECON0301 [2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41, 2.41]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0301 ECON0301 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0301 ECON0301 3.079720973968506
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0301 ECON0301 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0301 ECON0301 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0301 ECON0301 1.1993 0.4478 2.9747
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0301 ECON0301 0.7366666666666668 1.0298867251628536 -0.7819157761830109
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0301_18'
