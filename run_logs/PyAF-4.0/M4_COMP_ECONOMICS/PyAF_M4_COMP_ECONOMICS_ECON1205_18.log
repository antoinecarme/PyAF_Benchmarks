BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1205 N= 131 H= 18 HEAD= [78.3 78.3 78.4 79.7 79.7] TAIL= [110.5 110.9 111.5 112.7 113.7]
   ECON1205  Date
0      78.3     0
1      78.3     1
2      78.4     2
3      79.7     3
4      79.7     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1205  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1205'], 'Transformations': [('ECON1205', 'None', '_', 'T+S+R'), ('ECON1205', 'None', 'Diff_', 'T+S+R'), ('ECON1205', 'None', 'RelDiff_', 'T+S+R'), ('ECON1205', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1205', 'Transformation': '_ECON1205'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.166, ('TRAINING', {'Signal': 'ECON1205', 'Transformation': '_ECON1205'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1205', 'Transformation': 'Diff_ECON1205'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.524, ('TRAINING', {'Signal': 'ECON1205', 'Transformation': 'Diff_ECON1205'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1205', 'Transformation': 'RelDiff_ECON1205'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.617, ('TRAINING', {'Signal': 'ECON1205', 'Transformation': 'RelDiff_ECON1205'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1205', 'Transformation': 'CumSum_ECON1205'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.523, ('TRAINING', {'Signal': 'ECON1205', 'Transformation': 'CumSum_ECON1205'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.833, ('SIGNAL_TRAINING', {'Signals': ['ECON1205'], 'Transformations': [('ECON1205', 'None', '_', 'T+S+R'), ('ECON1205', 'None', 'Diff_', 'T+S+R'), ('ECON1205', 'None', 'RelDiff_', 'T+S+R'), ('ECON1205', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1205'], 'Transformations': [('ECON1205', [('ECON1205', 'None', 'CumSum_', 'T+S+R'), ('ECON1205', 'None', 'Diff_', 'T+S+R'), ('ECON1205', 'None', 'RelDiff_', 'T+S+R'), ('ECON1205', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1205', 'Transformations': [('ECON1205', 'None', 'CumSum_', 'T+S+R'), ('ECON1205', 'None', 'Diff_', 'T+S+R'), ('ECON1205', 'None', 'RelDiff_', 'T+S+R'), ('ECON1205', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1205', 'Transformations': [('ECON1205', 'None', 'CumSum_', 'T+S+R'), ('ECON1205', 'None', 'Diff_', 'T+S+R'), ('ECON1205', 'None', 'RelDiff_', 'T+S+R'), ('ECON1205', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1205', 'Model': '_ECON1205_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1205', 'Model': '_ECON1205_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1205'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.402, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1205'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.429, ('FINALIZE_TRAINING', {'Signals': ['ECON1205'], 'Transformations': [('ECON1205', [('ECON1205', 'None', 'CumSum_', 'T+S+R'), ('ECON1205', 'None', 'Diff_', 'T+S+R'), ('ECON1205', 'None', 'RelDiff_', 'T+S+R'), ('ECON1205', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1205' Length=131  Min=78.3 Max=113.7  Mean=88.99618320610686 StdDev=8.449801520593718
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1205' Min=0.0 Max=1.0  Mean=0.30215206796912064 StdDev=0.23869495820886205
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1205_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1205_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1205_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1205_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0023 MAPE_Forecast=0.0042 MAPE_Test=0.0072
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0023 SMAPE_Forecast=0.0042 SMAPE_Test=0.0072
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9889 MASE_Forecast=0.9888 MASE_Test=0.9582
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.9985764197530865 CRPS_Forecast=0.8936594202898549 CRPS_Test=1.5745370370370368
INFO:pyaf.std:MODEL_L1 L1_Fit=0.19000000000000072 L1_Forecast=0.40000000000000013 L1_Test=0.7722222222222226
INFO:pyaf.std:MODEL_L2 L2_Fit=0.34880749227427277 L2_Forecast=0.5845845793679317 L2_Test=0.987420882906575
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.0015648261892028555 LnQ_Forecast=0.0008499987636461224 LnQ_Test=0.0015389853667589722
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.10000000000000853 MedAE_Forecast=0.20000000000000284 MedAE_Test=0.5999999999999943
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON1205_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON1205             T+S+R  ...  0.0024       0.0026   0.0035
1   None         _ECON1205             T+S+R  ...  0.0023       0.0029   0.0061
2   None         _ECON1205             T+S+R  ...  0.0022       0.0030   0.0061
3   None     Diff_ECON1205             T+S+R  ...  0.0021       0.0031   0.0061
4   None     Diff_ECON1205             T+S+R  ...  0.0021       0.0031   0.0061
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1205             T+S+R  ...  0.0694       0.1688   0.2587
60  None  RelDiff_ECON1205             T+S+R  ...  0.0694       0.1688   0.2587
61  None  RelDiff_ECON1205             T+S+R  ...  0.0694       0.1688   0.2587
62  None  RelDiff_ECON1205             T+S+R  ...  0.0694       0.1688   0.2587
63  None  RelDiff_ECON1205             T+S+R  ...  0.0694       0.1688   0.2587

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON1205             T+S+R  ...  0.0024       0.0026   0.0035
1  None        _ECON1205             T+S+R  ...  0.0023       0.0029   0.0061
2  None        _ECON1205             T+S+R  ...  0.0022       0.0030   0.0061
3  None    Diff_ECON1205             T+S+R  ...  0.0021       0.0031   0.0061
4  None    Diff_ECON1205             T+S+R  ...  0.0021       0.0031   0.0061

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1205'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.273, ('FORECASTING', {'Signals': ['ECON1205'], 'Horizon': 18}))
18 0     114.5
1     114.9
2     115.1
3     115.0
4     115.7
5     115.0
6     114.5
7     114.3
8     114.0
9     114.0
10    114.3
11    114.6
12    114.7
13    115.4
14    119.1
15    119.5
16    122.0
17    122.3
Name: ECON1205, dtype: float64
18 0     113.7
1     113.7
2     113.7
3     113.7
4     113.7
5     113.7
6     113.7
7     113.7
8     113.7
9     113.7
10    113.7
11    113.7
12    113.7
13    113.7
14    113.7
15    113.7
16    113.7
17    113.7
Name: ECON1205_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1205 ECON1205 [114.5, 114.9, 115.1, 115.0, 115.7, 115.0, 114.5, 114.3, 114.0, 114.0, 114.3, 114.6, 114.7, 115.4, 119.1, 119.5, 122.0, 122.3]
FORECAST_DETAIL_PREDICTED ECON1205 ECON1205 [113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7, 113.7]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1205 ECON1205 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1205 ECON1205 3.6288623809814453
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1205 ECON1205 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1205 ECON1205 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1205 ECON1205 0.0198 0.0202 3.5044
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1205 ECON1205 2.3499999999999965 3.5222309849172433 -0.8022678665091767
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1205_18'
