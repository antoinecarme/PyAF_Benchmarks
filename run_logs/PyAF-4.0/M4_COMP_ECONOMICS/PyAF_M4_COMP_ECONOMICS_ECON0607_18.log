BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 262 H= 18 HEAD= [0 1 2 3 4] TAIL= [257 258 259 260 261]
SIGNAL :  ECON0607 N= 262 H= 18 HEAD= [ 909.2  555.9  762.   745.2 1045.9] TAIL= [3268.6 3078.7 3002.3 2918.1 3316.3]
   ECON0607  Date
0     909.2     0
1     555.9     1
2     762.0     2
3     745.2     3
4    1045.9     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 262 entries, 0 to 261
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0607  262 non-null    float64
 1   Date      262 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0607'], 'Transformations': [('ECON0607', 'None', '_', 'T+S+R'), ('ECON0607', 'None', 'Diff_', 'T+S+R'), ('ECON0607', 'None', 'RelDiff_', 'T+S+R'), ('ECON0607', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0607', 'Transformation': '_ECON0607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.128, ('TRAINING', {'Signal': 'ECON0607', 'Transformation': '_ECON0607'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0607', 'Transformation': 'Diff_ECON0607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.602, ('TRAINING', {'Signal': 'ECON0607', 'Transformation': 'Diff_ECON0607'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0607', 'Transformation': 'RelDiff_ECON0607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.673, ('TRAINING', {'Signal': 'ECON0607', 'Transformation': 'RelDiff_ECON0607'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0607', 'Transformation': 'CumSum_ECON0607'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.569, ('TRAINING', {'Signal': 'ECON0607', 'Transformation': 'CumSum_ECON0607'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.975, ('SIGNAL_TRAINING', {'Signals': ['ECON0607'], 'Transformations': [('ECON0607', 'None', '_', 'T+S+R'), ('ECON0607', 'None', 'Diff_', 'T+S+R'), ('ECON0607', 'None', 'RelDiff_', 'T+S+R'), ('ECON0607', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0607'], 'Transformations': [('ECON0607', [('ECON0607', 'None', 'CumSum_', 'T+S+R'), ('ECON0607', 'None', 'Diff_', 'T+S+R'), ('ECON0607', 'None', 'RelDiff_', 'T+S+R'), ('ECON0607', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0607', 'Transformations': [('ECON0607', 'None', 'CumSum_', 'T+S+R'), ('ECON0607', 'None', 'Diff_', 'T+S+R'), ('ECON0607', 'None', 'RelDiff_', 'T+S+R'), ('ECON0607', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0607', 'Transformations': [('ECON0607', 'None', 'CumSum_', 'T+S+R'), ('ECON0607', 'None', 'Diff_', 'T+S+R'), ('ECON0607', 'None', 'RelDiff_', 'T+S+R'), ('ECON0607', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0607', 'Model': '_ECON0607_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0607', 'Model': '_ECON0607_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0607'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.422, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0607'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.451, ('FINALIZE_TRAINING', {'Signals': ['ECON0607'], 'Transformations': [('ECON0607', [('ECON0607', 'None', 'CumSum_', 'T+S+R'), ('ECON0607', 'None', 'Diff_', 'T+S+R'), ('ECON0607', 'None', 'RelDiff_', 'T+S+R'), ('ECON0607', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=194 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0607' Length=262  Min=555.9 Max=3316.3  Mean=1714.436259541984 StdDev=717.1079943197586
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0607' Min=0.0 Max=1.0  Mean=0.41969868842993213 StdDev=0.25978408720466545
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0607_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0607_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0607_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0607_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1173 MAPE_Forecast=0.0803 MAPE_Test=0.1117
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1162 SMAPE_Forecast=0.0836 SMAPE_Test=0.1199
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.0804 MASE_Forecast=0.8385 MASE_Test=1.7777
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=127.0817282192724 CRPS_Forecast=49.987902612175176 CRPS_Test=153.62479135633654
INFO:pyaf.std:MODEL_L1 L1_Fit=163.306131948057 L1_Forecast=206.64084137513345 L1_Test=343.04263826822853
INFO:pyaf.std:MODEL_L2 L2_Fit=217.99453385519976 L2_Forecast=260.79710975726084 L2_Test=386.00872185568636
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=4.090260130070956 LnQ_Forecast=0.5295165986949641 LnQ_Test=0.3221363154923848
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=143.32991368606918 MedAE_Forecast=151.38195647308294 MedAE_Test=355.25071789520825
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.027093925055570678, array([0.55857433]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0607_LinearTrend_residue_bestCycle_byMAPE None -0.00628580093167852 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0607  ...  7.060000e-02  5.690000e-02
1   None         _ECON0607  ...  7.060000e-02  5.690000e-02
2   None   CumSum_ECON0607  ...  7.500000e-02  5.300000e-02
3   None   CumSum_ECON0607  ...  7.500000e-02  5.300000e-02
4   None         _ECON0607  ...  7.530000e-02  5.820000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0607  ...  4.361555e+05  1.022526e+04
60  None  RelDiff_ECON0607  ...  8.505057e+06  1.190660e+07
61  None  RelDiff_ECON0607  ...  8.505057e+06  1.190660e+07
62  None  RelDiff_ECON0607  ...  1.062673e+07  1.190660e+07
63  None  RelDiff_ECON0607  ...  1.062673e+07  1.190660e+07

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0607             T+S+R  ...  0.0880       0.0706   0.0569
1  None        _ECON0607             T+S+R  ...  0.0794       0.0706   0.0569
2  None  CumSum_ECON0607             T+S+R  ...  0.0860       0.0750   0.0530
3  None  CumSum_ECON0607             T+S+R  ...  0.0860       0.0750   0.0530
4  None        _ECON0607             T+S+R  ...  0.0770       0.0753   0.0582

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0607'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.312, ('FORECASTING', {'Signals': ['ECON0607'], 'Horizon': 18}))
18 0     3147.0
1     3166.3
2     2960.5
3     2976.4
4     3710.7
5     3495.3
6     3207.7
7     3541.2
8     3966.2
9     3436.9
10    3400.2
11    4148.3
12    3636.0
13    3073.1
14    3342.5
15    3669.5
16    3715.5
17    3871.2
Name: ECON0607, dtype: float64
18 0     2713.034437
1     2720.982316
2     2728.930195
3     2736.878075
4     2744.825954
5     2752.773833
6     2760.721712
7     2768.669592
8     2776.617471
9     2784.565350
10    2792.513230
11    2800.461109
12    2808.408988
13    2816.356867
14    2824.304747
15    2832.252626
16    2840.200505
17    2848.148384
Name: ECON0607_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0607 ECON0607 [3147.0, 3166.3, 2960.5, 2976.4, 3710.7, 3495.3, 3207.7, 3541.2, 3966.2, 3436.9, 3400.2, 4148.3, 3636.0, 3073.1, 3342.5, 3669.5, 3715.5, 3871.2]
FORECAST_DETAIL_PREDICTED ECON0607 ECON0607 [2713.0344369270265, 2720.9823161873455, 2728.930195447665, 2736.878074707984, 2744.825953968303, 2752.773833228622, 2760.7217124889416, 2768.6695917492607, 2776.6174710095797, 2784.5653502698988, 2792.5132295302183, 2800.4611087905373, 2808.4089880508564, 2816.356867311176, 2824.304746571495, 2832.252625831814, 2840.200505092133, 2848.1483843524525]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0607 ECON0607 262 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0607 ECON0607 3.835700511932373
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0607 ECON0607 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0607 ECON0607 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0607 ECON0607 0.1919 0.2158 2.1615
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0607 ECON0607 689.6585893602606 757.8550533708226 -4.151360176227205
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0607_18'
