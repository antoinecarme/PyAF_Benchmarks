BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0003 N= 815 H= 18 HEAD= [4380. 4454. 4518. 4550. 4544.] TAIL= [8999. 8989. 8976. 8952. 8925.]
   ECON0003  Date
0    4380.0     0
1    4454.0     1
2    4518.0     2
3    4550.0     3
4    4544.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0003  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0003'], 'Transformations': [('ECON0003', 'None', '_', 'T+S+R'), ('ECON0003', 'None', 'Diff_', 'T+S+R'), ('ECON0003', 'None', 'RelDiff_', 'T+S+R'), ('ECON0003', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0003', 'Transformation': '_ECON0003'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.205, ('TRAINING', {'Signal': 'ECON0003', 'Transformation': '_ECON0003'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0003', 'Transformation': 'Diff_ECON0003'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.762, ('TRAINING', {'Signal': 'ECON0003', 'Transformation': 'Diff_ECON0003'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0003', 'Transformation': 'RelDiff_ECON0003'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.82, ('TRAINING', {'Signal': 'ECON0003', 'Transformation': 'RelDiff_ECON0003'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0003', 'Transformation': 'CumSum_ECON0003'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.694, ('TRAINING', {'Signal': 'ECON0003', 'Transformation': 'CumSum_ECON0003'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.483, ('SIGNAL_TRAINING', {'Signals': ['ECON0003'], 'Transformations': [('ECON0003', 'None', '_', 'T+S+R'), ('ECON0003', 'None', 'Diff_', 'T+S+R'), ('ECON0003', 'None', 'RelDiff_', 'T+S+R'), ('ECON0003', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0003'], 'Transformations': [('ECON0003', [('ECON0003', 'None', 'CumSum_', 'T+S+R'), ('ECON0003', 'None', 'Diff_', 'T+S+R'), ('ECON0003', 'None', 'RelDiff_', 'T+S+R'), ('ECON0003', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0003', 'Transformations': [('ECON0003', 'None', 'CumSum_', 'T+S+R'), ('ECON0003', 'None', 'Diff_', 'T+S+R'), ('ECON0003', 'None', 'RelDiff_', 'T+S+R'), ('ECON0003', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0003', 'Transformations': [('ECON0003', 'None', 'CumSum_', 'T+S+R'), ('ECON0003', 'None', 'Diff_', 'T+S+R'), ('ECON0003', 'None', 'RelDiff_', 'T+S+R'), ('ECON0003', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0003', 'Model': '_ECON0003_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0003', 'Model': '_ECON0003_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0003'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.441, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0003'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.473, ('FINALIZE_TRAINING', {'Signals': ['ECON0003'], 'Transformations': [('ECON0003', [('ECON0003', 'None', 'CumSum_', 'T+S+R'), ('ECON0003', 'None', 'Diff_', 'T+S+R'), ('ECON0003', 'None', 'RelDiff_', 'T+S+R'), ('ECON0003', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0003' Length=815  Min=4380.0 Max=12320.0  Mean=9797.571779141104 StdDev=1468.1736701866548
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0003' Min=0.0 Max=1.0  Mean=0.6823138260883017 StdDev=0.1849085226935334
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0003_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0003_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0003_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0003_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0085 MAPE_Forecast=0.0027 MAPE_Test=0.0015
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0085 SMAPE_Forecast=0.0026 SMAPE_Test=0.0015
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9937 MASE_Test=1.0158
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=460.3874353466083 CRPS_Forecast=183.36200576923082 CRPS_Test=9.715277777777777
INFO:pyaf.std:MODEL_L1 L1_Fit=75.39717425431711 L1_Forecast=26.74375 L1_Test=13.444444444444445
INFO:pyaf.std:MODEL_L2 L2_Fit=128.4189327630226 L2_Forecast=39.19574275351852 L2_Test=15.954797258365758
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1614215437212753 LnQ_Forecast=0.0023697426071521846 LnQ_Test=5.6994842847941685e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=50.0 MedAE_Forecast=17.0 MedAE_Test=13.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0003_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0003             T+S+R  ...  0.0067       0.0016   0.0011
1   None   CumSum_ECON0003             T+S+R  ...  0.0109       0.0017   0.0010
2   None   CumSum_ECON0003             T+S+R  ...  0.0109       0.0017   0.0010
3   None   CumSum_ECON0003             T+S+R  ...  0.0080       0.0018   0.0011
4   None   CumSum_ECON0003             T+S+R  ...  0.0080       0.0018   0.0011
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0003             T+S+R  ...  0.5335       0.5646   0.5119
60  None  RelDiff_ECON0003             T+S+R  ...  0.5335       0.5646   0.5119
61  None  RelDiff_ECON0003             T+S+R  ...  0.5335       0.5646   0.5119
62  None  RelDiff_ECON0003             T+S+R  ...  0.5335       0.5646   0.5119
63  None  RelDiff_ECON0003             T+S+R  ...  0.5335       0.5646   0.5119

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0003             T+S+R  ...  0.0067       0.0016   0.0011
1  None  CumSum_ECON0003             T+S+R  ...  0.0109       0.0017   0.0010
2  None  CumSum_ECON0003             T+S+R  ...  0.0109       0.0017   0.0010
3  None  CumSum_ECON0003             T+S+R  ...  0.0080       0.0018   0.0011
4  None  CumSum_ECON0003             T+S+R  ...  0.0080       0.0018   0.0011

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0003'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.325, ('FORECASTING', {'Signals': ['ECON0003'], 'Horizon': 18}))
18 0     8925.0
1     8901.0
2     8890.0
3     8871.0
4     8855.0
5     8837.0
6     8813.0
7     8806.0
8     8775.0
9     8753.0
10    8733.0
11    8740.0
12    8728.0
13    8710.0
14    8673.0
15    8637.0
16    8587.0
17    8567.0
Name: ECON0003, dtype: float64
18 0     8925.0
1     8925.0
2     8925.0
3     8925.0
4     8925.0
5     8925.0
6     8925.0
7     8925.0
8     8925.0
9     8925.0
10    8925.0
11    8925.0
12    8925.0
13    8925.0
14    8925.0
15    8925.0
16    8925.0
17    8925.0
Name: ECON0003_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0003 ECON0003 [8925.0, 8901.0, 8890.0, 8871.0, 8855.0, 8837.0, 8813.0, 8806.0, 8775.0, 8753.0, 8733.0, 8740.0, 8728.0, 8710.0, 8673.0, 8637.0, 8587.0, 8567.0]
FORECAST_DETAIL_PREDICTED ECON0003 ECON0003 [8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0, 8925.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0003 ECON0003 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0003 ECON0003 4.374440908432007
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0003 ECON0003 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0003 ECON0003 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0003 ECON0003 0.0182 0.018 7.2331
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0003 ECON0003 158.27777777777777 188.72805243995336 -2.370892715423681
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0003_18'
