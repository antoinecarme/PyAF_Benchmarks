BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 15 H= 6 HEAD= [0 1 2 3 4] TAIL= [10 11 12 13 14]
SIGNAL :  ECON0703 N= 15 H= 6 HEAD= [2780. 3206. 3491. 3880. 3152.] TAIL= [2371. 2406. 2497. 2521. 2600.]
   ECON0703  Date
0    2780.0     0
1    3206.0     1
2    3491.0     2
3    3880.0     3
4    3152.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 15 entries, 0 to 14
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0703  15 non-null     float64
 1   Date      15 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 360.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0703'], 'Transformations': [('ECON0703', 'None', '_', 'T+S+R'), ('ECON0703', 'None', 'Diff_', 'T+S+R'), ('ECON0703', 'None', 'RelDiff_', 'T+S+R'), ('ECON0703', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0703', 'Transformation': '_ECON0703'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.07, ('TRAINING', {'Signal': 'ECON0703', 'Transformation': '_ECON0703'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0703', 'Transformation': 'Diff_ECON0703'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.483, ('TRAINING', {'Signal': 'ECON0703', 'Transformation': 'Diff_ECON0703'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0703', 'Transformation': 'RelDiff_ECON0703'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.565, ('TRAINING', {'Signal': 'ECON0703', 'Transformation': 'RelDiff_ECON0703'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0703', 'Transformation': 'CumSum_ECON0703'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.435, ('TRAINING', {'Signal': 'ECON0703', 'Transformation': 'CumSum_ECON0703'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.555, ('SIGNAL_TRAINING', {'Signals': ['ECON0703'], 'Transformations': [('ECON0703', 'None', '_', 'T+S+R'), ('ECON0703', 'None', 'Diff_', 'T+S+R'), ('ECON0703', 'None', 'RelDiff_', 'T+S+R'), ('ECON0703', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0703'], 'Transformations': [('ECON0703', [('ECON0703', 'None', 'CumSum_', 'T+S+R'), ('ECON0703', 'None', 'Diff_', 'T+S+R'), ('ECON0703', 'None', 'RelDiff_', 'T+S+R'), ('ECON0703', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0703', 'Transformations': [('ECON0703', 'None', 'CumSum_', 'T+S+R'), ('ECON0703', 'None', 'Diff_', 'T+S+R'), ('ECON0703', 'None', 'RelDiff_', 'T+S+R'), ('ECON0703', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0703', 'Transformations': [('ECON0703', 'None', 'CumSum_', 'T+S+R'), ('ECON0703', 'None', 'Diff_', 'T+S+R'), ('ECON0703', 'None', 'RelDiff_', 'T+S+R'), ('ECON0703', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0703', 'Model': '_ECON0703_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0703', 'Model': '_ECON0703_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0703'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.12, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0703'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.149, ('FINALIZE_TRAINING', {'Signals': ['ECON0703'], 'Transformations': [('ECON0703', [('ECON0703', 'None', 'CumSum_', 'T+S+R'), ('ECON0703', 'None', 'Diff_', 'T+S+R'), ('ECON0703', 'None', 'RelDiff_', 'T+S+R'), ('ECON0703', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=14 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0703' Length=15  Min=2312.0 Max=3880.0  Mean=2738.5333333333333 StdDev=458.8898003757426
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0703' Min=0.0 Max=1.0  Mean=0.27202380952380956 StdDev=0.2926593114641216
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0703_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0703_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0703_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0703_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0725 MAPE_Forecast=0.0725 MAPE_Test=0.0725
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0706 SMAPE_Forecast=0.0706 SMAPE_Test=0.0706
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9333 MASE_Forecast=0.9333 MASE_Test=0.9333
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=127.73264444444446 CRPS_Forecast=127.73264444444446 CRPS_Test=127.73264444444446
INFO:pyaf.std:MODEL_L1 L1_Fit=211.6 L1_Forecast=211.6 L1_Test=211.6
INFO:pyaf.std:MODEL_L2 L2_Fit=298.1540988594097 L2_Forecast=298.1540988594097 L2_Test=298.1540988594097
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.13373564000735638 LnQ_Forecast=0.13373564000735638 LnQ_Test=0.13373564000735638
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=109.0 MedAE_Forecast=109.0 MedAE_Test=109.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.29846938775510207
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0703_Lag1Trend_residue_bestCycle_byMAPE None 0.02232142857142857 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0703             T+S+R  ...   0.0692       0.0692   0.0692
1   None         _ECON0703             T+S+R  ...   0.0692       0.0692   0.0692
2   None         _ECON0703             T+S+R  ...   0.0725       0.0725   0.0725
3   None         _ECON0703             T+S+R  ...   0.0725       0.0725   0.0725
4   None     Diff_ECON0703             T+S+R  ...   0.0725       0.0725   0.0725
..   ...               ...               ...  ...      ...          ...      ...
59  None  RelDiff_ECON0703             T+S+R  ...  33.2618      33.2618  33.2618
60  None  RelDiff_ECON0703             T+S+R  ...  34.1120      34.1120  34.1120
61  None  RelDiff_ECON0703             T+S+R  ...  34.1120      34.1120  34.1120
62  None  RelDiff_ECON0703             T+S+R  ...  44.0082      44.0082  44.0082
63  None  RelDiff_ECON0703             T+S+R  ...  44.0082      44.0082  44.0082

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0703             T+S+R  ...  0.0692       0.0692   0.0692
1  None      _ECON0703             T+S+R  ...  0.0692       0.0692   0.0692
2  None      _ECON0703             T+S+R  ...  0.0725       0.0725   0.0725
3  None      _ECON0703             T+S+R  ...  0.0725       0.0725   0.0725
4  None  Diff_ECON0703             T+S+R  ...  0.0725       0.0725   0.0725

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0703'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.098, ('FORECASTING', {'Signals': ['ECON0703'], 'Horizon': 6}))
6 0    2640.0
1    2529.0
2    2399.0
3    2450.0
4    2459.0
5    2412.0
Name: ECON0703, dtype: float64
6 0    2600.0
1    2600.0
2    2600.0
3    2600.0
4    2600.0
5    2600.0
Name: ECON0703_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0703 ECON0703 [2640.0, 2529.0, 2399.0, 2450.0, 2459.0, 2412.0]
FORECAST_DETAIL_PREDICTED ECON0703 ECON0703 [2600.0, 2600.0, 2600.0, 2600.0, 2600.0, 2600.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0703 ECON0703 15 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0703 ECON0703 2.901578664779663
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0703 ECON0703 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0703 ECON0703 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0703 ECON0703 0.0539 0.0523 1.8942
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0703 ECON0703 131.83333333333334 144.2029819386548 -2.0796401199600054
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0703_6'
