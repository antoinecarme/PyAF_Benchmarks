BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 36 H= 6 HEAD= [0 1 2 3 4] TAIL= [31 32 33 34 35]
SIGNAL :  ECON1601 N= 36 H= 6 HEAD= [ 5786.18  9890.96 22716.54 11395.   13088.61] TAIL= [2985.  2781.1 3411.4 3374.   909.3]
   ECON1601  Date
0   5786.18     0
1   9890.96     1
2  22716.54     2
3  11395.00     3
4  13088.61     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 36 entries, 0 to 35
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1601  36 non-null     float64
 1   Date      36 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 864.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1601'], 'Transformations': [('ECON1601', 'None', '_', 'T+S+R'), ('ECON1601', 'None', 'Diff_', 'T+S+R'), ('ECON1601', 'None', 'RelDiff_', 'T+S+R'), ('ECON1601', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1601', 'Transformation': '_ECON1601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.066, ('TRAINING', {'Signal': 'ECON1601', 'Transformation': '_ECON1601'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1601', 'Transformation': 'Diff_ECON1601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.457, ('TRAINING', {'Signal': 'ECON1601', 'Transformation': 'Diff_ECON1601'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1601', 'Transformation': 'RelDiff_ECON1601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.555, ('TRAINING', {'Signal': 'ECON1601', 'Transformation': 'RelDiff_ECON1601'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1601', 'Transformation': 'CumSum_ECON1601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.419, ('TRAINING', {'Signal': 'ECON1601', 'Transformation': 'CumSum_ECON1601'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.499, ('SIGNAL_TRAINING', {'Signals': ['ECON1601'], 'Transformations': [('ECON1601', 'None', '_', 'T+S+R'), ('ECON1601', 'None', 'Diff_', 'T+S+R'), ('ECON1601', 'None', 'RelDiff_', 'T+S+R'), ('ECON1601', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1601'], 'Transformations': [('ECON1601', [('ECON1601', 'None', 'CumSum_', 'T+S+R'), ('ECON1601', 'None', 'Diff_', 'T+S+R'), ('ECON1601', 'None', 'RelDiff_', 'T+S+R'), ('ECON1601', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1601', 'Transformations': [('ECON1601', 'None', 'CumSum_', 'T+S+R'), ('ECON1601', 'None', 'Diff_', 'T+S+R'), ('ECON1601', 'None', 'RelDiff_', 'T+S+R'), ('ECON1601', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON1601', 'Transformations': [('ECON1601', 'None', 'CumSum_', 'T+S+R'), ('ECON1601', 'None', 'Diff_', 'T+S+R'), ('ECON1601', 'None', 'RelDiff_', 'T+S+R'), ('ECON1601', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1601', 'Model': 'CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1601', 'Model': 'CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1601'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.121, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1601'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.148, ('FINALIZE_TRAINING', {'Signals': ['ECON1601'], 'Transformations': [('ECON1601', [('ECON1601', 'None', 'CumSum_', 'T+S+R'), ('ECON1601', 'None', 'Diff_', 'T+S+R'), ('ECON1601', 'None', 'RelDiff_', 'T+S+R'), ('ECON1601', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1601' Length=36  Min=909.3 Max=37824.57  Mean=12600.370000000003 StdDev=8702.737929342824
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_ECON1601' Min=0.13211009969587112 Max=11.401203892047926  Mean=7.019191297922093 StdDev=3.9191768838848433
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_ECON1601_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.5378 MAPE_Forecast=0.3528 MAPE_Test=0.5848
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.5108 SMAPE_Forecast=0.2689 SMAPE_Test=0.3688
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9855 MASE_Forecast=0.7934 MASE_Test=0.927
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2602.62641128761 CRPS_Forecast=1229.3022425650242 CRPS_Test=175.39583482817292
INFO:pyaf.std:MODEL_L1 L1_Fit=7968.576051137502 L1_Forecast=1608.214964256306 L1_Test=1025.7839099921696
INFO:pyaf.std:MODEL_L2 L2_Fit=9830.495299870865 L2_Forecast=2436.634225161593 L2_Test=1265.2555298190496
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=13.436905498651964 LnQ_Forecast=1.0237395483561633 LnQ_Test=1.8681124371551607
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=6128.987283563345 MedAE_Forecast=985.5814280694542 MedAE_Test=716.9714238160202
INFO:pyaf.std:MODEL_COMPLEXITY 9.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.13211009969587112
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE None 0.3987142718988652 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag7 0.1670912993734541
INFO:pyaf.std:AR_MODEL_COEFF 2 CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag3 0.08669856091698107
INFO:pyaf.std:AR_MODEL_COEFF 3 CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 0.06688307438391555
INFO:pyaf.std:AR_MODEL_COEFF 4 CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag1 0.06170922070214875
INFO:pyaf.std:AR_MODEL_COEFF 5 CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag4 0.024923882228803297
INFO:pyaf.std:AR_MODEL_COEFF 6 CumSum_ECON1601_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag5 -0.006549309511847776
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0   None   CumSum_ECON1601             T+S+R  ...   0.5378       0.3528     0.5848
1   None   CumSum_ECON1601             T+S+R  ...   0.5378       0.3528     0.5848
2   None   CumSum_ECON1601             T+S+R  ...   0.5470       0.4442     0.6108
3   None   CumSum_ECON1601             T+S+R  ...   0.5470       0.4442     0.6108
4   None   CumSum_ECON1601             T+S+R  ...   0.4113       0.4958     0.6025
..   ...               ...               ...  ...      ...          ...        ...
59  None  RelDiff_ECON1601             T+S+R  ...  27.6621     298.7973   163.1312
60  None  RelDiff_ECON1601             T+S+R  ...  24.8818     494.4584  1349.6618
61  None  RelDiff_ECON1601             T+S+R  ...  24.8818     494.4584  1349.6618
62  None  RelDiff_ECON1601             T+S+R  ...  19.5139     937.3656  9191.9214
63  None  RelDiff_ECON1601             T+S+R  ...  19.5139     937.3656  9191.9214

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON1601             T+S+R  ...  0.5378       0.3528   0.5848
1  None  CumSum_ECON1601             T+S+R  ...  0.5378       0.3528   0.5848
2  None  CumSum_ECON1601             T+S+R  ...  0.5470       0.4442   0.6108
3  None  CumSum_ECON1601             T+S+R  ...  0.5470       0.4442   0.6108
4  None  CumSum_ECON1601             T+S+R  ...  0.4113       0.4958   0.6025

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1601'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.103, ('FORECASTING', {'Signals': ['ECON1601'], 'Horizon': 6}))
6 0    1930.0
1    1185.6
2     580.4
3     909.1
4     884.1
5    1026.0
Name: ECON1601, dtype: float64
6 0    1058.297586
1    1058.915651
2     459.587586
3     382.422932
4     500.386647
5     283.648861
Name: ECON1601_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1601 ECON1601 [1930.0, 1185.6, 580.4, 909.1, 884.1, 1026.0]
FORECAST_DETAIL_PREDICTED ECON1601 ECON1601 [1058.2975855523568, 1058.9156514669821, 459.5875860793483, 382.42293195519744, 500.38664715043564, 283.648860567174]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1601 ECON1601 36 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1601 ECON1601 2.8419148921966553
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1601 ECON1601 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1601 ECON1601 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1601 ECON1601 0.4173 0.572 1.2519
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1601 ECON1601 461.99012287141755 542.558683193342 -0.6764544114877964
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1601_6'
