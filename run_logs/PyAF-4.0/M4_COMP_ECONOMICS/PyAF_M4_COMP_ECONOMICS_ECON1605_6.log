BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1605 N= 37 H= 6 HEAD= [ 7.6173  8.3277  9.3991 10.9946 11.919 ] TAIL= [471.887  481.8896 514.3827 553.2987 581.2563]
   ECON1605  Date
0    7.6173     0
1    8.3277     1
2    9.3991     2
3   10.9946     3
4   11.9190     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1605  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1605'], 'Transformations': [('ECON1605', 'None', '_', 'T+S+R'), ('ECON1605', 'None', 'Diff_', 'T+S+R'), ('ECON1605', 'None', 'RelDiff_', 'T+S+R'), ('ECON1605', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1605', 'Transformation': '_ECON1605'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.076, ('TRAINING', {'Signal': 'ECON1605', 'Transformation': '_ECON1605'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1605', 'Transformation': 'Diff_ECON1605'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.553, ('TRAINING', {'Signal': 'ECON1605', 'Transformation': 'Diff_ECON1605'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1605', 'Transformation': 'RelDiff_ECON1605'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.595, ('TRAINING', {'Signal': 'ECON1605', 'Transformation': 'RelDiff_ECON1605'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1605', 'Transformation': 'CumSum_ECON1605'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.431, ('TRAINING', {'Signal': 'ECON1605', 'Transformation': 'CumSum_ECON1605'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.657, ('SIGNAL_TRAINING', {'Signals': ['ECON1605'], 'Transformations': [('ECON1605', 'None', '_', 'T+S+R'), ('ECON1605', 'None', 'Diff_', 'T+S+R'), ('ECON1605', 'None', 'RelDiff_', 'T+S+R'), ('ECON1605', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1605'], 'Transformations': [('ECON1605', [('ECON1605', 'None', 'CumSum_', 'T+S+R'), ('ECON1605', 'None', 'Diff_', 'T+S+R'), ('ECON1605', 'None', 'RelDiff_', 'T+S+R'), ('ECON1605', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1605', 'Transformations': [('ECON1605', 'None', 'CumSum_', 'T+S+R'), ('ECON1605', 'None', 'Diff_', 'T+S+R'), ('ECON1605', 'None', 'RelDiff_', 'T+S+R'), ('ECON1605', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1605', 'Transformations': [('ECON1605', 'None', 'CumSum_', 'T+S+R'), ('ECON1605', 'None', 'Diff_', 'T+S+R'), ('ECON1605', 'None', 'RelDiff_', 'T+S+R'), ('ECON1605', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1605', 'Model': 'Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1605', 'Model': 'Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1605'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.132, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1605'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.161, ('FINALIZE_TRAINING', {'Signals': ['ECON1605'], 'Transformations': [('ECON1605', [('ECON1605', 'None', 'CumSum_', 'T+S+R'), ('ECON1605', 'None', 'Diff_', 'T+S+R'), ('ECON1605', 'None', 'RelDiff_', 'T+S+R'), ('ECON1605', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1605' Length=37  Min=7.6173 Max=581.2563  Mean=173.909627027027 StdDev=184.876842073524
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1605' Min=0.0 Max=0.06881679941566032  Mean=0.02702702702702703 StdDev=0.023298680065218597
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1605_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2554 MAPE_Forecast=0.0067 MAPE_Test=0.0178
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2157 SMAPE_Forecast=0.0067 SMAPE_Test=0.0175
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7287 MASE_Forecast=0.0691 MASE_Test=0.317
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=16.74330073517054 CRPS_Forecast=25.220674792930765 CRPS_Test=21.963750554192575
INFO:pyaf.std:MODEL_L1 L1_Fit=5.966078201139497 L1_Forecast=2.046694063521991 L1_Test=8.857903318846468
INFO:pyaf.std:MODEL_L2 L2_Fit=6.972457856963755 L2_Forecast=2.663618158950011 L2_Test=12.18785369561445
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.6133624565292148 LnQ_Forecast=0.0005135522283282002 LnQ_Test=0.003518143748954223
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=6.5694466875847315 MedAE_Forecast=1.801007985443448 MedAE_Test=5.090734435046784
INFO:pyaf.std:MODEL_COMPLEXITY 9.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE None 0.0007364387707251411 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 0.00013097551081709416
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag3 0.00012782335990675988
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag2 -7.354135833048611e-05
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag5 -3.421671199708546e-05
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag7 3.1127790440406835e-05
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_ECON1605_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag8 -2.4660915252410564e-05
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1605             T+S+R  ...  0.2554       0.0067   0.0178
1   None     Diff_ECON1605             T+S+R  ...  0.2554       0.0067   0.0178
2   None     Diff_ECON1605             T+S+R  ...  0.2141       0.0448   0.2413
3   None     Diff_ECON1605             T+S+R  ...  0.2141       0.0448   0.2413
4   None     Diff_ECON1605             T+S+R  ...  0.2140       0.0448   0.2412
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1605             T+S+R  ...  0.6317       0.9744   0.9849
60  None  RelDiff_ECON1605             T+S+R  ...  0.6317       0.9744   0.9849
61  None  RelDiff_ECON1605             T+S+R  ...  0.6317       0.9744   0.9849
62  None  RelDiff_ECON1605             T+S+R  ...  0.6317       0.9744   0.9849
63  None  RelDiff_ECON1605             T+S+R  ...  0.6317       0.9744   0.9849

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  Diff_ECON1605             T+S+R  ...  0.2554       0.0067   0.0178
1  None  Diff_ECON1605             T+S+R  ...  0.2554       0.0067   0.0178
2  None  Diff_ECON1605             T+S+R  ...  0.2141       0.0448   0.2413
3  None  Diff_ECON1605             T+S+R  ...  0.2141       0.0448   0.2413
4  None  Diff_ECON1605             T+S+R  ...  0.2140       0.0448   0.2412

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1605'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.111, ('FORECASTING', {'Signals': ['ECON1605'], 'Horizon': 6}))
6 0    613.2260
1    645.9765
2    674.5593
3    713.6986
4    737.6797
5    760.3227
Name: ECON1605, dtype: float64
6 0    621.704138
1    663.217707
2    705.789324
3    749.429047
4    794.135519
5    839.904101
Name: ECON1605_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1605 ECON1605 [613.226, 645.9765, 674.5593, 713.6986, 737.6797, 760.3227]
FORECAST_DETAIL_PREDICTED ECON1605 ECON1605 [621.7041381952965, 663.2177069901595, 705.7893239434844, 749.4290473529486, 794.1355186848864, 839.9041005502037]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1605 ECON1605 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1605 ECON1605 3.030918836593628
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1605 ECON1605 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1605 ECON1605 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1605 ECON1605 0.053 0.0512 1.2957
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1605 ECON1605 38.11950595282983 44.98439745474947 0.2337774026611349
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1605_6'
