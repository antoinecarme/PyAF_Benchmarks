BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 479 H= 18 HEAD= [0 1 2 3 4] TAIL= [474 475 476 477 478]
SIGNAL :  ECON0105 N= 479 H= 18 HEAD= [34.8 34.7 34.7 34.6 34.6] TAIL= [195.6 196.  196.7 197.5 197.2]
   ECON0105  Date
0      34.8     0
1      34.7     1
2      34.7     2
3      34.6     3
4      34.6     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 479 entries, 0 to 478
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0105  479 non-null    float64
 1   Date      479 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 11.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0105'], 'Transformations': [('ECON0105', 'None', '_', 'T+S+R'), ('ECON0105', 'None', 'Diff_', 'T+S+R'), ('ECON0105', 'None', 'RelDiff_', 'T+S+R'), ('ECON0105', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0105', 'Transformation': '_ECON0105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.015, ('TRAINING', {'Signal': 'ECON0105', 'Transformation': '_ECON0105'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0105', 'Transformation': 'Diff_ECON0105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.959, ('TRAINING', {'Signal': 'ECON0105', 'Transformation': 'Diff_ECON0105'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0105', 'Transformation': 'RelDiff_ECON0105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.768, ('TRAINING', {'Signal': 'ECON0105', 'Transformation': 'RelDiff_ECON0105'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0105', 'Transformation': 'CumSum_ECON0105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.637, ('TRAINING', {'Signal': 'ECON0105', 'Transformation': 'CumSum_ECON0105'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.382, ('SIGNAL_TRAINING', {'Signals': ['ECON0105'], 'Transformations': [('ECON0105', 'None', '_', 'T+S+R'), ('ECON0105', 'None', 'Diff_', 'T+S+R'), ('ECON0105', 'None', 'RelDiff_', 'T+S+R'), ('ECON0105', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0105'], 'Transformations': [('ECON0105', [('ECON0105', 'None', 'CumSum_', 'T+S+R'), ('ECON0105', 'None', 'Diff_', 'T+S+R'), ('ECON0105', 'None', 'RelDiff_', 'T+S+R'), ('ECON0105', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0105', 'Transformations': [('ECON0105', 'None', 'CumSum_', 'T+S+R'), ('ECON0105', 'None', 'Diff_', 'T+S+R'), ('ECON0105', 'None', 'RelDiff_', 'T+S+R'), ('ECON0105', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0105', 'Transformations': [('ECON0105', 'None', 'CumSum_', 'T+S+R'), ('ECON0105', 'None', 'Diff_', 'T+S+R'), ('ECON0105', 'None', 'RelDiff_', 'T+S+R'), ('ECON0105', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0105', 'Model': '_ECON0105_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0105', 'Model': '_ECON0105_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0105'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.42, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0105'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.452, ('FINALIZE_TRAINING', {'Signals': ['ECON0105'], 'Transformations': [('ECON0105', [('ECON0105', 'None', 'CumSum_', 'T+S+R'), ('ECON0105', 'None', 'Diff_', 'T+S+R'), ('ECON0105', 'None', 'RelDiff_', 'T+S+R'), ('ECON0105', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=367 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0105' Length=479  Min=34.6 Max=197.5  Mean=111.88455114822541 StdDev=49.809635644989775
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0105' Min=0.0 Max=1.0  Mean=0.47442941159131646 StdDev=0.30576817461626604
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0105_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0105_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0105_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0105_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0451 MAPE_Forecast=0.0064 MAPE_Test=0.0016
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0447 SMAPE_Forecast=0.0064 SMAPE_Test=0.0016
INFO:pyaf.std:MODEL_MASE MASE_Fit=7.3009 MASE_Forecast=2.8183 MASE_Test=0.7046
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=11.516129895773638 CRPS_Forecast=2.8298137775557533 CRPS_Test=0.6708595253095216
INFO:pyaf.std:MODEL_L1 L1_Fit=2.870628552505382 L1_Forecast=1.1181400740130456 L1_Test=0.31913118881691893
INFO:pyaf.std:MODEL_L2 L2_Fit=3.581387324062591 L2_Forecast=1.393963453610626 L2_Test=0.3824999054679081
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.5863681987906584 LnQ_Forecast=0.005856842562194279 LnQ_Test=6.990258885058145e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.508736703997826 MedAE_Forecast=0.8979450389481087 MedAE_Test=0.2564094033183295
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (-0.04693130939563045, array([0.80256294]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0105_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0105             T+S+R  ...  0.0041       0.0016   0.0016
1   None         _ECON0105             T+S+R  ...  0.0041       0.0016   0.0016
2   None   CumSum_ECON0105             T+S+R  ...  0.0038       0.0016   0.0017
3   None   CumSum_ECON0105             T+S+R  ...  0.0155       0.0019   0.0022
4   None   CumSum_ECON0105             T+S+R  ...  0.0155       0.0019   0.0022
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0105             T+S+R  ...  0.4565       0.7242   0.7811
60  None  RelDiff_ECON0105             T+S+R  ...  0.4565       0.7242   0.7811
61  None  RelDiff_ECON0105             T+S+R  ...  0.5231       0.7907   0.8110
62  None   CumSum_ECON0105             T+S+R  ...  1.0366       0.7998   0.8217
63  None   CumSum_ECON0105             T+S+R  ...  1.0366       0.7998   0.8217

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0105             T+S+R  ...  0.0041       0.0016   0.0016
1  None        _ECON0105             T+S+R  ...  0.0041       0.0016   0.0016
2  None  CumSum_ECON0105             T+S+R  ...  0.0038       0.0016   0.0017
3  None  CumSum_ECON0105             T+S+R  ...  0.0155       0.0019   0.0022
4  None  CumSum_ECON0105             T+S+R  ...  0.0155       0.0019   0.0022

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0105'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.314, ('FORECASTING', {'Signals': ['ECON0105'], 'Horizon': 18}))
18 0     197.400
1     199.198
2     200.402
3     200.869
4     201.292
5     202.225
6     202.885
7     203.533
8     204.289
9     205.279
10    206.124
11    206.563
12    206.936
13    208.837
14    209.462
15    209.692
16    211.365
17    212.251
Name: ECON0105, dtype: float64
18 0     197.590487
1     197.946720
2     198.302952
3     198.659185
4     199.015418
5     199.371651
6     199.727884
7     200.084117
8     200.440350
9     200.796583
10    201.152816
11    201.509049
12    201.865282
13    202.221515
14    202.577748
15    202.933981
16    203.290214
17    203.646447
Name: ECON0105_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0105 ECON0105 [197.4, 199.198, 200.402, 200.869, 201.292, 202.225, 202.885, 203.533, 204.289, 205.279, 206.124, 206.563, 206.936, 208.837, 209.462, 209.692, 211.365, 212.251]
FORECAST_DETAIL_PREDICTED ECON0105 ECON0105 [197.59048653185067, 197.94671951062392, 198.30295248939723, 198.6591854681705, 199.01541844694376, 199.37165142571706, 199.72788440449034, 200.0841173832636, 200.44035036203687, 200.79658334081017, 201.15281631958342, 201.5090492983567, 201.86528227713, 202.22151525590326, 202.57774823467653, 202.93398121344978, 203.2902141922231, 203.64644717099634]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0105 ECON0105 479 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0105 ECON0105 4.266637802124023
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0105 ECON0105 LinearTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0105 ECON0105 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0105 ECON0105 0.0209 0.0212 4.9509
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0105 ECON0105 4.325031652115446 4.904749176407462 -0.3730415104164986
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0105_18'
