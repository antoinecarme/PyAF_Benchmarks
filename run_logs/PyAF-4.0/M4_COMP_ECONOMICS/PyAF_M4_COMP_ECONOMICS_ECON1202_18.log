BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1202 N= 131 H= 18 HEAD= [90.7 91.7 92.4 92.4 93.1] TAIL= [102.6 103.  103.6 104.2 105.1]
   ECON1202  Date
0      90.7     0
1      91.7     1
2      92.4     2
3      92.4     3
4      93.1     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1202  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1202'], 'Transformations': [('ECON1202', 'None', '_', 'T+S+R'), ('ECON1202', 'None', 'Diff_', 'T+S+R'), ('ECON1202', 'None', 'RelDiff_', 'T+S+R'), ('ECON1202', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1202', 'Transformation': '_ECON1202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.321, ('TRAINING', {'Signal': 'ECON1202', 'Transformation': '_ECON1202'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1202', 'Transformation': 'Diff_ECON1202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.527, ('TRAINING', {'Signal': 'ECON1202', 'Transformation': 'Diff_ECON1202'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1202', 'Transformation': 'RelDiff_ECON1202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.6, ('TRAINING', {'Signal': 'ECON1202', 'Transformation': 'RelDiff_ECON1202'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1202', 'Transformation': 'CumSum_ECON1202'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.55, ('TRAINING', {'Signal': 'ECON1202', 'Transformation': 'CumSum_ECON1202'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.999, ('SIGNAL_TRAINING', {'Signals': ['ECON1202'], 'Transformations': [('ECON1202', 'None', '_', 'T+S+R'), ('ECON1202', 'None', 'Diff_', 'T+S+R'), ('ECON1202', 'None', 'RelDiff_', 'T+S+R'), ('ECON1202', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1202'], 'Transformations': [('ECON1202', [('ECON1202', 'None', 'CumSum_', 'T+S+R'), ('ECON1202', 'None', 'Diff_', 'T+S+R'), ('ECON1202', 'None', 'RelDiff_', 'T+S+R'), ('ECON1202', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1202', 'Transformations': [('ECON1202', 'None', 'CumSum_', 'T+S+R'), ('ECON1202', 'None', 'Diff_', 'T+S+R'), ('ECON1202', 'None', 'RelDiff_', 'T+S+R'), ('ECON1202', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1202', 'Transformations': [('ECON1202', 'None', 'CumSum_', 'T+S+R'), ('ECON1202', 'None', 'Diff_', 'T+S+R'), ('ECON1202', 'None', 'RelDiff_', 'T+S+R'), ('ECON1202', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1202', 'Model': 'Diff_ECON1202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1202', 'Model': 'Diff_ECON1202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1202'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.382, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1202'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.412, ('FINALIZE_TRAINING', {'Signals': ['ECON1202'], 'Transformations': [('ECON1202', [('ECON1202', 'None', 'CumSum_', 'T+S+R'), ('ECON1202', 'None', 'Diff_', 'T+S+R'), ('ECON1202', 'None', 'RelDiff_', 'T+S+R'), ('ECON1202', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1202' Length=131  Min=90.6 Max=105.1  Mean=95.67480916030537 StdDev=3.54948321174371
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1202' Min=-0.14482758620689618 Max=0.18620689655172434  Mean=0.0075809423532508515 StdDev=0.04151819250026679
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1202_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1202_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1202_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0107 MAPE_Forecast=0.007 MAPE_Test=0.0126
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0107 SMAPE_Forecast=0.007 SMAPE_Test=0.0127
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.201 MASE_Forecast=1.6573 MASE_Test=2.3154
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.6205571193415632 CRPS_Forecast=0.20386473429951757 CRPS_Test=0.36023148148148393
INFO:pyaf.std:MODEL_L1 L1_Fit=1.001592592592593 L1_Forecast=0.693043478260872 L1_Test=1.293888888888893
INFO:pyaf.std:MODEL_L2 L2_Fit=1.3106734203510855 L2_Forecast=0.8006386339805402 L2_Test=1.8385234615088641
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.01761939316235249 LnQ_Forecast=0.0015064416316178265 LnQ_Test=0.005832045011391631
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.7033333333333331 MedAE_Forecast=0.7633333333333496 MedAE_Test=0.873333333333342
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.006896551724138519
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON1202_ConstantTrend 0.0052873563218390745
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1202_ConstantTrend_residue_bestCycle_byMAPE None -0.0052873563218390745 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ... ForecastMAPE    TestMAPE
0   None         _ECON1202  ...       0.0038      0.0049
1   None         _ECON1202  ...       0.0038      0.0049
2   None         _ECON1202  ...       0.0040      0.0052
3   None         _ECON1202  ...       0.0040      0.0052
4   None   CumSum_ECON1202  ...       0.0040      0.0052
..   ...               ...  ...          ...         ...
59  None  RelDiff_ECON1202  ...    1850.7755  59566.8905
60  None  RelDiff_ECON1202  ...    1893.2120   8406.9796
61  None  RelDiff_ECON1202  ...    1893.2120   8406.9796
62  None  RelDiff_ECON1202  ...    2381.2953  65065.0731
63  None  RelDiff_ECON1202  ...   46625.8446  98700.4760

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1202             T+S+R  ...  0.0047       0.0038   0.0049
1  None        _ECON1202             T+S+R  ...  0.0047       0.0038   0.0049
2  None        _ECON1202             T+S+R  ...  0.0048       0.0040   0.0052
3  None        _ECON1202             T+S+R  ...  0.0048       0.0040   0.0052
4  None  CumSum_ECON1202             T+S+R  ...  0.0048       0.0040   0.0052

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1202'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.287, ('FORECASTING', {'Signals': ['ECON1202'], 'Horizon': 18}))
18 0     105.4
1     104.4
2     105.4
3     106.0
4     106.2
5     106.7
6     107.3
7     105.5
8     106.1
9     107.4
10    109.1
11    110.1
12    111.1
13    110.8
14    111.3
15    111.8
16    113.2
17    115.1
Name: ECON1202, dtype: float64
18 0     100.820000
1     100.896667
2     100.973333
3     101.050000
4     101.126667
5     101.203333
6     101.280000
7     101.356667
8     101.433333
9     101.510000
10    101.586667
11    101.663333
12    101.740000
13    101.816667
14    101.893333
15    101.970000
16    102.046667
17    102.123333
Name: ECON1202_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1202 ECON1202 [105.4, 104.4, 105.4, 106.0, 106.2, 106.7, 107.3, 105.5, 106.1, 107.4, 109.1, 110.1, 111.1, 110.8, 111.3, 111.8, 113.2, 115.1]
FORECAST_DETAIL_PREDICTED ECON1202 ECON1202 [100.82, 100.89666666666666, 100.97333333333333, 101.05, 101.12666666666667, 101.20333333333332, 101.27999999999999, 101.35666666666665, 101.43333333333332, 101.50999999999999, 101.58666666666666, 101.66333333333333, 101.74, 101.81666666666666, 101.89333333333333, 101.97, 102.04666666666665, 102.12333333333332]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1202 ECON1202 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1202 ECON1202 3.791849136352539
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1202 ECON1202 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1202 ECON1202 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1202 ECON1202 0.0641 0.0665 7.5086
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1202 ECON1202 7.022777777777785 7.516720497466772 -5.069242337335809
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1202_18'
