BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0403 N= 235 H= 8 HEAD= [41.002 41.383 40.815 41.204 40.948] TAIL= [120.172 120.181 120.385 120.227 120.23 ]
   ECON0403  Date
0    41.002     0
1    41.383     1
2    40.815     2
3    41.204     3
4    40.948     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0403  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0403'], 'Transformations': [('ECON0403', 'None', '_', 'T+S+R'), ('ECON0403', 'None', 'Diff_', 'T+S+R'), ('ECON0403', 'None', 'RelDiff_', 'T+S+R'), ('ECON0403', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0403', 'Transformation': '_ECON0403'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.192, ('TRAINING', {'Signal': 'ECON0403', 'Transformation': '_ECON0403'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0403', 'Transformation': 'Diff_ECON0403'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.583, ('TRAINING', {'Signal': 'ECON0403', 'Transformation': 'Diff_ECON0403'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0403', 'Transformation': 'RelDiff_ECON0403'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.659, ('TRAINING', {'Signal': 'ECON0403', 'Transformation': 'RelDiff_ECON0403'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0403', 'Transformation': 'CumSum_ECON0403'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.552, ('TRAINING', {'Signal': 'ECON0403', 'Transformation': 'CumSum_ECON0403'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.988, ('SIGNAL_TRAINING', {'Signals': ['ECON0403'], 'Transformations': [('ECON0403', 'None', '_', 'T+S+R'), ('ECON0403', 'None', 'Diff_', 'T+S+R'), ('ECON0403', 'None', 'RelDiff_', 'T+S+R'), ('ECON0403', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0403'], 'Transformations': [('ECON0403', [('ECON0403', 'None', 'CumSum_', 'T+S+R'), ('ECON0403', 'None', 'Diff_', 'T+S+R'), ('ECON0403', 'None', 'RelDiff_', 'T+S+R'), ('ECON0403', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0403', 'Transformations': [('ECON0403', 'None', 'CumSum_', 'T+S+R'), ('ECON0403', 'None', 'Diff_', 'T+S+R'), ('ECON0403', 'None', 'RelDiff_', 'T+S+R'), ('ECON0403', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0403', 'Transformations': [('ECON0403', 'None', 'CumSum_', 'T+S+R'), ('ECON0403', 'None', 'Diff_', 'T+S+R'), ('ECON0403', 'None', 'RelDiff_', 'T+S+R'), ('ECON0403', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0403', 'Model': '_ECON0403_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0403', 'Model': '_ECON0403_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0403'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.174, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0403'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.203, ('FINALIZE_TRAINING', {'Signals': ['ECON0403'], 'Transformations': [('ECON0403', [('ECON0403', 'None', 'CumSum_', 'T+S+R'), ('ECON0403', 'None', 'Diff_', 'T+S+R'), ('ECON0403', 'None', 'RelDiff_', 'T+S+R'), ('ECON0403', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0403' Length=235  Min=40.789 Max=120.385  Mean=81.57911914893619 StdDev=21.654133092849158
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0403' Min=0.0 Max=1.0  Mean=0.5124644347572261 StdDev=0.2720505187804557
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0403_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0403_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0403_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0403_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0073 MAPE_Forecast=0.006 MAPE_Test=0.0042
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0073 SMAPE_Forecast=0.006 SMAPE_Test=0.0042
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9789 MASE_Test=0.9916
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.863962358747699 CRPS_Forecast=1.6099183850931678 CRPS_Test=0.2846875000000013
INFO:pyaf.std:MODEL_L1 L1_Fit=0.49897790055248603 L1_Forecast=0.6395869565217387 L1_Test=0.5017499999999995
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6270009252154212 L2_Forecast=0.9082342759442628 L2_Test=0.6928131061115955
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.016904885676366124 LnQ_Forecast=0.0032263551674367886 LnQ_Test=0.00027014034773330703
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4410000000000025 MedAE_Forecast=0.39699999999999847 MedAE_Test=0.33800000000000097
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.002676013870043733
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0403_Lag1Trend_residue_bestCycle_byMAPE None 0.0041082466455600875 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0403             T+S+R  ...  0.0062       0.0059   0.0044
1   None         _ECON0403             T+S+R  ...  0.0062       0.0059   0.0044
2   None         _ECON0403             T+S+R  ...  0.0073       0.0060   0.0042
3   None         _ECON0403             T+S+R  ...  0.0073       0.0060   0.0042
4   None   CumSum_ECON0403             T+S+R  ...  0.0073       0.0060   0.0042
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0403             T+S+R  ...  0.2673       0.4749   0.6519
60  None   CumSum_ECON0403             T+S+R  ...  0.6859       0.6127   0.6595
61  None   CumSum_ECON0403             T+S+R  ...  0.6859       0.6127   0.6595
62  None  RelDiff_ECON0403             T+S+R  ...  0.2889       0.6191   1.7081
63  None  RelDiff_ECON0403             T+S+R  ...  0.2889       0.6191   1.7081

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0403             T+S+R  ...  0.0062       0.0059   0.0044
1  None        _ECON0403             T+S+R  ...  0.0062       0.0059   0.0044
2  None        _ECON0403             T+S+R  ...  0.0073       0.0060   0.0042
3  None        _ECON0403             T+S+R  ...  0.0073       0.0060   0.0042
4  None  CumSum_ECON0403             T+S+R  ...  0.0073       0.0060   0.0042

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0403'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.133, ('FORECASTING', {'Signals': ['ECON0403'], 'Horizon': 8}))
8 0    119.727
1    120.823
2    120.347
3    119.650
4    122.516
5    122.701
6    122.371
7    122.552
Name: ECON0403, dtype: float64
8 0    120.23
1    120.23
2    120.23
3    120.23
4    120.23
5    120.23
6    120.23
7    120.23
Name: ECON0403_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0403 ECON0403 [119.727, 120.823, 120.347, 119.65, 122.516, 122.701, 122.371, 122.552]
FORECAST_DETAIL_PREDICTED ECON0403 ECON0403 [120.23, 120.23, 120.23, 120.23, 120.23, 120.23, 120.23, 120.23]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0403 ECON0403 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0403 ECON0403 3.4158780574798584
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0403 ECON0403 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0403 ECON0403 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0403 ECON0403 0.0113 0.0114 1.6526
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0403 ECON0403 1.3766249999999953 1.668155755617559 -0.784056914192264
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0403_8'
