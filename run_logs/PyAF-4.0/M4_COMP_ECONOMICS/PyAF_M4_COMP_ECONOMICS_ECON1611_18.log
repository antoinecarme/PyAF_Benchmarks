BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 131 H= 18 HEAD= [0 1 2 3 4] TAIL= [126 127 128 129 130]
SIGNAL :  ECON1611 N= 131 H= 18 HEAD= [109.7 109.6 109.2 108.4 108.2] TAIL= [86.3 86.  85.9 85.7 85.5]
   ECON1611  Date
0     109.7     0
1     109.6     1
2     109.2     2
3     108.4     3
4     108.2     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 131 entries, 0 to 130
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1611  131 non-null    float64
 1   Date      131 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1611'], 'Transformations': [('ECON1611', 'None', '_', 'T+S+R'), ('ECON1611', 'None', 'Diff_', 'T+S+R'), ('ECON1611', 'None', 'RelDiff_', 'T+S+R'), ('ECON1611', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1611', 'Transformation': '_ECON1611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.108, ('TRAINING', {'Signal': 'ECON1611', 'Transformation': '_ECON1611'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1611', 'Transformation': 'Diff_ECON1611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.529, ('TRAINING', {'Signal': 'ECON1611', 'Transformation': 'Diff_ECON1611'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1611', 'Transformation': 'RelDiff_ECON1611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.625, ('TRAINING', {'Signal': 'ECON1611', 'Transformation': 'RelDiff_ECON1611'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1611', 'Transformation': 'CumSum_ECON1611'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.496, ('TRAINING', {'Signal': 'ECON1611', 'Transformation': 'CumSum_ECON1611'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.76, ('SIGNAL_TRAINING', {'Signals': ['ECON1611'], 'Transformations': [('ECON1611', 'None', '_', 'T+S+R'), ('ECON1611', 'None', 'Diff_', 'T+S+R'), ('ECON1611', 'None', 'RelDiff_', 'T+S+R'), ('ECON1611', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1611'], 'Transformations': [('ECON1611', [('ECON1611', 'None', 'CumSum_', 'T+S+R'), ('ECON1611', 'None', 'Diff_', 'T+S+R'), ('ECON1611', 'None', 'RelDiff_', 'T+S+R'), ('ECON1611', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1611', 'Transformations': [('ECON1611', 'None', 'CumSum_', 'T+S+R'), ('ECON1611', 'None', 'Diff_', 'T+S+R'), ('ECON1611', 'None', 'RelDiff_', 'T+S+R'), ('ECON1611', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1611', 'Transformations': [('ECON1611', 'None', 'CumSum_', 'T+S+R'), ('ECON1611', 'None', 'Diff_', 'T+S+R'), ('ECON1611', 'None', 'RelDiff_', 'T+S+R'), ('ECON1611', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1611', 'Model': 'Diff_ECON1611_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1611', 'Model': 'Diff_ECON1611_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1611'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.384, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1611'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.412, ('FINALIZE_TRAINING', {'Signals': ['ECON1611'], 'Transformations': [('ECON1611', [('ECON1611', 'None', 'CumSum_', 'T+S+R'), ('ECON1611', 'None', 'Diff_', 'T+S+R'), ('ECON1611', 'None', 'RelDiff_', 'T+S+R'), ('ECON1611', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=89 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1611' Length=131  Min=85.5 Max=109.7  Mean=97.68091603053436 StdDev=7.285613917389149
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1611' Min=-0.07024793388429762 Max=0.07438016528925606  Mean=-0.007633587786259542 StdDev=0.02075540476414619
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1611_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1611_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1611_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1611_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0057 MAPE_Forecast=0.0045 MAPE_Test=0.0034
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0057 SMAPE_Forecast=0.0044 SMAPE_Test=0.0033
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.282 MASE_Forecast=1.1818 MASE_Test=1.5995
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.4069285596707812 CRPS_Forecast=0.4576690821256045 CRPS_Test=0.3619598765432112
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5920370370370358 L1_Forecast=0.4028985507246457 L1_Test=0.2916666666666817
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7869949879834752 L2_Forecast=0.5096650410870738 L2_Test=0.31380283972939266
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.005056742606250035 LnQ_Forecast=0.0007254662429161329 LnQ_Test=0.00023292265435853645
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4833333333333343 MedAE_Forecast=0.3333333333333428 MedAE_Test=0.2916666666666785
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON1611_ConstantTrend -0.007575757575757579
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_ECON1611_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON1611             T+S+R  ...  0.0035       0.0024   0.0011
1   None         _ECON1611             T+S+R  ...  0.0035       0.0024   0.0011
2   None     Diff_ECON1611             T+S+R  ...  0.0036       0.0028   0.0019
3   None     Diff_ECON1611             T+S+R  ...  0.0036       0.0028   0.0019
4   None     Diff_ECON1611             T+S+R  ...  0.0047       0.0032   0.0056
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1611             T+S+R  ...  0.0845       0.2133   0.2646
60  None  RelDiff_ECON1611             T+S+R  ...  0.0845       0.2133   0.2646
61  None  RelDiff_ECON1611             T+S+R  ...  0.0845       0.2133   0.2646
62  None  RelDiff_ECON1611             T+S+R  ...  0.0845       0.2133   0.2646
63  None   CumSum_ECON1611             T+S+R  ...  0.2720       0.2622   0.2988

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON1611             T+S+R  ...  0.0035       0.0024   0.0011
1  None      _ECON1611             T+S+R  ...  0.0035       0.0024   0.0011
2  None  Diff_ECON1611             T+S+R  ...  0.0036       0.0028   0.0019
3  None  Diff_ECON1611             T+S+R  ...  0.0036       0.0028   0.0019
4  None  Diff_ECON1611             T+S+R  ...  0.0047       0.0032   0.0056

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1611'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.277, ('FORECASTING', {'Signals': ['ECON1611'], 'Horizon': 18}))
18 0     85.5
1     85.4
2     85.3
3     85.1
4     85.1
5     85.0
6     85.0
7     85.0
8     84.9
9     84.7
10    84.6
11    84.3
12    84.1
13    84.0
14    83.7
15    83.4
16    83.3
17    83.3
Name: ECON1611, dtype: float64
18 0     85.500000
1     85.316667
2     85.133333
3     84.950000
4     84.766667
5     84.583333
6     84.400000
7     84.216667
8     84.033333
9     83.850000
10    83.666667
11    83.483333
12    83.300000
13    83.116667
14    82.933333
15    82.750000
16    82.566667
17    82.383333
Name: ECON1611_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1611 ECON1611 [85.5, 85.4, 85.3, 85.1, 85.1, 85.0, 85.0, 85.0, 84.9, 84.7, 84.6, 84.3, 84.1, 84.0, 83.7, 83.4, 83.3, 83.3]
FORECAST_DETAIL_PREDICTED ECON1611 ECON1611 [85.50000000000001, 85.31666666666668, 85.13333333333335, 84.95000000000002, 84.76666666666668, 84.58333333333336, 84.40000000000002, 84.21666666666668, 84.03333333333335, 83.85000000000002, 83.66666666666669, 83.48333333333335, 83.30000000000001, 83.11666666666669, 82.93333333333335, 82.75000000000001, 82.56666666666669, 82.38333333333335]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1611 ECON1611 131 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1611 ECON1611 3.5450329780578613
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1611 ECON1611 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1611 ECON1611 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1611 ECON1611 0.0071 0.0071 4.6149
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1611 ECON1611 0.5972222222222057 0.6723025663648164 0.12355616734445396
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1611_18'
