BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0910 N= 47 H= 18 HEAD= [110.6 108.1 111.2 110.8 106.2] TAIL= [107.3 112.2 103.7 106.6 101.9]
   ECON0910  Date
0     110.6     0
1     108.1     1
2     111.2     2
3     110.8     3
4     106.2     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0910  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0910'], 'Transformations': [('ECON0910', 'None', '_', 'T+S+R'), ('ECON0910', 'None', 'Diff_', 'T+S+R'), ('ECON0910', 'None', 'RelDiff_', 'T+S+R'), ('ECON0910', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0910', 'Transformation': '_ECON0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.098, ('TRAINING', {'Signal': 'ECON0910', 'Transformation': '_ECON0910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0910', 'Transformation': 'Diff_ECON0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.472, ('TRAINING', {'Signal': 'ECON0910', 'Transformation': 'Diff_ECON0910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0910', 'Transformation': 'RelDiff_ECON0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.566, ('TRAINING', {'Signal': 'ECON0910', 'Transformation': 'RelDiff_ECON0910'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0910', 'Transformation': 'CumSum_ECON0910'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.429, ('TRAINING', {'Signal': 'ECON0910', 'Transformation': 'CumSum_ECON0910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.566, ('SIGNAL_TRAINING', {'Signals': ['ECON0910'], 'Transformations': [('ECON0910', 'None', '_', 'T+S+R'), ('ECON0910', 'None', 'Diff_', 'T+S+R'), ('ECON0910', 'None', 'RelDiff_', 'T+S+R'), ('ECON0910', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0910'], 'Transformations': [('ECON0910', [('ECON0910', 'None', 'CumSum_', 'T+S+R'), ('ECON0910', 'None', 'Diff_', 'T+S+R'), ('ECON0910', 'None', 'RelDiff_', 'T+S+R'), ('ECON0910', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0910', 'Transformations': [('ECON0910', 'None', 'CumSum_', 'T+S+R'), ('ECON0910', 'None', 'Diff_', 'T+S+R'), ('ECON0910', 'None', 'RelDiff_', 'T+S+R'), ('ECON0910', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0910', 'Transformations': [('ECON0910', 'None', 'CumSum_', 'T+S+R'), ('ECON0910', 'None', 'Diff_', 'T+S+R'), ('ECON0910', 'None', 'RelDiff_', 'T+S+R'), ('ECON0910', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0910', 'Model': '_ECON0910_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0910', 'Model': '_ECON0910_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.352, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0910'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.378, ('FINALIZE_TRAINING', {'Signals': ['ECON0910'], 'Transformations': [('ECON0910', [('ECON0910', 'None', 'CumSum_', 'T+S+R'), ('ECON0910', 'None', 'Diff_', 'T+S+R'), ('ECON0910', 'None', 'RelDiff_', 'T+S+R'), ('ECON0910', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0910' Length=47  Min=92.6 Max=112.2  Mean=101.90425531914892 StdDev=5.098350064640583
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0910' Min=0.0 Max=1.0  Mean=0.4747069040382112 StdDev=0.26011990125717255
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0910_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0910_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0910_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0910_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0412 MAPE_Forecast=0.0412 MAPE_Test=0.0412
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0412 SMAPE_Forecast=0.0412 SMAPE_Test=0.0412
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7756 MASE_Forecast=0.7756 MASE_Test=0.7756
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5607268085106388 CRPS_Forecast=0.5607268085106388 CRPS_Test=0.5607268085106388
INFO:pyaf.std:MODEL_L1 L1_Fit=4.20027161611589 L1_Forecast=4.20027161611589 L1_Test=4.20027161611589
INFO:pyaf.std:MODEL_L2 L2_Fit=5.0983500646405835 L2_Forecast=5.0983500646405835 L2_Test=5.0983500646405835
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.11693324809703441 LnQ_Forecast=0.11693324809703441 LnQ_Test=0.11693324809703441
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.6957446808510497 MedAE_Forecast=3.6957446808510497 MedAE_Test=3.6957446808510497
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON0910_ConstantTrend 0.4747069040382112
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0910_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0910  ...  3.350000e-02  3.350000e-02
1   None         _ECON0910  ...  3.350000e-02  3.350000e-02
2   None         _ECON0910  ...  3.430000e-02  3.430000e-02
3   None         _ECON0910  ...  3.430000e-02  3.430000e-02
4   None         _ECON0910  ...  3.450000e-02  3.450000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0910  ...  9.326013e+06  9.326013e+06
60  None  RelDiff_ECON0910  ...  1.195809e+07  1.195809e+07
61  None  RelDiff_ECON0910  ...  1.195809e+07  1.195809e+07
62  None  RelDiff_ECON0910  ...  1.315853e+07  1.315853e+07
63  None  RelDiff_ECON0910  ...  1.315853e+07  1.315853e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0910             T+S+R  ...  0.0335       0.0335   0.0335
1  None      _ECON0910             T+S+R  ...  0.0335       0.0335   0.0335
2  None      _ECON0910             T+S+R  ...  0.0343       0.0343   0.0343
3  None      _ECON0910             T+S+R  ...  0.0343       0.0343   0.0343
4  None      _ECON0910             T+S+R  ...  0.0345       0.0345   0.0345

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0910'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.264, ('FORECASTING', {'Signals': ['ECON0910'], 'Horizon': 18}))
18 0      91.5
1     102.7
2     103.7
3     108.6
4     100.3
5     107.8
6     103.8
7     101.8
8     101.4
9     107.8
10    103.4
11    100.3
12    108.7
13    104.0
14     99.4
15     99.3
16     99.3
17     92.7
Name: ECON0910, dtype: float64
18 0     101.904255
1     101.904255
2     101.904255
3     101.904255
4     101.904255
5     101.904255
6     101.904255
7     101.904255
8     101.904255
9     101.904255
10    101.904255
11    101.904255
12    101.904255
13    101.904255
14    101.904255
15    101.904255
16    101.904255
17    101.904255
Name: ECON0910_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0910 ECON0910 [91.5, 102.7, 103.7, 108.6, 100.3, 107.8, 103.8, 101.8, 101.4, 107.8, 103.4, 100.3, 108.7, 104.0, 99.4, 99.3, 99.3, 92.7]
FORECAST_DETAIL_PREDICTED ECON0910 ECON0910 [101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894, 101.90425531914894]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0910 ECON0910 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0910 ECON0910 3.311046838760376
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0910 ECON0910 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0910 ECON0910 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0910 ECON0910 0.0356 0.0353 0.785
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0910 ECON0910 3.5833333333333335 4.671608998759622 -0.000699620645989496
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0910_18'
