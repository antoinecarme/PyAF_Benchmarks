BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 48 H= 6 HEAD= [0 1 2 3 4] TAIL= [43 44 45 46 47]
SIGNAL :  ECON0809 N= 48 H= 6 HEAD= [1323. 1026.  673.  799.  910.] TAIL= [16545. 17048. 18037. 18949. 19934.]
   ECON0809  Date
0    1323.0     0
1    1026.0     1
2     673.0     2
3     799.0     3
4     910.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 48 entries, 0 to 47
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0809  48 non-null     float64
 1   Date      48 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0809'], 'Transformations': [('ECON0809', 'None', '_', 'T+S+R'), ('ECON0809', 'None', 'Diff_', 'T+S+R'), ('ECON0809', 'None', 'RelDiff_', 'T+S+R'), ('ECON0809', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0809', 'Transformation': '_ECON0809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.969, ('TRAINING', {'Signal': 'ECON0809', 'Transformation': '_ECON0809'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0809', 'Transformation': 'Diff_ECON0809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.472, ('TRAINING', {'Signal': 'ECON0809', 'Transformation': 'Diff_ECON0809'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0809', 'Transformation': 'RelDiff_ECON0809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.587, ('TRAINING', {'Signal': 'ECON0809', 'Transformation': 'RelDiff_ECON0809'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0809', 'Transformation': 'CumSum_ECON0809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.432, ('TRAINING', {'Signal': 'ECON0809', 'Transformation': 'CumSum_ECON0809'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.462, ('SIGNAL_TRAINING', {'Signals': ['ECON0809'], 'Transformations': [('ECON0809', 'None', '_', 'T+S+R'), ('ECON0809', 'None', 'Diff_', 'T+S+R'), ('ECON0809', 'None', 'RelDiff_', 'T+S+R'), ('ECON0809', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0809'], 'Transformations': [('ECON0809', [('ECON0809', 'None', 'CumSum_', 'T+S+R'), ('ECON0809', 'None', 'Diff_', 'T+S+R'), ('ECON0809', 'None', 'RelDiff_', 'T+S+R'), ('ECON0809', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0809', 'Transformations': [('ECON0809', 'None', 'CumSum_', 'T+S+R'), ('ECON0809', 'None', 'Diff_', 'T+S+R'), ('ECON0809', 'None', 'RelDiff_', 'T+S+R'), ('ECON0809', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0809', 'Transformations': [('ECON0809', 'None', 'CumSum_', 'T+S+R'), ('ECON0809', 'None', 'Diff_', 'T+S+R'), ('ECON0809', 'None', 'RelDiff_', 'T+S+R'), ('ECON0809', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0809', 'Model': '_ECON0809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0809', 'Model': '_ECON0809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0809'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.126, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0809'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FINALIZE_TRAINING', {'Signals': ['ECON0809'], 'Transformations': [('ECON0809', [('ECON0809', 'None', 'CumSum_', 'T+S+R'), ('ECON0809', 'None', 'Diff_', 'T+S+R'), ('ECON0809', 'None', 'RelDiff_', 'T+S+R'), ('ECON0809', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=32 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0809' Length=48  Min=673.0 Max=19934.0  Mean=9072.416666666666 StdDev=6056.64076941354
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0809' Min=0.0 Max=1.0  Mean=0.4360841423948219 StdDev=0.3144510030327366
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0809_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0809_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1095 MAPE_Forecast=0.0176 MAPE_Test=0.0374
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1117 SMAPE_Forecast=0.0178 SMAPE_Test=0.0382
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9697 MASE_Forecast=1.2316 MASE_Test=0.9368
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1153.3881212121212 CRPS_Forecast=186.88931851851865 CRPS_Test=527.0833333333334
INFO:pyaf.std:MODEL_L1 L1_Fit=420.969696969697 L1_Forecast=267.1111111111113 L1_Test=680.5
INFO:pyaf.std:MODEL_L2 L2_Fit=487.38118987341335 L2_Forecast=313.419491700465 L2_Test=741.1195360174138
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7481452936207225 LnQ_Forecast=0.004051774815749594 LnQ_Test=0.010084125055822162
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=319.0 MedAE_Forecast=208.0 MedAE_Test=707.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.03374694979492238
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0809_Lag1Trend_residue_bestCycle_byMAPE None 0.016406209438762254 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0809             T+S+R  ...  0.1709       0.0134   0.0695
1   None   CumSum_ECON0809             T+S+R  ...  0.1709       0.0134   0.0695
2   None         _ECON0809             T+S+R  ...  0.1166       0.0152   0.0186
3   None         _ECON0809             T+S+R  ...  0.1166       0.0152   0.0186
4   None   CumSum_ECON0809             T+S+R  ...  0.0953       0.0162   0.0207
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0809             T+S+R  ...  0.8513       2.4276   3.6180
60  None  RelDiff_ECON0809             T+S+R  ...  0.5748       2.6579   6.2290
61  None  RelDiff_ECON0809             T+S+R  ...  0.5748       2.6579   6.2290
62  None  RelDiff_ECON0809             T+S+R  ...  0.5720       3.4726   8.2245
63  None  RelDiff_ECON0809             T+S+R  ...  0.5720       3.4726   8.2245

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0809             T+S+R  ...  0.1709       0.0134   0.0695
1  None  CumSum_ECON0809             T+S+R  ...  0.1709       0.0134   0.0695
2  None        _ECON0809             T+S+R  ...  0.1166       0.0152   0.0186
3  None        _ECON0809             T+S+R  ...  0.1166       0.0152   0.0186
4  None  CumSum_ECON0809             T+S+R  ...  0.0953       0.0162   0.0207

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0809'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['ECON0809'], 'Horizon': 6}))
6 0    20404.0
1    20713.0
2    20943.0
3    21327.0
4    21528.0
5    21439.0
Name: ECON0809, dtype: float64
6 0    19934.0
1    19934.0
2    19934.0
3    19934.0
4    19934.0
5    19934.0
Name: ECON0809_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0809 ECON0809 [20404.0, 20713.0, 20943.0, 21327.0, 21528.0, 21439.0]
FORECAST_DETAIL_PREDICTED ECON0809 ECON0809 [19934.0, 19934.0, 19934.0, 19934.0, 19934.0, 19934.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0809 ECON0809 48 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0809 ECON0809 2.8244099617004395
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0809 ECON0809 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0809 ECON0809 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0809 ECON0809 0.0531 0.0547 4.6373
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0809 ECON0809 1125.0 1196.671216333041 -7.606056599578116
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0809_6'
