BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0303 N= 47 H= 18 HEAD= [2.1  1.74 1.6  1.85 1.61] TAIL= [2.48 2.29 2.35 2.45 2.35]
   ECON0303  Date
0      2.10     0
1      1.74     1
2      1.60     2
3      1.85     3
4      1.61     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0303  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0303'], 'Transformations': [('ECON0303', 'None', '_', 'T+S+R'), ('ECON0303', 'None', 'Diff_', 'T+S+R'), ('ECON0303', 'None', 'RelDiff_', 'T+S+R'), ('ECON0303', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0303', 'Transformation': '_ECON0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.176, ('TRAINING', {'Signal': 'ECON0303', 'Transformation': '_ECON0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0303', 'Transformation': 'Diff_ECON0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.502, ('TRAINING', {'Signal': 'ECON0303', 'Transformation': 'Diff_ECON0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0303', 'Transformation': 'RelDiff_ECON0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.62, ('TRAINING', {'Signal': 'ECON0303', 'Transformation': 'RelDiff_ECON0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0303', 'Transformation': 'CumSum_ECON0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.466, ('TRAINING', {'Signal': 'ECON0303', 'Transformation': 'CumSum_ECON0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.765, ('SIGNAL_TRAINING', {'Signals': ['ECON0303'], 'Transformations': [('ECON0303', 'None', '_', 'T+S+R'), ('ECON0303', 'None', 'Diff_', 'T+S+R'), ('ECON0303', 'None', 'RelDiff_', 'T+S+R'), ('ECON0303', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0303'], 'Transformations': [('ECON0303', [('ECON0303', 'None', 'CumSum_', 'T+S+R'), ('ECON0303', 'None', 'Diff_', 'T+S+R'), ('ECON0303', 'None', 'RelDiff_', 'T+S+R'), ('ECON0303', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0303', 'Transformations': [('ECON0303', 'None', 'CumSum_', 'T+S+R'), ('ECON0303', 'None', 'Diff_', 'T+S+R'), ('ECON0303', 'None', 'RelDiff_', 'T+S+R'), ('ECON0303', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0303', 'Transformations': [('ECON0303', 'None', 'CumSum_', 'T+S+R'), ('ECON0303', 'None', 'Diff_', 'T+S+R'), ('ECON0303', 'None', 'RelDiff_', 'T+S+R'), ('ECON0303', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0303', 'Model': '_ECON0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0303', 'Model': '_ECON0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.385, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.413, ('FINALIZE_TRAINING', {'Signals': ['ECON0303'], 'Transformations': [('ECON0303', [('ECON0303', 'None', 'CumSum_', 'T+S+R'), ('ECON0303', 'None', 'Diff_', 'T+S+R'), ('ECON0303', 'None', 'RelDiff_', 'T+S+R'), ('ECON0303', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0303' Length=47  Min=0.98 Max=2.48  Mean=1.7655319148936175 StdDev=0.3733449064795254
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0303' Min=0.0 Max=1.0  Mean=0.5236879432624113 StdDev=0.24889660431968352
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0303_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0303_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0885 MAPE_Forecast=0.0885 MAPE_Test=0.0885
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0891 SMAPE_Forecast=0.0891 SMAPE_Test=0.0891
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9787 MASE_Forecast=0.9787 MASE_Test=0.9787
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.09246414589665654 CRPS_Forecast=0.09246414589665654 CRPS_Test=0.09246414589665654
INFO:pyaf.std:MODEL_L1 L1_Fit=0.1453191489361702 L1_Forecast=0.1453191489361702 L1_Test=0.1453191489361702
INFO:pyaf.std:MODEL_L2 L2_Fit=0.18298354768504257 L2_Forecast=0.18298354768504257 L2_Test=0.18298354768504257
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6791870326079426 LnQ_Forecast=0.6791870326079426 LnQ_Test=0.6791870326079426
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1200000000000001 MedAE_Forecast=0.1200000000000001 MedAE_Test=0.1200000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7466666666666667
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0303_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0303  ...  8.170000e-02  8.170000e-02
1   None         _ECON0303  ...  8.170000e-02  8.170000e-02
2   None         _ECON0303  ...  8.850000e-02  8.850000e-02
3   None         _ECON0303  ...  8.850000e-02  8.850000e-02
4   None     Diff_ECON0303  ...  8.850000e-02  8.850000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0303  ...  1.654403e+07  1.654403e+07
60  None  RelDiff_ECON0303  ...  2.572884e+07  2.572884e+07
61  None  RelDiff_ECON0303  ...  2.572884e+07  2.572884e+07
62  None  RelDiff_ECON0303  ...  2.952584e+07  2.952584e+07
63  None  RelDiff_ECON0303  ...  2.952584e+07  2.952584e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0303             T+S+R  ...  0.0817       0.0817   0.0817
1  None      _ECON0303             T+S+R  ...  0.0817       0.0817   0.0817
2  None      _ECON0303             T+S+R  ...  0.0885       0.0885   0.0885
3  None      _ECON0303             T+S+R  ...  0.0885       0.0885   0.0885
4  None  Diff_ECON0303             T+S+R  ...  0.0885       0.0885   0.0885

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0303'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.283, ('FORECASTING', {'Signals': ['ECON0303'], 'Horizon': 18}))
18 0     2.28
1     2.47
2     2.38
3     2.14
4     2.20
5     2.32
6     2.67
7     2.63
8     2.45
9     2.24
10    2.15
11    1.65
12    1.62
13    1.24
14    1.09
15    0.73
16    1.00
17    1.16
Name: ECON0303, dtype: float64
18 0     2.35
1     2.35
2     2.35
3     2.35
4     2.35
5     2.35
6     2.35
7     2.35
8     2.35
9     2.35
10    2.35
11    2.35
12    2.35
13    2.35
14    2.35
15    2.35
16    2.35
17    2.35
Name: ECON0303_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0303 ECON0303 [2.28, 2.47, 2.38, 2.14, 2.2, 2.32, 2.67, 2.63, 2.45, 2.24, 2.15, 1.65, 1.62, 1.24, 1.09, 0.73, 1.0, 1.16]
FORECAST_DETAIL_PREDICTED ECON0303 ECON0303 [2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35, 2.35]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0303 ECON0303 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0303 ECON0303 3.557079792022705
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0303 ECON0303 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0303 ECON0303 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0303 ECON0303 0.4556 0.2938 2.6455
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0303 ECON0303 0.5322222222222223 0.7467038681208681 -0.5237505608875488
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0303_18'
