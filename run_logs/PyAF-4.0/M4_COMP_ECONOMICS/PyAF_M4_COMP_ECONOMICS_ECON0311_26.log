BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 179 H= 26 HEAD= [0 1 2 3 4] TAIL= [174 175 176 177 178]
SIGNAL :  ECON0311 N= 179 H= 26 HEAD= [1.9  1.95 1.98 1.88 1.81] TAIL= [3.99 3.33 3.39 2.92 2.78]
   ECON0311  Date
0      1.90     0
1      1.95     1
2      1.98     2
3      1.88     3
4      1.81     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 179 entries, 0 to 178
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0311  179 non-null    float64
 1   Date      179 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 4.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0311'], 'Transformations': [('ECON0311', 'None', '_', 'T+S+R'), ('ECON0311', 'None', 'Diff_', 'T+S+R'), ('ECON0311', 'None', 'RelDiff_', 'T+S+R'), ('ECON0311', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0311', 'Transformation': '_ECON0311'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.192, ('TRAINING', {'Signal': 'ECON0311', 'Transformation': '_ECON0311'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0311', 'Transformation': 'Diff_ECON0311'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.909, ('TRAINING', {'Signal': 'ECON0311', 'Transformation': 'Diff_ECON0311'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0311', 'Transformation': 'RelDiff_ECON0311'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.036, ('TRAINING', {'Signal': 'ECON0311', 'Transformation': 'RelDiff_ECON0311'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0311', 'Transformation': 'CumSum_ECON0311'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.858, ('TRAINING', {'Signal': 'ECON0311', 'Transformation': 'CumSum_ECON0311'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.997, ('SIGNAL_TRAINING', {'Signals': ['ECON0311'], 'Transformations': [('ECON0311', 'None', '_', 'T+S+R'), ('ECON0311', 'None', 'Diff_', 'T+S+R'), ('ECON0311', 'None', 'RelDiff_', 'T+S+R'), ('ECON0311', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0311'], 'Transformations': [('ECON0311', [('ECON0311', 'None', 'CumSum_', 'T+S+R'), ('ECON0311', 'None', 'Diff_', 'T+S+R'), ('ECON0311', 'None', 'RelDiff_', 'T+S+R'), ('ECON0311', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0311', 'Transformations': [('ECON0311', 'None', 'CumSum_', 'T+S+R'), ('ECON0311', 'None', 'Diff_', 'T+S+R'), ('ECON0311', 'None', 'RelDiff_', 'T+S+R'), ('ECON0311', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'ECON0311', 'Transformations': [('ECON0311', 'None', 'CumSum_', 'T+S+R'), ('ECON0311', 'None', 'Diff_', 'T+S+R'), ('ECON0311', 'None', 'RelDiff_', 'T+S+R'), ('ECON0311', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0311', 'Model': '_ECON0311_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.035, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0311', 'Model': '_ECON0311_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0311'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.897, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0311'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.943, ('FINALIZE_TRAINING', {'Signals': ['ECON0311'], 'Transformations': [('ECON0311', [('ECON0311', 'None', 'CumSum_', 'T+S+R'), ('ECON0311', 'None', 'Diff_', 'T+S+R'), ('ECON0311', 'None', 'RelDiff_', 'T+S+R'), ('ECON0311', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=121 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0311' Length=179  Min=0.66 Max=3.99  Mean=2.071955307262569 StdDev=0.5980359644388753
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0311' Min=0.0 Max=1.0  Mean=0.4240106027815524 StdDev=0.17959037971137395
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0311_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0311_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0311_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0311_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0252 MAPE_Forecast=0.0833 MAPE_Test=0.0805
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0251 SMAPE_Forecast=0.0815 SMAPE_Test=0.0822
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9918 MASE_Forecast=0.9847 MASE_Test=1.0087
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.06937715946348733 CRPS_Forecast=0.08216774193548386 CRPS_Test=0.2855461538461539
INFO:pyaf.std:MODEL_L1 L1_Fit=0.054754098360655735 L1_Forecast=0.09354838709677418 L1_Test=0.18923076923076923
INFO:pyaf.std:MODEL_L2 L2_Fit=0.06917547182086542 L2_Forecast=0.11946115578687273 L2_Test=0.2772807519187284
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.13024233022735326 LnQ_Forecast=0.3662957437192035 LnQ_Test=0.31113768246769274
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.04999999999999982 MedAE_Forecast=0.06000000000000005 MedAE_Test=0.08999999999999986
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.3723723723723723
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0311_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None  CumSum_ECON0311             T+S+R  ...  0.0339       0.0816   0.0769
1   None  CumSum_ECON0311             T+S+R  ...  0.0339       0.0816   0.0769
2   None        _ECON0311             T+S+R  ...  0.0249       0.0828   0.0805
3   None        _ECON0311             T+S+R  ...  0.0249       0.0828   0.0805
4   None        _ECON0311             T+S+R  ...  0.0252       0.0833   0.0805
..   ...              ...               ...  ...     ...          ...      ...
59  None        _ECON0311             T+S+R  ...  0.0938       0.9622   0.4483
60  None        _ECON0311             T+S+R  ...  0.0812       1.1538   0.5124
61  None        _ECON0311             T+S+R  ...  0.0812       1.1538   0.5124
62  None  CumSum_ECON0311             T+S+R  ...  0.2030       1.9642   1.0018
63  None  CumSum_ECON0311             T+S+R  ...  0.2030       1.9642   1.0018

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0311             T+S+R  ...  0.0339       0.0816   0.0769
1  None  CumSum_ECON0311             T+S+R  ...  0.0339       0.0816   0.0769
2  None        _ECON0311             T+S+R  ...  0.0249       0.0828   0.0805
3  None        _ECON0311             T+S+R  ...  0.0249       0.0828   0.0805
4  None        _ECON0311             T+S+R  ...  0.0252       0.0833   0.0805

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0311'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.649, ('FORECASTING', {'Signals': ['ECON0311'], 'Horizon': 26}))
26 0     2.85
1     2.68
2     2.27
3     2.33
4     2.20
5     2.12
6     1.88
7     1.95
8     2.21
9     2.29
10    2.31
11    1.77
12    1.43
13    1.46
14    1.55
15    1.49
16    1.61
17    1.64
18    1.76
19    1.65
20    1.57
21    1.60
22    1.56
23    1.67
24    1.72
25    1.77
Name: ECON0311, dtype: float64
26 0     2.78
1     2.78
2     2.78
3     2.78
4     2.78
5     2.78
6     2.78
7     2.78
8     2.78
9     2.78
10    2.78
11    2.78
12    2.78
13    2.78
14    2.78
15    2.78
16    2.78
17    2.78
18    2.78
19    2.78
20    2.78
21    2.78
22    2.78
23    2.78
24    2.78
25    2.78
Name: ECON0311_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0311 ECON0311 [2.85, 2.68, 2.27, 2.33, 2.2, 2.12, 1.88, 1.95, 2.21, 2.29, 2.31, 1.77, 1.43, 1.46, 1.55, 1.49, 1.61, 1.64, 1.76, 1.65, 1.57, 1.6, 1.56, 1.67, 1.72, 1.77]
FORECAST_DETAIL_PREDICTED ECON0311 ECON0311 [2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78, 2.78]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0311 ECON0311 179 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0311 ECON0311 5.717968463897705
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0311 ECON0311 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0311 ECON0311 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0311 ECON0311 0.5208 0.3941 6.6844
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0311 ECON0311 0.8876923076923077 0.9608249660498082 -5.379207843705291
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0311_26'
