BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0912 N= 47 H= 18 HEAD= [95.9 93.3 98.4 94.  94.4] TAIL= [104.7  99.1 100.2  99.4 102.4]
   ECON0912  Date
0      95.9     0
1      93.3     1
2      98.4     2
3      94.0     3
4      94.4     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0912  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0912'], 'Transformations': [('ECON0912', 'None', '_', 'T+S+R'), ('ECON0912', 'None', 'Diff_', 'T+S+R'), ('ECON0912', 'None', 'RelDiff_', 'T+S+R'), ('ECON0912', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0912', 'Transformation': '_ECON0912'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.095, ('TRAINING', {'Signal': 'ECON0912', 'Transformation': '_ECON0912'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0912', 'Transformation': 'Diff_ECON0912'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.473, ('TRAINING', {'Signal': 'ECON0912', 'Transformation': 'Diff_ECON0912'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0912', 'Transformation': 'RelDiff_ECON0912'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.561, ('TRAINING', {'Signal': 'ECON0912', 'Transformation': 'RelDiff_ECON0912'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0912', 'Transformation': 'CumSum_ECON0912'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.436, ('TRAINING', {'Signal': 'ECON0912', 'Transformation': 'CumSum_ECON0912'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.566, ('SIGNAL_TRAINING', {'Signals': ['ECON0912'], 'Transformations': [('ECON0912', 'None', '_', 'T+S+R'), ('ECON0912', 'None', 'Diff_', 'T+S+R'), ('ECON0912', 'None', 'RelDiff_', 'T+S+R'), ('ECON0912', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0912'], 'Transformations': [('ECON0912', [('ECON0912', 'None', 'CumSum_', 'T+S+R'), ('ECON0912', 'None', 'Diff_', 'T+S+R'), ('ECON0912', 'None', 'RelDiff_', 'T+S+R'), ('ECON0912', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0912', 'Transformations': [('ECON0912', 'None', 'CumSum_', 'T+S+R'), ('ECON0912', 'None', 'Diff_', 'T+S+R'), ('ECON0912', 'None', 'RelDiff_', 'T+S+R'), ('ECON0912', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0912', 'Transformations': [('ECON0912', 'None', 'CumSum_', 'T+S+R'), ('ECON0912', 'None', 'Diff_', 'T+S+R'), ('ECON0912', 'None', 'RelDiff_', 'T+S+R'), ('ECON0912', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0912', 'Model': '_ECON0912_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0912', 'Model': '_ECON0912_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0912'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.353, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0912'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.379, ('FINALIZE_TRAINING', {'Signals': ['ECON0912'], 'Transformations': [('ECON0912', [('ECON0912', 'None', 'CumSum_', 'T+S+R'), ('ECON0912', 'None', 'Diff_', 'T+S+R'), ('ECON0912', 'None', 'RelDiff_', 'T+S+R'), ('ECON0912', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0912' Length=47  Min=89.5 Max=107.5  Mean=99.54468085106382 StdDev=3.8239897016819357
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0912' Min=0.0 Max=1.0  Mean=0.5580378250591017 StdDev=0.21244387231566308
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0912_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0912_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0912_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0912_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0302 MAPE_Forecast=0.0302 MAPE_Test=0.0302
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0301 SMAPE_Forecast=0.0301 SMAPE_Test=0.0301
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8382 MASE_Forecast=0.8382 MASE_Test=0.8382
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.3440257750759875 CRPS_Forecast=0.3440257750759875 CRPS_Test=0.3440257750759875
INFO:pyaf.std:MODEL_L1 L1_Fit=2.9903123585332745 L1_Forecast=2.9903123585332745 L1_Test=2.9903123585332745
INFO:pyaf.std:MODEL_L2 L2_Fit=3.823989701681935 L2_Forecast=3.823989701681935 L2_Test=3.823989701681935
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.07005531847264886 LnQ_Forecast=0.07005531847264886 LnQ_Test=0.07005531847264886
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.4553191489361694 MedAE_Forecast=2.4553191489361694 MedAE_Test=2.4553191489361694
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON0912_ConstantTrend 0.5580378250591017
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0912_ConstantTrend_residue_bestCycle_byMAPE None -0.008037825059101444 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0912  ...  2.440000e-02  2.440000e-02
1   None         _ECON0912  ...  2.440000e-02  2.440000e-02
2   None     Diff_ECON0912  ...  2.460000e-02  2.460000e-02
3   None     Diff_ECON0912  ...  2.460000e-02  2.460000e-02
4   None         _ECON0912  ...  2.470000e-02  2.470000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0912  ...  4.124999e+06  4.124999e+06
60  None  RelDiff_ECON0912  ...  4.681144e+06  4.681144e+06
61  None  RelDiff_ECON0912  ...  4.681144e+06  4.681144e+06
62  None  RelDiff_ECON0912  ...  4.689481e+06  4.689481e+06
63  None  RelDiff_ECON0912  ...  4.689481e+06  4.689481e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0912             T+S+R  ...  0.0244       0.0244   0.0244
1  None      _ECON0912             T+S+R  ...  0.0244       0.0244   0.0244
2  None  Diff_ECON0912             T+S+R  ...  0.0246       0.0246   0.0246
3  None  Diff_ECON0912             T+S+R  ...  0.0246       0.0246   0.0246
4  None      _ECON0912             T+S+R  ...  0.0247       0.0247   0.0247

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0912'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.267, ('FORECASTING', {'Signals': ['ECON0912'], 'Horizon': 18}))
18 0     107.3
1     102.3
2     102.7
3     104.4
4     101.5
5     102.3
6     104.9
7     103.4
8     106.5
9     107.5
10    106.6
11    104.3
12    106.6
13    102.0
14    100.6
15     98.0
16    101.4
17    103.9
Name: ECON0912, dtype: float64
18 0     99.544681
1     99.544681
2     99.544681
3     99.544681
4     99.544681
5     99.544681
6     99.544681
7     99.544681
8     99.544681
9     99.544681
10    99.544681
11    99.544681
12    99.544681
13    99.544681
14    99.544681
15    99.544681
16    99.544681
17    99.544681
Name: ECON0912_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0912 ECON0912 [107.3, 102.3, 102.7, 104.4, 101.5, 102.3, 104.9, 103.4, 106.5, 107.5, 106.6, 104.3, 106.6, 102.0, 100.6, 98.0, 101.4, 103.9]
FORECAST_DETAIL_PREDICTED ECON0912 ECON0912 [99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383, 99.54468085106383]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0912 ECON0912 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0912 ECON0912 3.315600872039795
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0912 ECON0912 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0912 ECON0912 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0912 ECON0912 0.041 0.0421 1.8764
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0912 ECON0912 4.304728132387706 4.841923027132299 -2.6851964033629656
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0912_18'
