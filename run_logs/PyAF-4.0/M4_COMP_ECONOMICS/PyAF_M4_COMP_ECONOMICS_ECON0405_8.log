BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0405 N= 235 H= 8 HEAD= [17.901 17.993 18.818 19.425 20.188] TAIL= [125.351 126.96  129.901 130.438 132.773]
   ECON0405  Date
0    17.901     0
1    17.993     1
2    18.818     2
3    19.425     3
4    20.188     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0405  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0405'], 'Transformations': [('ECON0405', 'None', '_', 'T+S+R'), ('ECON0405', 'None', 'Diff_', 'T+S+R'), ('ECON0405', 'None', 'RelDiff_', 'T+S+R'), ('ECON0405', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0405', 'Transformation': '_ECON0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.439, ('TRAINING', {'Signal': 'ECON0405', 'Transformation': '_ECON0405'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0405', 'Transformation': 'Diff_ECON0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.917, ('TRAINING', {'Signal': 'ECON0405', 'Transformation': 'Diff_ECON0405'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0405', 'Transformation': 'RelDiff_ECON0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.031, ('TRAINING', {'Signal': 'ECON0405', 'Transformation': 'RelDiff_ECON0405'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0405', 'Transformation': 'CumSum_ECON0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.888, ('TRAINING', {'Signal': 'ECON0405', 'Transformation': 'CumSum_ECON0405'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.276, ('SIGNAL_TRAINING', {'Signals': ['ECON0405'], 'Transformations': [('ECON0405', 'None', '_', 'T+S+R'), ('ECON0405', 'None', 'Diff_', 'T+S+R'), ('ECON0405', 'None', 'RelDiff_', 'T+S+R'), ('ECON0405', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0405'], 'Transformations': [('ECON0405', [('ECON0405', 'None', 'CumSum_', 'T+S+R'), ('ECON0405', 'None', 'Diff_', 'T+S+R'), ('ECON0405', 'None', 'RelDiff_', 'T+S+R'), ('ECON0405', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0405', 'Transformations': [('ECON0405', 'None', 'CumSum_', 'T+S+R'), ('ECON0405', 'None', 'Diff_', 'T+S+R'), ('ECON0405', 'None', 'RelDiff_', 'T+S+R'), ('ECON0405', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'ECON0405', 'Transformations': [('ECON0405', 'None', 'CumSum_', 'T+S+R'), ('ECON0405', 'None', 'Diff_', 'T+S+R'), ('ECON0405', 'None', 'RelDiff_', 'T+S+R'), ('ECON0405', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0405', 'Model': '_ECON0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.031, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0405', 'Model': '_ECON0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0405'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.173, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0405'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.213, ('FINALIZE_TRAINING', {'Signals': ['ECON0405'], 'Transformations': [('ECON0405', [('ECON0405', 'None', 'CumSum_', 'T+S+R'), ('ECON0405', 'None', 'Diff_', 'T+S+R'), ('ECON0405', 'None', 'RelDiff_', 'T+S+R'), ('ECON0405', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0405' Length=235  Min=17.901 Max=132.773  Mean=59.91904255319146 StdDev=36.168551083607866
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0405' Min=0.0 Max=1.0  Mean=0.36578141368820505 StdDev=0.3148595922732071
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0405_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0405_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0151 MAPE_Forecast=0.012 MAPE_Test=0.0136
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0153 SMAPE_Forecast=0.012 SMAPE_Test=0.0138
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9988 MASE_Test=0.8905
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.266372590055249 CRPS_Forecast=1.20725649689441 CRPS_Test=1.4809374999999996
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6451602209944751 L1_Forecast=1.3139130434782615 L1_Test=1.7420000000000009
INFO:pyaf.std:MODEL_L2 L2_Fit=0.9049804063688912 L2_Forecast=1.8389311167561213 L2_Test=2.1638920375101933
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.0706522665452731 LnQ_Forecast=0.013034516822356942 LnQ_Test=0.0023766736730742068
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4440000000000026 MedAE_Forecast=0.9420000000000002 MedAE_Test=1.4795000000000016
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0405_Lag1Trend_residue_bestCycle_byMAPE None 0.0029859321679782808 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0405             T+S+R  ...  0.0146       0.0111   0.0114
1   None         _ECON0405             T+S+R  ...  0.0146       0.0111   0.0114
2   None     Diff_ECON0405             T+S+R  ...  0.0130       0.0112   0.0105
3   None     Diff_ECON0405             T+S+R  ...  0.0130       0.0112   0.0105
4   None   CumSum_ECON0405             T+S+R  ...  0.0137       0.0118   0.0102
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0405             T+S+R  ...  0.4719       0.8364   0.8590
60  None  RelDiff_ECON0405             T+S+R  ...  0.4719       0.8364   0.8590
61  None  RelDiff_ECON0405             T+S+R  ...  0.4719       0.8364   0.8590
62  None  RelDiff_ECON0405             T+S+R  ...  0.4719       0.8364   0.8590
63  None  RelDiff_ECON0405             T+S+R  ...  0.4719       0.8364   0.8590

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0405             T+S+R  ...  0.0146       0.0111   0.0114
1  None        _ECON0405             T+S+R  ...  0.0146       0.0111   0.0114
2  None    Diff_ECON0405             T+S+R  ...  0.0130       0.0112   0.0105
3  None    Diff_ECON0405             T+S+R  ...  0.0130       0.0112   0.0105
4  None  CumSum_ECON0405             T+S+R  ...  0.0137       0.0118   0.0102

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0405'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.133, ('FORECASTING', {'Signals': ['ECON0405'], 'Horizon': 8}))
8 0    134.296
1    134.529
2    136.721
3    137.305
4    135.095
5    136.686
6    139.357
7    141.869
Name: ECON0405, dtype: float64
8 0    132.773
1    132.773
2    132.773
3    132.773
4    132.773
5    132.773
6    132.773
7    132.773
Name: ECON0405_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0405 ECON0405 [134.296, 134.529, 136.721, 137.305, 135.095, 136.686, 139.357, 141.869]
FORECAST_DETAIL_PREDICTED ECON0405 ECON0405 [132.773, 132.773, 132.773, 132.773, 132.773, 132.773, 132.773, 132.773]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0405 ECON0405 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0405 ECON0405 4.712197780609131
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0405 ECON0405 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0405 ECON0405 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0405 ECON0405 0.0304 0.0311 2.4568
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0405 ECON0405 4.209250000000004 4.851782121035532 -3.0432450736620966
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0405_8'
