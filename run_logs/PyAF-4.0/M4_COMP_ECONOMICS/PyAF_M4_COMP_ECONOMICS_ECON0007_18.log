BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0007 N= 815 H= 18 HEAD= [3988. 4001. 4002. 4002. 4006.] TAIL= [21985. 21999. 22054. 22059. 22074.]
   ECON0007  Date
0    3988.0     0
1    4001.0     1
2    4002.0     2
3    4002.0     3
4    4006.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0007  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0007'], 'Transformations': [('ECON0007', 'None', '_', 'T+S+R'), ('ECON0007', 'None', 'Diff_', 'T+S+R'), ('ECON0007', 'None', 'RelDiff_', 'T+S+R'), ('ECON0007', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0007', 'Transformation': '_ECON0007'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.208, ('TRAINING', {'Signal': 'ECON0007', 'Transformation': '_ECON0007'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0007', 'Transformation': 'Diff_ECON0007'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.758, ('TRAINING', {'Signal': 'ECON0007', 'Transformation': 'Diff_ECON0007'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0007', 'Transformation': 'RelDiff_ECON0007'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.783, ('TRAINING', {'Signal': 'ECON0007', 'Transformation': 'RelDiff_ECON0007'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0007', 'Transformation': 'CumSum_ECON0007'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.711, ('TRAINING', {'Signal': 'ECON0007', 'Transformation': 'CumSum_ECON0007'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.461, ('SIGNAL_TRAINING', {'Signals': ['ECON0007'], 'Transformations': [('ECON0007', 'None', '_', 'T+S+R'), ('ECON0007', 'None', 'Diff_', 'T+S+R'), ('ECON0007', 'None', 'RelDiff_', 'T+S+R'), ('ECON0007', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0007'], 'Transformations': [('ECON0007', [('ECON0007', 'None', 'CumSum_', 'T+S+R'), ('ECON0007', 'None', 'Diff_', 'T+S+R'), ('ECON0007', 'None', 'RelDiff_', 'T+S+R'), ('ECON0007', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0007', 'Transformations': [('ECON0007', 'None', 'CumSum_', 'T+S+R'), ('ECON0007', 'None', 'Diff_', 'T+S+R'), ('ECON0007', 'None', 'RelDiff_', 'T+S+R'), ('ECON0007', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0007', 'Transformations': [('ECON0007', 'None', 'CumSum_', 'T+S+R'), ('ECON0007', 'None', 'Diff_', 'T+S+R'), ('ECON0007', 'None', 'RelDiff_', 'T+S+R'), ('ECON0007', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0007', 'Model': '_ECON0007_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0007', 'Model': '_ECON0007_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0007'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.427, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0007'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.459, ('FINALIZE_TRAINING', {'Signals': ['ECON0007'], 'Transformations': [('ECON0007', [('ECON0007', 'None', 'CumSum_', 'T+S+R'), ('ECON0007', 'None', 'Diff_', 'T+S+R'), ('ECON0007', 'None', 'RelDiff_', 'T+S+R'), ('ECON0007', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0007' Length=815  Min=3988.0 Max=22074.0  Mean=13043.6245398773 StdDev=5618.910266497951
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0007' Min=0.0 Max=1.0  Mean=0.5006980283024052 StdDev=0.3106773342086671
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0007_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0007_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0007_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0007_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0038 MAPE_Forecast=0.0016 MAPE_Test=0.001
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0038 SMAPE_Forecast=0.0016 SMAPE_Test=0.001
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9939 MASE_Test=0.9719
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1360.2713707345288 CRPS_Forecast=275.0532615384616 CRPS_Test=27.5
INFO:pyaf.std:MODEL_L1 L1_Fit=35.45368916797488 L1_Forecast=31.86875 L1_Test=21.61111111111111
INFO:pyaf.std:MODEL_L2 L2_Fit=47.62200723403445 L2_Forecast=49.9565436154264 L2_Test=27.0914090523997
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.02032123355245821 LnQ_Forecast=0.00093838256391267 LnQ_Test=2.7527325194100048e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=28.99999999999818 MedAE_Forecast=24.0 MedAE_Test=14.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0007_Lag1Trend_residue_bestCycle_byMAPE None 0.0012717018688488402 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0007             T+S+R  ...  0.0031       0.0013   0.0009
1   None         _ECON0007             T+S+R  ...  0.0031       0.0013   0.0009
2   None   CumSum_ECON0007             T+S+R  ...  0.0028       0.0013   0.0008
3   None   CumSum_ECON0007             T+S+R  ...  0.0094       0.0014   0.0008
4   None   CumSum_ECON0007             T+S+R  ...  0.0094       0.0014   0.0008
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0007             T+S+R  ...  0.5583       0.8026   0.8180
60  None  RelDiff_ECON0007             T+S+R  ...  0.5583       0.8026   0.8180
61  None  RelDiff_ECON0007             T+S+R  ...  0.5583       0.8026   0.8180
62  None  RelDiff_ECON0007             T+S+R  ...  0.5583       0.8026   0.8180
63  None  RelDiff_ECON0007             T+S+R  ...  0.5583       0.8026   0.8180

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0007             T+S+R  ...  0.0031       0.0013   0.0009
1  None        _ECON0007             T+S+R  ...  0.0031       0.0013   0.0009
2  None  CumSum_ECON0007             T+S+R  ...  0.0028       0.0013   0.0008
3  None  CumSum_ECON0007             T+S+R  ...  0.0094       0.0014   0.0008
4  None  CumSum_ECON0007             T+S+R  ...  0.0094       0.0014   0.0008

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0007'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.317, ('FORECASTING', {'Signals': ['ECON0007'], 'Horizon': 18}))
18 0     22081.0
1     22112.0
2     22125.0
3     22150.0
4     22175.0
5     22203.0
6     22245.0
7     22165.0
8     22213.0
9     22263.0
10    22296.0
11    22325.0
12    22369.0
13    22391.0
14    22421.0
15    22441.0
16    22451.0
17    22488.0
Name: ECON0007, dtype: float64
18 0     22074.0
1     22074.0
2     22074.0
3     22074.0
4     22074.0
5     22074.0
6     22074.0
7     22074.0
8     22074.0
9     22074.0
10    22074.0
11    22074.0
12    22074.0
13    22074.0
14    22074.0
15    22074.0
16    22074.0
17    22074.0
Name: ECON0007_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0007 ECON0007 [22081.0, 22112.0, 22125.0, 22150.0, 22175.0, 22203.0, 22245.0, 22165.0, 22213.0, 22263.0, 22296.0, 22325.0, 22369.0, 22391.0, 22421.0, 22441.0, 22451.0, 22488.0]
FORECAST_DETAIL_PREDICTED ECON0007 ECON0007 [22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0, 22074.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0007 ECON0007 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0007 ECON0007 4.325803995132446
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0007 ECON0007 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0007 ECON0007 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0007 ECON0007 0.0089 0.009 5.9665
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0007 ECON0007 199.0 235.43081078454168 -2.502169334456612
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0007_18'
