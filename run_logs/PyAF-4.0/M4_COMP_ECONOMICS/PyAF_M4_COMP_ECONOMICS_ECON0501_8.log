BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0501 N= 235 H= 8 HEAD= [1218.6 1192.6 1225.6 1211.3 1231.1] TAIL= [9175.9 9303.4 9189.6 9253.  9308. ]
   ECON0501  Date
0    1218.6     0
1    1192.6     1
2    1225.6     2
3    1211.3     3
4    1231.1     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0501  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0501'], 'Transformations': [('ECON0501', 'None', '_', 'T+S+R'), ('ECON0501', 'None', 'Diff_', 'T+S+R'), ('ECON0501', 'None', 'RelDiff_', 'T+S+R'), ('ECON0501', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0501', 'Transformation': '_ECON0501'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.184, ('TRAINING', {'Signal': 'ECON0501', 'Transformation': '_ECON0501'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0501', 'Transformation': 'Diff_ECON0501'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('TRAINING', {'Signal': 'ECON0501', 'Transformation': 'Diff_ECON0501'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0501', 'Transformation': 'RelDiff_ECON0501'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.658, ('TRAINING', {'Signal': 'ECON0501', 'Transformation': 'RelDiff_ECON0501'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0501', 'Transformation': 'CumSum_ECON0501'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.547, ('TRAINING', {'Signal': 'ECON0501', 'Transformation': 'CumSum_ECON0501'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.972, ('SIGNAL_TRAINING', {'Signals': ['ECON0501'], 'Transformations': [('ECON0501', 'None', '_', 'T+S+R'), ('ECON0501', 'None', 'Diff_', 'T+S+R'), ('ECON0501', 'None', 'RelDiff_', 'T+S+R'), ('ECON0501', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0501'], 'Transformations': [('ECON0501', [('ECON0501', 'None', 'CumSum_', 'T+S+R'), ('ECON0501', 'None', 'Diff_', 'T+S+R'), ('ECON0501', 'None', 'RelDiff_', 'T+S+R'), ('ECON0501', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0501', 'Transformations': [('ECON0501', 'None', 'CumSum_', 'T+S+R'), ('ECON0501', 'None', 'Diff_', 'T+S+R'), ('ECON0501', 'None', 'RelDiff_', 'T+S+R'), ('ECON0501', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0501', 'Transformations': [('ECON0501', 'None', 'CumSum_', 'T+S+R'), ('ECON0501', 'None', 'Diff_', 'T+S+R'), ('ECON0501', 'None', 'RelDiff_', 'T+S+R'), ('ECON0501', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0501', 'Model': '_ECON0501_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0501', 'Model': '_ECON0501_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0501'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.17, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0501'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.199, ('FINALIZE_TRAINING', {'Signals': ['ECON0501'], 'Transformations': [('ECON0501', [('ECON0501', 'None', 'CumSum_', 'T+S+R'), ('ECON0501', 'None', 'Diff_', 'T+S+R'), ('ECON0501', 'None', 'RelDiff_', 'T+S+R'), ('ECON0501', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0501' Length=235  Min=1192.6 Max=9308.0  Mean=4231.49574468085 StdDev=2329.3909713181447
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0501' Min=0.0 Max=1.0  Mean=0.3744603771447929 StdDev=0.28703341441187674
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0501_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0501_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0501_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0501_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0109 MAPE_Forecast=0.0099 MAPE_Test=0.0082
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.011 SMAPE_Forecast=0.01 SMAPE_Test=0.0082
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9919 MASE_Test=0.9563
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=398.1594302762432 CRPS_Forecast=223.19699999999995 CRPS_Test=54.55625000000009
INFO:pyaf.std:MODEL_L1 L1_Fit=33.14530386740327 L1_Forecast=73.69347826086933 L1_Test=75.02499999999986
INFO:pyaf.std:MODEL_L2 L2_Fit=42.288245953885934 L2_Forecast=88.4131470156863 L2_Test=80.66917007134742
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.034930632147670566 LnQ_Forecast=0.006278175165146713 LnQ_Test=0.0006167598152954075
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=27.700000000000273 MedAE_Forecast=61.99999999999909 MedAE_Test=62.149999999999636
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0032037853956674964
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0501_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0501             T+S+R  ...  0.0081       0.0063   0.0048
1   None         _ECON0501             T+S+R  ...  0.0082       0.0074   0.0059
2   None         _ECON0501             T+S+R  ...  0.0082       0.0074   0.0059
3   None     Diff_ECON0501             T+S+R  ...  0.0089       0.0077   0.0079
4   None     Diff_ECON0501             T+S+R  ...  0.0089       0.0077   0.0079
..   ...               ...               ...  ...     ...          ...      ...
59  None   CumSum_ECON0501             T+S+R  ...  0.7327       0.5873   0.6717
60  None  RelDiff_ECON0501             T+S+R  ...  0.2474       0.6159   0.7809
61  None  RelDiff_ECON0501             T+S+R  ...  0.2474       0.6159   0.7809
62  None   CumSum_ECON0501             T+S+R  ...  1.0169       0.8365   0.8699
63  None   CumSum_ECON0501             T+S+R  ...  1.0169       0.8365   0.8699

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0501             T+S+R  ...  0.0081       0.0063   0.0048
1  None        _ECON0501             T+S+R  ...  0.0082       0.0074   0.0059
2  None        _ECON0501             T+S+R  ...  0.0082       0.0074   0.0059
3  None    Diff_ECON0501             T+S+R  ...  0.0089       0.0077   0.0079
4  None    Diff_ECON0501             T+S+R  ...  0.0089       0.0077   0.0079

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0501'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.129, ('FORECASTING', {'Signals': ['ECON0501'], 'Horizon': 8}))
8 0    9358.7
1    9533.8
2    9617.3
3    9662.5
4    9788.8
5    9830.2
6    9842.7
7    9883.9
Name: ECON0501, dtype: float64
8 0    9308.0
1    9308.0
2    9308.0
3    9308.0
4    9308.0
5    9308.0
6    9308.0
7    9308.0
Name: ECON0501_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0501 ECON0501 [9358.7, 9533.8, 9617.3, 9662.5, 9788.8, 9830.2, 9842.7, 9883.9]
FORECAST_DETAIL_PREDICTED ECON0501 ECON0501 [9308.0, 9308.0, 9308.0, 9308.0, 9308.0, 9308.0, 9308.0, 9308.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0501 ECON0501 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0501 ECON0501 3.4108963012695312
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0501 ECON0501 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0501 ECON0501 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0501 ECON0501 0.0391 0.04 5.0879
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0501 ECON0501 381.73749999999995 417.7797341303189 -5.056966967021837
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0501_8'
