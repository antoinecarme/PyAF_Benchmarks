BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0502 N= 235 H= 8 HEAD= [1131.5 1150.2 1154.  1154.3 1160.1] TAIL= [8555.8 8654.2 8719.  8802.9 8865.6]
   ECON0502  Date
0    1131.5     0
1    1150.2     1
2    1154.0     2
3    1154.3     3
4    1160.1     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0502  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0502'], 'Transformations': [('ECON0502', 'None', '_', 'T+S+R'), ('ECON0502', 'None', 'Diff_', 'T+S+R'), ('ECON0502', 'None', 'RelDiff_', 'T+S+R'), ('ECON0502', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0502', 'Transformation': '_ECON0502'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.141, ('TRAINING', {'Signal': 'ECON0502', 'Transformation': '_ECON0502'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0502', 'Transformation': 'Diff_ECON0502'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.574, ('TRAINING', {'Signal': 'ECON0502', 'Transformation': 'Diff_ECON0502'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0502', 'Transformation': 'RelDiff_ECON0502'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.656, ('TRAINING', {'Signal': 'ECON0502', 'Transformation': 'RelDiff_ECON0502'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0502', 'Transformation': 'CumSum_ECON0502'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.533, ('TRAINING', {'Signal': 'ECON0502', 'Transformation': 'CumSum_ECON0502'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.906, ('SIGNAL_TRAINING', {'Signals': ['ECON0502'], 'Transformations': [('ECON0502', 'None', '_', 'T+S+R'), ('ECON0502', 'None', 'Diff_', 'T+S+R'), ('ECON0502', 'None', 'RelDiff_', 'T+S+R'), ('ECON0502', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0502'], 'Transformations': [('ECON0502', [('ECON0502', 'None', 'CumSum_', 'T+S+R'), ('ECON0502', 'None', 'Diff_', 'T+S+R'), ('ECON0502', 'None', 'RelDiff_', 'T+S+R'), ('ECON0502', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0502', 'Transformations': [('ECON0502', 'None', 'CumSum_', 'T+S+R'), ('ECON0502', 'None', 'Diff_', 'T+S+R'), ('ECON0502', 'None', 'RelDiff_', 'T+S+R'), ('ECON0502', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0502', 'Transformations': [('ECON0502', 'None', 'CumSum_', 'T+S+R'), ('ECON0502', 'None', 'Diff_', 'T+S+R'), ('ECON0502', 'None', 'RelDiff_', 'T+S+R'), ('ECON0502', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0502', 'Model': '_ECON0502_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0502', 'Model': '_ECON0502_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0502'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.173, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0502'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.201, ('FINALIZE_TRAINING', {'Signals': ['ECON0502'], 'Transformations': [('ECON0502', [('ECON0502', 'None', 'CumSum_', 'T+S+R'), ('ECON0502', 'None', 'Diff_', 'T+S+R'), ('ECON0502', 'None', 'RelDiff_', 'T+S+R'), ('ECON0502', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0502' Length=235  Min=1131.5 Max=8865.6  Mean=3826.0680851063826 StdDev=2169.7965005184915
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0502' Min=0.0 Max=1.0  Mean=0.34840098849334555 StdDev=0.28054932060853766
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0502_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0502_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0502_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0502_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0104 MAPE_Forecast=0.0092 MAPE_Test=0.008
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0105 SMAPE_Forecast=0.0092 SMAPE_Test=0.0081
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9893 MASE_Test=0.9541
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=349.33196817679556 CRPS_Forecast=223.76881739130434 CRPS_Test=77.46249999999998
INFO:pyaf.std:MODEL_L1 L1_Fit=28.223204419889502 L1_Forecast=62.556521739130446 L1_Test=69.1875
INFO:pyaf.std:MODEL_L2 L2_Fit=35.13489710352285 L2_Forecast=68.71557003487199 L2_Test=71.27866967052633
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.029666076400384205 LnQ_Forecast=0.004631174364193149 LnQ_Test=0.0005503427140630588
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=23.09999999999991 MedAE_Forecast=59.500000000000455 MedAE_Test=68.69999999999891
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0502_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0502             T+S+R  ...  0.0078       0.0033   0.0018
1   None   CumSum_ECON0502             T+S+R  ...  0.0119       0.0045   0.0038
2   None         _ECON0502             T+S+R  ...  0.0076       0.0057   0.0052
3   None         _ECON0502             T+S+R  ...  0.0076       0.0057   0.0052
4   None   CumSum_ECON0502             T+S+R  ...  0.0305       0.0060   0.0065
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0502             T+S+R  ...  0.5052       0.8311   0.8685
60  None  RelDiff_ECON0502             T+S+R  ...  0.5052       0.8311   0.8685
61  None  RelDiff_ECON0502             T+S+R  ...  0.5052       0.8311   0.8685
62  None  RelDiff_ECON0502             T+S+R  ...  0.5052       0.8311   0.8685
63  None  RelDiff_ECON0502             T+S+R  ...  0.5052       0.8311   0.8685

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0502             T+S+R  ...  0.0078       0.0033   0.0018
1  None  CumSum_ECON0502             T+S+R  ...  0.0119       0.0045   0.0038
2  None        _ECON0502             T+S+R  ...  0.0076       0.0057   0.0052
3  None        _ECON0502             T+S+R  ...  0.0076       0.0057   0.0052
4  None  CumSum_ECON0502             T+S+R  ...  0.0305       0.0060   0.0065

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0502'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.133, ('FORECASTING', {'Signals': ['ECON0502'], 'Horizon': 8}))
8 0    8888.5
1    8986.6
2    9035.0
3    9090.7
4    9181.6
5    9265.1
6    9291.5
7    9335.6
Name: ECON0502, dtype: float64
8 0    8865.6
1    8865.6
2    8865.6
3    8865.6
4    8865.6
5    8865.6
6    8865.6
7    8865.6
Name: ECON0502_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0502 ECON0502 [8888.5, 8986.6, 9035.0, 9090.7, 9181.6, 9265.1, 9291.5, 9335.6]
FORECAST_DETAIL_PREDICTED ECON0502 ECON0502 [8865.6, 8865.6, 8865.6, 8865.6, 8865.6, 8865.6, 8865.6, 8865.6]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0502 ECON0502 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0502 ECON0502 3.3418915271759033
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0502 ECON0502 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0502 ECON0502 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0502 ECON0502 0.0292 0.0297 4.2073
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0502 ECON0502 268.7249999999999 307.46520941400826 -3.2351044317326716
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0502_8'
