BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 515 H= 18 HEAD= [0 1 2 3 4] TAIL= [510 511 512 513 514]
SIGNAL :  ECON0001 N= 515 H= 18 HEAD= [50.9 51.6 51.7 51.9 52. ] TAIL= [105.9 106.1 105.8 106.2 106.5]
   ECON0001  Date
0      50.9     0
1      51.6     1
2      51.7     2
3      51.9     3
4      52.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 515 entries, 0 to 514
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0001  515 non-null    float64
 1   Date      515 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 12.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0001'], 'Transformations': [('ECON0001', 'None', '_', 'T+S+R'), ('ECON0001', 'None', 'Diff_', 'T+S+R'), ('ECON0001', 'None', 'RelDiff_', 'T+S+R'), ('ECON0001', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0001', 'Transformation': '_ECON0001'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.233, ('TRAINING', {'Signal': 'ECON0001', 'Transformation': '_ECON0001'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0001', 'Transformation': 'Diff_ECON0001'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.708, ('TRAINING', {'Signal': 'ECON0001', 'Transformation': 'Diff_ECON0001'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0001', 'Transformation': 'RelDiff_ECON0001'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.773, ('TRAINING', {'Signal': 'ECON0001', 'Transformation': 'RelDiff_ECON0001'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0001', 'Transformation': 'CumSum_ECON0001'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.636, ('TRAINING', {'Signal': 'ECON0001', 'Transformation': 'CumSum_ECON0001'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.354, ('SIGNAL_TRAINING', {'Signals': ['ECON0001'], 'Transformations': [('ECON0001', 'None', '_', 'T+S+R'), ('ECON0001', 'None', 'Diff_', 'T+S+R'), ('ECON0001', 'None', 'RelDiff_', 'T+S+R'), ('ECON0001', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0001'], 'Transformations': [('ECON0001', [('ECON0001', 'None', 'CumSum_', 'T+S+R'), ('ECON0001', 'None', 'Diff_', 'T+S+R'), ('ECON0001', 'None', 'RelDiff_', 'T+S+R'), ('ECON0001', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0001', 'Transformations': [('ECON0001', 'None', 'CumSum_', 'T+S+R'), ('ECON0001', 'None', 'Diff_', 'T+S+R'), ('ECON0001', 'None', 'RelDiff_', 'T+S+R'), ('ECON0001', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0001', 'Transformations': [('ECON0001', 'None', 'CumSum_', 'T+S+R'), ('ECON0001', 'None', 'Diff_', 'T+S+R'), ('ECON0001', 'None', 'RelDiff_', 'T+S+R'), ('ECON0001', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0001', 'Model': '_ECON0001_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0001', 'Model': '_ECON0001_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0001'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.42, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0001'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.453, ('FINALIZE_TRAINING', {'Signals': ['ECON0001'], 'Transformations': [('ECON0001', [('ECON0001', 'None', 'CumSum_', 'T+S+R'), ('ECON0001', 'None', 'Diff_', 'T+S+R'), ('ECON0001', 'None', 'RelDiff_', 'T+S+R'), ('ECON0001', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=396 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0001' Length=515  Min=50.9 Max=106.5  Mean=78.03320388349518 StdDev=16.153104977518787
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0001' Min=0.0 Max=1.0  Mean=0.48800726409163947 StdDev=0.2905234708186833
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0001_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0001_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0001_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0001_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0042 MAPE_Forecast=0.0029 MAPE_Test=0.0029
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0042 SMAPE_Forecast=0.0029 SMAPE_Test=0.0029
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9975 MASE_Forecast=1.0213 MASE_Test=1.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.4459431260771574 CRPS_Forecast=0.6240000000000001 CRPS_Test=0.463888888888889
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2977329974811084 L1_Forecast=0.29400000000000076 L1_Test=0.29999999999999954
INFO:pyaf.std:MODEL_L2 L2_Fit=0.405690008345703 L2_Forecast=0.35099857549568575 L2_Test=0.33166247903553947
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.013171412962685248 LnQ_Forecast=0.00123120947405799 LnQ_Test=0.0001804987284094833
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.20000000000000284 MedAE_Forecast=0.29999999999999716 MedAE_Test=0.29999999999999716
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0001_Lag1Trend_residue_bestCycle_byMAPE None 0.0017985611510792365 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0001             T+S+R  ...  0.0047       0.0023   0.0018
1   None   CumSum_ECON0001             T+S+R  ...  0.0047       0.0023   0.0018
2   None   CumSum_ECON0001             T+S+R  ...  0.0061       0.0023   0.0016
3   None   CumSum_ECON0001             T+S+R  ...  0.0061       0.0023   0.0016
4   None   CumSum_ECON0001             T+S+R  ...  0.0050       0.0023   0.0018
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0001             T+S+R  ...  0.2662       0.4930   0.5141
60  None  RelDiff_ECON0001             T+S+R  ...  0.2662       0.4930   0.5141
61  None  RelDiff_ECON0001             T+S+R  ...  0.2662       0.4930   0.5141
62  None  RelDiff_ECON0001             T+S+R  ...  0.2662       0.4930   0.5141
63  None  RelDiff_ECON0001             T+S+R  ...  0.2662       0.4930   0.5141

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0001             T+S+R  ...  0.0047       0.0023   0.0018
1  None  CumSum_ECON0001             T+S+R  ...  0.0047       0.0023   0.0018
2  None  CumSum_ECON0001             T+S+R  ...  0.0061       0.0023   0.0016
3  None  CumSum_ECON0001             T+S+R  ...  0.0061       0.0023   0.0016
4  None  CumSum_ECON0001             T+S+R  ...  0.0050       0.0023   0.0018

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0001'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.307, ('FORECASTING', {'Signals': ['ECON0001'], 'Horizon': 18}))
18 0     107.1
1     106.6
2     106.6
3     107.2
4     106.9
5     107.4
6     107.5
7     107.3
8     107.2
9     107.3
10    107.5
11    107.7
12    107.8
13    107.5
14    107.6
15    107.5
16    107.4
17    106.9
Name: ECON0001, dtype: float64
18 0     106.5
1     106.5
2     106.5
3     106.5
4     106.5
5     106.5
6     106.5
7     106.5
8     106.5
9     106.5
10    106.5
11    106.5
12    106.5
13    106.5
14    106.5
15    106.5
16    106.5
17    106.5
Name: ECON0001_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0001 ECON0001 [107.1, 106.6, 106.6, 107.2, 106.9, 107.4, 107.5, 107.3, 107.2, 107.3, 107.5, 107.7, 107.8, 107.5, 107.6, 107.5, 107.4, 106.9]
FORECAST_DETAIL_PREDICTED ECON0001 ECON0001 [106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5, 106.5]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0001 ECON0001 515 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0001 ECON0001 4.211508750915527
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0001 ECON0001 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0001 ECON0001 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0001 ECON0001 0.0072 0.0073 3.3056
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0001 ECON0001 0.7777777777777778 0.8472176684759225 -5.3610503279143735
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0001_18'
