BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 719 H= 18 HEAD= [0 1 2 3 4] TAIL= [714 715 716 717 718]
SIGNAL :  ECON0110 N= 719 H= 18 HEAD= [13.2 13.3 13.3 13.4 13.5] TAIL= [336.9 338.1 339.1 340.  340.8]
   ECON0110  Date
0      13.2     0
1      13.3     1
2      13.3     2
3      13.4     3
4      13.5     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 719 entries, 0 to 718
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0110  719 non-null    float64
 1   Date      719 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 16.9 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0110'], 'Transformations': [('ECON0110', 'None', '_', 'T+S+R'), ('ECON0110', 'None', 'Diff_', 'T+S+R'), ('ECON0110', 'None', 'RelDiff_', 'T+S+R'), ('ECON0110', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0110', 'Transformation': '_ECON0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.961, ('TRAINING', {'Signal': 'ECON0110', 'Transformation': '_ECON0110'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0110', 'Transformation': 'Diff_ECON0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.044, ('TRAINING', {'Signal': 'ECON0110', 'Transformation': 'Diff_ECON0110'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0110', 'Transformation': 'RelDiff_ECON0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.805, ('TRAINING', {'Signal': 'ECON0110', 'Transformation': 'RelDiff_ECON0110'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0110', 'Transformation': 'CumSum_ECON0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.677, ('TRAINING', {'Signal': 'ECON0110', 'Transformation': 'CumSum_ECON0110'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.49, ('SIGNAL_TRAINING', {'Signals': ['ECON0110'], 'Transformations': [('ECON0110', 'None', '_', 'T+S+R'), ('ECON0110', 'None', 'Diff_', 'T+S+R'), ('ECON0110', 'None', 'RelDiff_', 'T+S+R'), ('ECON0110', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0110'], 'Transformations': [('ECON0110', [('ECON0110', 'None', 'CumSum_', 'T+S+R'), ('ECON0110', 'None', 'Diff_', 'T+S+R'), ('ECON0110', 'None', 'RelDiff_', 'T+S+R'), ('ECON0110', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0110', 'Transformations': [('ECON0110', 'None', 'CumSum_', 'T+S+R'), ('ECON0110', 'None', 'Diff_', 'T+S+R'), ('ECON0110', 'None', 'RelDiff_', 'T+S+R'), ('ECON0110', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0110', 'Transformations': [('ECON0110', 'None', 'CumSum_', 'T+S+R'), ('ECON0110', 'None', 'Diff_', 'T+S+R'), ('ECON0110', 'None', 'RelDiff_', 'T+S+R'), ('ECON0110', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0110', 'Model': '_ECON0110_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.04, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0110', 'Model': '_ECON0110_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0110'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.448, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0110'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.494, ('FINALIZE_TRAINING', {'Signals': ['ECON0110'], 'Transformations': [('ECON0110', [('ECON0110', 'None', 'CumSum_', 'T+S+R'), ('ECON0110', 'None', 'Diff_', 'T+S+R'), ('ECON0110', 'None', 'RelDiff_', 'T+S+R'), ('ECON0110', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=559 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0110' Length=719  Min=13.2 Max=340.8  Mean=104.22837273991657 StdDev=98.82266933172345
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0110' Min=0.0 Max=1.0  Mean=0.27786438565298077 StdDev=0.3016564997915856
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0110_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0110_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0110_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0110_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.005 MAPE_Forecast=0.0033 MAPE_Test=0.0032
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.005 SMAPE_Forecast=0.0033 SMAPE_Test=0.0032
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9982 MASE_Forecast=0.9996 MASE_Test=0.9914
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=13.811459116541352 CRPS_Forecast=9.698838426821409 CRPS_Test=2.1168981481481484
INFO:pyaf.std:MODEL_L1 L1_Fit=0.3410714285714288 L1_Forecast=0.843971631205672 L1_Test=1.0555555555555556
INFO:pyaf.std:MODEL_L2 L2_Fit=0.4941442819952203 L2_Forecast=0.8974352739456933 L2_Test=1.138712723502585
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.01984186282294397 LnQ_Forecast=0.0016559723535291247 LnQ_Test=0.00021352167630838583
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.19999999999999574 MedAE_Forecast=0.8000000000000114 MedAE_Test=1.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0110_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON0110             T+S+R  ...  0.0036       0.0009   0.0013
1   None     Diff_ECON0110             T+S+R  ...  0.0036       0.0009   0.0013
2   None   CumSum_ECON0110             T+S+R  ...  0.0024       0.0010   0.0011
3   None   CumSum_ECON0110             T+S+R  ...  0.0197       0.0011   0.0011
4   None   CumSum_ECON0110             T+S+R  ...  0.0197       0.0011   0.0011
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0110             T+S+R  ...  0.5769       0.9477   0.9602
60  None  RelDiff_ECON0110             T+S+R  ...  0.5769       0.9477   0.9602
61  None  RelDiff_ECON0110             T+S+R  ...  0.5769       0.9477   0.9602
62  None  RelDiff_ECON0110             T+S+R  ...  0.5769       0.9477   0.9602
63  None  RelDiff_ECON0110             T+S+R  ...  0.5769       0.9477   0.9602

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON0110             T+S+R  ...  0.0036       0.0009   0.0013
1  None    Diff_ECON0110             T+S+R  ...  0.0036       0.0009   0.0013
2  None  CumSum_ECON0110             T+S+R  ...  0.0024       0.0010   0.0011
3  None  CumSum_ECON0110             T+S+R  ...  0.0197       0.0011   0.0011
4  None  CumSum_ECON0110             T+S+R  ...  0.0197       0.0011   0.0011

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0110'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.32, ('FORECASTING', {'Signals': ['ECON0110'], 'Horizon': 18}))
18 0     341.300
1     343.665
2     345.368
3     345.877
4     347.302
5     348.473
6     349.591
7     351.687
8     353.314
9     354.553
10    356.349
11    357.735
12    358.829
13    360.540
14    360.961
15    361.752
16    362.300
17    362.793
Name: ECON0110, dtype: float64
18 0     340.8
1     340.8
2     340.8
3     340.8
4     340.8
5     340.8
6     340.8
7     340.8
8     340.8
9     340.8
10    340.8
11    340.8
12    340.8
13    340.8
14    340.8
15    340.8
16    340.8
17    340.8
Name: ECON0110_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0110 ECON0110 [341.3, 343.665, 345.368, 345.877, 347.302, 348.473, 349.591, 351.687, 353.314, 354.553, 356.349, 357.735, 358.829, 360.54, 360.961, 361.752, 362.3, 362.793]
FORECAST_DETAIL_PREDICTED ECON0110 ECON0110 [340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8, 340.8]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0110 ECON0110 719 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0110 ECON0110 4.40730094909668
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0110 ECON0110 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0110 ECON0110 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0110 ECON0110 0.0355 0.0363 10.0183
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0110 ECON0110 12.666055555555554 14.39999557677401 -3.4184073101458194
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0110_18'
