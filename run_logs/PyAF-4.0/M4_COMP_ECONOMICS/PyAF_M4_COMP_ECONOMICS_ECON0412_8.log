BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 75 H= 8 HEAD= [0 1 2 3 4] TAIL= [70 71 72 73 74]
SIGNAL :  ECON0412 N= 75 H= 8 HEAD= [97.852 97.354 97.181 96.425 97.166] TAIL= [121.058 120.999 119.713 120.67  120.486]
   ECON0412  Date
0    97.852     0
1    97.354     1
2    97.181     2
3    96.425     3
4    97.166     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 75 entries, 0 to 74
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0412  75 non-null     float64
 1   Date      75 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0412'], 'Transformations': [('ECON0412', 'None', '_', 'T+S+R'), ('ECON0412', 'None', 'Diff_', 'T+S+R'), ('ECON0412', 'None', 'RelDiff_', 'T+S+R'), ('ECON0412', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0412', 'Transformation': '_ECON0412'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.923, ('TRAINING', {'Signal': 'ECON0412', 'Transformation': '_ECON0412'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0412', 'Transformation': 'Diff_ECON0412'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.487, ('TRAINING', {'Signal': 'ECON0412', 'Transformation': 'Diff_ECON0412'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0412', 'Transformation': 'RelDiff_ECON0412'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.594, ('TRAINING', {'Signal': 'ECON0412', 'Transformation': 'RelDiff_ECON0412'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0412', 'Transformation': 'CumSum_ECON0412'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.481, ('TRAINING', {'Signal': 'ECON0412', 'Transformation': 'CumSum_ECON0412'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.486, ('SIGNAL_TRAINING', {'Signals': ['ECON0412'], 'Transformations': [('ECON0412', 'None', '_', 'T+S+R'), ('ECON0412', 'None', 'Diff_', 'T+S+R'), ('ECON0412', 'None', 'RelDiff_', 'T+S+R'), ('ECON0412', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0412'], 'Transformations': [('ECON0412', [('ECON0412', 'None', 'CumSum_', 'T+S+R'), ('ECON0412', 'None', 'Diff_', 'T+S+R'), ('ECON0412', 'None', 'RelDiff_', 'T+S+R'), ('ECON0412', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0412', 'Transformations': [('ECON0412', 'None', 'CumSum_', 'T+S+R'), ('ECON0412', 'None', 'Diff_', 'T+S+R'), ('ECON0412', 'None', 'RelDiff_', 'T+S+R'), ('ECON0412', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0412', 'Transformations': [('ECON0412', 'None', 'CumSum_', 'T+S+R'), ('ECON0412', 'None', 'Diff_', 'T+S+R'), ('ECON0412', 'None', 'RelDiff_', 'T+S+R'), ('ECON0412', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0412', 'Model': '_ECON0412_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0412', 'Model': '_ECON0412_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0412'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.164, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0412'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('FINALIZE_TRAINING', {'Signals': ['ECON0412'], 'Transformations': [('ECON0412', [('ECON0412', 'None', 'CumSum_', 'T+S+R'), ('ECON0412', 'None', 'Diff_', 'T+S+R'), ('ECON0412', 'None', 'RelDiff_', 'T+S+R'), ('ECON0412', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=52 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0412' Length=75  Min=95.076 Max=123.976  Mean=104.42438666666668 StdDev=8.629249354597551
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0412' Min=0.0 Max=1.0  Mean=0.3234735870818917 StdDev=0.2985899430656591
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0412_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0412_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0412_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0412_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.007 MAPE_Forecast=0.0099 MAPE_Test=0.014
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0071 SMAPE_Forecast=0.01 SMAPE_Test=0.0139
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9811 MASE_Forecast=1.0335 MASE_Test=0.9646
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.7642840711590295 CRPS_Forecast=1.1438835476190474 CRPS_Test=0.7376875000000007
INFO:pyaf.std:MODEL_L1 L1_Fit=0.7064339622641507 L1_Forecast=1.1451428571428568 L1_Test=1.6718750000000018
INFO:pyaf.std:MODEL_L2 L2_Fit=0.9287900934742189 L2_Forecast=1.455042365608055 L2_Test=2.4864903729956405
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.004418482533001587 LnQ_Forecast=0.002223449689543389 LnQ_Test=0.0033949531143223706
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5619999999999976 MedAE_Forecast=0.897500000000008 MedAE_Test=1.2644999999999982
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.09605536332179965
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0412_Lag1Trend_residue_bestCycle_byMAPE None 0.007474048442906861 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0   None   CumSum_ECON0412             T+S+R  ...  0.0088       0.0077    0.0146
1   None   CumSum_ECON0412             T+S+R  ...  0.0075       0.0080    0.0150
2   None   CumSum_ECON0412             T+S+R  ...  0.0085       0.0081    0.0146
3   None   CumSum_ECON0412             T+S+R  ...  0.0085       0.0081    0.0146
4   None         _ECON0412             T+S+R  ...  0.0069       0.0086    0.0140
..   ...               ...               ...  ...     ...          ...       ...
59  None  RelDiff_ECON0412             T+S+R  ...  7.0195      40.9591   42.5264
60  None  RelDiff_ECON0412             T+S+R  ...  6.4516      54.1988   97.7344
61  None  RelDiff_ECON0412             T+S+R  ...  6.4516      54.1988   97.7344
62  None  RelDiff_ECON0412             T+S+R  ...  4.9976      94.9054  367.1295
63  None  RelDiff_ECON0412             T+S+R  ...  4.9976      94.9054  367.1295

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0412             T+S+R  ...  0.0088       0.0077   0.0146
1  None  CumSum_ECON0412             T+S+R  ...  0.0075       0.0080   0.0150
2  None  CumSum_ECON0412             T+S+R  ...  0.0085       0.0081   0.0146
3  None  CumSum_ECON0412             T+S+R  ...  0.0085       0.0081   0.0146
4  None        _ECON0412             T+S+R  ...  0.0069       0.0086   0.0140

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0412'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.125, ('FORECASTING', {'Signals': ['ECON0412'], 'Horizon': 8}))
8 0    117.856
1    118.891
2    117.337
3    116.721
4    119.860
5    121.107
6    119.856
7    119.199
Name: ECON0412, dtype: float64
8 0    120.486
1    120.486
2    120.486
3    120.486
4    120.486
5    120.486
6    120.486
7    120.486
Name: ECON0412_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0412 ECON0412 [117.856, 118.891, 117.337, 116.721, 119.86, 121.107, 119.856, 119.199]
FORECAST_DETAIL_PREDICTED ECON0412 ECON0412 [120.486, 120.486, 120.486, 120.486, 120.486, 120.486, 120.486, 120.486]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0412 ECON0412 75 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0412 ECON0412 2.8798329830169678
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0412 ECON0412 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0412 ECON0412 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0412 ECON0412 0.0152 0.015 1.3175
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0412 ECON0412 1.7878750000000032 2.132578750011359 -1.4159716954445543
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0412_8'
