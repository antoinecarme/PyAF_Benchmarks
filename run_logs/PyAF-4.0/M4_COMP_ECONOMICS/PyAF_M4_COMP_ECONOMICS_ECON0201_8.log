BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 159 H= 8 HEAD= [0 1 2 3 4] TAIL= [154 155 156 157 158]
SIGNAL :  ECON0201 N= 159 H= 8 HEAD= [320999. 316097. 324748. 329319. 330947.] TAIL= [7379053. 7596143. 7776939. 7836496. 7932710.]
   ECON0201  Date
0  320999.0     0
1  316097.0     1
2  324748.0     2
3  329319.0     3
4  330947.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 159 entries, 0 to 158
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0201  159 non-null    float64
 1   Date      159 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.7 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0201'], 'Transformations': [('ECON0201', 'None', '_', 'T+S+R'), ('ECON0201', 'None', 'Diff_', 'T+S+R'), ('ECON0201', 'None', 'RelDiff_', 'T+S+R'), ('ECON0201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0201', 'Transformation': '_ECON0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.729, ('TRAINING', {'Signal': 'ECON0201', 'Transformation': '_ECON0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0201', 'Transformation': 'Diff_ECON0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.557, ('TRAINING', {'Signal': 'ECON0201', 'Transformation': 'Diff_ECON0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0201', 'Transformation': 'RelDiff_ECON0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.631, ('TRAINING', {'Signal': 'ECON0201', 'Transformation': 'RelDiff_ECON0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0201', 'Transformation': 'CumSum_ECON0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.52, ('TRAINING', {'Signal': 'ECON0201', 'Transformation': 'CumSum_ECON0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.438, ('SIGNAL_TRAINING', {'Signals': ['ECON0201'], 'Transformations': [('ECON0201', 'None', '_', 'T+S+R'), ('ECON0201', 'None', 'Diff_', 'T+S+R'), ('ECON0201', 'None', 'RelDiff_', 'T+S+R'), ('ECON0201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0201'], 'Transformations': [('ECON0201', [('ECON0201', 'None', 'CumSum_', 'T+S+R'), ('ECON0201', 'None', 'Diff_', 'T+S+R'), ('ECON0201', 'None', 'RelDiff_', 'T+S+R'), ('ECON0201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0201', 'Transformations': [('ECON0201', 'None', 'CumSum_', 'T+S+R'), ('ECON0201', 'None', 'Diff_', 'T+S+R'), ('ECON0201', 'None', 'RelDiff_', 'T+S+R'), ('ECON0201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0201', 'Transformations': [('ECON0201', 'None', 'CumSum_', 'T+S+R'), ('ECON0201', 'None', 'Diff_', 'T+S+R'), ('ECON0201', 'None', 'RelDiff_', 'T+S+R'), ('ECON0201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0201', 'Model': '_ECON0201_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0201', 'Model': '_ECON0201_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.2, ('FINALIZE_TRAINING', {'Signals': ['ECON0201'], 'Transformations': [('ECON0201', [('ECON0201', 'None', 'CumSum_', 'T+S+R'), ('ECON0201', 'None', 'Diff_', 'T+S+R'), ('ECON0201', 'None', 'RelDiff_', 'T+S+R'), ('ECON0201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=119 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0201' Length=159  Min=316097.0 Max=7932710.0  Mean=2739715.132075472 StdDev=2328326.5048870505
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0201' Min=0.0 Max=1.0  Mean=0.3182015591543737 StdDev=0.3056905352664039
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0201_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0201_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0201_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0201_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0238 MAPE_Forecast=0.0121 MAPE_Test=0.0193
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0242 SMAPE_Forecast=0.0122 SMAPE_Test=0.0196
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9917 MASE_Forecast=1.0282 MASE_Test=1.0759
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=413843.54685185186 CRPS_Forecast=108754.37741935482 CRPS_Test=163689.625
INFO:pyaf.std:MODEL_L1 L1_Fit=39360.916666666664 L1_Forecast=70802.80645161291 L1_Test=143673.75
INFO:pyaf.std:MODEL_L2 L2_Fit=53404.02959858616 L2_Forecast=87725.30304510119 L2_Test=153256.09536246836
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.08939693656802948 LnQ_Forecast=0.006829162538861996 LnQ_Test=0.003526584893676016
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=23265.5 MedAE_Forecast=62593.0 MedAE_Test=138185.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0006435931561705971
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0201_Lag1Trend_residue_bestCycle_byMAPE None 0.003054572944693393 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0201             T+S+R  ...  0.0376       0.0095   0.0138
1   None         _ECON0201             T+S+R  ...  0.0376       0.0095   0.0138
2   None   CumSum_ECON0201             T+S+R  ...  0.0134       0.0104   0.0078
3   None     Diff_ECON0201             T+S+R  ...  0.0190       0.0109   0.0169
4   None     Diff_ECON0201             T+S+R  ...  0.0190       0.0109   0.0169
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0201             T+S+R  ...  0.5493       0.8871   0.9266
60  None  RelDiff_ECON0201             T+S+R  ...  0.5493       0.8871   0.9266
61  None  RelDiff_ECON0201             T+S+R  ...  0.5619       0.8873   0.8778
62  None   CumSum_ECON0201             T+S+R  ...  1.4795       0.9447   0.9577
63  None   CumSum_ECON0201             T+S+R  ...  1.4795       0.9447   0.9577

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0201             T+S+R  ...  0.0376       0.0095   0.0138
1  None        _ECON0201             T+S+R  ...  0.0376       0.0095   0.0138
2  None  CumSum_ECON0201             T+S+R  ...  0.0134       0.0104   0.0078
3  None    Diff_ECON0201             T+S+R  ...  0.0190       0.0109   0.0169
4  None    Diff_ECON0201             T+S+R  ...  0.0190       0.0109   0.0169

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0201'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.14, ('FORECASTING', {'Signals': ['ECON0201'], 'Horizon': 8}))
8 0    8170413.0
1    8371156.0
2    8420042.0
3    8506974.0
4    8680224.0
5    8849665.0
6    8867677.0
7    9007653.0
Name: ECON0201, dtype: float64
8 0    7932710.0
1    7932710.0
2    7932710.0
3    7932710.0
4    7932710.0
5    7932710.0
6    7932710.0
7    7932710.0
Name: ECON0201_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0201 ECON0201 [8170413.0, 8371156.0, 8420042.0, 8506974.0, 8680224.0, 8849665.0, 8867677.0, 9007653.0]
FORECAST_DETAIL_PREDICTED ECON0201 ECON0201 [7932710.0, 7932710.0, 7932710.0, 7932710.0, 7932710.0, 7932710.0, 7932710.0, 7932710.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0201 ECON0201 159 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0201 ECON0201 2.8859481811523438
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0201 ECON0201 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0201 ECON0201 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0201 ECON0201 0.0777 0.0813 5.6562
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0201 ECON0201 676515.5 728462.3040696753 -6.2708614569639405
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0201_8'
