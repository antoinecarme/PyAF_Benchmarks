BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 18 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON0901 N= 47 H= 18 HEAD= [101.8  99.5 112.  111.2 100. ] TAIL= [103.2  99.   96.   97.1  95.7]
   ECON0901  Date
0     101.8     0
1      99.5     1
2     112.0     2
3     111.2     3
4     100.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0901  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0901'], 'Transformations': [('ECON0901', 'None', '_', 'T+S+R'), ('ECON0901', 'None', 'Diff_', 'T+S+R'), ('ECON0901', 'None', 'RelDiff_', 'T+S+R'), ('ECON0901', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0901', 'Transformation': '_ECON0901'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.141, ('TRAINING', {'Signal': 'ECON0901', 'Transformation': '_ECON0901'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0901', 'Transformation': 'Diff_ECON0901'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.483, ('TRAINING', {'Signal': 'ECON0901', 'Transformation': 'Diff_ECON0901'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0901', 'Transformation': 'RelDiff_ECON0901'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.559, ('TRAINING', {'Signal': 'ECON0901', 'Transformation': 'RelDiff_ECON0901'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0901', 'Transformation': 'CumSum_ECON0901'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.431, ('TRAINING', {'Signal': 'ECON0901', 'Transformation': 'CumSum_ECON0901'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.617, ('SIGNAL_TRAINING', {'Signals': ['ECON0901'], 'Transformations': [('ECON0901', 'None', '_', 'T+S+R'), ('ECON0901', 'None', 'Diff_', 'T+S+R'), ('ECON0901', 'None', 'RelDiff_', 'T+S+R'), ('ECON0901', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0901'], 'Transformations': [('ECON0901', [('ECON0901', 'None', 'CumSum_', 'T+S+R'), ('ECON0901', 'None', 'Diff_', 'T+S+R'), ('ECON0901', 'None', 'RelDiff_', 'T+S+R'), ('ECON0901', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0901', 'Transformations': [('ECON0901', 'None', 'CumSum_', 'T+S+R'), ('ECON0901', 'None', 'Diff_', 'T+S+R'), ('ECON0901', 'None', 'RelDiff_', 'T+S+R'), ('ECON0901', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0901', 'Transformations': [('ECON0901', 'None', 'CumSum_', 'T+S+R'), ('ECON0901', 'None', 'Diff_', 'T+S+R'), ('ECON0901', 'None', 'RelDiff_', 'T+S+R'), ('ECON0901', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0901', 'Model': '_ECON0901_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0901', 'Model': '_ECON0901_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0901'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.347, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0901'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.375, ('FINALIZE_TRAINING', {'Signals': ['ECON0901'], 'Transformations': [('ECON0901', [('ECON0901', 'None', 'CumSum_', 'T+S+R'), ('ECON0901', 'None', 'Diff_', 'T+S+R'), ('ECON0901', 'None', 'RelDiff_', 'T+S+R'), ('ECON0901', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0901' Length=47  Min=86.1 Max=112.0  Mean=100.25319148936167 StdDev=4.905786902581948
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0901' Min=0.0 Max=1.0  Mean=0.5464552698595254 StdDev=0.1894126217213107
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0901_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0901_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0901_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0901_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.038 MAPE_Forecast=0.038 MAPE_Test=0.038
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0378 SMAPE_Forecast=0.0378 SMAPE_Test=0.0378
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7898 MASE_Forecast=0.7898 MASE_Test=0.7898
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4657091793313059 CRPS_Forecast=0.4657091793313059 CRPS_Test=0.4657091793313059
INFO:pyaf.std:MODEL_L1 L1_Fit=3.7859665006790384 L1_Forecast=3.7859665006790384 L1_Test=3.7859665006790384
INFO:pyaf.std:MODEL_L2 L2_Fit=4.905786902581949 L2_Forecast=4.905786902581949 L2_Test=4.905786902581949
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.11350618676743092 LnQ_Forecast=0.11350618676743092 LnQ_Test=0.11350618676743092
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.9468085106382915 MedAE_Forecast=2.9468085106382915 MedAE_Test=2.9468085106382915
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _ECON0901_ConstantTrend 0.5464552698595254
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0901_ConstantTrend_residue_bestCycle_byMAPE None 0.017251293847038496 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None         _ECON0901  ...  3.140000e-02  3.140000e-02
1   None         _ECON0901  ...  3.140000e-02  3.140000e-02
2   None         _ECON0901  ...  3.260000e-02  3.260000e-02
3   None         _ECON0901  ...  3.260000e-02  3.260000e-02
4   None         _ECON0901  ...  3.260000e-02  3.260000e-02
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0901  ...  6.050180e+06  6.050180e+06
60  None  RelDiff_ECON0901  ...  9.423065e+06  9.423065e+06
61  None  RelDiff_ECON0901  ...  9.423065e+06  9.423065e+06
62  None  RelDiff_ECON0901  ...  9.544702e+06  9.544702e+06
63  None  RelDiff_ECON0901  ...  9.544702e+06  9.544702e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None      _ECON0901             T+S+R  ...  0.0314       0.0314   0.0314
1  None      _ECON0901             T+S+R  ...  0.0314       0.0314   0.0314
2  None      _ECON0901             T+S+R  ...  0.0326       0.0326   0.0326
3  None      _ECON0901             T+S+R  ...  0.0326       0.0326   0.0326
4  None      _ECON0901             T+S+R  ...  0.0326       0.0326   0.0326

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0901'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.272, ('FORECASTING', {'Signals': ['ECON0901'], 'Horizon': 18}))
18 0     100.7
1      94.4
2      95.5
3     104.5
4     100.4
5      98.0
6     100.1
7      96.6
8      95.5
9      95.5
10     98.7
11     93.9
12     98.6
13     94.0
14     92.9
15     92.2
16     97.3
17     95.4
Name: ECON0901, dtype: float64
18 0     100.253191
1     100.253191
2     100.253191
3     100.253191
4     100.253191
5     100.253191
6     100.253191
7     100.253191
8     100.253191
9     100.253191
10    100.253191
11    100.253191
12    100.253191
13    100.253191
14    100.253191
15    100.253191
16    100.253191
17    100.253191
Name: ECON0901_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0901 ECON0901 [100.7, 94.4, 95.5, 104.5, 100.4, 98.0, 100.1, 96.6, 95.5, 95.5, 98.7, 93.9, 98.6, 94.0, 92.9, 92.2, 97.3, 95.4]
FORECAST_DETAIL_PREDICTED ECON0901 ECON0901 [100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171, 100.25319148936171]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0901 ECON0901 47 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0901 ECON0901 3.383391857147217
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0901 ECON0901 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0901 ECON0901 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0901 ECON0901 0.0408 0.0398 1.1876
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0901 ECON0901 3.891016548463363 4.5616156796438085 -1.1755929191315242
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0901_18'
