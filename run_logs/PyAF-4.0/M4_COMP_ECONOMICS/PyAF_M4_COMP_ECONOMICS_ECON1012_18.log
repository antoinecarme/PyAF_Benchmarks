BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 324 H= 18 HEAD= [0 1 2 3 4] TAIL= [319 320 321 322 323]
SIGNAL :  ECON1012 N= 324 H= 18 HEAD= [43.5 44.8 42.1 39.4 38.8] TAIL= [ 70.   72.7  76.5 100.2 145. ]
   ECON1012  Date
0      43.5     0
1      44.8     1
2      42.1     2
3      39.4     3
4      38.8     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 324 entries, 0 to 323
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1012  324 non-null    float64
 1   Date      324 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 7.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1012'], 'Transformations': [('ECON1012', 'None', '_', 'T+S+R'), ('ECON1012', 'None', 'Diff_', 'T+S+R'), ('ECON1012', 'None', 'RelDiff_', 'T+S+R'), ('ECON1012', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1012', 'Transformation': '_ECON1012'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.911, ('TRAINING', {'Signal': 'ECON1012', 'Transformation': '_ECON1012'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1012', 'Transformation': 'Diff_ECON1012'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.643, ('TRAINING', {'Signal': 'ECON1012', 'Transformation': 'Diff_ECON1012'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1012', 'Transformation': 'RelDiff_ECON1012'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.719, ('TRAINING', {'Signal': 'ECON1012', 'Transformation': 'RelDiff_ECON1012'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1012', 'Transformation': 'CumSum_ECON1012'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.59, ('TRAINING', {'Signal': 'ECON1012', 'Transformation': 'CumSum_ECON1012'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.866, ('SIGNAL_TRAINING', {'Signals': ['ECON1012'], 'Transformations': [('ECON1012', 'None', '_', 'T+S+R'), ('ECON1012', 'None', 'Diff_', 'T+S+R'), ('ECON1012', 'None', 'RelDiff_', 'T+S+R'), ('ECON1012', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1012'], 'Transformations': [('ECON1012', [('ECON1012', 'None', 'CumSum_', 'T+S+R'), ('ECON1012', 'None', 'Diff_', 'T+S+R'), ('ECON1012', 'None', 'RelDiff_', 'T+S+R'), ('ECON1012', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1012', 'Transformations': [('ECON1012', 'None', 'CumSum_', 'T+S+R'), ('ECON1012', 'None', 'Diff_', 'T+S+R'), ('ECON1012', 'None', 'RelDiff_', 'T+S+R'), ('ECON1012', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1012', 'Transformations': [('ECON1012', 'None', 'CumSum_', 'T+S+R'), ('ECON1012', 'None', 'Diff_', 'T+S+R'), ('ECON1012', 'None', 'RelDiff_', 'T+S+R'), ('ECON1012', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1012', 'Model': '_ECON1012_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1012', 'Model': '_ECON1012_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1012'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.403, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1012'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.434, ('FINALIZE_TRAINING', {'Signals': ['ECON1012'], 'Transformations': [('ECON1012', [('ECON1012', 'None', 'CumSum_', 'T+S+R'), ('ECON1012', 'None', 'Diff_', 'T+S+R'), ('ECON1012', 'None', 'RelDiff_', 'T+S+R'), ('ECON1012', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=243 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1012' Length=324  Min=24.2 Max=145.0  Mean=53.81882716049386 StdDev=15.323377922968765
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1012' Min=0.0 Max=1.0  Mean=0.2451889665603795 StdDev=0.1268491549914633
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1012_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1012_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1012_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1012_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0622 MAPE_Forecast=0.0625 MAPE_Test=0.0626
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0623 SMAPE_Forecast=0.0623 SMAPE_Test=0.0681
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9959 MASE_Forecast=0.9987 MASE_Test=0.9462
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.880865978784957 CRPS_Forecast=3.2023579723502302 CRPS_Test=3.7319444444444443
INFO:pyaf.std:MODEL_L1 L1_Fit=2.948360655737705 L1_Forecast=4.445161290322581 L1_Test=5.994444444444442
INFO:pyaf.std:MODEL_L2 L2_Fit=3.81213549722204 L2_Forecast=6.701035066893916 L2_Test=12.308601328610276
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.5709501278261224 LnQ_Forecast=0.4822718502343081 LnQ_Test=0.24461494078569432
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.200000000000003 MedAE_Forecast=3.249999999999993 MedAE_Test=2.6000000000000014
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1597682119205298
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON1012_Lag1Trend_residue_bestCycle_byMAPE None 0.0012417218543046005 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ... ForecastMAPE     TestMAPE
0   None         _ECON1012  ...       0.0622       0.0590
1   None         _ECON1012  ...       0.0622       0.0590
2   None         _ECON1012  ...       0.0625       0.0626
3   None         _ECON1012  ...       0.0625       0.0626
4   None   CumSum_ECON1012  ...       0.0625       0.0626
..   ...               ...  ...          ...          ...
59  None  RelDiff_ECON1012  ...    9074.5441     319.4563
60  None  RelDiff_ECON1012  ...   87343.0395  311324.8267
61  None  RelDiff_ECON1012  ...   87343.0395  311324.8267
62  None  RelDiff_ECON1012  ...  115022.3545  499047.0029
63  None  RelDiff_ECON1012  ...  115022.3545  499047.0029

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1012             T+S+R  ...  0.0568       0.0622   0.0590
1  None        _ECON1012             T+S+R  ...  0.0568       0.0622   0.0590
2  None        _ECON1012             T+S+R  ...  0.0622       0.0625   0.0626
3  None        _ECON1012             T+S+R  ...  0.0622       0.0625   0.0626
4  None  CumSum_ECON1012             T+S+R  ...  0.0639       0.0625   0.0626

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1012'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.293, ('FORECASTING', {'Signals': ['ECON1012'], 'Horizon': 18}))
18 0     152.7
1     148.1
2     146.4
3     118.0
4      99.3
5      89.5
6      79.7
7      71.5
8      73.0
9      75.6
10     70.7
11     75.4
12     69.0
13     76.4
14     74.7
15     77.8
16     77.9
17     82.6
Name: ECON1012, dtype: float64
18 0     145.0
1     145.0
2     145.0
3     145.0
4     145.0
5     145.0
6     145.0
7     145.0
8     145.0
9     145.0
10    145.0
11    145.0
12    145.0
13    145.0
14    145.0
15    145.0
16    145.0
17    145.0
Name: ECON1012_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1012 ECON1012 [152.7, 148.1, 146.4, 118.0, 99.3, 89.5, 79.7, 71.5, 73.0, 75.6, 70.7, 75.4, 69.0, 76.4, 74.7, 77.8, 77.9, 82.6]
FORECAST_DETAIL_PREDICTED ECON1012 ECON1012 [145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0, 145.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1012 ECON1012 324 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1012 ECON1012 3.696817636489868
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1012 ECON1012 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1012 ECON1012 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1012 ECON1012 0.6965 0.485 7.7927
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1012 ECON1012 54.227777777777774 59.784803903481844 -3.589686895312574
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1012_18'
