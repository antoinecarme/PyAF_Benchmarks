BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 719 H= 18 HEAD= [0 1 2 3 4] TAIL= [714 715 716 717 718]
SIGNAL :  ECON0104 N= 719 H= 18 HEAD= [22.8 23.1 23.8 23.5 23.4] TAIL= [195.1 195.7 196.3 196.9 197. ]
   ECON0104  Date
0      22.8     0
1      23.1     1
2      23.8     2
3      23.5     3
4      23.4     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 719 entries, 0 to 718
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0104  719 non-null    float64
 1   Date      719 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 16.9 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0104'], 'Transformations': [('ECON0104', 'None', '_', 'T+S+R'), ('ECON0104', 'None', 'Diff_', 'T+S+R'), ('ECON0104', 'None', 'RelDiff_', 'T+S+R'), ('ECON0104', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0104', 'Transformation': '_ECON0104'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.033, ('TRAINING', {'Signal': 'ECON0104', 'Transformation': '_ECON0104'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0104', 'Transformation': 'Diff_ECON0104'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.926, ('TRAINING', {'Signal': 'ECON0104', 'Transformation': 'Diff_ECON0104'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0104', 'Transformation': 'RelDiff_ECON0104'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.769, ('TRAINING', {'Signal': 'ECON0104', 'Transformation': 'RelDiff_ECON0104'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0104', 'Transformation': 'CumSum_ECON0104'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.674, ('TRAINING', {'Signal': 'ECON0104', 'Transformation': 'CumSum_ECON0104'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.404, ('SIGNAL_TRAINING', {'Signals': ['ECON0104'], 'Transformations': [('ECON0104', 'None', '_', 'T+S+R'), ('ECON0104', 'None', 'Diff_', 'T+S+R'), ('ECON0104', 'None', 'RelDiff_', 'T+S+R'), ('ECON0104', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0104'], 'Transformations': [('ECON0104', [('ECON0104', 'None', 'CumSum_', 'T+S+R'), ('ECON0104', 'None', 'Diff_', 'T+S+R'), ('ECON0104', 'None', 'RelDiff_', 'T+S+R'), ('ECON0104', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0104', 'Transformations': [('ECON0104', 'None', 'CumSum_', 'T+S+R'), ('ECON0104', 'None', 'Diff_', 'T+S+R'), ('ECON0104', 'None', 'RelDiff_', 'T+S+R'), ('ECON0104', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON0104', 'Transformations': [('ECON0104', 'None', 'CumSum_', 'T+S+R'), ('ECON0104', 'None', 'Diff_', 'T+S+R'), ('ECON0104', 'None', 'RelDiff_', 'T+S+R'), ('ECON0104', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0104', 'Model': '_ECON0104_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0104', 'Model': '_ECON0104_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0104'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.427, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0104'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.457, ('FINALIZE_TRAINING', {'Signals': ['ECON0104'], 'Transformations': [('ECON0104', [('ECON0104', 'None', 'CumSum_', 'T+S+R'), ('ECON0104', 'None', 'Diff_', 'T+S+R'), ('ECON0104', 'None', 'RelDiff_', 'T+S+R'), ('ECON0104', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=559 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0104' Length=719  Min=22.8 Max=197.0  Mean=83.92906815020861 StdDev=56.35413337428504
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0104' Min=0.0 Max=1.0  Mean=0.35091313519063483 StdDev=0.32350248779727325
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0104_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0104_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0104_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0104_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0052 MAPE_Forecast=0.0023 MAPE_Test=0.002
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0052 SMAPE_Forecast=0.0024 SMAPE_Test=0.002
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9982 MASE_Forecast=0.9984 MASE_Test=0.9581
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=10.516058270676691 CRPS_Forecast=4.0207805286911675 CRPS_Test=0.6930555555555561
INFO:pyaf.std:MODEL_L1 L1_Fit=0.28267857142857133 L1_Forecast=0.38652482269503585 L1_Test=0.3888888888888873
INFO:pyaf.std:MODEL_L2 L2_Fit=0.4124188231813447 L2_Forecast=0.48341280833508277 L2_Test=0.44095855184409666
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.03213908800429528 LnQ_Forecast=0.001206919084435231 LnQ_Test=9.312559857187849e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1999999999999993 MedAE_Forecast=0.30000000000001137 MedAE_Test=0.4000000000000057
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0104_Lag1Trend_residue_bestCycle_byMAPE None 0.0005740528128588274 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0104             T+S+R  ...  0.0056       0.0016   0.0013
1   None         _ECON0104             T+S+R  ...  0.0056       0.0016   0.0013
2   None   CumSum_ECON0104             T+S+R  ...  0.0045       0.0016   0.0012
3   None   CumSum_ECON0104             T+S+R  ...  0.0055       0.0018   0.0015
4   None   CumSum_ECON0104             T+S+R  ...  0.0122       0.0019   0.0015
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0104             T+S+R  ...  0.4663       0.8608   0.8823
60  None  RelDiff_ECON0104             T+S+R  ...  0.4663       0.8608   0.8823
61  None  RelDiff_ECON0104             T+S+R  ...  0.4663       0.8608   0.8823
62  None  RelDiff_ECON0104             T+S+R  ...  0.4663       0.8608   0.8823
63  None  RelDiff_ECON0104             T+S+R  ...  0.4663       0.8608   0.8823

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0104             T+S+R  ...  0.0056       0.0016   0.0013
1  None        _ECON0104             T+S+R  ...  0.0056       0.0016   0.0013
2  None  CumSum_ECON0104             T+S+R  ...  0.0045       0.0016   0.0012
3  None  CumSum_ECON0104             T+S+R  ...  0.0055       0.0018   0.0015
4  None  CumSum_ECON0104             T+S+R  ...  0.0122       0.0019   0.0015

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0104'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.324, ('FORECASTING', {'Signals': ['ECON0104'], 'Horizon': 18}))
18 0     197.100
1     198.311
2     199.787
3     200.434
4     200.944
5     201.718
6     202.580
7     203.205
8     204.056
9     205.009
10    205.648
11    206.464
12    206.847
13    208.112
14    208.927
15    209.423
16    211.199
17    211.969
Name: ECON0104, dtype: float64
18 0     197.0
1     197.0
2     197.0
3     197.0
4     197.0
5     197.0
6     197.0
7     197.0
8     197.0
9     197.0
10    197.0
11    197.0
12    197.0
13    197.0
14    197.0
15    197.0
16    197.0
17    197.0
Name: ECON0104_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0104 ECON0104 [197.1, 198.311, 199.787, 200.434, 200.944, 201.718, 202.58, 203.205, 204.056, 205.009, 205.648, 206.464, 206.847, 208.112, 208.927, 209.423, 211.199, 211.969]
FORECAST_DETAIL_PREDICTED ECON0104 ECON0104 [197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0104 ECON0104 719 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0104 ECON0104 4.28833270072937
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0104 ECON0104 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0104 ECON0104 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0104 ECON0104 0.0364 0.0373 8.6214
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0104 ECON0104 7.5407222222222225 8.659403113250807 -3.137626842294532
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0104_18'
