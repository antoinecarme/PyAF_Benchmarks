BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 75 H= 8 HEAD= [0 1 2 3 4] TAIL= [70 71 72 73 74]
SIGNAL :  ECON0409 N= 75 H= 8 HEAD= [103.087 102.906 103.627 105.46  106.038] TAIL= [85.186 84.798 84.595 84.017 83.695]
   ECON0409  Date
0   103.087     0
1   102.906     1
2   103.627     2
3   105.460     3
4   106.038     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 75 entries, 0 to 74
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0409  75 non-null     float64
 1   Date      75 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0409'], 'Transformations': [('ECON0409', 'None', '_', 'T+S+R'), ('ECON0409', 'None', 'Diff_', 'T+S+R'), ('ECON0409', 'None', 'RelDiff_', 'T+S+R'), ('ECON0409', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0409', 'Transformation': '_ECON0409'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.969, ('TRAINING', {'Signal': 'ECON0409', 'Transformation': '_ECON0409'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0409', 'Transformation': 'Diff_ECON0409'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.491, ('TRAINING', {'Signal': 'ECON0409', 'Transformation': 'Diff_ECON0409'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0409', 'Transformation': 'RelDiff_ECON0409'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.598, ('TRAINING', {'Signal': 'ECON0409', 'Transformation': 'RelDiff_ECON0409'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0409', 'Transformation': 'CumSum_ECON0409'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.459, ('TRAINING', {'Signal': 'ECON0409', 'Transformation': 'CumSum_ECON0409'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.52, ('SIGNAL_TRAINING', {'Signals': ['ECON0409'], 'Transformations': [('ECON0409', 'None', '_', 'T+S+R'), ('ECON0409', 'None', 'Diff_', 'T+S+R'), ('ECON0409', 'None', 'RelDiff_', 'T+S+R'), ('ECON0409', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0409'], 'Transformations': [('ECON0409', [('ECON0409', 'None', 'CumSum_', 'T+S+R'), ('ECON0409', 'None', 'Diff_', 'T+S+R'), ('ECON0409', 'None', 'RelDiff_', 'T+S+R'), ('ECON0409', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0409', 'Transformations': [('ECON0409', 'None', 'CumSum_', 'T+S+R'), ('ECON0409', 'None', 'Diff_', 'T+S+R'), ('ECON0409', 'None', 'RelDiff_', 'T+S+R'), ('ECON0409', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0409', 'Transformations': [('ECON0409', 'None', 'CumSum_', 'T+S+R'), ('ECON0409', 'None', 'Diff_', 'T+S+R'), ('ECON0409', 'None', 'RelDiff_', 'T+S+R'), ('ECON0409', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0409', 'Model': '_ECON0409_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0409', 'Model': '_ECON0409_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0409'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.164, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0409'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('FINALIZE_TRAINING', {'Signals': ['ECON0409'], 'Transformations': [('ECON0409', [('ECON0409', 'None', 'CumSum_', 'T+S+R'), ('ECON0409', 'None', 'Diff_', 'T+S+R'), ('ECON0409', 'None', 'RelDiff_', 'T+S+R'), ('ECON0409', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=52 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0409' Length=75  Min=83.695 Max=108.02  Mean=100.20577333333331 StdDev=7.468110323365312
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0409' Min=0.0 Max=1.0  Mean=0.6787573826652966 StdDev=0.3070137851332091
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0409_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0409_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0409_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0409_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.006 MAPE_Forecast=0.0155 MAPE_Test=0.0047
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.006 SMAPE_Forecast=0.0153 SMAPE_Test=0.0047
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9811 MASE_Forecast=0.9295 MASE_Test=1.2399
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.6878127568733152 CRPS_Forecast=2.0671255714285715 CRPS_Test=0.22250000000000103
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6229433962264149 L1_Forecast=1.443714285714286 L1_Test=0.3949999999999996
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7951184793641853 L2_Forecast=1.6424740485012241 L2_Test=0.4645204516487956
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.0031095409879176275 LnQ_Forecast=0.004219228326096349 LnQ_Test=0.00024032947864102981
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.578000000000003 MedAE_Forecast=1.4470000000000027 MedAE_Test=0.3369999999999962
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7972045220966087
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0409_Lag1Trend_residue_bestCycle_byMAPE None 0.004193216855087556 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0409             T+S+R  ...  0.0113       0.0097   0.0070
1   None   CumSum_ECON0409             T+S+R  ...  0.0113       0.0097   0.0070
2   None   CumSum_ECON0409             T+S+R  ...  0.0138       0.0136   0.0083
3   None   CumSum_ECON0409             T+S+R  ...  0.0138       0.0136   0.0083
4   None     Diff_ECON0409             T+S+R  ...  0.0061       0.0145   0.0038
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0409             T+S+R  ...  0.0184       0.1309   0.2535
60  None         _ECON0409             T+S+R  ...  0.0174       0.1420   0.2883
61  None         _ECON0409             T+S+R  ...  0.0174       0.1420   0.2883
62  None   CumSum_ECON0409             T+S+R  ...  0.0758       0.2768   0.4985
63  None   CumSum_ECON0409             T+S+R  ...  0.0758       0.2768   0.4985

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0409             T+S+R  ...  0.0113       0.0097   0.0070
1  None  CumSum_ECON0409             T+S+R  ...  0.0113       0.0097   0.0070
2  None  CumSum_ECON0409             T+S+R  ...  0.0138       0.0136   0.0083
3  None  CumSum_ECON0409             T+S+R  ...  0.0138       0.0136   0.0083
4  None    Diff_ECON0409             T+S+R  ...  0.0061       0.0145   0.0038

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0409'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.125, ('FORECASTING', {'Signals': ['ECON0409'], 'Horizon': 8}))
8 0    84.738
1    85.403
2    85.433
3    84.786
4    84.071
5    83.678
6    83.761
7    83.421
Name: ECON0409, dtype: float64
8 0    83.695
1    83.695
2    83.695
3    83.695
4    83.695
5    83.695
6    83.695
7    83.695
Name: ECON0409_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0409 ECON0409 [84.738, 85.403, 85.433, 84.786, 84.071, 83.678, 83.761, 83.421]
FORECAST_DETAIL_PREDICTED ECON0409 ECON0409 [83.695, 83.695, 83.695, 83.695, 83.695, 83.695, 83.695, 83.695]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0409 ECON0409 75 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0409 ECON0409 2.9181926250457764
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0409 ECON0409 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0409 ECON0409 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0409 ECON0409 0.0093 0.0094 1.9227
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0409 ECON0409 0.7891250000000039 1.026957581889347 -0.94781483087784
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0409_8'
