BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0402 N= 235 H= 8 HEAD= [32.13  32.307 32.065 32.452 33.209] TAIL= [135.038 135.838 136.926 136.475 137.572]
   ECON0402  Date
0    32.130     0
1    32.307     1
2    32.065     2
3    32.452     3
4    33.209     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0402  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0402'], 'Transformations': [('ECON0402', 'None', '_', 'T+S+R'), ('ECON0402', 'None', 'Diff_', 'T+S+R'), ('ECON0402', 'None', 'RelDiff_', 'T+S+R'), ('ECON0402', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0402', 'Transformation': '_ECON0402'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.244, ('TRAINING', {'Signal': 'ECON0402', 'Transformation': '_ECON0402'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0402', 'Transformation': 'Diff_ECON0402'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.54, ('TRAINING', {'Signal': 'ECON0402', 'Transformation': 'Diff_ECON0402'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0402', 'Transformation': 'RelDiff_ECON0402'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.746, ('TRAINING', {'Signal': 'ECON0402', 'Transformation': 'RelDiff_ECON0402'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0402', 'Transformation': 'CumSum_ECON0402'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.568, ('TRAINING', {'Signal': 'ECON0402', 'Transformation': 'CumSum_ECON0402'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.101, ('SIGNAL_TRAINING', {'Signals': ['ECON0402'], 'Transformations': [('ECON0402', 'None', '_', 'T+S+R'), ('ECON0402', 'None', 'Diff_', 'T+S+R'), ('ECON0402', 'None', 'RelDiff_', 'T+S+R'), ('ECON0402', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0402'], 'Transformations': [('ECON0402', [('ECON0402', 'None', 'CumSum_', 'T+S+R'), ('ECON0402', 'None', 'Diff_', 'T+S+R'), ('ECON0402', 'None', 'RelDiff_', 'T+S+R'), ('ECON0402', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0402', 'Transformations': [('ECON0402', 'None', 'CumSum_', 'T+S+R'), ('ECON0402', 'None', 'Diff_', 'T+S+R'), ('ECON0402', 'None', 'RelDiff_', 'T+S+R'), ('ECON0402', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0402', 'Transformations': [('ECON0402', 'None', 'CumSum_', 'T+S+R'), ('ECON0402', 'None', 'Diff_', 'T+S+R'), ('ECON0402', 'None', 'RelDiff_', 'T+S+R'), ('ECON0402', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0402', 'Model': '_ECON0402_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0402', 'Model': '_ECON0402_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0402'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.175, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0402'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.207, ('FINALIZE_TRAINING', {'Signals': ['ECON0402'], 'Transformations': [('ECON0402', [('ECON0402', 'None', 'CumSum_', 'T+S+R'), ('ECON0402', 'None', 'Diff_', 'T+S+R'), ('ECON0402', 'None', 'RelDiff_', 'T+S+R'), ('ECON0402', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0402' Length=235  Min=32.065 Max=137.572  Mean=76.09782127659568 StdDev=27.588819461490118
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0402' Min=0.0 Max=1.0  Mean=0.4173450223833085 StdDev=0.2614880478213779
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0402_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0402_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0402_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0402_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0086 MAPE_Forecast=0.0078 MAPE_Test=0.0052
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0087 SMAPE_Forecast=0.0079 SMAPE_Test=0.0053
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9938 MASE_Test=0.9221
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.274737921915286 CRPS_Forecast=2.329761291925466 CRPS_Test=0.6659374999999965
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5334640883977901 L1_Forecast=0.8926086956521739 L1_Test=0.7118749999999991
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6825652094806544 L2_Forecast=1.1230259201778492 L2_Test=0.7765723565772851
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.02328480322999238 LnQ_Forecast=0.004287500317338658 LnQ_Test=0.00026235801077876907
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4380000000000024 MedAE_Forecast=0.7404999999999973 MedAE_Test=0.7764999999999986
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0006160728672031697
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0402_Lag1Trend_residue_bestCycle_byMAPE None 0.003269925218231995 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0402             T+S+R  ...  0.0079       0.0059   0.0037
1   None         _ECON0402             T+S+R  ...  0.0071       0.0065   0.0035
2   None         _ECON0402             T+S+R  ...  0.0071       0.0065   0.0035
3   None   CumSum_ECON0402             T+S+R  ...  0.0221       0.0074   0.0027
4   None   CumSum_ECON0402             T+S+R  ...  0.0221       0.0074   0.0027
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0402             T+S+R  ...  0.4050       0.6718   0.7497
60  None  RelDiff_ECON0402             T+S+R  ...  0.3967       0.6810   0.7575
61  None  RelDiff_ECON0402             T+S+R  ...  0.3967       0.6810   0.7575
62  None   CumSum_ECON0402             T+S+R  ...  0.7881       0.7084   0.7632
63  None   CumSum_ECON0402             T+S+R  ...  0.7881       0.7084   0.7632

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0402             T+S+R  ...  0.0079       0.0059   0.0037
1  None        _ECON0402             T+S+R  ...  0.0071       0.0065   0.0035
2  None        _ECON0402             T+S+R  ...  0.0071       0.0065   0.0035
3  None  CumSum_ECON0402             T+S+R  ...  0.0221       0.0074   0.0027
4  None  CumSum_ECON0402             T+S+R  ...  0.0221       0.0074   0.0027

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0402'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.134, ('FORECASTING', {'Signals': ['ECON0402'], 'Horizon': 8}))
8 0    137.589
1    138.537
2    138.744
3    137.958
4    138.669
5    138.980
6    140.181
7    142.083
Name: ECON0402, dtype: float64
8 0    137.572
1    137.572
2    137.572
3    137.572
4    137.572
5    137.572
6    137.572
7    137.572
Name: ECON0402_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0402 ECON0402 [137.589, 138.537, 138.744, 137.958, 138.669, 138.98, 140.181, 142.083]
FORECAST_DETAIL_PREDICTED ECON0402 ECON0402 [137.572, 137.572, 137.572, 137.572, 137.572, 137.572, 137.572, 137.572]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0402 ECON0402 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0402 ECON0402 3.5403077602386475
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0402 ECON0402 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0402 ECON0402 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0402 ECON0402 0.0108 0.0109 1.7548
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0402 ECON0402 1.520624999999999 2.0247212462460107 -1.2938148553745048
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0402_8'
