BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1609 N= 37 H= 6 HEAD= [ 9.489 10.394 11.783 13.883 15.164] TAIL= [633.887 647.52  683.38  723.45  764.518]
   ECON1609  Date
0     9.489     0
1    10.394     1
2    11.783     2
3    13.883     3
4    15.164     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1609  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1609'], 'Transformations': [('ECON1609', 'None', '_', 'T+S+R'), ('ECON1609', 'None', 'Diff_', 'T+S+R'), ('ECON1609', 'None', 'RelDiff_', 'T+S+R'), ('ECON1609', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1609', 'Transformation': '_ECON1609'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.114, ('TRAINING', {'Signal': 'ECON1609', 'Transformation': '_ECON1609'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1609', 'Transformation': 'Diff_ECON1609'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.458, ('TRAINING', {'Signal': 'ECON1609', 'Transformation': 'Diff_ECON1609'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1609', 'Transformation': 'RelDiff_ECON1609'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.552, ('TRAINING', {'Signal': 'ECON1609', 'Transformation': 'RelDiff_ECON1609'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1609', 'Transformation': 'CumSum_ECON1609'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.42, ('TRAINING', {'Signal': 'ECON1609', 'Transformation': 'CumSum_ECON1609'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.545, ('SIGNAL_TRAINING', {'Signals': ['ECON1609'], 'Transformations': [('ECON1609', 'None', '_', 'T+S+R'), ('ECON1609', 'None', 'Diff_', 'T+S+R'), ('ECON1609', 'None', 'RelDiff_', 'T+S+R'), ('ECON1609', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1609'], 'Transformations': [('ECON1609', [('ECON1609', 'None', 'CumSum_', 'T+S+R'), ('ECON1609', 'None', 'Diff_', 'T+S+R'), ('ECON1609', 'None', 'RelDiff_', 'T+S+R'), ('ECON1609', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1609', 'Transformations': [('ECON1609', 'None', 'CumSum_', 'T+S+R'), ('ECON1609', 'None', 'Diff_', 'T+S+R'), ('ECON1609', 'None', 'RelDiff_', 'T+S+R'), ('ECON1609', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1609', 'Transformations': [('ECON1609', 'None', 'CumSum_', 'T+S+R'), ('ECON1609', 'None', 'Diff_', 'T+S+R'), ('ECON1609', 'None', 'RelDiff_', 'T+S+R'), ('ECON1609', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1609', 'Model': 'Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1609', 'Model': 'Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1609'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.127, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1609'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FINALIZE_TRAINING', {'Signals': ['ECON1609'], 'Transformations': [('ECON1609', [('ECON1609', 'None', 'CumSum_', 'T+S+R'), ('ECON1609', 'None', 'Diff_', 'T+S+R'), ('ECON1609', 'None', 'RelDiff_', 'T+S+R'), ('ECON1609', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1609' Length=37  Min=9.489 Max=764.518  Mean=230.12083783783783 StdDev=246.4631747751456
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1609' Min=0.0 Max=0.07040656716496985  Mean=0.02702702702702703 StdDev=0.023328586773332296
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1609_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2857 MAPE_Forecast=0.0072 MAPE_Test=0.0241
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2374 SMAPE_Forecast=0.0072 SMAPE_Test=0.0237
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7829 MASE_Forecast=0.0714 MASE_Test=0.4812
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=22.076729595664585 CRPS_Forecast=34.172479803712775 CRPS_Test=27.649380132581523
INFO:pyaf.std:MODEL_L1 L1_Fit=8.482826174601646 L1_Forecast=2.952381992129379 L1_Test=16.177238916044832
INFO:pyaf.std:MODEL_L2 L2_Fit=10.032096343308815 L2_Forecast=3.610227763939135 L2_Test=18.885750641930564
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.9387180779452913 LnQ_Forecast=0.0005553214888335454 LnQ_Test=0.004653480970626595
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=9.433948084257704 MedAE_Forecast=1.889659876010569 MedAE_Test=13.541958653260167
INFO:pyaf.std:MODEL_COMPLEXITY 9.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE None 0.0008628807635203414 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag1 9.005606259028423e-05
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag3 8.806420496209919e-05
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 7.929649015081183e-05
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag7 4.8504811619642596e-05
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag4 4.079311109168761e-05
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_ECON1609_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag2 -4.050283626600455e-05
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1609             T+S+R  ...  0.2857       0.0072   0.0241
1   None     Diff_ECON1609             T+S+R  ...  0.2857       0.0072   0.0241
2   None     Diff_ECON1609             T+S+R  ...  0.2307       0.0442   0.2506
3   None     Diff_ECON1609             T+S+R  ...  0.2307       0.0442   0.2506
4   None     Diff_ECON1609             T+S+R  ...  0.2305       0.0442   0.2505
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1609             T+S+R  ...  0.6380       0.9760   0.9858
60  None  RelDiff_ECON1609             T+S+R  ...  0.6380       0.9760   0.9858
61  None  RelDiff_ECON1609             T+S+R  ...  0.6380       0.9760   0.9858
62  None  RelDiff_ECON1609             T+S+R  ...  0.6380       0.9760   0.9858
63  None  RelDiff_ECON1609             T+S+R  ...  0.6380       0.9760   0.9858

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  Diff_ECON1609             T+S+R  ...  0.2857       0.0072   0.0241
1  None  Diff_ECON1609             T+S+R  ...  0.2857       0.0072   0.0241
2  None  Diff_ECON1609             T+S+R  ...  0.2307       0.0442   0.2506
3  None  Diff_ECON1609             T+S+R  ...  0.2307       0.0442   0.2506
4  None  Diff_ECON1609             T+S+R  ...  0.2305       0.0442   0.2505

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1609'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.107, ('FORECASTING', {'Signals': ['ECON1609'], 'Horizon': 6}))
6 0     805.307
1     843.646
2     880.028
3     933.427
4     974.537
5    1009.106
Name: ECON1609, dtype: float64
6 0     820.852120
1     878.669878
2     937.966910
3     998.748155
4    1061.013788
5    1124.762118
Name: ECON1609_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1609 ECON1609 [805.307, 843.646, 880.028, 933.427, 974.537, 1009.106]
FORECAST_DETAIL_PREDICTED ECON1609 ECON1609 [820.8521200136628, 878.6698783238963, 937.9669095654941, 998.7481547138367, 1061.0137878926448, 1124.7621176912182]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1609 ECON1609 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1609 ECON1609 2.8966751098632812
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1609 ECON1609 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1609 ECON1609 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1609 ECON1609 0.0667 0.0641 1.5373
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1609 ECON1609 62.660328033458825 70.64779509122249 0.026606393527493388
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1609_6'
