BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 49 H= 6 HEAD= [0 1 2 3 4] TAIL= [44 45 46 47 48]
SIGNAL :  ECON0805 N= 49 H= 6 HEAD= [680. 635. 554. 578. 661.] TAIL= [9537. 9632. 9754. 9891. 9996.]
   ECON0805  Date
0     680.0     0
1     635.0     1
2     554.0     2
3     578.0     3
4     661.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 49 entries, 0 to 48
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0805  49 non-null     float64
 1   Date      49 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0805'], 'Transformations': [('ECON0805', 'None', '_', 'T+S+R'), ('ECON0805', 'None', 'Diff_', 'T+S+R'), ('ECON0805', 'None', 'RelDiff_', 'T+S+R'), ('ECON0805', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0805', 'Transformation': '_ECON0805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.037, ('TRAINING', {'Signal': 'ECON0805', 'Transformation': '_ECON0805'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0805', 'Transformation': 'Diff_ECON0805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.478, ('TRAINING', {'Signal': 'ECON0805', 'Transformation': 'Diff_ECON0805'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0805', 'Transformation': 'RelDiff_ECON0805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.578, ('TRAINING', {'Signal': 'ECON0805', 'Transformation': 'RelDiff_ECON0805'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0805', 'Transformation': 'CumSum_ECON0805'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.44, ('TRAINING', {'Signal': 'ECON0805', 'Transformation': 'CumSum_ECON0805'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.537, ('SIGNAL_TRAINING', {'Signals': ['ECON0805'], 'Transformations': [('ECON0805', 'None', '_', 'T+S+R'), ('ECON0805', 'None', 'Diff_', 'T+S+R'), ('ECON0805', 'None', 'RelDiff_', 'T+S+R'), ('ECON0805', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0805'], 'Transformations': [('ECON0805', [('ECON0805', 'None', 'CumSum_', 'T+S+R'), ('ECON0805', 'None', 'Diff_', 'T+S+R'), ('ECON0805', 'None', 'RelDiff_', 'T+S+R'), ('ECON0805', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0805', 'Transformations': [('ECON0805', 'None', 'CumSum_', 'T+S+R'), ('ECON0805', 'None', 'Diff_', 'T+S+R'), ('ECON0805', 'None', 'RelDiff_', 'T+S+R'), ('ECON0805', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0805', 'Transformations': [('ECON0805', 'None', 'CumSum_', 'T+S+R'), ('ECON0805', 'None', 'Diff_', 'T+S+R'), ('ECON0805', 'None', 'RelDiff_', 'T+S+R'), ('ECON0805', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0805', 'Model': '_ECON0805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0805', 'Model': '_ECON0805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0805'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.124, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0805'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FINALIZE_TRAINING', {'Signals': ['ECON0805'], 'Transformations': [('ECON0805', [('ECON0805', 'None', 'CumSum_', 'T+S+R'), ('ECON0805', 'None', 'Diff_', 'T+S+R'), ('ECON0805', 'None', 'RelDiff_', 'T+S+R'), ('ECON0805', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=33 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0805' Length=49  Min=554.0 Max=9996.0  Mean=4663.244897959184 StdDev=3586.246850209455
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0805' Min=0.0 Max=1.0  Mean=0.4352091609785198 StdDev=0.3798185607084786
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0805_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0805_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0805_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0806 MAPE_Forecast=0.0208 MAPE_Test=0.0089
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0838 SMAPE_Forecast=0.0212 SMAPE_Test=0.009
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9706 MASE_Forecast=1.1859 MASE_Test=0.8716
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=514.2402352941176 CRPS_Forecast=174.73477037037037 CRPS_Test=74.58333333333333
INFO:pyaf.std:MODEL_L1 L1_Fit=217.5 L1_Forecast=183.22222222222223 L1_Test=87.33333333333333
INFO:pyaf.std:MODEL_L2 L2_Fit=290.0811752515046 L2_Forecast=243.39519761536425 L2_Test=96.60572791851767
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.28419769690102914 LnQ_Forecast=0.007418675337665519 LnQ_Test=0.0005880793774518103
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=148.0 MedAE_Forecast=130.0 MedAE_Test=100.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.013344630374920568
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0805_Lag1Trend_residue_bestCycle_byMAPE None 0.015674645202287646 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0805             T+S+R  ...  0.2266       0.0155   0.1190
1   None   CumSum_ECON0805             T+S+R  ...  0.2266       0.0155   0.1190
2   None         _ECON0805             T+S+R  ...  0.1054       0.0161   0.0122
3   None         _ECON0805             T+S+R  ...  0.1054       0.0161   0.0122
4   None         _ECON0805             T+S+R  ...  0.0806       0.0208   0.0089
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0805             T+S+R  ...  0.1201       0.9621   3.2459
60  None  RelDiff_ECON0805             T+S+R  ...  0.1741       1.0257   2.9860
61  None  RelDiff_ECON0805             T+S+R  ...  0.1741       1.0257   2.9860
62  None  RelDiff_ECON0805             T+S+R  ...  0.1229       1.2762   4.4096
63  None  RelDiff_ECON0805             T+S+R  ...  0.1229       1.2762   4.4096

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0805             T+S+R  ...  0.2266       0.0155   0.1190
1  None  CumSum_ECON0805             T+S+R  ...  0.2266       0.0155   0.1190
2  None        _ECON0805             T+S+R  ...  0.1054       0.0161   0.0122
3  None        _ECON0805             T+S+R  ...  0.1054       0.0161   0.0122
4  None        _ECON0805             T+S+R  ...  0.0806       0.0208   0.0089

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0805'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.098, ('FORECASTING', {'Signals': ['ECON0805'], 'Horizon': 6}))
6 0    10062.0
1    10084.0
2    10109.0
3    10118.0
4    10122.0
5    10114.0
Name: ECON0805, dtype: float64
6 0    9996.0
1    9996.0
2    9996.0
3    9996.0
4    9996.0
5    9996.0
Name: ECON0805_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0805 ECON0805 [10062.0, 10084.0, 10109.0, 10118.0, 10122.0, 10114.0]
FORECAST_DETAIL_PREDICTED ECON0805 ECON0805 [9996.0, 9996.0, 9996.0, 9996.0, 9996.0, 9996.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0805 ECON0805 49 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0805 ECON0805 2.8981285095214844
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0805 ECON0805 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0805 ECON0805 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0805 ECON0805 0.0104 0.0105 7.7574
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0805 ECON0805 105.5 107.66692466429356 -24.095796500089296
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0805_6'
