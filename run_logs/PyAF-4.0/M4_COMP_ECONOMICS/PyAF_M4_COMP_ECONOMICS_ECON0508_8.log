BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0508 N= 235 H= 8 HEAD= [17.93  18.643 19.28  19.495 19.758] TAIL= [ 96.194  97.092  98.208  99.258 100.57 ]
   ECON0508  Date
0    17.930     0
1    18.643     1
2    19.280     2
3    19.495     3
4    19.758     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0508  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0508'], 'Transformations': [('ECON0508', 'None', '_', 'T+S+R'), ('ECON0508', 'None', 'Diff_', 'T+S+R'), ('ECON0508', 'None', 'RelDiff_', 'T+S+R'), ('ECON0508', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0508', 'Transformation': '_ECON0508'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.293, ('TRAINING', {'Signal': 'ECON0508', 'Transformation': '_ECON0508'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0508', 'Transformation': 'Diff_ECON0508'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.582, ('TRAINING', {'Signal': 'ECON0508', 'Transformation': 'Diff_ECON0508'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0508', 'Transformation': 'RelDiff_ECON0508'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.648, ('TRAINING', {'Signal': 'ECON0508', 'Transformation': 'RelDiff_ECON0508'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0508', 'Transformation': 'CumSum_ECON0508'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.556, ('TRAINING', {'Signal': 'ECON0508', 'Transformation': 'CumSum_ECON0508'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.081, ('SIGNAL_TRAINING', {'Signals': ['ECON0508'], 'Transformations': [('ECON0508', 'None', '_', 'T+S+R'), ('ECON0508', 'None', 'Diff_', 'T+S+R'), ('ECON0508', 'None', 'RelDiff_', 'T+S+R'), ('ECON0508', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0508'], 'Transformations': [('ECON0508', [('ECON0508', 'None', 'CumSum_', 'T+S+R'), ('ECON0508', 'None', 'Diff_', 'T+S+R'), ('ECON0508', 'None', 'RelDiff_', 'T+S+R'), ('ECON0508', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0508', 'Transformations': [('ECON0508', 'None', 'CumSum_', 'T+S+R'), ('ECON0508', 'None', 'Diff_', 'T+S+R'), ('ECON0508', 'None', 'RelDiff_', 'T+S+R'), ('ECON0508', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0508', 'Transformations': [('ECON0508', 'None', 'CumSum_', 'T+S+R'), ('ECON0508', 'None', 'Diff_', 'T+S+R'), ('ECON0508', 'None', 'RelDiff_', 'T+S+R'), ('ECON0508', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0508', 'Model': '_ECON0508_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0508', 'Model': '_ECON0508_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0508'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0508'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.25, ('FINALIZE_TRAINING', {'Signals': ['ECON0508'], 'Transformations': [('ECON0508', [('ECON0508', 'None', 'CumSum_', 'T+S+R'), ('ECON0508', 'None', 'Diff_', 'T+S+R'), ('ECON0508', 'None', 'RelDiff_', 'T+S+R'), ('ECON0508', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0508' Length=235  Min=17.93 Max=100.57  Mean=54.85221702127657 StdDev=28.637460090478573
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0508' Min=0.0 Max=1.0  Mean=0.44678384585281467 StdDev=0.34653267292447454
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0508_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0508_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0508_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0508_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0096 MAPE_Forecast=0.0025 MAPE_Test=0.0107
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0097 SMAPE_Forecast=0.0025 SMAPE_Test=0.0107
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9809 MASE_Test=0.9703
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.977680260036833 CRPS_Forecast=0.27823059627329244 CRPS_Test=1.0619999999999994
INFO:pyaf.std:MODEL_L1 L1_Fit=0.41807734806629815 L1_Forecast=0.22267391304347908 L1_Test=1.0333749999999906
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5977463661387192 L2_Forecast=0.278584504391318 L2_Test=1.043505929547111
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.03148392683199887 LnQ_Forecast=0.0004394254052049767 LnQ_Test=0.0009336440173449937
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.28700000000000614 MedAE_Forecast=0.18499999999999517 MedAE_Test=1.031499999999994
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0508_Lag1Trend_residue_bestCycle_byMAPE None 0.003279283639883848 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0508             T+S+R  ...  0.0058       0.0023   0.0043
1   None         _ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
2   None         _ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
3   None   CumSum_ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
4   None     Diff_ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0508             T+S+R  ...  0.4769       0.8007   0.8145
60  None  RelDiff_ECON0508             T+S+R  ...  0.4769       0.8007   0.8145
61  None  RelDiff_ECON0508             T+S+R  ...  0.4769       0.8007   0.8145
62  None  RelDiff_ECON0508             T+S+R  ...  0.4769       0.8007   0.8145
63  None  RelDiff_ECON0508             T+S+R  ...  0.4769       0.8007   0.8145

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0508             T+S+R  ...  0.0058       0.0023   0.0043
1  None        _ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
2  None        _ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
3  None  CumSum_ECON0508             T+S+R  ...  0.0096       0.0025   0.0107
4  None    Diff_ECON0508             T+S+R  ...  0.0096       0.0025   0.0107

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0508'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.131, ('FORECASTING', {'Signals': ['ECON0508'], 'Horizon': 8}))
8 0    101.964
1    103.139
2    104.026
3    104.666
4    105.653
5    106.375
6    106.547
7    106.761
Name: ECON0508, dtype: float64
8 0    100.57
1    100.57
2    100.57
3    100.57
4    100.57
5    100.57
6    100.57
7    100.57
Name: ECON0508_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0508 ECON0508 [101.964, 103.139, 104.026, 104.666, 105.653, 106.375, 106.547, 106.761]
FORECAST_DETAIL_PREDICTED ECON0508 ECON0508 [100.57, 100.57, 100.57, 100.57, 100.57, 100.57, 100.57, 100.57]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0508 ECON0508 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0508 ECON0508 3.5590221881866455
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0508 ECON0508 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0508 ECON0508 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0508 ECON0508 0.041 0.0419 6.3059
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0508 ECON0508 4.321375000000005 4.621310325546213 -6.962229616938813
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0508_8'
