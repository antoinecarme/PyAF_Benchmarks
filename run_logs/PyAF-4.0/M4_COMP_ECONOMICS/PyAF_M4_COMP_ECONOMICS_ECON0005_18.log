BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0005 N= 815 H= 18 HEAD= [1371. 1372. 1376. 1370. 1379.] TAIL= [8323. 8328. 8349. 8347. 8358.]
   ECON0005  Date
0    1371.0     0
1    1372.0     1
2    1376.0     2
3    1370.0     3
4    1379.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0005  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0005'], 'Transformations': [('ECON0005', 'None', '_', 'T+S+R'), ('ECON0005', 'None', 'Diff_', 'T+S+R'), ('ECON0005', 'None', 'RelDiff_', 'T+S+R'), ('ECON0005', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0005', 'Transformation': '_ECON0005'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.346, ('TRAINING', {'Signal': 'ECON0005', 'Transformation': '_ECON0005'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0005', 'Transformation': 'Diff_ECON0005'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.716, ('TRAINING', {'Signal': 'ECON0005', 'Transformation': 'Diff_ECON0005'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0005', 'Transformation': 'RelDiff_ECON0005'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.78, ('TRAINING', {'Signal': 'ECON0005', 'Transformation': 'RelDiff_ECON0005'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0005', 'Transformation': 'CumSum_ECON0005'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.685, ('TRAINING', {'Signal': 'ECON0005', 'Transformation': 'CumSum_ECON0005'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.529, ('SIGNAL_TRAINING', {'Signals': ['ECON0005'], 'Transformations': [('ECON0005', 'None', '_', 'T+S+R'), ('ECON0005', 'None', 'Diff_', 'T+S+R'), ('ECON0005', 'None', 'RelDiff_', 'T+S+R'), ('ECON0005', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0005'], 'Transformations': [('ECON0005', [('ECON0005', 'None', 'CumSum_', 'T+S+R'), ('ECON0005', 'None', 'Diff_', 'T+S+R'), ('ECON0005', 'None', 'RelDiff_', 'T+S+R'), ('ECON0005', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0005', 'Transformations': [('ECON0005', 'None', 'CumSum_', 'T+S+R'), ('ECON0005', 'None', 'Diff_', 'T+S+R'), ('ECON0005', 'None', 'RelDiff_', 'T+S+R'), ('ECON0005', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON0005', 'Transformations': [('ECON0005', 'None', 'CumSum_', 'T+S+R'), ('ECON0005', 'None', 'Diff_', 'T+S+R'), ('ECON0005', 'None', 'RelDiff_', 'T+S+R'), ('ECON0005', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0005', 'Model': '_ECON0005_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0005', 'Model': '_ECON0005_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0005'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.426, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0005'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.457, ('FINALIZE_TRAINING', {'Signals': ['ECON0005'], 'Transformations': [('ECON0005', [('ECON0005', 'None', 'CumSum_', 'T+S+R'), ('ECON0005', 'None', 'Diff_', 'T+S+R'), ('ECON0005', 'None', 'RelDiff_', 'T+S+R'), ('ECON0005', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0005' Length=815  Min=1370.0 Max=8358.0  Mean=4274.333742331289 StdDev=2247.128799053651
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0005' Min=0.0 Max=1.0  Mean=0.4156173071452902 StdDev=0.3215696621427663
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0005_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0005_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0005_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0005_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0029 MAPE_Forecast=0.0017 MAPE_Test=0.002
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0029 SMAPE_Forecast=0.0017 SMAPE_Test=0.002
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9937 MASE_Test=1.0033
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=486.4806337271751 CRPS_Forecast=140.0429173076923 CRPS_Test=28.66435185185185
INFO:pyaf.std:MODEL_L1 L1_Fit=9.171114599686028 L1_Forecast=12.48125 L1_Test=16.11111111111111
INFO:pyaf.std:MODEL_L2 L2_Fit=11.468748061737632 L2_Forecast=14.693748670778332 L2_Test=18.91795149821695
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.00842540320168728 LnQ_Forecast=0.0006543512995739068 LnQ_Test=9.503253247369504e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=7.0 MedAE_Forecast=12.0 MedAE_Test=17.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.00014310246136233542
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0005_Lag1Trend_residue_bestCycle_byMAPE None 0.0010017172295363475 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _ECON0005             T+S+R  ...  0.0021       0.0012   0.0014
1   None         _ECON0005             T+S+R  ...  0.0021       0.0012   0.0014
2   None   CumSum_ECON0005             T+S+R  ...  0.0015       0.0012   0.0014
3   None   CumSum_ECON0005             T+S+R  ...  0.0072       0.0013   0.0017
4   None   CumSum_ECON0005             T+S+R  ...  0.0072       0.0013   0.0017
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0005             T+S+R  ...  0.4765       0.8021   0.8259
60  None  RelDiff_ECON0005             T+S+R  ...  0.4765       0.8021   0.8259
61  None  RelDiff_ECON0005             T+S+R  ...  0.4831       0.8098   0.8296
62  None   CumSum_ECON0005             T+S+R  ...  0.8810       0.8134   0.8344
63  None   CumSum_ECON0005             T+S+R  ...  0.8810       0.8134   0.8344

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0005             T+S+R  ...  0.0021       0.0012   0.0014
1  None        _ECON0005             T+S+R  ...  0.0021       0.0012   0.0014
2  None  CumSum_ECON0005             T+S+R  ...  0.0015       0.0012   0.0014
3  None  CumSum_ECON0005             T+S+R  ...  0.0072       0.0013   0.0017
4  None  CumSum_ECON0005             T+S+R  ...  0.0072       0.0013   0.0017

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0005'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.318, ('FORECASTING', {'Signals': ['ECON0005'], 'Horizon': 18}))
18 0     8362.0
1     8354.0
2     8351.0
3     8337.0
4     8312.0
5     8319.0
6     8309.0
7     8317.0
8     8293.0
9     8272.0
10    8263.0
11    8248.0
12    8243.0
13    8229.0
14    8211.0
15    8204.0
16    8190.0
17    8179.0
Name: ECON0005, dtype: float64
18 0     8358.0
1     8358.0
2     8358.0
3     8358.0
4     8358.0
5     8358.0
6     8358.0
7     8358.0
8     8358.0
9     8358.0
10    8358.0
11    8358.0
12    8358.0
13    8358.0
14    8358.0
15    8358.0
16    8358.0
17    8358.0
Name: ECON0005_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0005 ECON0005 [8362.0, 8354.0, 8351.0, 8337.0, 8312.0, 8319.0, 8309.0, 8317.0, 8293.0, 8272.0, 8263.0, 8248.0, 8243.0, 8229.0, 8211.0, 8204.0, 8190.0, 8179.0]
FORECAST_DETAIL_PREDICTED ECON0005 ECON0005 [8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0, 8358.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0005 ECON0005 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0005 ECON0005 4.3926215171813965
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0005 ECON0005 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0005 ECON0005 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0005 ECON0005 0.0098 0.0098 6.4692
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0005 ECON0005 81.05555555555556 99.00701434185807 -1.9666113380404648
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0005_18'
