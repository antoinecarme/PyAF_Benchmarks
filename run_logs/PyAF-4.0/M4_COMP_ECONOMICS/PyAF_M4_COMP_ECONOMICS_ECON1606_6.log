BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON1606 N= 37 H= 6 HEAD= [0.15174 0.16479 0.18473 0.21452 0.23065] TAIL= [ 8.3083   8.47922  9.04912  9.73358 10.22254]
   ECON1606  Date
0   0.15174     0
1   0.16479     1
2   0.18473     2
3   0.21452     3
4   0.23065     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1606  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1606'], 'Transformations': [('ECON1606', 'None', '_', 'T+S+R'), ('ECON1606', 'None', 'Diff_', 'T+S+R'), ('ECON1606', 'None', 'RelDiff_', 'T+S+R'), ('ECON1606', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1606', 'Transformation': '_ECON1606'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.015, ('TRAINING', {'Signal': 'ECON1606', 'Transformation': '_ECON1606'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1606', 'Transformation': 'Diff_ECON1606'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.467, ('TRAINING', {'Signal': 'ECON1606', 'Transformation': 'Diff_ECON1606'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1606', 'Transformation': 'RelDiff_ECON1606'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.574, ('TRAINING', {'Signal': 'ECON1606', 'Transformation': 'RelDiff_ECON1606'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1606', 'Transformation': 'CumSum_ECON1606'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.427, ('TRAINING', {'Signal': 'ECON1606', 'Transformation': 'CumSum_ECON1606'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.487, ('SIGNAL_TRAINING', {'Signals': ['ECON1606'], 'Transformations': [('ECON1606', 'None', '_', 'T+S+R'), ('ECON1606', 'None', 'Diff_', 'T+S+R'), ('ECON1606', 'None', 'RelDiff_', 'T+S+R'), ('ECON1606', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1606'], 'Transformations': [('ECON1606', [('ECON1606', 'None', 'CumSum_', 'T+S+R'), ('ECON1606', 'None', 'Diff_', 'T+S+R'), ('ECON1606', 'None', 'RelDiff_', 'T+S+R'), ('ECON1606', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1606', 'Transformations': [('ECON1606', 'None', 'CumSum_', 'T+S+R'), ('ECON1606', 'None', 'Diff_', 'T+S+R'), ('ECON1606', 'None', 'RelDiff_', 'T+S+R'), ('ECON1606', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON1606', 'Transformations': [('ECON1606', 'None', 'CumSum_', 'T+S+R'), ('ECON1606', 'None', 'Diff_', 'T+S+R'), ('ECON1606', 'None', 'RelDiff_', 'T+S+R'), ('ECON1606', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1606', 'Model': 'Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1606', 'Model': 'Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1606'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.129, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1606'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.159, ('FINALIZE_TRAINING', {'Signals': ['ECON1606'], 'Transformations': [('ECON1606', [('ECON1606', 'None', 'CumSum_', 'T+S+R'), ('ECON1606', 'None', 'Diff_', 'T+S+R'), ('ECON1606', 'None', 'RelDiff_', 'T+S+R'), ('ECON1606', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1606' Length=37  Min=0.15174 Max=10.22254  Mean=3.0759202702702706 StdDev=3.247339960800754
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1606' Min=0.0 Max=0.06857449259244541  Mean=0.02702702702702703 StdDev=0.02329360491265054
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1606_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2401 MAPE_Forecast=0.0067 MAPE_Test=0.018
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2046 SMAPE_Forecast=0.0067 SMAPE_Test=0.0177
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7316 MASE_Forecast=0.0693 MASE_Test=0.3236
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.29436994839572433 CRPS_Forecast=0.4444008841942476 CRPS_Test=0.38498544382334193
INFO:pyaf.std:MODEL_L1 L1_Fit=0.10535360453036473 L1_Forecast=0.03609981651366884 L1_Test=0.15812997701760448
INFO:pyaf.std:MODEL_L2 L2_Fit=0.12333676308205808 L2_Forecast=0.04634971641250566 L2_Test=0.21776761871360958
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.4518637835222423 LnQ_Forecast=0.0005009874120672009 LnQ_Test=0.0036189651696388325
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.11589669991313131 MedAE_Forecast=0.032088809054728884 MedAE_Test=0.0900673558447056
INFO:pyaf.std:MODEL_COMPLEXITY 9.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE None 0.0007953687889740637 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 0.000135612761821554
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag3 0.00013305056359768454
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag2 -7.876781824425837e-05
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag5 -3.870721231310363e-05
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag7 3.334295295283346e-05
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_ECON1606_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag8 -2.6659573820278833e-05
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1606             T+S+R  ...  0.2401       0.0067   0.0180
1   None     Diff_ECON1606             T+S+R  ...  0.2401       0.0067   0.0180
2   None     Diff_ECON1606             T+S+R  ...  0.2037       0.0443   0.2428
3   None     Diff_ECON1606             T+S+R  ...  0.2037       0.0443   0.2428
4   None     Diff_ECON1606             T+S+R  ...  0.2036       0.0443   0.2427
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1606             T+S+R  ...  0.6152       0.9711   0.9829
60  None  RelDiff_ECON1606             T+S+R  ...  0.6152       0.9711   0.9829
61  None  RelDiff_ECON1606             T+S+R  ...  0.6152       0.9711   0.9829
62  None  RelDiff_ECON1606             T+S+R  ...  0.6152       0.9711   0.9829
63  None  RelDiff_ECON1606             T+S+R  ...  0.6152       0.9711   0.9829

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  Diff_ECON1606             T+S+R  ...  0.2401       0.0067   0.0180
1  None  Diff_ECON1606             T+S+R  ...  0.2401       0.0067   0.0180
2  None  Diff_ECON1606             T+S+R  ...  0.2037       0.0443   0.2428
3  None  Diff_ECON1606             T+S+R  ...  0.2037       0.0443   0.2428
4  None  Diff_ECON1606             T+S+R  ...  0.2036       0.0443   0.2427

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1606'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.107, ('FORECASTING', {'Signals': ['ECON1606'], 'Horizon': 6}))
6 0    10.77908
1    11.35149
2    11.85177
3    12.53376
4    12.94692
5    13.30226
Name: ECON1606, dtype: float64
6 0    10.935895
1    11.668048
2    12.418855
3    13.188503
4    13.976967
5    14.784160
Name: ECON1606_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1606 ECON1606 [10.77908, 11.35149, 11.85177, 12.53376, 12.94692, 13.30226]
FORECAST_DETAIL_PREDICTED ECON1606 ECON1606 [10.935894804256884, 11.668048475738333, 12.418855475915462, 13.188502821871031, 13.976967103344583, 14.784160312226408]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1606 ECON1606 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1606 ECON1606 2.85206937789917
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1606 ECON1606 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1606 ECON1606 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1606 ECON1606 0.0556 0.0536 1.3895
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1606 ECON1606 0.701191498892117 0.8298694497396463 0.1232571749956558
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1606_6'
