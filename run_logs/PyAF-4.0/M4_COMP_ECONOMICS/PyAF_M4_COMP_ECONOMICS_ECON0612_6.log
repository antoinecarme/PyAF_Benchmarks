BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON0612 N= 37 H= 6 HEAD= [-1.238 -1.245 -1.324 -1.56  -1.783] TAIL= [-109.531 -110.741 -149.375 -189.353 -203.811]
   ECON0612  Date
0    -1.238     0
1    -1.245     1
2    -1.324     2
3    -1.560     3
4    -1.783     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0612  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0612'], 'Transformations': [('ECON0612', 'None', '_', 'T+S+R'), ('ECON0612', 'None', 'Diff_', 'T+S+R'), ('ECON0612', 'None', 'RelDiff_', 'T+S+R'), ('ECON0612', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0612', 'Transformation': '_ECON0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.981, ('TRAINING', {'Signal': 'ECON0612', 'Transformation': '_ECON0612'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0612', 'Transformation': 'Diff_ECON0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.47, ('TRAINING', {'Signal': 'ECON0612', 'Transformation': 'Diff_ECON0612'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0612', 'Transformation': 'RelDiff_ECON0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.559, ('TRAINING', {'Signal': 'ECON0612', 'Transformation': 'RelDiff_ECON0612'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0612', 'Transformation': 'CumSum_ECON0612'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.421, ('TRAINING', {'Signal': 'ECON0612', 'Transformation': 'CumSum_ECON0612'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.433, ('SIGNAL_TRAINING', {'Signals': ['ECON0612'], 'Transformations': [('ECON0612', 'None', '_', 'T+S+R'), ('ECON0612', 'None', 'Diff_', 'T+S+R'), ('ECON0612', 'None', 'RelDiff_', 'T+S+R'), ('ECON0612', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0612'], 'Transformations': [('ECON0612', [('ECON0612', 'None', 'CumSum_', 'T+S+R'), ('ECON0612', 'None', 'Diff_', 'T+S+R'), ('ECON0612', 'None', 'RelDiff_', 'T+S+R'), ('ECON0612', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0612', 'Transformations': [('ECON0612', 'None', 'CumSum_', 'T+S+R'), ('ECON0612', 'None', 'Diff_', 'T+S+R'), ('ECON0612', 'None', 'RelDiff_', 'T+S+R'), ('ECON0612', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0612', 'Transformations': [('ECON0612', 'None', 'CumSum_', 'T+S+R'), ('ECON0612', 'None', 'Diff_', 'T+S+R'), ('ECON0612', 'None', 'RelDiff_', 'T+S+R'), ('ECON0612', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0612', 'Model': 'CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0612', 'Model': 'CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_AR(9)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0612'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.123, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0612'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.149, ('FINALIZE_TRAINING', {'Signals': ['ECON0612'], 'Transformations': [('ECON0612', [('ECON0612', 'None', 'CumSum_', 'T+S+R'), ('ECON0612', 'None', 'Diff_', 'T+S+R'), ('ECON0612', 'None', 'RelDiff_', 'T+S+R'), ('ECON0612', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0612' Length=37  Min=-203.811 Max=-1.238  Mean=-53.39664864864864 StdDev=58.82566339994917
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_ECON0612' Min=1.0 Max=27.473212125999023  Mean=16.936556071011303 StdDev=8.393034123110969
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_AR(9)' [ConstantTrend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_ECON0612_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_AR(9)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=15.0115 MAPE_Forecast=0.0999 MAPE_Test=0.1792
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.7492 SMAPE_Forecast=0.1076 SMAPE_Test=0.1853
INFO:pyaf.std:MODEL_MASE MASE_Fit=8.6522 MASE_Forecast=0.8773 MASE_Test=1.207
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=14.427347145556487 CRPS_Forecast=11.396142853404276 CRPS_Test=10.566223618564319
INFO:pyaf.std:MODEL_L1 L1_Fit=21.99687273636974 L1_Forecast=10.426193064272109 L1_Test=26.51486288609731
INFO:pyaf.std:MODEL_L2 L2_Fit=53.84469641168059 L2_Forecast=12.985721014214636 L2_Test=30.450447532045192
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.7560284429661244 MedAE_Forecast=8.795079914069433 MedAE_Test=26.373611800589636
INFO:pyaf.std:MODEL_COMPLEXITY 7.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND CumSum_ECON0612_ConstantTrend 12.169227266220078
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE None 0.22476650392698172 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_Lag1 0.8714292008427973
INFO:pyaf.std:AR_MODEL_COEFF 2 CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_Lag2 0.2636487552501807
INFO:pyaf.std:AR_MODEL_COEFF 3 CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_Lag4 -0.057581897305495566
INFO:pyaf.std:AR_MODEL_COEFF 4 CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_Lag6 -0.04607473657093597
INFO:pyaf.std:AR_MODEL_COEFF 5 CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_Lag5 -0.04554498240950933
INFO:pyaf.std:AR_MODEL_COEFF 6 CumSum_ECON0612_ConstantTrend_residue_bestCycle_byMAPE_residue_Lag3 -0.0005416487870511591
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...   FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0612             T+S+R  ...   15.0115       0.0999   0.1792
1   None   CumSum_ECON0612             T+S+R  ...   15.0115       0.0999   0.1792
2   None         _ECON0612             T+S+R  ...    0.5219       0.1163   0.1387
3   None         _ECON0612             T+S+R  ...    0.5219       0.1163   0.1387
4   None   CumSum_ECON0612             T+S+R  ...   13.4465       0.1260   0.1317
..   ...               ...               ...  ...       ...          ...      ...
59  None  RelDiff_ECON0612             T+S+R  ...    1.2128       1.0083   1.0057
60  None   CumSum_ECON0612             T+S+R  ...  122.6770       1.1175   0.4619
61  None   CumSum_ECON0612             T+S+R  ...  122.6770       1.1175   0.4619
62  None   CumSum_ECON0612             T+S+R  ...   49.3811       2.2838   2.6627
63  None   CumSum_ECON0612             T+S+R  ...   49.3811       2.2838   2.6627

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0612             T+S+R  ...  15.0115       0.0999   0.1792
1  None  CumSum_ECON0612             T+S+R  ...  15.0115       0.0999   0.1792
2  None        _ECON0612             T+S+R  ...   0.5219       0.1163   0.1387
3  None        _ECON0612             T+S+R  ...   0.5219       0.1163   0.1387
4  None  CumSum_ECON0612             T+S+R  ...  13.4465       0.1260   0.1317

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0612'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.1, ('FORECASTING', {'Signals': ['ECON0612'], 'Horizon': 6}))
6 0   -244.195
1   -257.554
2   -280.037
3   -329.864
4   -259.075
5   -253.544
Name: ECON0612, dtype: float64
6 0   -213.309059
1   -223.813043
2   -231.345498
3   -236.240348
4   -239.438715
5   -241.808730
Name: ECON0612_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0612 ECON0612 [-244.195, -257.554, -280.037, -329.864, -259.075, -253.544]
FORECAST_DETAIL_PREDICTED ECON0612 ECON0612 [-213.30905932503882, -223.8130432438235, -231.34549754387058, -236.2403480972968, -239.43871508238541, -241.80872996947951]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0612 ECON0612 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0612 ECON0612 2.770643949508667
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0612 ECON0612 ConstantTrend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0612 ECON0612 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0612 ECON0612 0.1395 0.1538 1.226
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0612 ECON0612 39.71893445635089 47.87473994583531 -1.8109025571869926
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0612_6'
