BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0010 N= 815 H= 18 HEAD= [882. 884. 883. 624. 737.] TAIL= [688. 691. 694. 699. 701.]
   ECON0010  Date
0     882.0     0
1     884.0     1
2     883.0     2
3     624.0     3
4     737.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0010  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0010'], 'Transformations': [('ECON0010', 'None', '_', 'T+S+R'), ('ECON0010', 'None', 'Diff_', 'T+S+R'), ('ECON0010', 'None', 'RelDiff_', 'T+S+R'), ('ECON0010', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0010', 'Transformation': '_ECON0010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.314, ('TRAINING', {'Signal': 'ECON0010', 'Transformation': '_ECON0010'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0010', 'Transformation': 'Diff_ECON0010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.76, ('TRAINING', {'Signal': 'ECON0010', 'Transformation': 'Diff_ECON0010'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0010', 'Transformation': 'RelDiff_ECON0010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.784, ('TRAINING', {'Signal': 'ECON0010', 'Transformation': 'RelDiff_ECON0010'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0010', 'Transformation': 'CumSum_ECON0010'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.678, ('TRAINING', {'Signal': 'ECON0010', 'Transformation': 'CumSum_ECON0010'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.537, ('SIGNAL_TRAINING', {'Signals': ['ECON0010'], 'Transformations': [('ECON0010', 'None', '_', 'T+S+R'), ('ECON0010', 'None', 'Diff_', 'T+S+R'), ('ECON0010', 'None', 'RelDiff_', 'T+S+R'), ('ECON0010', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0010'], 'Transformations': [('ECON0010', [('ECON0010', 'None', 'CumSum_', 'T+S+R'), ('ECON0010', 'None', 'Diff_', 'T+S+R'), ('ECON0010', 'None', 'RelDiff_', 'T+S+R'), ('ECON0010', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0010', 'Transformations': [('ECON0010', 'None', 'CumSum_', 'T+S+R'), ('ECON0010', 'None', 'Diff_', 'T+S+R'), ('ECON0010', 'None', 'RelDiff_', 'T+S+R'), ('ECON0010', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0010', 'Transformations': [('ECON0010', 'None', 'CumSum_', 'T+S+R'), ('ECON0010', 'None', 'Diff_', 'T+S+R'), ('ECON0010', 'None', 'RelDiff_', 'T+S+R'), ('ECON0010', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0010', 'Model': '_ECON0010_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0010', 'Model': '_ECON0010_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0010'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.436, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0010'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.469, ('FINALIZE_TRAINING', {'Signals': ['ECON0010'], 'Transformations': [('ECON0010', [('ECON0010', 'None', 'CumSum_', 'T+S+R'), ('ECON0010', 'None', 'Diff_', 'T+S+R'), ('ECON0010', 'None', 'RelDiff_', 'T+S+R'), ('ECON0010', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0010' Length=815  Min=566.0 Max=1257.0  Mean=799.5766871165645 StdDev=151.15090154984705
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0010' Min=0.0 Max=1.0  Mean=0.33802704358402946 StdDev=0.21874225984058907
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0010_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0010_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0010_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0010_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0159 MAPE_Forecast=0.004 MAPE_Test=0.0066
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0157 SMAPE_Forecast=0.004 SMAPE_Test=0.0066
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=1.0089 MASE_Test=0.9817
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=40.23391142691895 CRPS_Forecast=9.708844230769232 CRPS_Test=9.513888888888888
INFO:pyaf.std:MODEL_L1 L1_Fit=13.065934065934066 L1_Forecast=2.49375 L1_Test=4.388888888888889
INFO:pyaf.std:MODEL_L2 L2_Fit=38.9949278189407 L2_Forecast=3.3326040868966116 L2_Test=4.847679857416329
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.5469422824321866 LnQ_Forecast=0.004481422292190745 LnQ_Test=0.0009729659480713209
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=4.0 MedAE_Forecast=2.0 MedAE_Test=4.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4573082489146165
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0010_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_ECON0010  ...  3.800000e-03  2.900000e-03
1   None   CumSum_ECON0010  ...  3.800000e-03  2.900000e-03
2   None   CumSum_ECON0010  ...  3.800000e-03  2.900000e-03
3   None   CumSum_ECON0010  ...  3.800000e-03  2.800000e-03
4   None   CumSum_ECON0010  ...  3.800000e-03  2.800000e-03
..   ...               ...  ...           ...           ...
59  None  RelDiff_ECON0010  ...  3.369289e+06  1.361829e+04
60  None  RelDiff_ECON0010  ...  3.078371e+07  4.764258e+07
61  None  RelDiff_ECON0010  ...  3.078371e+07  4.764258e+07
62  None  RelDiff_ECON0010  ...  4.880584e+07  4.764258e+07
63  None  RelDiff_ECON0010  ...  4.880584e+07  4.764258e+07

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0010             T+S+R  ...  0.0187       0.0038   0.0029
1  None  CumSum_ECON0010             T+S+R  ...  0.0180       0.0038   0.0029
2  None  CumSum_ECON0010             T+S+R  ...  0.0180       0.0038   0.0029
3  None  CumSum_ECON0010             T+S+R  ...  0.0202       0.0038   0.0028
4  None  CumSum_ECON0010             T+S+R  ...  0.0202       0.0038   0.0028

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0010'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.321, ('FORECASTING', {'Signals': ['ECON0010'], 'Horizon': 18}))
18 0     706.0
1     707.0
2     713.0
3     716.0
4     720.0
5     720.0
6     723.0
7     727.0
8     726.0
9     726.0
10    728.0
11    737.0
12    743.0
13    748.0
14    750.0
15    756.0
16    756.0
17    763.0
Name: ECON0010, dtype: float64
18 0     701.0
1     701.0
2     701.0
3     701.0
4     701.0
5     701.0
6     701.0
7     701.0
8     701.0
9     701.0
10    701.0
11    701.0
12    701.0
13    701.0
14    701.0
15    701.0
16    701.0
17    701.0
Name: ECON0010_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0010 ECON0010 [706.0, 707.0, 713.0, 716.0, 720.0, 720.0, 723.0, 727.0, 726.0, 726.0, 728.0, 737.0, 743.0, 748.0, 750.0, 756.0, 756.0, 763.0]
FORECAST_DETAIL_PREDICTED ECON0010 ECON0010 [701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0, 701.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0010 ECON0010 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0010 ECON0010 4.420790672302246
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0010 ECON0010 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0010 ECON0010 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0010 ECON0010 0.041 0.0422 8.7561
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0010 ECON0010 30.38888888888889 34.8448944131944 -3.1769571357279327
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0010_18'
