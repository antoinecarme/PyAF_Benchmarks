BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 37 H= 6 HEAD= [0 1 2 3 4] TAIL= [32 33 34 35 36]
SIGNAL :  ECON0602 N= 37 H= 6 HEAD= [-0.254 -0.268 -0.296 -0.37  -0.415] TAIL= [-2.263 -2.255 -2.56  -2.623 -2.687]
   ECON0602  Date
0    -0.254     0
1    -0.268     1
2    -0.296     2
3    -0.370     3
4    -0.415     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 37 entries, 0 to 36
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0602  37 non-null     float64
 1   Date      37 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 888.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0602'], 'Transformations': [('ECON0602', 'None', '_', 'T+S+R'), ('ECON0602', 'None', 'Diff_', 'T+S+R'), ('ECON0602', 'None', 'RelDiff_', 'T+S+R'), ('ECON0602', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0602', 'Transformation': '_ECON0602'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.045, ('TRAINING', {'Signal': 'ECON0602', 'Transformation': '_ECON0602'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0602', 'Transformation': 'Diff_ECON0602'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.463, ('TRAINING', {'Signal': 'ECON0602', 'Transformation': 'Diff_ECON0602'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0602', 'Transformation': 'RelDiff_ECON0602'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.555, ('TRAINING', {'Signal': 'ECON0602', 'Transformation': 'RelDiff_ECON0602'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0602', 'Transformation': 'CumSum_ECON0602'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.423, ('TRAINING', {'Signal': 'ECON0602', 'Transformation': 'CumSum_ECON0602'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.488, ('SIGNAL_TRAINING', {'Signals': ['ECON0602'], 'Transformations': [('ECON0602', 'None', '_', 'T+S+R'), ('ECON0602', 'None', 'Diff_', 'T+S+R'), ('ECON0602', 'None', 'RelDiff_', 'T+S+R'), ('ECON0602', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0602'], 'Transformations': [('ECON0602', [('ECON0602', 'None', 'CumSum_', 'T+S+R'), ('ECON0602', 'None', 'Diff_', 'T+S+R'), ('ECON0602', 'None', 'RelDiff_', 'T+S+R'), ('ECON0602', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0602', 'Transformations': [('ECON0602', 'None', 'CumSum_', 'T+S+R'), ('ECON0602', 'None', 'Diff_', 'T+S+R'), ('ECON0602', 'None', 'RelDiff_', 'T+S+R'), ('ECON0602', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0602', 'Transformations': [('ECON0602', 'None', 'CumSum_', 'T+S+R'), ('ECON0602', 'None', 'Diff_', 'T+S+R'), ('ECON0602', 'None', 'RelDiff_', 'T+S+R'), ('ECON0602', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0602', 'Model': 'Diff_ECON0602_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.018, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0602', 'Model': 'Diff_ECON0602_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0602'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.105, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0602'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.131, ('FINALIZE_TRAINING', {'Signals': ['ECON0602'], 'Transformations': [('ECON0602', [('ECON0602', 'None', 'CumSum_', 'T+S+R'), ('ECON0602', 'None', 'Diff_', 'T+S+R'), ('ECON0602', 'None', 'RelDiff_', 'T+S+R'), ('ECON0602', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=23 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0602' Length=37  Min=-2.687 Max=-0.254  Mean=-1.2175945945945947 StdDev=0.7349929015821764
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0602' Min=-0.12535963830661742 Max=0.02055076037813397  Mean=-0.02702702702702703 StdDev=0.03284681849641406
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0602_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0602_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0602_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0602_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3006 MAPE_Forecast=0.0352 MAPE_Test=0.1098
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2522 SMAPE_Forecast=0.0353 SMAPE_Test=0.1173
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.9352 MASE_Forecast=0.6403 MASE_Test=2.3378
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.16184722222222217 CRPS_Forecast=0.05710714285714291 CRPS_Test=0.13431249999999983
INFO:pyaf.std:MODEL_L1 L1_Fit=0.188875 L1_Forecast=0.06221428571428578 L1_Test=0.2744583333333328
INFO:pyaf.std:MODEL_L2 L2_Fit=0.21826085788187796 L2_Forecast=0.06816864591375046 L2_Test=0.30238687623087473
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.15124999999999994 MedAE_Forecast=0.05750000000000033 MedAE_Test=0.2959999999999994
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON0602_ConstantTrend -0.02250308261405672
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON0602_ConstantTrend_residue_bestCycle_byMAPE None 0.0021578298397041014 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON0602             T+S+R  ...  0.3006       0.0352   0.1098
1   None     Diff_ECON0602             T+S+R  ...  0.3006       0.0352   0.1098
2   None     Diff_ECON0602             T+S+R  ...  0.2966       0.0355   0.1072
3   None     Diff_ECON0602             T+S+R  ...  0.2966       0.0355   0.1072
4   None   CumSum_ECON0602             T+S+R  ...  0.5089       0.0399   0.0841
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0602             T+S+R  ...  0.6031       0.8713   0.9043
60  None  RelDiff_ECON0602             T+S+R  ...  0.6031       0.8713   0.9043
61  None  RelDiff_ECON0602             T+S+R  ...  0.6031       0.8713   0.9043
62  None   CumSum_ECON0602             T+S+R  ...  3.0722       1.3232   1.6581
63  None   CumSum_ECON0602             T+S+R  ...  3.0722       1.3232   1.6581

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON0602             T+S+R  ...  0.3006       0.0352   0.1098
1  None    Diff_ECON0602             T+S+R  ...  0.3006       0.0352   0.1098
2  None    Diff_ECON0602             T+S+R  ...  0.2966       0.0355   0.1072
3  None    Diff_ECON0602             T+S+R  ...  0.2966       0.0355   0.1072
4  None  CumSum_ECON0602             T+S+R  ...  0.5089       0.0399   0.0841

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0602'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.093, ('FORECASTING', {'Signals': ['ECON0602'], 'Horizon': 6}))
6 0   -2.762
1   -2.849
2   -2.821
3   -2.883
4   -2.882
5   -2.920
Name: ECON0602, dtype: float64
6 0   -2.33450
1   -2.38925
2   -2.44400
3   -2.49875
4   -2.55350
5   -2.60825
Name: ECON0602_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0602 ECON0602 [-2.762, -2.849, -2.821, -2.883, -2.882, -2.92]
FORECAST_DETAIL_PREDICTED ECON0602 ECON0602 [-2.334500000000001, -2.389250000000001, -2.444000000000001, -2.498750000000001, -2.5535000000000014, -2.6082500000000013]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0602 ECON0602 37 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0602 ECON0602 2.803069591522217
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0602 ECON0602 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0602 ECON0602 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0602 ECON0602 0.134 0.1438 8.8301
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0602 ECON0602 0.3814583333333323 0.38492503328570254 -56.16759113337359
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0602_6'
