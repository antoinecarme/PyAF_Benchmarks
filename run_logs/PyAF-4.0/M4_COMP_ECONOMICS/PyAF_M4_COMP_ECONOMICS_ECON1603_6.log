BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 47 H= 6 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  ECON1603 N= 47 H= 6 HEAD= [ 8.3  9.1  9.5 23.1 24. ] TAIL= [179.  186.8 194.3 204.9 212.9]
   ECON1603  Date
0       8.3     0
1       9.1     1
2       9.5     2
3      23.1     3
4      24.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1603  47 non-null     float64
 1   Date      47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1603'], 'Transformations': [('ECON1603', 'None', '_', 'T+S+R'), ('ECON1603', 'None', 'Diff_', 'T+S+R'), ('ECON1603', 'None', 'RelDiff_', 'T+S+R'), ('ECON1603', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1603', 'Transformation': '_ECON1603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.025, ('TRAINING', {'Signal': 'ECON1603', 'Transformation': '_ECON1603'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1603', 'Transformation': 'Diff_ECON1603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.471, ('TRAINING', {'Signal': 'ECON1603', 'Transformation': 'Diff_ECON1603'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1603', 'Transformation': 'RelDiff_ECON1603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('TRAINING', {'Signal': 'ECON1603', 'Transformation': 'RelDiff_ECON1603'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1603', 'Transformation': 'CumSum_ECON1603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.435, ('TRAINING', {'Signal': 'ECON1603', 'Transformation': 'CumSum_ECON1603'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.516, ('SIGNAL_TRAINING', {'Signals': ['ECON1603'], 'Transformations': [('ECON1603', 'None', '_', 'T+S+R'), ('ECON1603', 'None', 'Diff_', 'T+S+R'), ('ECON1603', 'None', 'RelDiff_', 'T+S+R'), ('ECON1603', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1603'], 'Transformations': [('ECON1603', [('ECON1603', 'None', 'CumSum_', 'T+S+R'), ('ECON1603', 'None', 'Diff_', 'T+S+R'), ('ECON1603', 'None', 'RelDiff_', 'T+S+R'), ('ECON1603', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1603', 'Transformations': [('ECON1603', 'None', 'CumSum_', 'T+S+R'), ('ECON1603', 'None', 'Diff_', 'T+S+R'), ('ECON1603', 'None', 'RelDiff_', 'T+S+R'), ('ECON1603', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON1603', 'Transformations': [('ECON1603', 'None', 'CumSum_', 'T+S+R'), ('ECON1603', 'None', 'Diff_', 'T+S+R'), ('ECON1603', 'None', 'RelDiff_', 'T+S+R'), ('ECON1603', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1603', 'Model': 'Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(11)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1603', 'Model': 'Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(11)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1603'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.136, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1603'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.165, ('FINALIZE_TRAINING', {'Signals': ['ECON1603'], 'Transformations': [('ECON1603', [('ECON1603', 'None', 'CumSum_', 'T+S+R'), ('ECON1603', 'None', 'Diff_', 'T+S+R'), ('ECON1603', 'None', 'RelDiff_', 'T+S+R'), ('ECON1603', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=31 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1603' Length=47  Min=8.3 Max=212.9  Mean=67.06170212765959 StdDev=63.15519403242282
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON1603' Min=-0.08162267839687194 Max=0.0664711632453568  Mean=0.02127659574468085 StdDev=0.026138079532025536
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(11)' [Lag1Trend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON1603_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_AR(11)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2331 MAPE_Forecast=0.0335 MAPE_Test=0.0406
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1971 SMAPE_Forecast=0.0328 SMAPE_Test=0.0398
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.4931 MASE_Forecast=0.5082 MASE_Test=0.904
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.330766423612102 CRPS_Forecast=7.869324844697214 CRPS_Test=7.574127624437679
INFO:pyaf.std:MODEL_L1 L1_Fit=4.84062089489939 L1_Forecast=4.567862883746579 L1_Test=7.7925455309346985
INFO:pyaf.std:MODEL_L2 L2_Fit=6.418351194123415 L2_Forecast=5.4085880883107365 L2_Test=7.938512861414347
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.583892947834391 LnQ_Forecast=0.013174280988436048 LnQ_Test=0.00971542781785526
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=4.207831184671701 MedAE_Forecast=5.67863685507146 MedAE_Test=7.795945062953095
INFO:pyaf.std:MODEL_COMPLEXITY 11.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE None 0.0012218963831867047 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag1 -0.01134447853324574
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag11 0.005860704184870465
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag7 0.000998274072090175
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag4 0.0007772545967961517
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag5 -0.0006041982268938601
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag8 -0.0005893101316094817
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag9 -0.0004720760928870655
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff_ECON1603_Lag1Trend_residue_bestCycle_byMAPE_residue_Lag6 0.0004176134372905939
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON1603             T+S+R  ...  0.2331       0.0335   0.0406
1   None     Diff_ECON1603             T+S+R  ...  0.2331       0.0335   0.0406
2   None   CumSum_ECON1603             T+S+R  ...  0.1670       0.0538   0.0328
3   None   CumSum_ECON1603             T+S+R  ...  0.1670       0.0538   0.0328
4   None         _ECON1603             T+S+R  ...  0.1329       0.0608   0.0352
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON1603             T+S+R  ...  0.6063       0.9320   0.9564
60  None  RelDiff_ECON1603             T+S+R  ...  0.6063       0.9320   0.9564
61  None  RelDiff_ECON1603             T+S+R  ...  0.6063       0.9320   0.9564
62  None  RelDiff_ECON1603             T+S+R  ...  0.6063       0.9320   0.9564
63  None  RelDiff_ECON1603             T+S+R  ...  0.6063       0.9320   0.9564

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_ECON1603             T+S+R  ...  0.2331       0.0335   0.0406
1  None    Diff_ECON1603             T+S+R  ...  0.2331       0.0335   0.0406
2  None  CumSum_ECON1603             T+S+R  ...  0.1670       0.0538   0.0328
3  None  CumSum_ECON1603             T+S+R  ...  0.1670       0.0538   0.0328
4  None        _ECON1603             T+S+R  ...  0.1329       0.0608   0.0352

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1603'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.109, ('FORECASTING', {'Signals': ['ECON1603'], 'Horizon': 6}))
6 0    216.8
1    220.7
2    224.4
3    229.9
4    236.3
5    241.8
Name: ECON1603, dtype: float64
6 0    230.880535
1    249.114551
2    267.726317
3    286.719208
4    306.094280
5    325.843362
Name: ECON1603_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1603 ECON1603 [216.8, 220.7, 224.4, 229.9, 236.3, 241.8]
FORECAST_DETAIL_PREDICTED ECON1603 ECON1603 [230.8805351637074, 249.11455139780008, 267.72631749662315, 286.7192077395796, 306.09428001801393, 325.8433618953022]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1603 ECON1603 47 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1603 ECON1603 2.888611078262329
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1603 ECON1603 Lag1Trend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1603 ECON1603 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1603 ECON1603 0.2128 0.1889 9.8826
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1603 ECON1603 49.41304228517106 54.84184618747499 -38.74590842605271
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1603_6'
