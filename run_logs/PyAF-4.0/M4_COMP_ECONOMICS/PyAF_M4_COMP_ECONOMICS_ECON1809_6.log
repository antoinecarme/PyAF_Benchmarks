BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 29 H= 6 HEAD= [0 1 2 3 4] TAIL= [24 25 26 27 28]
SIGNAL :  ECON1809 N= 29 H= 6 HEAD= [26.3 28.  23.9 23.1 25.6] TAIL= [ 76.6  84.5  99.2 100.  120.2]
   ECON1809  Date
0      26.3     0
1      28.0     1
2      23.9     2
3      23.1     3
4      25.6     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 29 entries, 0 to 28
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON1809  29 non-null     float64
 1   Date      29 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 696.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON1809'], 'Transformations': [('ECON1809', 'None', '_', 'T+S+R'), ('ECON1809', 'None', 'Diff_', 'T+S+R'), ('ECON1809', 'None', 'RelDiff_', 'T+S+R'), ('ECON1809', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1809', 'Transformation': '_ECON1809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.238, ('TRAINING', {'Signal': 'ECON1809', 'Transformation': '_ECON1809'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1809', 'Transformation': 'Diff_ECON1809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.679, ('TRAINING', {'Signal': 'ECON1809', 'Transformation': 'Diff_ECON1809'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1809', 'Transformation': 'RelDiff_ECON1809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.831, ('TRAINING', {'Signal': 'ECON1809', 'Transformation': 'RelDiff_ECON1809'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON1809', 'Transformation': 'CumSum_ECON1809'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.661, ('TRAINING', {'Signal': 'ECON1809', 'Transformation': 'CumSum_ECON1809'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.41, ('SIGNAL_TRAINING', {'Signals': ['ECON1809'], 'Transformations': [('ECON1809', 'None', '_', 'T+S+R'), ('ECON1809', 'None', 'Diff_', 'T+S+R'), ('ECON1809', 'None', 'RelDiff_', 'T+S+R'), ('ECON1809', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON1809'], 'Transformations': [('ECON1809', [('ECON1809', 'None', 'CumSum_', 'T+S+R'), ('ECON1809', 'None', 'Diff_', 'T+S+R'), ('ECON1809', 'None', 'RelDiff_', 'T+S+R'), ('ECON1809', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON1809', 'Transformations': [('ECON1809', 'None', 'CumSum_', 'T+S+R'), ('ECON1809', 'None', 'Diff_', 'T+S+R'), ('ECON1809', 'None', 'RelDiff_', 'T+S+R'), ('ECON1809', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'ECON1809', 'Transformations': [('ECON1809', 'None', 'CumSum_', 'T+S+R'), ('ECON1809', 'None', 'Diff_', 'T+S+R'), ('ECON1809', 'None', 'RelDiff_', 'T+S+R'), ('ECON1809', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1809', 'Model': '_ECON1809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.032, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON1809', 'Model': '_ECON1809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1809'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.196, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON1809'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.237, ('FINALIZE_TRAINING', {'Signals': ['ECON1809'], 'Transformations': [('ECON1809', [('ECON1809', 'None', 'CumSum_', 'T+S+R'), ('ECON1809', 'None', 'Diff_', 'T+S+R'), ('ECON1809', 'None', 'RelDiff_', 'T+S+R'), ('ECON1809', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=28 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON1809' Length=29  Min=18.9 Max=120.2  Mean=47.13448275862069 StdDev=28.892598692662105
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON1809' Min=0.0 Max=1.0  Mean=0.2787214487524253 StdDev=0.2852181509640878
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON1809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON1809_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON1809_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON1809_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1101 MAPE_Forecast=0.1101 MAPE_Test=0.1101
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1158 SMAPE_Forecast=0.1158 SMAPE_Test=0.1158
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9655 MASE_Forecast=0.9655 MASE_Test=0.9655
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.8706344827586205 CRPS_Forecast=6.8706344827586205 CRPS_Test=6.8706344827586205
INFO:pyaf.std:MODEL_L1 L1_Fit=5.603448275862069 L1_Forecast=5.603448275862069 L1_Test=5.603448275862069
INFO:pyaf.std:MODEL_L2 L2_Fit=7.958274808715422 L2_Forecast=7.958274808715422 L2_Test=7.958274808715422
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6248597452096057 LnQ_Forecast=0.6248597452096057 LnQ_Test=0.6248597452096057
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.900000000000002 MedAE_Forecast=3.900000000000002 MedAE_Test=3.900000000000002
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.07305034550839093
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON1809_Lag1Trend_residue_bestCycle_byMAPE None 0.01480750246791708 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0   None         _ECON1809             T+S+R  ...   0.1101       0.1101   0.1101
1   None         _ECON1809             T+S+R  ...   0.1101       0.1101   0.1101
2   None     Diff_ECON1809             T+S+R  ...   0.1101       0.1101   0.1101
3   None     Diff_ECON1809             T+S+R  ...   0.1101       0.1101   0.1101
4   None   CumSum_ECON1809             T+S+R  ...   0.1192       0.1192   0.1192
..   ...               ...               ...  ...      ...          ...      ...
59  None  RelDiff_ECON1809             T+S+R  ...   8.7072       8.7072   8.7072
60  None  RelDiff_ECON1809             T+S+R  ...   8.9348       8.9348   8.9348
61  None  RelDiff_ECON1809             T+S+R  ...   8.9348       8.9348   8.9348
62  None  RelDiff_ECON1809             T+S+R  ...  10.5807      10.5807  10.5807
63  None  RelDiff_ECON1809             T+S+R  ...  10.5807      10.5807  10.5807

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON1809             T+S+R  ...  0.1101       0.1101   0.1101
1  None        _ECON1809             T+S+R  ...  0.1101       0.1101   0.1101
2  None    Diff_ECON1809             T+S+R  ...  0.1101       0.1101   0.1101
3  None    Diff_ECON1809             T+S+R  ...  0.1101       0.1101   0.1101
4  None  CumSum_ECON1809             T+S+R  ...  0.1192       0.1192   0.1192

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON1809'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.147, ('FORECASTING', {'Signals': ['ECON1809'], 'Horizon': 6}))
6 0    173.8
1    234.7
2    249.8
3    332.9
4    262.5
5    195.5
Name: ECON1809, dtype: float64
6 0    120.2
1    120.2
2    120.2
3    120.2
4    120.2
5    120.2
Name: ECON1809_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON1809 ECON1809 [173.8, 234.7, 249.8, 332.9, 262.5, 195.5]
FORECAST_DETAIL_PREDICTED ECON1809 ECON1809 [120.20000000000002, 120.20000000000002, 120.20000000000002, 120.20000000000002, 120.20000000000002, 120.20000000000002]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON1809 ECON1809 29 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON1809 ECON1809 3.9067890644073486
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON1809 ECON1809 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON1809 ECON1809 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON1809 ECON1809 0.4802 0.645 2.0461
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON1809 ECON1809 121.3333333333333 131.618159841262 -5.65882209236668
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON1809_6'
