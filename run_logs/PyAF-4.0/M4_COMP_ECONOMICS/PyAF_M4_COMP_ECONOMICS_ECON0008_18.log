BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 815 H= 18 HEAD= [0 1 2 3 4] TAIL= [810 811 812 813 814]
SIGNAL :  ECON0008 N= 815 H= 18 HEAD= [1112. 1118. 1126. 1127. 1125.] TAIL= [3030. 3032. 3025. 3025. 3025.]
   ECON0008  Date
0    1112.0     0
1    1118.0     1
2    1126.0     2
3    1127.0     3
4    1125.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 815 entries, 0 to 814
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0008  815 non-null    float64
 1   Date      815 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 19.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0008'], 'Transformations': [('ECON0008', 'None', '_', 'T+S+R'), ('ECON0008', 'None', 'Diff_', 'T+S+R'), ('ECON0008', 'None', 'RelDiff_', 'T+S+R'), ('ECON0008', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0008', 'Transformation': '_ECON0008'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.239, ('TRAINING', {'Signal': 'ECON0008', 'Transformation': '_ECON0008'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0008', 'Transformation': 'Diff_ECON0008'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.748, ('TRAINING', {'Signal': 'ECON0008', 'Transformation': 'Diff_ECON0008'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0008', 'Transformation': 'RelDiff_ECON0008'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.797, ('TRAINING', {'Signal': 'ECON0008', 'Transformation': 'RelDiff_ECON0008'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0008', 'Transformation': 'CumSum_ECON0008'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.706, ('TRAINING', {'Signal': 'ECON0008', 'Transformation': 'CumSum_ECON0008'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.491, ('SIGNAL_TRAINING', {'Signals': ['ECON0008'], 'Transformations': [('ECON0008', 'None', '_', 'T+S+R'), ('ECON0008', 'None', 'Diff_', 'T+S+R'), ('ECON0008', 'None', 'RelDiff_', 'T+S+R'), ('ECON0008', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0008'], 'Transformations': [('ECON0008', [('ECON0008', 'None', 'CumSum_', 'T+S+R'), ('ECON0008', 'None', 'Diff_', 'T+S+R'), ('ECON0008', 'None', 'RelDiff_', 'T+S+R'), ('ECON0008', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0008', 'Transformations': [('ECON0008', 'None', 'CumSum_', 'T+S+R'), ('ECON0008', 'None', 'Diff_', 'T+S+R'), ('ECON0008', 'None', 'RelDiff_', 'T+S+R'), ('ECON0008', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0008', 'Transformations': [('ECON0008', 'None', 'CumSum_', 'T+S+R'), ('ECON0008', 'None', 'Diff_', 'T+S+R'), ('ECON0008', 'None', 'RelDiff_', 'T+S+R'), ('ECON0008', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0008', 'Model': '_ECON0008_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0008', 'Model': '_ECON0008_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0008'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.437, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0008'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.469, ('FINALIZE_TRAINING', {'Signals': ['ECON0008'], 'Transformations': [('ECON0008', [('ECON0008', 'None', 'CumSum_', 'T+S+R'), ('ECON0008', 'None', 'Diff_', 'T+S+R'), ('ECON0008', 'None', 'RelDiff_', 'T+S+R'), ('ECON0008', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=636 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0008' Length=815  Min=1112.0 Max=3717.0  Mean=2201.6564417177915 StdDev=601.4551860807356
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0008' Min=0.0 Max=1.0  Mean=0.4182942194694022 StdDev=0.23088490828435154
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0008_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0008_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0008_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0008_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0052 MAPE_Forecast=0.0038 MAPE_Test=0.0012
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0052 SMAPE_Forecast=0.0038 SMAPE_Test=0.0012
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9937 MASE_Test=0.9894
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=111.33177063537967 CRPS_Forecast=89.85179615384617 CRPS_Test=4.465277777777778
INFO:pyaf.std:MODEL_L1 L1_Fit=9.888540031397174 L1_Forecast=12.25 L1_Test=3.6666666666666665
INFO:pyaf.std:MODEL_L2 L2_Fit=35.99531192220407 L2_Forecast=16.62678561839299 L2_Test=4.795831523312719
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.20718278564742887 LnQ_Forecast=0.003877081054348599 LnQ_Test=4.457215552710543e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=6.0 MedAE_Forecast=10.0 MedAE_Test=2.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0008_Lag1Trend_residue_bestCycle_byMAPE None 0.001151631477927073 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0008             T+S+R  ...  0.0079       0.0021   0.0012
1   None   CumSum_ECON0008             T+S+R  ...  0.0079       0.0021   0.0012
2   None   CumSum_ECON0008             T+S+R  ...  0.0047       0.0021   0.0014
3   None   CumSum_ECON0008             T+S+R  ...  0.0070       0.0024   0.0014
4   None   CumSum_ECON0008             T+S+R  ...  0.0064       0.0025   0.0017
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0008             T+S+R  ...  0.4066       0.6395   0.6349
60  None  RelDiff_ECON0008             T+S+R  ...  0.4066       0.6395   0.6349
61  None  RelDiff_ECON0008             T+S+R  ...  0.4066       0.6395   0.6349
62  None  RelDiff_ECON0008             T+S+R  ...  0.4066       0.6395   0.6349
63  None  RelDiff_ECON0008             T+S+R  ...  0.4066       0.6395   0.6349

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0008             T+S+R  ...  0.0079       0.0021   0.0012
1  None  CumSum_ECON0008             T+S+R  ...  0.0079       0.0021   0.0012
2  None  CumSum_ECON0008             T+S+R  ...  0.0047       0.0021   0.0014
3  None  CumSum_ECON0008             T+S+R  ...  0.0070       0.0024   0.0014
4  None  CumSum_ECON0008             T+S+R  ...  0.0064       0.0025   0.0017

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0008'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.34, ('FORECASTING', {'Signals': ['ECON0008'], 'Horizon': 18}))
18 0     3033.0
1     3028.0
2     3035.0
3     3031.0
4     3035.0
5     3039.0
6     3037.0
7     3034.0
8     3028.0
9     3033.0
10    3030.0
11    3029.0
12    3025.0
13    3022.0
14    3025.0
15    3023.0
16    3017.0
17    3013.0
Name: ECON0008, dtype: float64
18 0     3025.0
1     3025.0
2     3025.0
3     3025.0
4     3025.0
5     3025.0
6     3025.0
7     3025.0
8     3025.0
9     3025.0
10    3025.0
11    3025.0
12    3025.0
13    3025.0
14    3025.0
15    3025.0
16    3025.0
17    3025.0
Name: ECON0008_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0008 ECON0008 [3033.0, 3028.0, 3035.0, 3031.0, 3035.0, 3039.0, 3037.0, 3034.0, 3028.0, 3033.0, 3030.0, 3029.0, 3025.0, 3022.0, 3025.0, 3023.0, 3017.0, 3013.0]
FORECAST_DETAIL_PREDICTED ECON0008 ECON0008 [3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0, 3025.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0008 ECON0008 815 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0008 ECON0008 4.391614198684692
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0008 ECON0008 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0008 ECON0008 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0008 ECON0008 0.0021 0.0021 1.6742
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0008 ECON0008 6.5 7.691987172809551 -0.30576936175993796
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0008_18'
