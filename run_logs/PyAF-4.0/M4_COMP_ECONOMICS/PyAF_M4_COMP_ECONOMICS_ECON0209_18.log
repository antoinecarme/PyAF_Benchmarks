BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 1072 H= 18 HEAD= [0 1 2 3 4] TAIL= [1067 1068 1069 1070 1071]
SIGNAL :  ECON0209 N= 1072 H= 18 HEAD= [3.714 3.774 3.865 3.916 4.055] TAIL= [795.271 793.952 794.02  794.48  801.98 ]
   ECON0209  Date
0     3.714     0
1     3.774     1
2     3.865     2
3     3.916     3
4     4.055     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1072 entries, 0 to 1071
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0209  1072 non-null   float64
 1   Date      1072 non-null   int64  
dtypes: float64(1), int64(1)
memory usage: 25.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0209'], 'Transformations': [('ECON0209', 'None', '_', 'T+S+R'), ('ECON0209', 'None', 'Diff_', 'T+S+R'), ('ECON0209', 'None', 'RelDiff_', 'T+S+R'), ('ECON0209', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0209', 'Transformation': '_ECON0209'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.058, ('TRAINING', {'Signal': 'ECON0209', 'Transformation': '_ECON0209'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0209', 'Transformation': 'Diff_ECON0209'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.733, ('TRAINING', {'Signal': 'ECON0209', 'Transformation': 'Diff_ECON0209'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0209', 'Transformation': 'RelDiff_ECON0209'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.857, ('TRAINING', {'Signal': 'ECON0209', 'Transformation': 'RelDiff_ECON0209'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0209', 'Transformation': 'CumSum_ECON0209'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.819, ('TRAINING', {'Signal': 'ECON0209', 'Transformation': 'CumSum_ECON0209'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.47, ('SIGNAL_TRAINING', {'Signals': ['ECON0209'], 'Transformations': [('ECON0209', 'None', '_', 'T+S+R'), ('ECON0209', 'None', 'Diff_', 'T+S+R'), ('ECON0209', 'None', 'RelDiff_', 'T+S+R'), ('ECON0209', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0209'], 'Transformations': [('ECON0209', [('ECON0209', 'None', 'CumSum_', 'T+S+R'), ('ECON0209', 'None', 'Diff_', 'T+S+R'), ('ECON0209', 'None', 'RelDiff_', 'T+S+R'), ('ECON0209', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0209', 'Transformations': [('ECON0209', 'None', 'CumSum_', 'T+S+R'), ('ECON0209', 'None', 'Diff_', 'T+S+R'), ('ECON0209', 'None', 'RelDiff_', 'T+S+R'), ('ECON0209', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ECON0209', 'Transformations': [('ECON0209', 'None', 'CumSum_', 'T+S+R'), ('ECON0209', 'None', 'Diff_', 'T+S+R'), ('ECON0209', 'None', 'RelDiff_', 'T+S+R'), ('ECON0209', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0209', 'Model': '_ECON0209_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0209', 'Model': '_ECON0209_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0209'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.457, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0209'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.492, ('FINALIZE_TRAINING', {'Signals': ['ECON0209'], 'Transformations': [('ECON0209', [('ECON0209', 'None', 'CumSum_', 'T+S+R'), ('ECON0209', 'None', 'Diff_', 'T+S+R'), ('ECON0209', 'None', 'RelDiff_', 'T+S+R'), ('ECON0209', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=842 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0209' Length=1072  Min=3.714 Max=801.98  Mean=137.6494020522389 StdDev=201.88095261964054
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0209' Min=0.0 Max=1.0  Mean=0.1677829220488395 StdDev=0.25289935011592696
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0209_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0209_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0209_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0209_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0113 MAPE_Forecast=0.0076 MAPE_Test=0.0035
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0113 SMAPE_Forecast=0.0076 SMAPE_Test=0.0036
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9988 MASE_Forecast=1.0014 MASE_Test=1.042
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=13.016722031279267 CRPS_Forecast=43.85301214849921 CRPS_Test=4.782914351851854
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4356903914590748 L1_Forecast=3.3251706161137435 L1_Test=2.772999999999993
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7466970711166842 L2_Forecast=4.740098616667653 L2_Test=3.827999869383485
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.23589970511955155 LnQ_Forecast=0.02058961134531706 LnQ_Test=0.0004338875427248007
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.17900000000000205 MedAE_Forecast=2.593999999999994 MedAE_Test=1.843500000000006
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0209_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0209             T+S+R  ...  0.0097       0.0053   0.0034
1   None   CumSum_ECON0209             T+S+R  ...  0.0224       0.0053   0.0034
2   None     Diff_ECON0209             T+S+R  ...  0.0191       0.0059   0.0030
3   None     Diff_ECON0209             T+S+R  ...  0.0191       0.0059   0.0030
4   None         _ECON0209             T+S+R  ...  0.0221       0.0071   0.0033
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0209             T+S+R  ...  0.6885       0.9907   0.9953
60  None  RelDiff_ECON0209             T+S+R  ...  0.6885       0.9907   0.9953
61  None  RelDiff_ECON0209             T+S+R  ...  0.6885       0.9907   0.9953
62  None  RelDiff_ECON0209             T+S+R  ...  0.6885       0.9907   0.9953
63  None  RelDiff_ECON0209             T+S+R  ...  0.6885       0.9907   0.9953

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0209             T+S+R  ...  0.0097       0.0053   0.0034
1  None  CumSum_ECON0209             T+S+R  ...  0.0224       0.0053   0.0034
2  None    Diff_ECON0209             T+S+R  ...  0.0191       0.0059   0.0030
3  None    Diff_ECON0209             T+S+R  ...  0.0191       0.0059   0.0030
4  None        _ECON0209             T+S+R  ...  0.0221       0.0071   0.0033

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0209'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.336, ('FORECASTING', {'Signals': ['ECON0209'], 'Horizon': 18}))
18 0     810.816
1     807.391
2     805.364
3     806.300
4     807.595
5     810.080
6     811.135
7     814.350
8     811.813
9     811.612
10    814.030
11    819.798
12    821.893
13    815.258
14    814.627
15    816.504
16    813.707
17    818.221
Name: ECON0209, dtype: float64
18 0     801.98
1     801.98
2     801.98
3     801.98
4     801.98
5     801.98
6     801.98
7     801.98
8     801.98
9     801.98
10    801.98
11    801.98
12    801.98
13    801.98
14    801.98
15    801.98
16    801.98
17    801.98
Name: ECON0209_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0209 ECON0209 [810.816, 807.391, 805.364, 806.3, 807.595, 810.08, 811.135, 814.35, 811.813, 811.612, 814.03, 819.798, 821.893, 815.258, 814.627, 816.504, 813.707, 818.221]
FORECAST_DETAIL_PREDICTED ECON0209 ECON0209 [801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98, 801.98]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0209 ECON0209 1072 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0209 ECON0209 4.391296148300171
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0209 ECON0209 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0209 ECON0209 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0209 ECON0209 0.0133 0.0134 4.1909
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0209 ECON0209 10.825222222222205 11.7108743577165 -5.871266199620764
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0209_18'
