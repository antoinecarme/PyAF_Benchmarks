BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 235 H= 8 HEAD= [0 1 2 3 4] TAIL= [230 231 232 233 234]
SIGNAL :  ECON0401 N= 235 H= 8 HEAD= [20.261 20.343 20.348 20.751 21.126] TAIL= [157.073 158.57  160.343 161.021 162.489]
   ECON0401  Date
0    20.261     0
1    20.343     1
2    20.348     2
3    20.751     3
4    21.126     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 235 entries, 0 to 234
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0401  235 non-null    float64
 1   Date      235 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 5.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0401'], 'Transformations': [('ECON0401', 'None', '_', 'T+S+R'), ('ECON0401', 'None', 'Diff_', 'T+S+R'), ('ECON0401', 'None', 'RelDiff_', 'T+S+R'), ('ECON0401', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0401', 'Transformation': '_ECON0401'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.247, ('TRAINING', {'Signal': 'ECON0401', 'Transformation': '_ECON0401'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0401', 'Transformation': 'Diff_ECON0401'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.568, ('TRAINING', {'Signal': 'ECON0401', 'Transformation': 'Diff_ECON0401'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0401', 'Transformation': 'RelDiff_ECON0401'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.642, ('TRAINING', {'Signal': 'ECON0401', 'Transformation': 'RelDiff_ECON0401'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0401', 'Transformation': 'CumSum_ECON0401'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.535, ('TRAINING', {'Signal': 'ECON0401', 'Transformation': 'CumSum_ECON0401'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.994, ('SIGNAL_TRAINING', {'Signals': ['ECON0401'], 'Transformations': [('ECON0401', 'None', '_', 'T+S+R'), ('ECON0401', 'None', 'Diff_', 'T+S+R'), ('ECON0401', 'None', 'RelDiff_', 'T+S+R'), ('ECON0401', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0401'], 'Transformations': [('ECON0401', [('ECON0401', 'None', 'CumSum_', 'T+S+R'), ('ECON0401', 'None', 'Diff_', 'T+S+R'), ('ECON0401', 'None', 'RelDiff_', 'T+S+R'), ('ECON0401', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0401', 'Transformations': [('ECON0401', 'None', 'CumSum_', 'T+S+R'), ('ECON0401', 'None', 'Diff_', 'T+S+R'), ('ECON0401', 'None', 'RelDiff_', 'T+S+R'), ('ECON0401', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'ECON0401', 'Transformations': [('ECON0401', 'None', 'CumSum_', 'T+S+R'), ('ECON0401', 'None', 'Diff_', 'T+S+R'), ('ECON0401', 'None', 'RelDiff_', 'T+S+R'), ('ECON0401', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0401', 'Model': '_ECON0401_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0401', 'Model': '_ECON0401_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0401'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.17, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0401'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.197, ('FINALIZE_TRAINING', {'Signals': ['ECON0401'], 'Transformations': [('ECON0401', [('ECON0401', 'None', 'CumSum_', 'T+S+R'), ('ECON0401', 'None', 'Diff_', 'T+S+R'), ('ECON0401', 'None', 'RelDiff_', 'T+S+R'), ('ECON0401', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=180 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0401' Length=235  Min=20.261 Max=162.489  Mean=69.97451914893617 StdDev=39.9533297344653
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0401' Min=0.0 Max=1.0  Mean=0.3495339816979512 StdDev=0.28091043770892726
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0401_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0401_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0401_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0401_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0127 MAPE_Forecast=0.0099 MAPE_Test=0.0082
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0128 SMAPE_Forecast=0.01 SMAPE_Test=0.0082
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9945 MASE_Forecast=0.9987 MASE_Test=0.982
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.307919159484347 CRPS_Forecast=4.189293850931677 CRPS_Test=1.4066249999999982
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6299281767955802 L1_Forecast=1.2413913043478249 L1_Test=1.2901249999999997
INFO:pyaf.std:MODEL_L2 L2_Fit=0.8172989100000639 L2_Forecast=1.468726526176896 L2_Test=1.324875701716957
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.047083471292604664 LnQ_Forecast=0.006234059911370687 LnQ_Test=0.0005665963540463414
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5080000000000027 MedAE_Forecast=1.1630000000000038 MedAE_Test=1.301000000000002
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ECON0401_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_ECON0401             T+S+R  ...  0.0114       0.0054   0.0015
1   None     Diff_ECON0401             T+S+R  ...  0.0110       0.0056   0.0025
2   None     Diff_ECON0401             T+S+R  ...  0.0110       0.0056   0.0025
3   None   CumSum_ECON0401             T+S+R  ...  0.0138       0.0064   0.0029
4   None         _ECON0401             T+S+R  ...  0.0110       0.0073   0.0054
..   ...               ...               ...  ...     ...          ...      ...
59  None  RelDiff_ECON0401             T+S+R  ...  0.5151       0.8358   0.8716
60  None  RelDiff_ECON0401             T+S+R  ...  0.5151       0.8358   0.8716
61  None  RelDiff_ECON0401             T+S+R  ...  0.5151       0.8358   0.8716
62  None  RelDiff_ECON0401             T+S+R  ...  0.5151       0.8358   0.8716
63  None  RelDiff_ECON0401             T+S+R  ...  0.5151       0.8358   0.8716

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ECON0401             T+S+R  ...  0.0114       0.0054   0.0015
1  None    Diff_ECON0401             T+S+R  ...  0.0110       0.0056   0.0025
2  None    Diff_ECON0401             T+S+R  ...  0.0110       0.0056   0.0025
3  None  CumSum_ECON0401             T+S+R  ...  0.0138       0.0064   0.0029
4  None        _ECON0401             T+S+R  ...  0.0110       0.0073   0.0054

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0401'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.129, ('FORECASTING', {'Signals': ['ECON0401'], 'Horizon': 8}))
8 0    163.396
1    165.972
2    166.566
3    166.414
4    168.073
5    168.409
6    169.846
7    171.403
Name: ECON0401, dtype: float64
8 0    162.489
1    162.489
2    162.489
3    162.489
4    162.489
5    162.489
6    162.489
7    162.489
Name: ECON0401_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0401 ECON0401 [163.396, 165.972, 166.566, 166.414, 168.073, 168.409, 169.846, 171.403]
FORECAST_DETAIL_PREDICTED ECON0401 ECON0401 [162.489, 162.489, 162.489, 162.489, 162.489, 162.489, 162.489, 162.489]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0401 ECON0401 235 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0401 ECON0401 3.4128546714782715
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0401 ECON0401 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0401 ECON0401 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0401 ECON0401 0.0298 0.0303 4.2289
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0401 ECON0401 5.020874999999993 5.5316565443816135 -4.676995613900799
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0401_8'
