BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 48 H= 6 HEAD= [0 1 2 3 4] TAIL= [43 44 45 46 47]
SIGNAL :  ECON0806 N= 48 H= 6 HEAD= [1962. 1923. 1647. 1670. 1782.] TAIL= [2938. 2658. 2578. 2564. 2558.]
   ECON0806  Date
0    1962.0     0
1    1923.0     1
2    1647.0     2
3    1670.0     3
4    1782.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 48 entries, 0 to 47
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0806  48 non-null     float64
 1   Date      48 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0806'], 'Transformations': [('ECON0806', 'None', '_', 'T+S+R'), ('ECON0806', 'None', 'Diff_', 'T+S+R'), ('ECON0806', 'None', 'RelDiff_', 'T+S+R'), ('ECON0806', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0806', 'Transformation': '_ECON0806'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.113, ('TRAINING', {'Signal': 'ECON0806', 'Transformation': '_ECON0806'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0806', 'Transformation': 'Diff_ECON0806'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.479, ('TRAINING', {'Signal': 'ECON0806', 'Transformation': 'Diff_ECON0806'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0806', 'Transformation': 'RelDiff_ECON0806'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.563, ('TRAINING', {'Signal': 'ECON0806', 'Transformation': 'RelDiff_ECON0806'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0806', 'Transformation': 'CumSum_ECON0806'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.438, ('TRAINING', {'Signal': 'ECON0806', 'Transformation': 'CumSum_ECON0806'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.596, ('SIGNAL_TRAINING', {'Signals': ['ECON0806'], 'Transformations': [('ECON0806', 'None', '_', 'T+S+R'), ('ECON0806', 'None', 'Diff_', 'T+S+R'), ('ECON0806', 'None', 'RelDiff_', 'T+S+R'), ('ECON0806', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0806'], 'Transformations': [('ECON0806', [('ECON0806', 'None', 'CumSum_', 'T+S+R'), ('ECON0806', 'None', 'Diff_', 'T+S+R'), ('ECON0806', 'None', 'RelDiff_', 'T+S+R'), ('ECON0806', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0806', 'Transformations': [('ECON0806', 'None', 'CumSum_', 'T+S+R'), ('ECON0806', 'None', 'Diff_', 'T+S+R'), ('ECON0806', 'None', 'RelDiff_', 'T+S+R'), ('ECON0806', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0806', 'Transformations': [('ECON0806', 'None', 'CumSum_', 'T+S+R'), ('ECON0806', 'None', 'Diff_', 'T+S+R'), ('ECON0806', 'None', 'RelDiff_', 'T+S+R'), ('ECON0806', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0806', 'Model': '_ECON0806_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0806', 'Model': '_ECON0806_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0806'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.122, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0806'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.149, ('FINALIZE_TRAINING', {'Signals': ['ECON0806'], 'Transformations': [('ECON0806', [('ECON0806', 'None', 'CumSum_', 'T+S+R'), ('ECON0806', 'None', 'Diff_', 'T+S+R'), ('ECON0806', 'None', 'RelDiff_', 'T+S+R'), ('ECON0806', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=32 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0806' Length=48  Min=1647.0 Max=4793.0  Mean=3346.8333333333335 StdDev=860.0620940115634
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ECON0806' Min=0.0 Max=1.0  Mean=0.5403157448611995 StdDev=0.27338273808377733
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ECON0806_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ECON0806_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ECON0806_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ECON0806_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0588 MAPE_Forecast=0.0113 MAPE_Test=0.0353
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0601 SMAPE_Forecast=0.0113 SMAPE_Test=0.034
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9697 MASE_Forecast=0.9573 MASE_Test=0.8495
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=288.73478787878787 CRPS_Forecast=24.598607407407414 CRPS_Test=123.41666666666667
INFO:pyaf.std:MODEL_L1 L1_Fit=190.75757575757575 L1_Forecast=35.77777777777778 L1_Test=96.5
INFO:pyaf.std:MODEL_L2 L2_Fit=263.36039369976834 L2_Forecast=52.82676089508675 L2_Test=141.71391368998786
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2521788888312025 LnQ_Forecast=0.0024473090449249595 LnQ_Test=0.01485956424862896
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=151.0 MedAE_Forecast=23.0 MedAE_Test=47.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.10012714558169103
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ECON0806_Lag1Trend_residue_bestCycle_byMAPE None 0.007310870947234584 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0   None         _ECON0806             T+S+R  ...   0.0588       0.0113    0.0353
1   None         _ECON0806             T+S+R  ...   0.0588       0.0113    0.0353
2   None   CumSum_ECON0806             T+S+R  ...   0.0626       0.0113    0.0353
3   None   CumSum_ECON0806             T+S+R  ...   0.0626       0.0113    0.0353
4   None     Diff_ECON0806             T+S+R  ...   0.0588       0.0113    0.0353
..   ...               ...               ...  ...      ...          ...       ...
59  None  RelDiff_ECON0806             T+S+R  ...  14.0265      12.9792    1.0873
60  None  RelDiff_ECON0806             T+S+R  ...   1.1328      22.4431   89.5658
61  None  RelDiff_ECON0806             T+S+R  ...   1.1328      22.4431   89.5658
62  None  RelDiff_ECON0806             T+S+R  ...   5.9522     120.7739  530.6212
63  None  RelDiff_ECON0806             T+S+R  ...   5.9522     120.7739  530.6212

[64 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ECON0806             T+S+R  ...  0.0588       0.0113   0.0353
1  None        _ECON0806             T+S+R  ...  0.0588       0.0113   0.0353
2  None  CumSum_ECON0806             T+S+R  ...  0.0626       0.0113   0.0353
3  None  CumSum_ECON0806             T+S+R  ...  0.0626       0.0113   0.0353
4  None    Diff_ECON0806             T+S+R  ...  0.0588       0.0113   0.0353

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0806'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.096, ('FORECASTING', {'Signals': ['ECON0806'], 'Horizon': 6}))
6 0    2520.0
1    2376.0
2    2324.0
3    2238.0
4    2224.0
5    2247.0
Name: ECON0806, dtype: float64
6 0    2558.0
1    2558.0
2    2558.0
3    2558.0
4    2558.0
5    2558.0
Name: ECON0806_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0806 ECON0806 [2520.0, 2376.0, 2324.0, 2238.0, 2224.0, 2247.0]
FORECAST_DETAIL_PREDICTED ECON0806 ECON0806 [2558.0, 2558.0, 2558.0, 2558.0, 2558.0, 2558.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0806 ECON0806 48 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0806 ECON0806 2.945836305618286
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0806 ECON0806 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0806 ECON0806 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0806 ECON0806 0.104 0.0979 3.7069
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0806 ECON0806 236.5 258.1992124955716 -5.210472382874656
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0806_6'
