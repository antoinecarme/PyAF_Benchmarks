BENCH_DATA M4_COMP_ECONOMICS
TIME :  Date N= 183 H= 8 HEAD= [0 1 2 3 4] TAIL= [178 179 180 181 182]
SIGNAL :  ECON0603 N= 183 H= 8 HEAD= [-0.061 -0.062 -0.065 -0.066 -0.064] TAIL= [-0.973 -0.964 -1.01  -0.962 -1.016]
   ECON0603  Date
0    -0.061     0
1    -0.062     1
2    -0.065     2
3    -0.066     3
4    -0.064     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 183 entries, 0 to 182
Data columns (total 2 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   ECON0603  183 non-null    float64
 1   Date      183 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 4.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ECON0603'], 'Transformations': [('ECON0603', 'None', '_', 'T+S+R'), ('ECON0603', 'None', 'Diff_', 'T+S+R'), ('ECON0603', 'None', 'RelDiff_', 'T+S+R'), ('ECON0603', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0603', 'Transformation': '_ECON0603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.838, ('TRAINING', {'Signal': 'ECON0603', 'Transformation': '_ECON0603'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0603', 'Transformation': 'Diff_ECON0603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.575, ('TRAINING', {'Signal': 'ECON0603', 'Transformation': 'Diff_ECON0603'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0603', 'Transformation': 'RelDiff_ECON0603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.668, ('TRAINING', {'Signal': 'ECON0603', 'Transformation': 'RelDiff_ECON0603'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ECON0603', 'Transformation': 'CumSum_ECON0603'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.526, ('TRAINING', {'Signal': 'ECON0603', 'Transformation': 'CumSum_ECON0603'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.609, ('SIGNAL_TRAINING', {'Signals': ['ECON0603'], 'Transformations': [('ECON0603', 'None', '_', 'T+S+R'), ('ECON0603', 'None', 'Diff_', 'T+S+R'), ('ECON0603', 'None', 'RelDiff_', 'T+S+R'), ('ECON0603', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ECON0603'], 'Transformations': [('ECON0603', [('ECON0603', 'None', 'CumSum_', 'T+S+R'), ('ECON0603', 'None', 'Diff_', 'T+S+R'), ('ECON0603', 'None', 'RelDiff_', 'T+S+R'), ('ECON0603', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ECON0603', 'Transformations': [('ECON0603', 'None', 'CumSum_', 'T+S+R'), ('ECON0603', 'None', 'Diff_', 'T+S+R'), ('ECON0603', 'None', 'RelDiff_', 'T+S+R'), ('ECON0603', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'ECON0603', 'Transformations': [('ECON0603', 'None', 'CumSum_', 'T+S+R'), ('ECON0603', 'None', 'Diff_', 'T+S+R'), ('ECON0603', 'None', 'RelDiff_', 'T+S+R'), ('ECON0603', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0603', 'Model': 'Diff_ECON0603_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ECON0603', 'Model': 'Diff_ECON0603_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0603'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ECON0603'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.181, ('FINALIZE_TRAINING', {'Signals': ['ECON0603'], 'Transformations': [('ECON0603', [('ECON0603', 'None', 'CumSum_', 'T+S+R'), ('ECON0603', 'None', 'Diff_', 'T+S+R'), ('ECON0603', 'None', 'RelDiff_', 'T+S+R'), ('ECON0603', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=139 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ECON0603' Length=183  Min=-1.016 Max=-0.061  Mean=-0.39379234972677624 StdDev=0.252422450454364
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_ECON0603' Min=-0.13507853403141362 Max=0.10471204188481664  Mean=-0.005464480874316939 StdDev=0.039458464375346426
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_ECON0603_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_ECON0603_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_ECON0603_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_ECON0603_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2945 MAPE_Forecast=0.0367 MAPE_Test=0.1847
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2431 SMAPE_Forecast=0.0379 SMAPE_Test=0.2051
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.4536 MASE_Forecast=0.9988 MASE_Test=3.8697
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.05059522968460108 CRPS_Forecast=0.013861469387755052 CRPS_Test=0.09712857142857025
INFO:pyaf.std:MODEL_L1 L1_Fit=0.060334693877550825 L1_Forecast=0.026320816326529987 L1_Test=0.17800714285714053
INFO:pyaf.std:MODEL_L2 L2_Fit=0.06982186079515448 L2_Forecast=0.035592237172433074 L2_Test=0.1864562119629995
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=inf LnQ_Forecast=inf LnQ_Test=inf
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.055814285714285566 MedAE_Forecast=0.016400000000001858 MedAE_Test=0.1883428571428547
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_ECON0603_ConstantTrend -0.00412864622288706
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_ECON0603_ConstantTrend_residue_bestCycle_byMAPE None 0.0020344053851907894 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split    Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0   None     Diff_ECON0603             T+S+R  ...   0.3237       0.0326   0.1872
1   None     Diff_ECON0603             T+S+R  ...   0.3237       0.0326   0.1872
2   None         _ECON0603             T+S+R  ...   0.0679       0.0336   0.0416
3   None         _ECON0603             T+S+R  ...   0.0679       0.0336   0.0416
4   None     Diff_ECON0603             T+S+R  ...   0.2945       0.0367   0.1847
..   ...               ...               ...  ...      ...          ...      ...
59  None  RelDiff_ECON0603             T+S+R  ...   0.7218       0.9271   0.9454
60  None  RelDiff_ECON0603             T+S+R  ...   0.7218       0.9271   0.9454
61  None  RelDiff_ECON0603             T+S+R  ...   0.7218       0.9271   0.9454
62  None  RelDiff_ECON0603             T+S+R  ...   0.7218       0.9271   0.9454
63  None   CumSum_ECON0603             T+S+R  ...  11.4120       1.4700   1.4445

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  Diff_ECON0603             T+S+R  ...  0.3237       0.0326   0.1872
1  None  Diff_ECON0603             T+S+R  ...  0.3237       0.0326   0.1872
2  None      _ECON0603             T+S+R  ...  0.0679       0.0336   0.0416
3  None      _ECON0603             T+S+R  ...  0.0679       0.0336   0.0416
4  None  Diff_ECON0603             T+S+R  ...  0.2945       0.0367   0.1847

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ECON0603'], 'Horizon': 8}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.142, ('FORECASTING', {'Signals': ['ECON0603'], 'Horizon': 8}))
8 0   -0.991
1   -0.996
2   -1.016
3   -1.022
4   -0.987
5   -1.016
6   -1.018
7   -1.069
Name: ECON0603, dtype: float64
8 0   -0.786486
1   -0.790429
2   -0.794371
3   -0.798314
4   -0.802257
5   -0.806200
6   -0.810143
7   -0.814086
Name: ECON0603_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL ECON0603 ECON0603 [-0.991, -0.996, -1.016, -1.022, -0.987, -1.016, -1.018, -1.069]
FORECAST_DETAIL_PREDICTED ECON0603 ECON0603 [-0.7864857142857168, -0.790428571428574, -0.7943714285714312, -0.7983142857142884, -0.8022571428571456, -0.8062000000000028, -0.8101428571428599, -0.8140857142857172]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON ECON0603 ECON0603 183 8
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ ECON0603 ECON0603 3.0341477394104004
BENCHMARK_PERF_DETAIL_BEST_MODEL ECON0603 ECON0603 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT ECON0603 ECON0603 8
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE ECON0603 ECON0603 0.2108 0.2357 10.1258
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 ECON0603 ECON0603 0.214089285714283 0.21493373278709593 -77.73496163508023
BENCHMARK_SUCCESS 'M4_COMP_ECONOMICS_ECON0603_8'
