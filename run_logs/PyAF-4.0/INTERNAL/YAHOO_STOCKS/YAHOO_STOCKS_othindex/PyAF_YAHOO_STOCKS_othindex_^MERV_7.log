BENCH_DATA YAHOO_STOCKS_othindex
TIME :  Date N= 1209 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ^MERV N= 1209 H= 7 HEAD= [3270.969971 3321.850098 3336.209961 3316.47998  3308.75    ] TAIL= [15100.580078 15145.150391 15469.650391 15643.259766 15999.099609]
         ^MERV       Date
0  3270.969971 2011-07-28
1  3321.850098 2011-07-29
2  3336.209961 2011-08-01
3  3316.479980 2011-08-02
4  3308.750000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1209 entries, 0 to 1208
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ^MERV   1209 non-null   float64       
 1   Date    1209 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 28.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['^MERV'], 'Transformations': [('^MERV', 'None', '_', 'T+S+R'), ('^MERV', 'None', 'Diff_', 'T+S+R'), ('^MERV', 'None', 'RelDiff_', 'T+S+R'), ('^MERV', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^MERV', 'Transformation': '_^MERV'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.34, ('TRAINING', {'Signal': '^MERV', 'Transformation': '_^MERV'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^MERV', 'Transformation': 'Diff_^MERV'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.815, ('TRAINING', {'Signal': '^MERV', 'Transformation': 'Diff_^MERV'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^MERV', 'Transformation': 'RelDiff_^MERV'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.183, ('TRAINING', {'Signal': '^MERV', 'Transformation': 'RelDiff_^MERV'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^MERV', 'Transformation': 'CumSum_^MERV'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.867, ('TRAINING', {'Signal': '^MERV', 'Transformation': 'CumSum_^MERV'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.206, ('SIGNAL_TRAINING', {'Signals': ['^MERV'], 'Transformations': [('^MERV', 'None', '_', 'T+S+R'), ('^MERV', 'None', 'Diff_', 'T+S+R'), ('^MERV', 'None', 'RelDiff_', 'T+S+R'), ('^MERV', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['^MERV'], 'Transformations': [('^MERV', [('^MERV', 'None', 'CumSum_', 'T+S+R'), ('^MERV', 'None', 'Diff_', 'T+S+R'), ('^MERV', 'None', 'RelDiff_', 'T+S+R'), ('^MERV', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '^MERV', 'Transformations': [('^MERV', 'None', 'CumSum_', 'T+S+R'), ('^MERV', 'None', 'Diff_', 'T+S+R'), ('^MERV', 'None', 'RelDiff_', 'T+S+R'), ('^MERV', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '^MERV', 'Transformations': [('^MERV', 'None', 'CumSum_', 'T+S+R'), ('^MERV', 'None', 'Diff_', 'T+S+R'), ('^MERV', 'None', 'RelDiff_', 'T+S+R'), ('^MERV', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^MERV', 'Model': '_^MERV_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^MERV', 'Model': '_^MERV_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^MERV'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.212, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^MERV'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.247, ('FINALIZE_TRAINING', {'Signals': ['^MERV'], 'Transformations': [('^MERV', [('^MERV', 'None', 'CumSum_', 'T+S+R'), ('^MERV', 'None', 'Diff_', 'T+S+R'), ('^MERV', 'None', 'RelDiff_', 'T+S+R'), ('^MERV', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=2> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='^MERV' Length=1209  Min=2121.52002 Max=15999.099609  Mean=6807.247705591401 StdDev=4016.1008902841327
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_^MERV' Min=0.0 Max=1.0  Mean=0.3376473293156625 StdDev=0.2893949095754047
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_^MERV_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_^MERV_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_^MERV_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_^MERV_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0158 MAPE_Forecast=0.0183 MAPE_Test=0.0121
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0158 SMAPE_Forecast=0.0183 SMAPE_Test=0.0122
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0008 MASE_Test=0.8581
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=915.6846612497536 CRPS_Forecast=349.9743814081464 CRPS_Test=138.90004192857108
INFO:pyaf.std:MODEL_L1 L1_Fit=91.96487651508842 L1_Forecast=216.62220803734445 L1_Test=187.28557457142884
INFO:pyaf.std:MODEL_L2 L2_Fit=153.42874294615524 L2_Forecast=281.739064131196 L2_Test=227.41230593157812
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4533464931201765 LnQ_Forecast=0.13985254216004428 LnQ_Test=0.001531948331435397
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=47.83007799999996 MedAE_Forecast=170.33984400000008 MedAE_Test=173.609375
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.08282784066402374
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _^MERV_Lag1Trend_residue_bestCycle_byMAPE None 0.0003451638644390645 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _^MERV             T+S+R  ...  0.0158       0.0183    0.0121
1    None         _^MERV             T+S+R  ...  0.0158       0.0183    0.0121
2    None   CumSum_^MERV             T+S+R  ...  0.0162       0.0183    0.0121
3    None     Diff_^MERV             T+S+R  ...  0.0158       0.0183    0.0121
4    None  RelDiff_^MERV             T+S+R  ...  0.1191       0.0183    0.0121
..    ...            ...               ...  ...     ...          ...       ...
219  None  RelDiff_^MERV             T+S+R  ...  5.9939      49.7708   76.0368
220  None  RelDiff_^MERV             T+S+R  ...  5.9939      49.7708   76.0368
221  None  RelDiff_^MERV             T+S+R  ...  7.0777      50.9816   84.5916
222  None  RelDiff_^MERV             T+S+R  ...  4.8525      58.5565  111.1892
223  None  RelDiff_^MERV             T+S+R  ...  5.5737      70.0042  138.4879

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _^MERV             T+S+R  ...  0.0158       0.0183   0.0121
1  None         _^MERV             T+S+R  ...  0.0158       0.0183   0.0121
2  None   CumSum_^MERV             T+S+R  ...  0.0162       0.0183   0.0121
3  None     Diff_^MERV             T+S+R  ...  0.0158       0.0183   0.0121
4  None  RelDiff_^MERV             T+S+R  ...  0.1191       0.0183   0.0121

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['^MERV'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.168, ('FORECASTING', {'Signals': ['^MERV'], 'Horizon': 7}))
7 0    15832.549805
1    15931.790039
2    15778.509766
3    15846.540039
4    15712.610352
5    15757.700195
6    15698.690430
Name: ^MERV, dtype: float64
7 0    15999.099609
1    15999.099609
2    15999.099609
3    15999.099609
4    15999.099609
5    15999.099609
6    15999.099609
Name: ^MERV_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_^MERV ^MERV [15832.549805, 15931.790039, 15778.509766, 15846.540039, 15712.610352, 15757.700195, 15698.69043]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_^MERV ^MERV [15999.099609, 15999.099609, 15999.099609, 15999.099609, 15999.099609, 15999.099609, 15999.099609]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_^MERV ^MERV 1209 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_^MERV ^MERV 12.724089860916138
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_^MERV ^MERV Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_^MERV ^MERV 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_^MERV ^MERV 0.013 0.0129 2.2025
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_^MERV ^MERV 205.04380528571528 218.697169275163 -7.266966809877308
BENCHMARK_SUCCESS 'YAHOO_STOCKS_othindex_^MERV_7'
