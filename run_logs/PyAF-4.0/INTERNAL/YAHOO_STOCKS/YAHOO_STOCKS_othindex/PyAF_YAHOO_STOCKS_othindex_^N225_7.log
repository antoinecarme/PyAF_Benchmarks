BENCH_DATA YAHOO_STOCKS_othindex
TIME :  Date N= 1235 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-11T00:00:00.000000000' '2016-07-12T00:00:00.000000000'
 '2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000']
SIGNAL :  ^N225 N= 1235 H= 7 HEAD= [9901.349609 9833.030273 9965.009766 9844.589844 9637.139648] TAIL= [15708.820312 16095.650391 16231.429688 16385.890625 16497.849609]
         ^N225       Date
0  9901.349609 2011-07-28
1  9833.030273 2011-07-29
2  9965.009766 2011-08-01
3  9844.589844 2011-08-02
4  9637.139648 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1235 entries, 0 to 1234
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ^N225   1235 non-null   float64       
 1   Date    1235 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 28.9 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['^N225'], 'Transformations': [('^N225', 'None', '_', 'T+S+R'), ('^N225', 'None', 'Diff_', 'T+S+R'), ('^N225', 'None', 'RelDiff_', 'T+S+R'), ('^N225', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^N225', 'Transformation': '_^N225'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.101, ('TRAINING', {'Signal': '^N225', 'Transformation': '_^N225'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^N225', 'Transformation': 'Diff_^N225'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.786, ('TRAINING', {'Signal': '^N225', 'Transformation': 'Diff_^N225'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^N225', 'Transformation': 'RelDiff_^N225'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.127, ('TRAINING', {'Signal': '^N225', 'Transformation': 'RelDiff_^N225'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^N225', 'Transformation': 'CumSum_^N225'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.831, ('TRAINING', {'Signal': '^N225', 'Transformation': 'CumSum_^N225'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.846, ('SIGNAL_TRAINING', {'Signals': ['^N225'], 'Transformations': [('^N225', 'None', '_', 'T+S+R'), ('^N225', 'None', 'Diff_', 'T+S+R'), ('^N225', 'None', 'RelDiff_', 'T+S+R'), ('^N225', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['^N225'], 'Transformations': [('^N225', [('^N225', 'None', 'CumSum_', 'T+S+R'), ('^N225', 'None', 'Diff_', 'T+S+R'), ('^N225', 'None', 'RelDiff_', 'T+S+R'), ('^N225', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '^N225', 'Transformations': [('^N225', 'None', 'CumSum_', 'T+S+R'), ('^N225', 'None', 'Diff_', 'T+S+R'), ('^N225', 'None', 'RelDiff_', 'T+S+R'), ('^N225', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '^N225', 'Transformations': [('^N225', 'None', 'CumSum_', 'T+S+R'), ('^N225', 'None', 'Diff_', 'T+S+R'), ('^N225', 'None', 'RelDiff_', 'T+S+R'), ('^N225', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^N225', 'Model': '_^N225_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^N225', 'Model': '_^N225_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^N225'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.205, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^N225'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.24, ('FINALIZE_TRAINING', {'Signals': ['^N225'], 'Transformations': [('^N225', [('^N225', 'None', 'CumSum_', 'T+S+R'), ('^N225', 'None', 'Diff_', 'T+S+R'), ('^N225', 'None', 'RelDiff_', 'T+S+R'), ('^N225', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-03T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='^N225' Length=1235  Min=8160.009766 Max=20868.029297  Mean=14100.511164038053 StdDev=3838.3150428914873
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_^N225' Min=0.0 Max=1.0  Mean=0.4674608331807149 StdDev=0.302038805773652
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_^N225_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_^N225_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_^N225_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_^N225_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0097 MAPE_Forecast=0.0133 MAPE_Test=0.015
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0097 SMAPE_Forecast=0.0133 SMAPE_Test=0.0151
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0034 MASE_Test=0.9136
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1083.4189188279167 CRPS_Forecast=439.5488964999006 CRPS_Test=238.3992747142855
INFO:pyaf.std:MODEL_L1 L1_Fit=125.6772331741344 L1_Forecast=233.5524802926831 L1_Test=237.55412928571448
INFO:pyaf.std:MODEL_L2 L2_Fit=175.23908302519285 L2_Forecast=320.30073264165355 L2_Test=294.2021049357325
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1685752121532615 LnQ_Forecast=0.08475926337133066 LnQ_Test=0.0024936128492270607
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=92.70019500000035 MedAE_Forecast=168.52050849999796 MedAE_Test=154.46093699999983
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.13702684661069084
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _^N225_Lag1Trend_residue_bestCycle_byMAPE None 0.000656688831776088 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None         _^N225             T+S+R  ...    0.0097       0.0133      0.0150
1    None         _^N225             T+S+R  ...    0.0097       0.0133      0.0150
2    None   CumSum_^N225             T+S+R  ...    0.0099       0.0133      0.0150
3    None     Diff_^N225             T+S+R  ...    0.0097       0.0133      0.0150
4    None     Diff_^N225             T+S+R  ...    0.0097       0.0133      0.0150
..    ...            ...               ...  ...       ...          ...         ...
211  None  RelDiff_^N225             T+S+R  ...  362.7233    1419.1047   3074.4425
212  None  RelDiff_^N225             T+S+R  ...   17.4363    1454.1906   4980.8523
213  None  RelDiff_^N225             T+S+R  ...   26.2706    2683.9245   9161.2968
214  None  RelDiff_^N225             T+S+R  ...   98.3824    3729.5196  10504.9650
215  None  RelDiff_^N225             T+S+R  ...   98.3824    3729.5196  10504.9650

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _^N225             T+S+R  ...  0.0097       0.0133    0.015
1  None         _^N225             T+S+R  ...  0.0097       0.0133    0.015
2  None   CumSum_^N225             T+S+R  ...  0.0099       0.0133    0.015
3  None     Diff_^N225             T+S+R  ...  0.0097       0.0133    0.015
4  None     Diff_^N225             T+S+R  ...  0.0097       0.0133    0.015

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['^N225'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.161, ('FORECASTING', {'Signals': ['^N225'], 'Horizon': 7}))
7 0    16723.310547
1    16681.890625
2    16810.220703
3    16627.250000
4    16620.289062
5    16383.040039
6    16664.820312
Name: ^N225, dtype: float64
7 0    16497.849609
1    16497.849609
2    16497.849609
3    16497.849609
4    16497.849609
5    16497.849609
6    16497.849609
Name: ^N225_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_^N225 ^N225 [16723.310547, 16681.890625, 16810.220703, 16627.25, 16620.289062, 16383.040039, 16664.820312]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_^N225 ^N225 [16497.849609, 16497.849609, 16497.849609, 16497.849609, 16497.849609, 16497.849609, 16497.849609]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_^N225 ^N225 1235 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_^N225 ^N225 12.348727703094482
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_^N225 ^N225 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_^N225 ^N225 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_^N225 ^N225 0.0108 0.0108 1.2247
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_^N225 ^N225 179.3561664285709 190.8910550799286 -1.4355464320843403
BENCHMARK_SUCCESS 'YAHOO_STOCKS_othindex_^N225_7'
