BENCH_DATA YAHOO_STOCKS_ftse100
TIME :  Date N= 1169 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-01-15T00:00:00.000000000' '2016-01-18T00:00:00.000000000'
 '2016-01-19T00:00:00.000000000' '2016-01-20T00:00:00.000000000'
 '2016-01-21T00:00:00.000000000']
SIGNAL :  AML.L N= 1169 H= 7 HEAD= [405.9 403.1 400.2 335.  330. ] TAIL= [665.5 665.5 666.  665.5 668.5]
   AML.L       Date
0  405.9 2011-07-28
1  403.1 2011-07-29
2  400.2 2011-08-01
3  335.0 2011-08-02
4  330.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1169 entries, 0 to 1168
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AML.L   1169 non-null   float64       
 1   Date    1169 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 27.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AML.L'], 'Transformations': [('AML.L', 'None', '_', 'T+S+R'), ('AML.L', 'None', 'Diff_', 'T+S+R'), ('AML.L', 'None', 'RelDiff_', 'T+S+R'), ('AML.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AML.L', 'Transformation': '_AML.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.941, ('TRAINING', {'Signal': 'AML.L', 'Transformation': '_AML.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AML.L', 'Transformation': 'Diff_AML.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.697, ('TRAINING', {'Signal': 'AML.L', 'Transformation': 'Diff_AML.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AML.L', 'Transformation': 'RelDiff_AML.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.045, ('TRAINING', {'Signal': 'AML.L', 'Transformation': 'RelDiff_AML.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AML.L', 'Transformation': 'CumSum_AML.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.653, ('TRAINING', {'Signal': 'AML.L', 'Transformation': 'CumSum_AML.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.338, ('SIGNAL_TRAINING', {'Signals': ['AML.L'], 'Transformations': [('AML.L', 'None', '_', 'T+S+R'), ('AML.L', 'None', 'Diff_', 'T+S+R'), ('AML.L', 'None', 'RelDiff_', 'T+S+R'), ('AML.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AML.L'], 'Transformations': [('AML.L', [('AML.L', 'None', 'CumSum_', 'T+S+R'), ('AML.L', 'None', 'Diff_', 'T+S+R'), ('AML.L', 'None', 'RelDiff_', 'T+S+R'), ('AML.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AML.L', 'Transformations': [('AML.L', 'None', 'CumSum_', 'T+S+R'), ('AML.L', 'None', 'Diff_', 'T+S+R'), ('AML.L', 'None', 'RelDiff_', 'T+S+R'), ('AML.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'AML.L', 'Transformations': [('AML.L', 'None', 'CumSum_', 'T+S+R'), ('AML.L', 'None', 'Diff_', 'T+S+R'), ('AML.L', 'None', 'RelDiff_', 'T+S+R'), ('AML.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AML.L', 'Model': '_AML.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AML.L', 'Model': '_AML.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AML.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.179, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AML.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.213, ('FINALIZE_TRAINING', {'Signals': ['AML.L'], 'Transformations': [('AML.L', [('AML.L', 'None', 'CumSum_', 'T+S+R'), ('AML.L', 'None', 'Diff_', 'T+S+R'), ('AML.L', 'None', 'RelDiff_', 'T+S+R'), ('AML.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-02-18T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AML.L' Length=1169  Min=270.6 Max=668.5  Mean=432.83738237810104 StdDev=90.45738154203119
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AML.L' Min=0.0 Max=1.0  Mean=0.40773405975898697 StdDev=0.22733697296313465
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AML.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AML.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AML.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AML.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0102 MAPE_Forecast=0.007 MAPE_Test=0.0009
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0102 SMAPE_Forecast=0.0071 SMAPE_Test=0.0009
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9989 MASE_Forecast=0.9974 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=16.537849810209057 CRPS_Forecast=21.001242595304216 CRPS_Test=0.03571428571428571
INFO:pyaf.std:MODEL_L1 L1_Fit=3.906566200215286 L1_Forecast=3.689270386266095 L1_Test=0.5714285714285714
INFO:pyaf.std:MODEL_L2 L2_Fit=5.599063815333849 L2_Forecast=12.07227874773815 L2_Test=1.164964745021435
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.21212552077761576 LnQ_Forecast=0.11132870847565043 LnQ_Test=2.1357933633505324e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.0 MedAE_Forecast=1.5 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.3400351847197787
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AML.L_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None         _AML.L             T+S+R  ...    0.0102       0.0070      0.0009
1    None         _AML.L             T+S+R  ...    0.0102       0.0070      0.0009
2    None   CumSum_AML.L             T+S+R  ...    0.0106       0.0070      0.0009
3    None     Diff_AML.L             T+S+R  ...    0.0102       0.0070      0.0009
4    None     Diff_AML.L             T+S+R  ...    0.0102       0.0070      0.0009
..    ...            ...               ...  ...       ...          ...         ...
211  None  RelDiff_AML.L             T+S+R  ...   28.8591     494.9353   3472.9624
212  None  RelDiff_AML.L             T+S+R  ...   65.6999    1107.3140   2201.0514
213  None  RelDiff_AML.L             T+S+R  ...   65.6999    1107.3140   2201.0514
214  None  RelDiff_AML.L             T+S+R  ...  234.3018    4350.9349  30236.8078
215  None  RelDiff_AML.L             T+S+R  ...  234.3018    4350.9349  30236.8078

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _AML.L             T+S+R  ...  0.0102        0.007   0.0009
1  None         _AML.L             T+S+R  ...  0.0102        0.007   0.0009
2  None   CumSum_AML.L             T+S+R  ...  0.0106        0.007   0.0009
3  None     Diff_AML.L             T+S+R  ...  0.0102        0.007   0.0009
4  None     Diff_AML.L             T+S+R  ...  0.0102        0.007   0.0009

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AML.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.149, ('FORECASTING', {'Signals': ['AML.L'], 'Horizon': 7}))
7 0    669.0
1    670.0
2    669.5
3    669.0
4    669.0
5    669.0
6    669.0
Name: AML.L, dtype: float64
7 0    668.5
1    668.5
2    668.5
3    668.5
4    668.5
5    668.5
6    668.5
Name: AML.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AML.L AML.L [669.0, 670.0, 669.5, 669.0, 669.0, 669.0, 669.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AML.L AML.L [668.5, 668.5, 668.5, 668.5, 668.5, 668.5, 668.5]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AML.L AML.L 1169 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AML.L AML.L 11.803038120269775
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AML.L AML.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AML.L AML.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AML.L AML.L 0.0011 0.0011 2.1429
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AML.L AML.L 0.7142857142857143 0.8017837257372732 -3.846153845631952
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftse100_AML.L_7'
