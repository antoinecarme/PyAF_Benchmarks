BENCH_DATA YAHOO_STOCKS_mc
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ACS.MC N= 1298 H= 7 HEAD= [29.41  29.485 28.31  27.605 27.015] TAIL= [26.795 26.425 26.585 26.46  26.545]
   ACS.MC       Date
0  29.410 2011-07-28
1  29.485 2011-07-29
2  28.310 2011-08-01
3  27.605 2011-08-02
4  27.015 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ACS.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ACS.MC'], 'Transformations': [('ACS.MC', 'None', '_', 'T+S+R'), ('ACS.MC', 'None', 'Diff_', 'T+S+R'), ('ACS.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': '_ACS.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.209, ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': '_ACS.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': 'Diff_ACS.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.89, ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': 'Diff_ACS.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': 'RelDiff_ACS.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.299, ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': 'RelDiff_ACS.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': 'CumSum_ACS.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.937, ('TRAINING', {'Signal': 'ACS.MC', 'Transformation': 'CumSum_ACS.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.336, ('SIGNAL_TRAINING', {'Signals': ['ACS.MC'], 'Transformations': [('ACS.MC', 'None', '_', 'T+S+R'), ('ACS.MC', 'None', 'Diff_', 'T+S+R'), ('ACS.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ACS.MC'], 'Transformations': [('ACS.MC', [('ACS.MC', 'None', 'CumSum_', 'T+S+R'), ('ACS.MC', 'None', 'Diff_', 'T+S+R'), ('ACS.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ACS.MC', 'Transformations': [('ACS.MC', 'None', 'CumSum_', 'T+S+R'), ('ACS.MC', 'None', 'Diff_', 'T+S+R'), ('ACS.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ACS.MC', 'Transformations': [('ACS.MC', 'None', 'CumSum_', 'T+S+R'), ('ACS.MC', 'None', 'Diff_', 'T+S+R'), ('ACS.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACS.MC', 'Model': '_ACS.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACS.MC', 'Model': '_ACS.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACS.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.189, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACS.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['ACS.MC'], 'Transformations': [('ACS.MC', [('ACS.MC', 'None', 'CumSum_', 'T+S+R'), ('ACS.MC', 'None', 'Diff_', 'T+S+R'), ('ACS.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ACS.MC' Length=1298  Min=10.84 Max=34.385  Mean=24.747530816640992 StdDev=5.577675673411951
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ACS.MC' Min=0.0 Max=1.0  Mean=0.5906787350452737 StdDev=0.23689427366370558
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ACS.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ACS.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ACS.MC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ACS.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0144 MAPE_Forecast=0.0156 MAPE_Test=0.0139
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0144 SMAPE_Forecast=0.0156 SMAPE_Test=0.0141
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0033 MASE_Test=1.0346
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.787923503161975 CRPS_Forecast=0.776356234385646 CRPS_Test=0.23535714285714324
INFO:pyaf.std:MODEL_L1 L1_Fit=0.3281056201550388 L1_Forecast=0.41480694980694977 L1_Test=0.3664285714285721
INFO:pyaf.std:MODEL_L2 L2_Fit=0.4512880736155088 L2_Forecast=0.565272425524114 L2_Test=0.44030427790660515
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4444046569936425 LnQ_Forecast=0.12047611078453765 LnQ_Test=0.0020090464908876014
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.23999999999999844 MedAE_Forecast=0.3150000000000013 MedAE_Test=0.370000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.78870248460395
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ACS.MC_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _ACS.MC             T+S+R  ...   0.0144       0.0156    0.0139
1    None         _ACS.MC             T+S+R  ...   0.0144       0.0156    0.0139
2    None   CumSum_ACS.MC             T+S+R  ...   0.0150       0.0156    0.0139
3    None     Diff_ACS.MC             T+S+R  ...   0.0144       0.0156    0.0139
4    None     Diff_ACS.MC             T+S+R  ...   0.0144       0.0156    0.0139
..    ...             ...               ...  ...      ...          ...       ...
211  None  RelDiff_ACS.MC             T+S+R  ...   5.5682      52.6590   96.1491
212  None  RelDiff_ACS.MC             T+S+R  ...  38.9086     108.6359   98.5365
213  None  RelDiff_ACS.MC             T+S+R  ...  38.9086     108.6359   98.5365
214  None  RelDiff_ACS.MC             T+S+R  ...  20.3268     229.3298  419.2398
215  None  RelDiff_ACS.MC             T+S+R  ...  20.3268     229.3298  419.2398

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ACS.MC             T+S+R  ...  0.0144       0.0156   0.0139
1  None        _ACS.MC             T+S+R  ...  0.0144       0.0156   0.0139
2  None  CumSum_ACS.MC             T+S+R  ...  0.0150       0.0156   0.0139
3  None    Diff_ACS.MC             T+S+R  ...  0.0144       0.0156   0.0139
4  None    Diff_ACS.MC             T+S+R  ...  0.0144       0.0156   0.0139

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ACS.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['ACS.MC'], 'Horizon': 7}))
7 0    26.770
1    26.105
2    26.090
3    25.580
4    25.950
5    26.205
6    26.500
Name: ACS.MC, dtype: float64
7 0    26.545
1    26.545
2    26.545
3    26.545
4    26.545
5    26.545
6    26.545
Name: ACS.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ACS.MC ACS.MC [26.77, 26.105, 26.09, 25.58, 25.95, 26.205, 26.5]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ACS.MC ACS.MC [26.545, 26.545, 26.545, 26.545, 26.545, 26.545, 26.545]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ACS.MC ACS.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ACS.MC ACS.MC 12.826407432556152
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ACS.MC ACS.MC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ACS.MC ACS.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ACS.MC ACS.MC 0.0169 0.0167 1.2451
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ACS.MC ACS.MC 0.43785714285714455 0.5146600819958762 -1.113599537267317
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mc_ACS.MC_7'
