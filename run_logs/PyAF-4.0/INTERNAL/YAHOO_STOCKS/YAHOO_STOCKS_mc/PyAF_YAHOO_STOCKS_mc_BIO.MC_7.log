BENCH_DATA YAHOO_STOCKS_mc
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  BIO.MC N= 1298 H= 7 HEAD= [0.68  0.655 0.65  0.65  0.65 ] TAIL= [0.41 0.4  0.4  0.4  0.4 ]
   BIO.MC       Date
0   0.680 2011-07-28
1   0.655 2011-07-29
2   0.650 2011-08-01
3   0.650 2011-08-02
4   0.650 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   BIO.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BIO.MC'], 'Transformations': [('BIO.MC', 'None', '_', 'T+S+R'), ('BIO.MC', 'None', 'Diff_', 'T+S+R'), ('BIO.MC', 'None', 'RelDiff_', 'T+S+R'), ('BIO.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': '_BIO.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.003, ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': '_BIO.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': 'Diff_BIO.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.492, ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': 'Diff_BIO.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': 'RelDiff_BIO.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.841, ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': 'RelDiff_BIO.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': 'CumSum_BIO.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.831, ('TRAINING', {'Signal': 'BIO.MC', 'Transformation': 'CumSum_BIO.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.17, ('SIGNAL_TRAINING', {'Signals': ['BIO.MC'], 'Transformations': [('BIO.MC', 'None', '_', 'T+S+R'), ('BIO.MC', 'None', 'Diff_', 'T+S+R'), ('BIO.MC', 'None', 'RelDiff_', 'T+S+R'), ('BIO.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BIO.MC'], 'Transformations': [('BIO.MC', [('BIO.MC', 'None', 'CumSum_', 'T+S+R'), ('BIO.MC', 'None', 'Diff_', 'T+S+R'), ('BIO.MC', 'None', 'RelDiff_', 'T+S+R'), ('BIO.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BIO.MC', 'Transformations': [('BIO.MC', 'None', 'CumSum_', 'T+S+R'), ('BIO.MC', 'None', 'Diff_', 'T+S+R'), ('BIO.MC', 'None', 'RelDiff_', 'T+S+R'), ('BIO.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'BIO.MC', 'Transformations': [('BIO.MC', 'None', 'CumSum_', 'T+S+R'), ('BIO.MC', 'None', 'Diff_', 'T+S+R'), ('BIO.MC', 'None', 'RelDiff_', 'T+S+R'), ('BIO.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BIO.MC', 'Model': '_BIO.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BIO.MC', 'Model': '_BIO.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BIO.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BIO.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['BIO.MC'], 'Transformations': [('BIO.MC', [('BIO.MC', 'None', 'CumSum_', 'T+S+R'), ('BIO.MC', 'None', 'Diff_', 'T+S+R'), ('BIO.MC', 'None', 'RelDiff_', 'T+S+R'), ('BIO.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BIO.MC' Length=1298  Min=0.21 Max=0.95  Mean=0.49848613251155677 StdDev=0.1342992434366701
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BIO.MC' Min=0.0 Max=1.0  Mean=0.3898461250156166 StdDev=0.18148546410360808
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BIO.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BIO.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BIO.MC_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BIO.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0237 MAPE_Forecast=0.0246 MAPE_Test=0.0106
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0238 SMAPE_Forecast=0.0246 SMAPE_Test=0.0106
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0066 MASE_Test=1.0286
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.043210266217870254 CRPS_Forecast=0.013732591414944357 CRPS_Test=0.0010714285714285645
INFO:pyaf.std:MODEL_L1 L1_Fit=0.011656976744186049 L1_Forecast=0.011158301158301158 L1_Test=0.004285714285714266
INFO:pyaf.std:MODEL_L2 L2_Fit=0.017005755979494372 L2_Forecast=0.015302610371106102 L2_Test=0.005976143046671933
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.2937674739000693 LnQ_Forecast=0.2940789743366523 LnQ_Test=0.001528088239305432
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.010000000000000009 MedAE_Forecast=0.009999999999999953 MedAE_Test=0.0050000000000000044
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6351351351351353
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BIO.MC_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None         _BIO.MC             T+S+R  ...    0.0237       0.0246     0.0106
1    None   CumSum_BIO.MC             T+S+R  ...    0.0243       0.0246     0.0106
2    None     Diff_BIO.MC             T+S+R  ...    0.0237       0.0246     0.0106
3    None         _BIO.MC             T+S+R  ...    0.0237       0.0246     0.0106
4    None         _BIO.MC             T+S+R  ...    0.0237       0.0246     0.0106
..    ...             ...               ...  ...       ...          ...        ...
147  None  RelDiff_BIO.MC             T+S+R  ...  138.4558     160.0886    38.0347
148  None  RelDiff_BIO.MC             T+S+R  ...  138.4558     160.0886    38.0347
149  None  RelDiff_BIO.MC             T+S+R  ...  100.3287     326.2367   300.8063
150  None  RelDiff_BIO.MC             T+S+R  ...  100.3287     326.2367   300.8063
151  None  RelDiff_BIO.MC             T+S+R  ...   48.4358     822.7630  1767.9279

[152 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _BIO.MC             T+S+R  ...  0.0237       0.0246   0.0106
1  None  CumSum_BIO.MC             T+S+R  ...  0.0243       0.0246   0.0106
2  None    Diff_BIO.MC             T+S+R  ...  0.0237       0.0246   0.0106
3  None        _BIO.MC             T+S+R  ...  0.0237       0.0246   0.0106
4  None        _BIO.MC             T+S+R  ...  0.0237       0.0246   0.0106

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BIO.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['BIO.MC'], 'Horizon': 7}))
7 0    0.420
1    0.420
2    0.425
3    0.435
4    0.450
5    0.440
6    0.445
Name: BIO.MC, dtype: float64
7 0    0.4
1    0.4
2    0.4
3    0.4
4    0.4
5    0.4
6    0.4
Name: BIO.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_BIO.MC BIO.MC [0.42, 0.42, 0.425, 0.435, 0.45, 0.44, 0.445]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_BIO.MC BIO.MC [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_BIO.MC BIO.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_BIO.MC BIO.MC 9.64276909828186
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_BIO.MC BIO.MC Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_BIO.MC BIO.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_BIO.MC BIO.MC 0.0768 0.0802 4.4762
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_BIO.MC BIO.MC 0.033571428571428544 0.03540581066112492 -8.907256945954831
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mc_BIO.MC_7'
