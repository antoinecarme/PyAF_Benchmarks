BENCH_DATA YAHOO_STOCKS_mc
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AMP.MC N= 1298 H= 7 HEAD= [1.91725 1.96625 1.94175 1.94175 1.94788] TAIL= [0.083 0.081 0.08  0.078 0.08 ]
    AMP.MC       Date
0  1.91725 2011-07-28
1  1.96625 2011-07-29
2  1.94175 2011-08-01
3  1.94175 2011-08-02
4  1.94788 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AMP.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AMP.MC'], 'Transformations': [('AMP.MC', 'None', '_', 'T+S+R'), ('AMP.MC', 'None', 'Diff_', 'T+S+R'), ('AMP.MC', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': '_AMP.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.131, ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': '_AMP.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': 'Diff_AMP.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.877, ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': 'Diff_AMP.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': 'RelDiff_AMP.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.886, ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': 'RelDiff_AMP.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': 'CumSum_AMP.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.602, ('TRAINING', {'Signal': 'AMP.MC', 'Transformation': 'CumSum_AMP.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.498, ('SIGNAL_TRAINING', {'Signals': ['AMP.MC'], 'Transformations': [('AMP.MC', 'None', '_', 'T+S+R'), ('AMP.MC', 'None', 'Diff_', 'T+S+R'), ('AMP.MC', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AMP.MC'], 'Transformations': [('AMP.MC', [('AMP.MC', 'None', 'CumSum_', 'T+S+R'), ('AMP.MC', 'None', 'Diff_', 'T+S+R'), ('AMP.MC', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AMP.MC', 'Transformations': [('AMP.MC', 'None', 'CumSum_', 'T+S+R'), ('AMP.MC', 'None', 'Diff_', 'T+S+R'), ('AMP.MC', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'AMP.MC', 'Transformations': [('AMP.MC', 'None', 'CumSum_', 'T+S+R'), ('AMP.MC', 'None', 'Diff_', 'T+S+R'), ('AMP.MC', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMP.MC', 'Model': '_AMP.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMP.MC', 'Model': '_AMP.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMP.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMP.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['AMP.MC'], 'Transformations': [('AMP.MC', [('AMP.MC', 'None', 'CumSum_', 'T+S+R'), ('AMP.MC', 'None', 'Diff_', 'T+S+R'), ('AMP.MC', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AMP.MC' Length=1298  Min=0.077 Max=1.96625  Mean=0.6633299152542392 StdDev=0.4537126415964692
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AMP.MC' Min=0.0 Max=1.0  Mean=0.31035062339776937 StdDev=0.24015489829110417
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AMP.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AMP.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AMP.MC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AMP.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0295 MAPE_Forecast=0.0257 MAPE_Test=0.0213
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.028 SMAPE_Forecast=0.0258 SMAPE_Test=0.0213
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9974 MASE_Test=1.0286
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.12041421040391675 CRPS_Forecast=0.004917471916420622 CRPS_Test=0.0005714285714285719
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01983177325581395 L1_Forecast=0.0030415444015444017 L1_Test=0.0017142857142857157
INFO:pyaf.std:MODEL_L2 L2_Fit=0.03283442002343263 L2_Forecast=0.004529380620249175 L2_Test=0.0019272482233188648
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.804184167045882 LnQ_Forecast=0.38112177239732625 LnQ_Test=0.003996238524499604
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.012249999999999983 MedAE_Forecast=0.0020000000000000018 MedAE_Test=0.0020000000000000018
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9740637819240439
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AMP.MC_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE      TestMAPE
0    None         _AMP.MC  ...       0.0257  2.130000e-02
1    None         _AMP.MC  ...       0.0257  2.130000e-02
2    None   CumSum_AMP.MC  ...       0.0257  2.130000e-02
3    None   CumSum_AMP.MC  ...       0.0257  2.130000e-02
4    None     Diff_AMP.MC  ...       0.0257  2.130000e-02
..    ...             ...  ...          ...           ...
195  None  RelDiff_AMP.MC  ...   67171.2210  2.078713e+06
196  None  RelDiff_AMP.MC  ...   67171.2210  2.078713e+06
197  None  RelDiff_AMP.MC  ...   67913.5889  2.107663e+06
198  None  RelDiff_AMP.MC  ...   82002.4478  2.490483e+06
199  None  RelDiff_AMP.MC  ...   92199.4305  2.895521e+06

[200 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _AMP.MC             T+S+R  ...  0.0295       0.0257   0.0213
1  None        _AMP.MC             T+S+R  ...  0.0295       0.0257   0.0213
2  None  CumSum_AMP.MC             T+S+R  ...  0.0304       0.0257   0.0213
3  None  CumSum_AMP.MC             T+S+R  ...  0.0304       0.0257   0.0213
4  None    Diff_AMP.MC             T+S+R  ...  0.0295       0.0257   0.0213

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AMP.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['AMP.MC'], 'Horizon': 7}))
7 0    0.079
1    0.080
2    0.081
3    0.092
4    0.089
5    0.084
6    0.087
Name: AMP.MC, dtype: float64
7 0    0.08
1    0.08
2    0.08
3    0.08
4    0.08
5    0.08
6    0.08
Name: AMP.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AMP.MC AMP.MC [0.079, 0.08, 0.081, 0.092, 0.089, 0.084, 0.087]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AMP.MC AMP.MC [0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AMP.MC AMP.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AMP.MC AMP.MC 11.987038612365723
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AMP.MC AMP.MC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AMP.MC AMP.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AMP.MC AMP.MC 0.0549 0.0577 1.2143
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AMP.MC AMP.MC 0.004857142857142856 0.006458659745975605 -1.0039201933881028
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mc_AMP.MC_7'
