BENCH_DATA YAHOO_STOCKS_mc
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ACX.MC N= 1298 H= 7 HEAD= [11.405 11.525 11.28  10.835 10.6  ] TAIL= [11.24  11.515 11.715 11.54  11.51 ]
   ACX.MC       Date
0  11.405 2011-07-28
1  11.525 2011-07-29
2  11.280 2011-08-01
3  10.835 2011-08-02
4  10.600 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ACX.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ACX.MC'], 'Transformations': [('ACX.MC', 'None', '_', 'T+S+R'), ('ACX.MC', 'None', 'Diff_', 'T+S+R'), ('ACX.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACX.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': '_ACX.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.381, ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': '_ACX.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': 'Diff_ACX.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.963, ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': 'Diff_ACX.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': 'RelDiff_ACX.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.217, ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': 'RelDiff_ACX.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': 'CumSum_ACX.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.89, ('TRAINING', {'Signal': 'ACX.MC', 'Transformation': 'CumSum_ACX.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.454, ('SIGNAL_TRAINING', {'Signals': ['ACX.MC'], 'Transformations': [('ACX.MC', 'None', '_', 'T+S+R'), ('ACX.MC', 'None', 'Diff_', 'T+S+R'), ('ACX.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACX.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ACX.MC'], 'Transformations': [('ACX.MC', [('ACX.MC', 'None', 'CumSum_', 'T+S+R'), ('ACX.MC', 'None', 'Diff_', 'T+S+R'), ('ACX.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACX.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ACX.MC', 'Transformations': [('ACX.MC', 'None', 'CumSum_', 'T+S+R'), ('ACX.MC', 'None', 'Diff_', 'T+S+R'), ('ACX.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACX.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ACX.MC', 'Transformations': [('ACX.MC', 'None', 'CumSum_', 'T+S+R'), ('ACX.MC', 'None', 'Diff_', 'T+S+R'), ('ACX.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACX.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACX.MC', 'Model': '_ACX.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACX.MC', 'Model': '_ACX.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACX.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACX.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.228, ('FINALIZE_TRAINING', {'Signals': ['ACX.MC'], 'Transformations': [('ACX.MC', [('ACX.MC', 'None', 'CumSum_', 'T+S+R'), ('ACX.MC', 'None', 'Diff_', 'T+S+R'), ('ACX.MC', 'None', 'RelDiff_', 'T+S+R'), ('ACX.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ACX.MC' Length=1298  Min=6.9 Max=16.05  Mean=10.17826964560864 StdDev=1.962208109984932
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ACX.MC' Min=0.0 Max=1.0  Mean=0.3582808355856422 StdDev=0.21444897376884486
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ACX.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ACX.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ACX.MC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ACX.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0134 MAPE_Forecast=0.0224 MAPE_Test=0.0207
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0134 SMAPE_Forecast=0.0225 SMAPE_Test=0.021
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0039 MASE_Test=1.0473
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.6249853993268054 CRPS_Forecast=0.2483916460595049 CRPS_Test=0.23642857142857135
INFO:pyaf.std:MODEL_L1 L1_Fit=0.1373827519379845 L1_Forecast=0.21687644787644791 L1_Test=0.23214285714285715
INFO:pyaf.std:MODEL_L2 L2_Fit=0.18844519642130325 L2_Forecast=0.27884575246532567 L2_Test=0.25501400521764067
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3331921019264764 LnQ_Forecast=0.2229604821906624 LnQ_Test=0.0037582339332230424
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.10199999999999987 MedAE_Forecast=0.18200000000000038 MedAE_Test=0.2550000000000008
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4923497267759562
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ACX.MC_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _ACX.MC             T+S+R  ...  0.0131       0.0222    0.0186
1    None         _ACX.MC             T+S+R  ...  0.0131       0.0222    0.0186
2    None         _ACX.MC             T+S+R  ...  0.0131       0.0222    0.0187
3    None         _ACX.MC             T+S+R  ...  0.0129       0.0222    0.0198
4    None         _ACX.MC             T+S+R  ...  0.0134       0.0224    0.0207
..    ...             ...               ...  ...     ...          ...       ...
219  None  RelDiff_ACX.MC             T+S+R  ...  5.7644      68.5334   98.1916
220  None  RelDiff_ACX.MC             T+S+R  ...  8.7373     101.0884  151.8241
221  None  RelDiff_ACX.MC             T+S+R  ...  8.7373     101.0884  151.8241
222  None  RelDiff_ACX.MC             T+S+R  ...  8.2425     108.8884  173.4575
223  None  RelDiff_ACX.MC             T+S+R  ...  8.2425     108.8884  173.4575

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ACX.MC             T+S+R  ...  0.0131       0.0222   0.0186
1  None        _ACX.MC             T+S+R  ...  0.0131       0.0222   0.0186
2  None        _ACX.MC             T+S+R  ...  0.0131       0.0222   0.0187
3  None        _ACX.MC             T+S+R  ...  0.0129       0.0222   0.0198
4  None        _ACX.MC             T+S+R  ...  0.0134       0.0224   0.0207

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ACX.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['ACX.MC'], 'Horizon': 7}))
7 0    11.310
1    11.355
2    11.360
3    11.210
4    11.280
5    11.465
6    11.285
Name: ACX.MC, dtype: float64
7 0    11.51
1    11.51
2    11.51
3    11.51
4    11.51
5    11.51
6    11.51
Name: ACX.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ACX.MC ACX.MC [11.31, 11.355, 11.36, 11.21, 11.28, 11.465, 11.285]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ACX.MC ACX.MC [11.51, 11.51, 11.51, 11.51, 11.51, 11.51, 11.51]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ACX.MC ACX.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ACX.MC ACX.MC 12.944575786590576
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ACX.MC ACX.MC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ACX.MC ACX.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ACX.MC ACX.MC 0.0165 0.0164 1.7615
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ACX.MC ACX.MC 0.18642857142857114 0.2007397035253077 -6.272651914950821
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mc_ACX.MC_7'
