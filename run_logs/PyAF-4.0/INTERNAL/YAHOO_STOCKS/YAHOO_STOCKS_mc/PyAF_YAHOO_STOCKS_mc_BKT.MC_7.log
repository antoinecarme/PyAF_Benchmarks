BENCH_DATA YAHOO_STOCKS_mc
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  BKT.MC N= 1298 H= 7 HEAD= [6.6718  6.70913 6.44469 6.22224 6.14446] TAIL= [5.971 5.924 6.042 6.025 6.028]
    BKT.MC       Date
0  6.67180 2011-07-28
1  6.70913 2011-07-29
2  6.44469 2011-08-01
3  6.22224 2011-08-02
4  6.14446 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   BKT.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BKT.MC'], 'Transformations': [('BKT.MC', 'None', '_', 'T+S+R'), ('BKT.MC', 'None', 'Diff_', 'T+S+R'), ('BKT.MC', 'None', 'RelDiff_', 'T+S+R'), ('BKT.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': '_BKT.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.259, ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': '_BKT.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': 'Diff_BKT.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.817, ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': 'Diff_BKT.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': 'RelDiff_BKT.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.153, ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': 'RelDiff_BKT.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': 'CumSum_BKT.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.87, ('TRAINING', {'Signal': 'BKT.MC', 'Transformation': 'CumSum_BKT.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.102, ('SIGNAL_TRAINING', {'Signals': ['BKT.MC'], 'Transformations': [('BKT.MC', 'None', '_', 'T+S+R'), ('BKT.MC', 'None', 'Diff_', 'T+S+R'), ('BKT.MC', 'None', 'RelDiff_', 'T+S+R'), ('BKT.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BKT.MC'], 'Transformations': [('BKT.MC', [('BKT.MC', 'None', 'CumSum_', 'T+S+R'), ('BKT.MC', 'None', 'Diff_', 'T+S+R'), ('BKT.MC', 'None', 'RelDiff_', 'T+S+R'), ('BKT.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BKT.MC', 'Transformations': [('BKT.MC', 'None', 'CumSum_', 'T+S+R'), ('BKT.MC', 'None', 'Diff_', 'T+S+R'), ('BKT.MC', 'None', 'RelDiff_', 'T+S+R'), ('BKT.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'BKT.MC', 'Transformations': [('BKT.MC', 'None', 'CumSum_', 'T+S+R'), ('BKT.MC', 'None', 'Diff_', 'T+S+R'), ('BKT.MC', 'None', 'RelDiff_', 'T+S+R'), ('BKT.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BKT.MC', 'Model': '_BKT.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BKT.MC', 'Model': '_BKT.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BKT.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BKT.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['BKT.MC'], 'Transformations': [('BKT.MC', [('BKT.MC', 'None', 'CumSum_', 'T+S+R'), ('BKT.MC', 'None', 'Diff_', 'T+S+R'), ('BKT.MC', 'None', 'RelDiff_', 'T+S+R'), ('BKT.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BKT.MC' Length=1298  Min=2.314 Max=8.35336  Mean=5.771286255778119 StdDev=1.273560280657138
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BKT.MC' Min=0.0 Max=1.0  Mean=0.5724590446302447 StdDev=0.2108766956527082
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BKT.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BKT.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BKT.MC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_BKT.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0189 MAPE_Forecast=0.0137 MAPE_Test=0.0146
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0183 SMAPE_Forecast=0.0137 SMAPE_Test=0.0147
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9993 MASE_Test=1.2783
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4000556164575683 CRPS_Forecast=0.0993392563252328 CRPS_Test=0.0712857142857143
INFO:pyaf.std:MODEL_L1 L1_Fit=0.09822011627906976 L1_Forecast=0.08766795366795369 L1_Test=0.0858571428571426
INFO:pyaf.std:MODEL_L2 L2_Fit=0.16963037102771425 L2_Forecast=0.11494050836550386 L2_Test=0.1153720689149427
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.4200492407206071 LnQ_Forecast=0.08482650099257147 LnQ_Test=0.002774814653222746
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.07200000000000006 MedAE_Forecast=0.07200000000000006 MedAE_Test=0.04699999999999971
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7215665236051502
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _BKT.MC_Lag1Trend_residue_bestCycle_byMAPE None 0.00025664971122768554 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None         _BKT.MC             T+S+R  ...    0.0189       0.0137     0.0146
1    None         _BKT.MC             T+S+R  ...    0.0189       0.0137     0.0146
2    None   CumSum_BKT.MC             T+S+R  ...    0.0195       0.0137     0.0146
3    None     Diff_BKT.MC             T+S+R  ...    0.0189       0.0137     0.0146
4    None     Diff_BKT.MC             T+S+R  ...    0.0189       0.0137     0.0146
..    ...             ...               ...  ...       ...          ...        ...
211  None  RelDiff_BKT.MC             T+S+R  ...   43.3758     500.4913   774.4526
212  None  RelDiff_BKT.MC             T+S+R  ...  111.1056    1971.6823  4476.4693
213  None  RelDiff_BKT.MC             T+S+R  ...  111.1056    1971.6823  4476.4693
214  None  RelDiff_BKT.MC             T+S+R  ...  108.1481    2065.8565  4836.2804
215  None  RelDiff_BKT.MC             T+S+R  ...  108.1481    2065.8565  4836.2804

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _BKT.MC             T+S+R  ...  0.0189       0.0137   0.0146
1  None        _BKT.MC             T+S+R  ...  0.0189       0.0137   0.0146
2  None  CumSum_BKT.MC             T+S+R  ...  0.0195       0.0137   0.0146
3  None    Diff_BKT.MC             T+S+R  ...  0.0189       0.0137   0.0146
4  None    Diff_BKT.MC             T+S+R  ...  0.0189       0.0137   0.0146

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BKT.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['BKT.MC'], 'Horizon': 7}))
7 0    6.112
1    6.267
2    6.198
3    6.244
4    6.212
5    6.227
6    6.261
Name: BKT.MC, dtype: float64
7 0    6.028
1    6.028
2    6.028
3    6.028
4    6.028
5    6.028
6    6.028
Name: BKT.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_BKT.MC BKT.MC [6.112, 6.267, 6.198, 6.244, 6.212, 6.227, 6.261]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_BKT.MC BKT.MC [6.028, 6.028, 6.028, 6.028, 6.028, 6.028, 6.028]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_BKT.MC BKT.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_BKT.MC BKT.MC 12.580846548080444
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_BKT.MC BKT.MC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_BKT.MC BKT.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_BKT.MC BKT.MC 0.0304 0.0309 3.2357
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_BKT.MC BKT.MC 0.1892857142857148 0.19547707209359852 -15.040307285071222
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mc_BKT.MC_7'
