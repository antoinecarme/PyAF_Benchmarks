BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1037 H= 7 HEAD= ['2012-07-26T00:00:00.000000000' '2012-07-27T00:00:00.000000000'
 '2012-07-30T00:00:00.000000000' '2012-07-31T00:00:00.000000000'
 '2012-08-01T00:00:00.000000000'] TAIL= ['2016-07-11T00:00:00.000000000' '2016-07-12T00:00:00.000000000'
 '2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000']
SIGNAL :  LONN.VX N= 1037 H= 7 HEAD= [45.69 44.66 44.3  44.24 44.24] TAIL= [165.2 165.2 167.7 167.3 167.7]
   LONN.VX       Date
0    45.69 2012-07-26
1    44.66 2012-07-27
2    44.30 2012-07-30
3    44.24 2012-07-31
4    44.24 2012-08-01
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1037 entries, 0 to 1036
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   LONN.VX  1037 non-null   float64       
 1   Date     1037 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 24.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['LONN.VX'], 'Transformations': [('LONN.VX', 'None', '_', 'T+S+R'), ('LONN.VX', 'None', 'Diff_', 'T+S+R'), ('LONN.VX', 'None', 'RelDiff_', 'T+S+R'), ('LONN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': '_LONN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.833, ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': '_LONN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': 'Diff_LONN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.759, ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': 'Diff_LONN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': 'RelDiff_LONN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.276, ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': 'RelDiff_LONN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': 'CumSum_LONN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.104, ('TRAINING', {'Signal': 'LONN.VX', 'Transformation': 'CumSum_LONN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.973, ('SIGNAL_TRAINING', {'Signals': ['LONN.VX'], 'Transformations': [('LONN.VX', 'None', '_', 'T+S+R'), ('LONN.VX', 'None', 'Diff_', 'T+S+R'), ('LONN.VX', 'None', 'RelDiff_', 'T+S+R'), ('LONN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['LONN.VX'], 'Transformations': [('LONN.VX', [('LONN.VX', 'None', 'CumSum_', 'T+S+R'), ('LONN.VX', 'None', 'Diff_', 'T+S+R'), ('LONN.VX', 'None', 'RelDiff_', 'T+S+R'), ('LONN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'LONN.VX', 'Transformations': [('LONN.VX', 'None', 'CumSum_', 'T+S+R'), ('LONN.VX', 'None', 'Diff_', 'T+S+R'), ('LONN.VX', 'None', 'RelDiff_', 'T+S+R'), ('LONN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.012, ('MODEL_SELECTION', {'Signal': 'LONN.VX', 'Transformations': [('LONN.VX', 'None', 'CumSum_', 'T+S+R'), ('LONN.VX', 'None', 'Diff_', 'T+S+R'), ('LONN.VX', 'None', 'RelDiff_', 'T+S+R'), ('LONN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'LONN.VX', 'Model': '_LONN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.047, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'LONN.VX', 'Model': '_LONN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'LONN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.241, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'LONN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.301, ('FINALIZE_TRAINING', {'Signals': ['LONN.VX'], 'Transformations': [('LONN.VX', [('LONN.VX', 'None', 'CumSum_', 'T+S+R'), ('LONN.VX', 'None', 'Diff_', 'T+S+R'), ('LONN.VX', 'None', 'RelDiff_', 'T+S+R'), ('LONN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2012-07-26T00:00:00.000000 TimeMax=2015-09-22T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='LONN.VX' Length=1037  Min=42.18 Max=171.5  Mean=102.4162921890068 StdDev=37.14193362666967
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_LONN.VX' Min=0.0 Max=1.0  Mean=0.46579254708480367 StdDev=0.2872095084029508
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_LONN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_LONN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_LONN.VX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_LONN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0119 MAPE_Forecast=0.0116 MAPE_Test=0.0099
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0119 SMAPE_Forecast=0.0116 SMAPE_Test=0.01
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9988 MASE_Forecast=0.9992 MASE_Test=1.2527
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=8.509003142565152 CRPS_Forecast=2.7664244336569577 CRPS_Test=1.4928571428571433
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0506189320388355 L1_Forecast=1.7728155339805838 L1_Test=1.6285714285714212
INFO:pyaf.std:MODEL_L2 L2_Fit=1.6469602221368227 L2_Forecast=2.346056389459613 L2_Test=2.1993505534913793
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.24793438068386464 LnQ_Forecast=0.04977863134125192 LnQ_Test=0.0012880878055430466
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.70000000000001 MedAE_Forecast=1.299999999999983 MedAE_Test=0.8000000000000114
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.027141973399319504
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _LONN.VX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _LONN.VX             T+S+R  ...  0.0117       0.0114    0.0092
1    None         _LONN.VX             T+S+R  ...  0.0117       0.0114    0.0093
2    None         _LONN.VX             T+S+R  ...  0.0119       0.0116    0.0099
3    None         _LONN.VX             T+S+R  ...  0.0119       0.0116    0.0099
4    None   CumSum_LONN.VX             T+S+R  ...  0.0119       0.0116    0.0099
..    ...              ...               ...  ...     ...          ...       ...
211  None  RelDiff_LONN.VX             T+S+R  ...  7.4499      34.9693  188.9167
212  None  RelDiff_LONN.VX             T+S+R  ...  7.4499      34.9693  188.9167
213  None  RelDiff_LONN.VX             T+S+R  ...  8.9899      39.5436  137.8418
214  None  RelDiff_LONN.VX             T+S+R  ...  8.9899      39.5436  137.8418
215  None  RelDiff_LONN.VX             T+S+R  ...  6.4122      44.1278  267.8010

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _LONN.VX             T+S+R  ...  0.0117       0.0114   0.0092
1  None        _LONN.VX             T+S+R  ...  0.0117       0.0114   0.0093
2  None        _LONN.VX             T+S+R  ...  0.0119       0.0116   0.0099
3  None        _LONN.VX             T+S+R  ...  0.0119       0.0116   0.0099
4  None  CumSum_LONN.VX             T+S+R  ...  0.0119       0.0116   0.0099

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['LONN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['LONN.VX'], 'Horizon': 7}))
7 0    170.3
1    169.3
2    179.1
3    178.7
4    181.7
5    181.0
6    182.6
Name: LONN.VX, dtype: float64
7 0    167.7
1    167.7
2    167.7
3    167.7
4    167.7
5    167.7
6    167.7
Name: LONN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_LONN.VX LONN.VX [170.3, 169.3, 179.1, 178.7, 181.7, 181.0, 182.6]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_LONN.VX LONN.VX [167.7, 167.7, 167.7, 167.7, 167.7, 167.7, 167.7]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_LONN.VX LONN.VX 1037 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_LONN.VX LONN.VX 12.52535629272461
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_LONN.VX LONN.VX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_LONN.VX LONN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_LONN.VX LONN.VX 0.0546 0.0565 3.574
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_LONN.VX LONN.VX 9.828571428571438 11.052989253074099 -3.778228316914384
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_LONN.VX_7'
