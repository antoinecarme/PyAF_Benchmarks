BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 769 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-08T00:00:00.000000000' '2016-07-11T00:00:00.000000000'
 '2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000']
SIGNAL :  CLN.VX N= 769 H= 7 HEAD= [12.54 12.52 11.12 10.95 11.1 ] TAIL= [16.68 16.98 17.08 17.18 17.32]
   CLN.VX       Date
0   12.54 2011-07-28
1   12.52 2011-07-29
2   11.12 2011-08-02
3   10.95 2011-08-03
4   11.10 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 769 entries, 0 to 768
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   CLN.VX  769 non-null    float64       
 1   Date    769 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 18.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CLN.VX'], 'Transformations': [('CLN.VX', 'None', '_', 'T+S+R'), ('CLN.VX', 'None', 'Diff_', 'T+S+R'), ('CLN.VX', 'None', 'RelDiff_', 'T+S+R'), ('CLN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': '_CLN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.307, ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': '_CLN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': 'Diff_CLN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.59, ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': 'Diff_CLN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': 'RelDiff_CLN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.23, ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': 'RelDiff_CLN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': 'CumSum_CLN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.646, ('TRAINING', {'Signal': 'CLN.VX', 'Transformation': 'CumSum_CLN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.776, ('SIGNAL_TRAINING', {'Signals': ['CLN.VX'], 'Transformations': [('CLN.VX', 'None', '_', 'T+S+R'), ('CLN.VX', 'None', 'Diff_', 'T+S+R'), ('CLN.VX', 'None', 'RelDiff_', 'T+S+R'), ('CLN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CLN.VX'], 'Transformations': [('CLN.VX', [('CLN.VX', 'None', 'CumSum_', 'T+S+R'), ('CLN.VX', 'None', 'Diff_', 'T+S+R'), ('CLN.VX', 'None', 'RelDiff_', 'T+S+R'), ('CLN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CLN.VX', 'Transformations': [('CLN.VX', 'None', 'CumSum_', 'T+S+R'), ('CLN.VX', 'None', 'Diff_', 'T+S+R'), ('CLN.VX', 'None', 'RelDiff_', 'T+S+R'), ('CLN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.012, ('MODEL_SELECTION', {'Signal': 'CLN.VX', 'Transformations': [('CLN.VX', 'None', 'CumSum_', 'T+S+R'), ('CLN.VX', 'None', 'Diff_', 'T+S+R'), ('CLN.VX', 'None', 'RelDiff_', 'T+S+R'), ('CLN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CLN.VX', 'Model': '_CLN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CLN.VX', 'Model': '_CLN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CLN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.175, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CLN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.214, ('FINALIZE_TRAINING', {'Signals': ['CLN.VX'], 'Transformations': [('CLN.VX', [('CLN.VX', 'None', 'CumSum_', 'T+S+R'), ('CLN.VX', 'None', 'Diff_', 'T+S+R'), ('CLN.VX', 'None', 'RelDiff_', 'T+S+R'), ('CLN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-12-03T00:00:00.000000 TimeDelta=<DateOffset: days=3> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CLN.VX' Length=769  Min=6.955 Max=20.32  Mean=13.384635890767242 StdDev=3.3190111152117456
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CLN.VX' Min=0.0 Max=1.0  Mean=0.4810801265070876 StdDev=0.24833603555643416
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CLN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CLN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CLN.VX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CLN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0173 MAPE_Forecast=0.0115 MAPE_Test=0.01
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0173 SMAPE_Forecast=0.0115 SMAPE_Test=0.01
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=1.0038 MASE_Test=1.0876
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.8563461412151065 CRPS_Forecast=0.22534411261940673 CRPS_Test=0.14999999999999986
INFO:pyaf.std:MODEL_L1 L1_Fit=0.20160919540229888 L1_Forecast=0.19588235294117645 L1_Test=0.16857142857142854
INFO:pyaf.std:MODEL_L2 L2_Fit=0.3305308711973058 L2_Forecast=0.27040879244706484 L2_Test=0.19471591027516405
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4604305895058429 LnQ_Forecast=0.038804067415573386 LnQ_Test=0.0009491607127571616
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.15000000000000036 MedAE_Forecast=0.14999999999999858 MedAE_Test=0.14000000000000057
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.41788252899364003
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CLN.VX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None         _CLN.VX             T+S+R  ...    0.0173       0.0115      0.0100
1    None         _CLN.VX             T+S+R  ...    0.0173       0.0115      0.0100
2    None   CumSum_CLN.VX             T+S+R  ...    0.0180       0.0115      0.0100
3    None     Diff_CLN.VX             T+S+R  ...    0.0173       0.0115      0.0100
4    None     Diff_CLN.VX             T+S+R  ...    0.0173       0.0115      0.0100
..    ...             ...               ...  ...       ...          ...         ...
219  None  RelDiff_CLN.VX             T+S+R  ...  285.1479     423.1841    233.9918
220  None  RelDiff_CLN.VX             T+S+R  ...   91.8808    1994.2653   4756.3147
221  None  RelDiff_CLN.VX             T+S+R  ...   91.8808    1994.2653   4756.3147
222  None  RelDiff_CLN.VX             T+S+R  ...  286.8758    3255.2766  14198.1684
223  None  RelDiff_CLN.VX             T+S+R  ...  286.8758    3255.2766  14198.1684

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _CLN.VX             T+S+R  ...  0.0173       0.0115     0.01
1  None        _CLN.VX             T+S+R  ...  0.0173       0.0115     0.01
2  None  CumSum_CLN.VX             T+S+R  ...  0.0180       0.0115     0.01
3  None    Diff_CLN.VX             T+S+R  ...  0.0173       0.0115     0.01
4  None    Diff_CLN.VX             T+S+R  ...  0.0173       0.0115     0.01

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CLN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['CLN.VX'], 'Horizon': 7}))
7 0    17.37
1    17.55
2    17.42
3    17.30
4    17.40
5    17.44
6    17.48
Name: CLN.VX, dtype: float64
7 0    17.32
1    17.32
2    17.32
3    17.32
4    17.32
5    17.32
6    17.32
Name: CLN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CLN.VX CLN.VX [17.37, 17.55, 17.42, 17.3, 17.4, 17.44, 17.48]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CLN.VX CLN.VX [17.32, 17.32, 17.32, 17.32, 17.32, 17.32, 17.32]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CLN.VX CLN.VX 769 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CLN.VX CLN.VX 13.277812004089355
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CLN.VX CLN.VX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CLN.VX CLN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CLN.VX CLN.VX 0.0062 0.0062 1.0679
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CLN.VX CLN.VX 0.10857142857142879 0.1266039945205976 -1.9415730259958868
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_CLN.VX_7'
