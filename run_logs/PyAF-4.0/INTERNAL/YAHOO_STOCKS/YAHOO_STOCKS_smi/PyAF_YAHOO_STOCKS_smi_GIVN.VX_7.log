BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  GIVN.VX N= 1293 H= 7 HEAD= [861.  869.  831.5 824.  760. ] TAIL= [2036. 2045. 2056. 2057. 2112.]
   GIVN.VX       Date
0    861.0 2011-07-28
1    869.0 2011-07-29
2    831.5 2011-08-02
3    824.0 2011-08-03
4    760.0 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   GIVN.VX  1293 non-null   float64       
 1   Date     1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['GIVN.VX'], 'Transformations': [('GIVN.VX', 'None', '_', 'T+S+R'), ('GIVN.VX', 'None', 'Diff_', 'T+S+R'), ('GIVN.VX', 'None', 'RelDiff_', 'T+S+R'), ('GIVN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': '_GIVN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.597, ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': '_GIVN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': 'Diff_GIVN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.884, ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': 'Diff_GIVN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': 'RelDiff_GIVN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.645, ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': 'RelDiff_GIVN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': 'CumSum_GIVN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.47, ('TRAINING', {'Signal': 'GIVN.VX', 'Transformation': 'CumSum_GIVN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.597, ('SIGNAL_TRAINING', {'Signals': ['GIVN.VX'], 'Transformations': [('GIVN.VX', 'None', '_', 'T+S+R'), ('GIVN.VX', 'None', 'Diff_', 'T+S+R'), ('GIVN.VX', 'None', 'RelDiff_', 'T+S+R'), ('GIVN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['GIVN.VX'], 'Transformations': [('GIVN.VX', [('GIVN.VX', 'None', 'CumSum_', 'T+S+R'), ('GIVN.VX', 'None', 'Diff_', 'T+S+R'), ('GIVN.VX', 'None', 'RelDiff_', 'T+S+R'), ('GIVN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'GIVN.VX', 'Transformations': [('GIVN.VX', 'None', 'CumSum_', 'T+S+R'), ('GIVN.VX', 'None', 'Diff_', 'T+S+R'), ('GIVN.VX', 'None', 'RelDiff_', 'T+S+R'), ('GIVN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'GIVN.VX', 'Transformations': [('GIVN.VX', 'None', 'CumSum_', 'T+S+R'), ('GIVN.VX', 'None', 'Diff_', 'T+S+R'), ('GIVN.VX', 'None', 'RelDiff_', 'T+S+R'), ('GIVN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GIVN.VX', 'Model': '_GIVN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GIVN.VX', 'Model': '_GIVN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GIVN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.189, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GIVN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['GIVN.VX'], 'Transformations': [('GIVN.VX', [('GIVN.VX', 'None', 'CumSum_', 'T+S+R'), ('GIVN.VX', 'None', 'Diff_', 'T+S+R'), ('GIVN.VX', 'None', 'RelDiff_', 'T+S+R'), ('GIVN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='GIVN.VX' Length=1293  Min=702.0 Max=2112.0  Mean=1349.5052204176334 StdDev=378.05733357373225
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_GIVN.VX' Min=0.0 Max=1.0  Mean=0.459223560579882 StdDev=0.2681257684920087
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_GIVN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_GIVN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_GIVN.VX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_GIVN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0086 MAPE_Forecast=0.01 MAPE_Test=0.0088
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0086 SMAPE_Forecast=0.01 SMAPE_Test=0.0088
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9968 MASE_Test=1.2095
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=97.76391767356134 CRPS_Forecast=27.28911527587779 CRPS_Test=8.071428571428571
INFO:pyaf.std:MODEL_L1 L1_Fit=10.298151750972762 L1_Forecast=18.015503875968992 L1_Test=18.142857142857142
INFO:pyaf.std:MODEL_L2 L2_Fit=15.915561023250952 L2_Forecast=23.959186873909445 L2_Test=25.920207230212164
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.17106878213166454 LnQ_Forecast=0.0463745034868603 LnQ_Test=0.0011081215518408257
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=7.0 MedAE_Forecast=14.0 MedAE_Test=9.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1127659574468085
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _GIVN.VX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _GIVN.VX             T+S+R  ...   0.0083       0.0099    0.0083
1    None         _GIVN.VX             T+S+R  ...   0.0086       0.0100    0.0088
2    None         _GIVN.VX             T+S+R  ...   0.0086       0.0100    0.0088
3    None   CumSum_GIVN.VX             T+S+R  ...   0.0088       0.0100    0.0088
4    None     Diff_GIVN.VX             T+S+R  ...   0.0086       0.0100    0.0088
..    ...              ...               ...  ...      ...          ...       ...
211  None  RelDiff_GIVN.VX             T+S+R  ...  30.7094      94.4099  281.1021
212  None  RelDiff_GIVN.VX             T+S+R  ...  10.8627     165.7832  312.2635
213  None  RelDiff_GIVN.VX             T+S+R  ...  10.8627     165.7832  312.2635
214  None  RelDiff_GIVN.VX             T+S+R  ...  45.9827     222.6904  769.6754
215  None  RelDiff_GIVN.VX             T+S+R  ...  45.9827     222.6904  769.6754

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _GIVN.VX             T+S+R  ...  0.0083       0.0099   0.0083
1  None        _GIVN.VX             T+S+R  ...  0.0086       0.0100   0.0088
2  None        _GIVN.VX             T+S+R  ...  0.0086       0.0100   0.0088
3  None  CumSum_GIVN.VX             T+S+R  ...  0.0088       0.0100   0.0088
4  None    Diff_GIVN.VX             T+S+R  ...  0.0086       0.0100   0.0088

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['GIVN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['GIVN.VX'], 'Horizon': 7}))
7 0    2048.0
1    2023.0
2    2021.0
3    2024.0
4    2007.0
5    2038.0
6    2008.0
Name: GIVN.VX, dtype: float64
7 0    2112.0
1    2112.0
2    2112.0
3    2112.0
4    2112.0
5    2112.0
6    2112.0
Name: GIVN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_GIVN.VX GIVN.VX [2048.0, 2023.0, 2021.0, 2024.0, 2007.0, 2038.0, 2008.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_GIVN.VX GIVN.VX [2112.0, 2112.0, 2112.0, 2112.0, 2112.0, 2112.0, 2112.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_GIVN.VX GIVN.VX 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_GIVN.VX GIVN.VX 14.077586650848389
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_GIVN.VX GIVN.VX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_GIVN.VX GIVN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_GIVN.VX GIVN.VX 0.0435 0.0425 4.881
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_GIVN.VX GIVN.VX 87.85714285714286 88.92934595187671 -40.72189922480305
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_GIVN.VX_7'
