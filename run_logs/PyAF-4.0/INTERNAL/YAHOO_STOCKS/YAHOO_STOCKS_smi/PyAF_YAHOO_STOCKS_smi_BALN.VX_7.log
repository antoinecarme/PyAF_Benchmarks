BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1031 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-08T00:00:00.000000000' '2016-07-11T00:00:00.000000000'
 '2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000']
SIGNAL :  BALN.VX N= 1031 H= 7 HEAD= [79.05 78.9  75.3  74.1  75.85] TAIL= [105.  106.  107.8 108.5 109.6]
   BALN.VX       Date
0    79.05 2011-07-28
1    78.90 2011-07-29
2    75.30 2011-08-02
3    74.10 2011-08-03
4    75.85 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1031 entries, 0 to 1030
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   BALN.VX  1031 non-null   float64       
 1   Date     1031 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 24.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BALN.VX'], 'Transformations': [('BALN.VX', 'None', '_', 'T+S+R'), ('BALN.VX', 'None', 'Diff_', 'T+S+R'), ('BALN.VX', 'None', 'RelDiff_', 'T+S+R'), ('BALN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': '_BALN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.238, ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': '_BALN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': 'Diff_BALN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.494, ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': 'Diff_BALN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': 'RelDiff_BALN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.302, ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': 'RelDiff_BALN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': 'CumSum_BALN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.048, ('TRAINING', {'Signal': 'BALN.VX', 'Transformation': 'CumSum_BALN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.083, ('SIGNAL_TRAINING', {'Signals': ['BALN.VX'], 'Transformations': [('BALN.VX', 'None', '_', 'T+S+R'), ('BALN.VX', 'None', 'Diff_', 'T+S+R'), ('BALN.VX', 'None', 'RelDiff_', 'T+S+R'), ('BALN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BALN.VX'], 'Transformations': [('BALN.VX', [('BALN.VX', 'None', 'CumSum_', 'T+S+R'), ('BALN.VX', 'None', 'Diff_', 'T+S+R'), ('BALN.VX', 'None', 'RelDiff_', 'T+S+R'), ('BALN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BALN.VX', 'Transformations': [('BALN.VX', 'None', 'CumSum_', 'T+S+R'), ('BALN.VX', 'None', 'Diff_', 'T+S+R'), ('BALN.VX', 'None', 'RelDiff_', 'T+S+R'), ('BALN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'BALN.VX', 'Transformations': [('BALN.VX', 'None', 'CumSum_', 'T+S+R'), ('BALN.VX', 'None', 'Diff_', 'T+S+R'), ('BALN.VX', 'None', 'RelDiff_', 'T+S+R'), ('BALN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BALN.VX', 'Model': '_BALN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BALN.VX', 'Model': '_BALN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BALN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.283, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BALN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.32, ('FINALIZE_TRAINING', {'Signals': ['BALN.VX'], 'Transformations': [('BALN.VX', [('BALN.VX', 'None', 'CumSum_', 'T+S+R'), ('BALN.VX', 'None', 'Diff_', 'T+S+R'), ('BALN.VX', 'None', 'RelDiff_', 'T+S+R'), ('BALN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-09-22T00:00:00.000000 TimeDelta=<DateOffset: days=2> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BALN.VX' Length=1031  Min=59.25 Max=134.9  Mean=97.9551891367606 StdDev=24.2444009902785
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BALN.VX' Min=0.0 Max=1.0  Mean=0.511635018331268 StdDev=0.3204811763420823
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BALN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BALN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BALN.VX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_BALN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0109 MAPE_Forecast=0.0095 MAPE_Test=0.011
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0109 SMAPE_Forecast=0.0095 SMAPE_Test=0.0111
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9988 MASE_Forecast=0.9956 MASE_Test=1.1156
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=7.112814166827326 CRPS_Forecast=1.519082991869919 CRPS_Test=0.7642857142857135
INFO:pyaf.std:MODEL_L1 L1_Fit=0.9532967032967034 L1_Forecast=1.1282926829268285 L1_Test=1.1714285714285697
INFO:pyaf.std:MODEL_L2 L2_Fit=1.4305695732921568 L2_Forecast=1.5105240570177176 L2_Test=1.2535663410560167
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2246565809012031 LnQ_Forecast=0.033615992825251906 LnQ_Test=0.0009828323852364062
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.6999999999999886 MedAE_Forecast=0.8999999999999915 MedAE_Test=1.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.26173165895571704
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _BALN.VX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation  ... ForecastMAPE     TestMAPE
0    None         _BALN.VX  ...       0.0095       0.0110
1    None         _BALN.VX  ...       0.0095       0.0110
2    None   CumSum_BALN.VX  ...       0.0095       0.0110
3    None     Diff_BALN.VX  ...       0.0095       0.0110
4    None     Diff_BALN.VX  ...       0.0095       0.0110
..    ...              ...  ...          ...          ...
211  None  RelDiff_BALN.VX  ...   16714.9018   54491.5419
212  None  RelDiff_BALN.VX  ...   17505.4416   59006.7197
213  None  RelDiff_BALN.VX  ...   26887.5013   94378.5484
214  None  RelDiff_BALN.VX  ...   76621.6230  268264.3585
215  None  RelDiff_BALN.VX  ...   76621.6230  268264.3585

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _BALN.VX             T+S+R  ...  0.0109       0.0095    0.011
1  None        _BALN.VX             T+S+R  ...  0.0109       0.0095    0.011
2  None  CumSum_BALN.VX             T+S+R  ...  0.0112       0.0095    0.011
3  None    Diff_BALN.VX             T+S+R  ...  0.0109       0.0095    0.011
4  None    Diff_BALN.VX             T+S+R  ...  0.0109       0.0095    0.011

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BALN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.244, ('FORECASTING', {'Signals': ['BALN.VX'], 'Horizon': 7}))
7 0    108.3
1    109.8
2    108.7
3    110.0
4    108.5
5    108.6
6    108.9
Name: BALN.VX, dtype: float64
7 0    109.6
1    109.6
2    109.6
3    109.6
4    109.6
5    109.6
6    109.6
Name: BALN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_BALN.VX BALN.VX [108.3, 109.8, 108.7, 110.0, 108.5, 108.6, 108.9]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_BALN.VX BALN.VX [109.6, 109.6, 109.6, 109.6, 109.6, 109.6, 109.6]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_BALN.VX BALN.VX 1031 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_BALN.VX BALN.VX 12.744996309280396
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_BALN.VX BALN.VX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_BALN.VX BALN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_BALN.VX BALN.VX 0.0074 0.0073 0.8276
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_BALN.VX BALN.VX 0.7999999999999972 0.8783100656536762 -1.0498915400523177
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_BALN.VX_7'
