BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1296 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ROG.VX N= 1296 H= 7 HEAD= [143.2 142.4 135.5 136.9 137.9] TAIL= [255.2 254.6 253.1 254.9 253.3]
   ROG.VX       Date
0   143.2 2011-07-28
1   142.4 2011-07-29
2   135.5 2011-08-02
3   136.9 2011-08-03
4   137.9 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1296 entries, 0 to 1295
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ROG.VX  1296 non-null   float64       
 1   Date    1296 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ROG.VX'], 'Transformations': [('ROG.VX', 'None', '_', 'T+S+R'), ('ROG.VX', 'None', 'Diff_', 'T+S+R'), ('ROG.VX', 'None', 'RelDiff_', 'T+S+R'), ('ROG.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': '_ROG.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.97, ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': '_ROG.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': 'Diff_ROG.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.853, ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': 'Diff_ROG.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': 'RelDiff_ROG.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.028, ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': 'RelDiff_ROG.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': 'CumSum_ROG.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.538, ('TRAINING', {'Signal': 'ROG.VX', 'Transformation': 'CumSum_ROG.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.392, ('SIGNAL_TRAINING', {'Signals': ['ROG.VX'], 'Transformations': [('ROG.VX', 'None', '_', 'T+S+R'), ('ROG.VX', 'None', 'Diff_', 'T+S+R'), ('ROG.VX', 'None', 'RelDiff_', 'T+S+R'), ('ROG.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ROG.VX'], 'Transformations': [('ROG.VX', [('ROG.VX', 'None', 'CumSum_', 'T+S+R'), ('ROG.VX', 'None', 'Diff_', 'T+S+R'), ('ROG.VX', 'None', 'RelDiff_', 'T+S+R'), ('ROG.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ROG.VX', 'Transformations': [('ROG.VX', 'None', 'CumSum_', 'T+S+R'), ('ROG.VX', 'None', 'Diff_', 'T+S+R'), ('ROG.VX', 'None', 'RelDiff_', 'T+S+R'), ('ROG.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'ROG.VX', 'Transformations': [('ROG.VX', 'None', 'CumSum_', 'T+S+R'), ('ROG.VX', 'None', 'Diff_', 'T+S+R'), ('ROG.VX', 'None', 'RelDiff_', 'T+S+R'), ('ROG.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ROG.VX', 'Model': '_ROG.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.031, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ROG.VX', 'Model': '_ROG.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ROG.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.237, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ROG.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.278, ('FINALIZE_TRAINING', {'Signals': ['ROG.VX'], 'Transformations': [('ROG.VX', [('ROG.VX', 'None', 'CumSum_', 'T+S+R'), ('ROG.VX', 'None', 'Diff_', 'T+S+R'), ('ROG.VX', 'None', 'RelDiff_', 'T+S+R'), ('ROG.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ROG.VX' Length=1296  Min=119.0 Max=294.7  Mean=227.24336419753155 StdDev=46.06207359830861
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ROG.VX' Min=0.0 Max=1.0  Mean=0.6160692327690989 StdDev=0.26216319634780133
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ROG.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ROG.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ROG.VX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ROG.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0084 MAPE_Forecast=0.0107 MAPE_Test=0.0062
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0084 SMAPE_Forecast=0.0107 SMAPE_Test=0.0062
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9968 MASE_Test=1.0714
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=14.26007899841748 CRPS_Forecast=3.5580809758321936 CRPS_Test=0.49999999999999795
INFO:pyaf.std:MODEL_L1 L1_Fit=1.7804073714839956 L1_Forecast=2.7480620155038746 L1_Test=1.5714285714285674
INFO:pyaf.std:MODEL_L2 L2_Fit=2.7320918537243934 L2_Forecast=3.683929587994634 L2_Test=1.6518388022356834
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.16582939422999599 LnQ_Forecast=0.05285331669533197 LnQ_Test=0.000295464879849667
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.200000000000017 MedAE_Forecast=2.1999999999999886 MedAE_Test=1.5999999999999943
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.13773477518497435
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ROG.VX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE    TestMAPE
0    None         _ROG.VX             T+S+R  ...   0.0084       0.0107      0.0062
1    None   CumSum_ROG.VX             T+S+R  ...   0.0085       0.0107      0.0062
2    None     Diff_ROG.VX             T+S+R  ...   0.0084       0.0107      0.0062
3    None  RelDiff_ROG.VX             T+S+R  ...   0.0102       0.0107      0.0062
4    None         _ROG.VX             T+S+R  ...   0.0084       0.0107      0.0062
..    ...             ...               ...  ...      ...          ...         ...
171  None  RelDiff_ROG.VX             T+S+R  ...  50.3369    3641.2879  49919.9179
172  None  RelDiff_ROG.VX             T+S+R  ...  52.0811    3784.1196  52277.2024
173  None  RelDiff_ROG.VX             T+S+R  ...  52.0811    3784.1196  52277.2024
174  None  RelDiff_ROG.VX             T+S+R  ...  41.3355    4486.3738  69908.1681
175  None  RelDiff_ROG.VX             T+S+R  ...  68.0458    4892.2166  68540.7638

[176 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _ROG.VX             T+S+R  ...  0.0084       0.0107   0.0062
1  None   CumSum_ROG.VX             T+S+R  ...  0.0085       0.0107   0.0062
2  None     Diff_ROG.VX             T+S+R  ...  0.0084       0.0107   0.0062
3  None  RelDiff_ROG.VX             T+S+R  ...  0.0102       0.0107   0.0062
4  None         _ROG.VX             T+S+R  ...  0.0084       0.0107   0.0062

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ROG.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.152, ('FORECASTING', {'Signals': ['ROG.VX'], 'Horizon': 7}))
7 0    249.8
1    253.1
2    249.6
3    250.9
4    248.2
5    250.0
6    249.1
Name: ROG.VX, dtype: float64
7 0    253.3
1    253.3
2    253.3
3    253.3
4    253.3
5    253.3
6    253.3
Name: ROG.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ROG.VX ROG.VX [249.8, 253.1, 249.6, 250.9, 248.2, 250.0, 249.1]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ROG.VX ROG.VX [253.3, 253.3, 253.3, 253.3, 253.3, 253.3, 253.3]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ROG.VX ROG.VX 1296 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ROG.VX ROG.VX 13.949302434921265
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ROG.VX ROG.VX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ROG.VX ROG.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ROG.VX ROG.VX 0.0128 0.0127 1.4222
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ROG.VX ROG.VX 3.200000000000013 3.510799664708081 -4.909589041055444
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_ROG.VX_7'
