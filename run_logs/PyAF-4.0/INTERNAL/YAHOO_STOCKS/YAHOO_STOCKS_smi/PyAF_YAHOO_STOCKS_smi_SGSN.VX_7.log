BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SGSN.VX N= 1293 H= 7 HEAD= [1532. 1540. 1455. 1449. 1447.] TAIL= [2286. 2288. 2292. 2314. 2212.]
   SGSN.VX       Date
0   1532.0 2011-07-28
1   1540.0 2011-07-29
2   1455.0 2011-08-02
3   1449.0 2011-08-03
4   1447.0 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   SGSN.VX  1293 non-null   float64       
 1   Date     1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SGSN.VX'], 'Transformations': [('SGSN.VX', 'None', '_', 'T+S+R'), ('SGSN.VX', 'None', 'Diff_', 'T+S+R'), ('SGSN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SGSN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': '_SGSN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.951, ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': '_SGSN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': 'Diff_SGSN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.717, ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': 'Diff_SGSN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': 'RelDiff_SGSN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.858, ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': 'RelDiff_SGSN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': 'CumSum_SGSN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.395, ('TRAINING', {'Signal': 'SGSN.VX', 'Transformation': 'CumSum_SGSN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.923, ('SIGNAL_TRAINING', {'Signals': ['SGSN.VX'], 'Transformations': [('SGSN.VX', 'None', '_', 'T+S+R'), ('SGSN.VX', 'None', 'Diff_', 'T+S+R'), ('SGSN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SGSN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SGSN.VX'], 'Transformations': [('SGSN.VX', [('SGSN.VX', 'None', 'CumSum_', 'T+S+R'), ('SGSN.VX', 'None', 'Diff_', 'T+S+R'), ('SGSN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SGSN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SGSN.VX', 'Transformations': [('SGSN.VX', 'None', 'CumSum_', 'T+S+R'), ('SGSN.VX', 'None', 'Diff_', 'T+S+R'), ('SGSN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SGSN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'SGSN.VX', 'Transformations': [('SGSN.VX', 'None', 'CumSum_', 'T+S+R'), ('SGSN.VX', 'None', 'Diff_', 'T+S+R'), ('SGSN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SGSN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SGSN.VX', 'Model': '_SGSN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SGSN.VX', 'Model': '_SGSN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SGSN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SGSN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['SGSN.VX'], 'Transformations': [('SGSN.VX', [('SGSN.VX', 'None', 'CumSum_', 'T+S+R'), ('SGSN.VX', 'None', 'Diff_', 'T+S+R'), ('SGSN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SGSN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SGSN.VX' Length=1293  Min=1300.0 Max=2449.0  Mean=1947.0614849187934 StdDev=225.60618327497536
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SGSN.VX' Min=0.0 Max=1.0  Mean=0.5631518580668349 StdDev=0.19635002895994377
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SGSN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SGSN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SGSN.VX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_SGSN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0087 MAPE_Forecast=0.0102 MAPE_Test=0.0131
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0087 SMAPE_Forecast=0.0102 SMAPE_Test=0.013
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9983 MASE_Test=0.9864
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=70.639612942863 CRPS_Forecast=42.17458066575468 CRPS_Test=12.714285714285714
INFO:pyaf.std:MODEL_L1 L1_Fit=16.529182879377434 L1_Forecast=19.496124031007753 L1_Test=29.428571428571427
INFO:pyaf.std:MODEL_L2 L2_Fit=23.873654137305923 L2_Forecast=25.025452160030067 L2_Test=43.01162633521314
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1696721357030666 LnQ_Forecast=0.045581665164205476 LnQ_Test=0.0025322411628617607
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=12.0 MedAE_Forecast=17.0 MedAE_Test=22.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.20191470844212359
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _SGSN.VX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation  ... ForecastMAPE     TestMAPE
0    None         _SGSN.VX  ...       0.0101       0.0131
1    None         _SGSN.VX  ...       0.0102       0.0131
2    None   CumSum_SGSN.VX  ...       0.0102       0.0131
3    None     Diff_SGSN.VX  ...       0.0102       0.0131
4    None     Diff_SGSN.VX  ...       0.0102       0.0131
..    ...              ...  ...          ...          ...
211  None  RelDiff_SGSN.VX  ...    5355.2147   75238.8796
212  None  RelDiff_SGSN.VX  ...    5371.6402   72649.1272
213  None  RelDiff_SGSN.VX  ...    5371.6402   72649.1272
214  None  RelDiff_SGSN.VX  ...   10876.2301  102664.0138
215  None  RelDiff_SGSN.VX  ...   10876.2301  102664.0138

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _SGSN.VX             T+S+R  ...  0.0084       0.0101   0.0131
1  None        _SGSN.VX             T+S+R  ...  0.0087       0.0102   0.0131
2  None  CumSum_SGSN.VX             T+S+R  ...  0.0088       0.0102   0.0131
3  None    Diff_SGSN.VX             T+S+R  ...  0.0087       0.0102   0.0131
4  None    Diff_SGSN.VX             T+S+R  ...  0.0087       0.0102   0.0131

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SGSN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.181, ('FORECASTING', {'Signals': ['SGSN.VX'], 'Horizon': 7}))
7 0    2183.0
1    2172.0
2    2155.0
3    2166.0
4    2163.0
5    2168.0
6    2173.0
Name: SGSN.VX, dtype: float64
7 0    2212.0
1    2212.0
2    2212.0
3    2212.0
4    2212.0
5    2212.0
6    2212.0
Name: SGSN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SGSN.VX SGSN.VX [2183.0, 2172.0, 2155.0, 2166.0, 2163.0, 2168.0, 2173.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SGSN.VX SGSN.VX [2212.0, 2212.0, 2212.0, 2212.0, 2212.0, 2212.0, 2212.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SGSN.VX SGSN.VX 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SGSN.VX SGSN.VX 14.421130895614624
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SGSN.VX SGSN.VX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SGSN.VX SGSN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SGSN.VX SGSN.VX 0.02 0.0198 5.011
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SGSN.VX SGSN.VX 43.42857142857143 44.181444068749045 -28.594059405934182
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_SGSN.VX_7'
