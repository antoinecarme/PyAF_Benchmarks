BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1031 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SCMN.VX N= 1031 H= 7 HEAD= [382.4 380.4 373.1 374.9 378. ] TAIL= [482.3 482.1 483.2 482.1 482.5]
   SCMN.VX       Date
0    382.4 2011-07-28
1    380.4 2011-07-29
2    373.1 2011-08-02
3    374.9 2011-08-03
4    378.0 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1031 entries, 0 to 1030
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   SCMN.VX  1031 non-null   float64       
 1   Date     1031 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 24.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SCMN.VX'], 'Transformations': [('SCMN.VX', 'None', '_', 'T+S+R'), ('SCMN.VX', 'None', 'Diff_', 'T+S+R'), ('SCMN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SCMN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': '_SCMN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.213, ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': '_SCMN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': 'Diff_SCMN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.437, ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': 'Diff_SCMN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': 'RelDiff_SCMN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.3, ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': 'RelDiff_SCMN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': 'CumSum_SCMN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.121, ('TRAINING', {'Signal': 'SCMN.VX', 'Transformation': 'CumSum_SCMN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.072, ('SIGNAL_TRAINING', {'Signals': ['SCMN.VX'], 'Transformations': [('SCMN.VX', 'None', '_', 'T+S+R'), ('SCMN.VX', 'None', 'Diff_', 'T+S+R'), ('SCMN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SCMN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SCMN.VX'], 'Transformations': [('SCMN.VX', [('SCMN.VX', 'None', 'CumSum_', 'T+S+R'), ('SCMN.VX', 'None', 'Diff_', 'T+S+R'), ('SCMN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SCMN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SCMN.VX', 'Transformations': [('SCMN.VX', 'None', 'CumSum_', 'T+S+R'), ('SCMN.VX', 'None', 'Diff_', 'T+S+R'), ('SCMN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SCMN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'SCMN.VX', 'Transformations': [('SCMN.VX', 'None', 'CumSum_', 'T+S+R'), ('SCMN.VX', 'None', 'Diff_', 'T+S+R'), ('SCMN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SCMN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SCMN.VX', 'Model': '_SCMN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SCMN.VX', 'Model': '_SCMN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SCMN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.195, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SCMN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.231, ('FINALIZE_TRAINING', {'Signals': ['SCMN.VX'], 'Transformations': [('SCMN.VX', [('SCMN.VX', 'None', 'CumSum_', 'T+S+R'), ('SCMN.VX', 'None', 'Diff_', 'T+S+R'), ('SCMN.VX', 'None', 'RelDiff_', 'T+S+R'), ('SCMN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-09-24T00:00:00.000000 TimeDelta=<DateOffset: days=2> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SCMN.VX' Length=1031  Min=329.8 Max=587.0  Mean=471.70373423860315 StdDev=73.1423992000552
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SCMN.VX' Min=0.0 Max=1.0  Mean=0.5517252497612883 StdDev=0.28437946811841047
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SCMN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SCMN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SCMN.VX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SCMN.VX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0074 MAPE_Forecast=0.0098 MAPE_Test=0.0042
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0074 SMAPE_Forecast=0.0098 SMAPE_Test=0.0042
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9988 MASE_Forecast=1.0052 MASE_Test=1.0867
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=23.726804961120752 CRPS_Forecast=4.903938471544715 CRPS_Test=1.757142857142863
INFO:pyaf.std:MODEL_L1 L1_Fit=3.3788766788766793 L1_Forecast=4.7892682926829275 L1_Test=2.0285714285714187
INFO:pyaf.std:MODEL_L2 L2_Fit=5.238011487841961 L2_Forecast=6.370710417175794 L2_Test=2.588987667575332
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1075183417683088 LnQ_Forecast=0.03502213342533332 LnQ_Test=0.00020605324149238185
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.3000000000000114 MedAE_Forecast=3.599999999999966 MedAE_Test=1.099999999999966
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.20451010886469662
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SCMN.VX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation  ... ForecastMAPE    TestMAPE
0    None         _SCMN.VX  ...       0.0097      0.0046
1    None         _SCMN.VX  ...       0.0098      0.0042
2    None         _SCMN.VX  ...       0.0098      0.0042
3    None   CumSum_SCMN.VX  ...       0.0098      0.0042
4    None     Diff_SCMN.VX  ...       0.0098      0.0042
..    ...              ...  ...          ...         ...
211  None  RelDiff_SCMN.VX  ...    3132.7169  11180.4409
212  None  RelDiff_SCMN.VX  ...    3132.7169  11180.4409
213  None  RelDiff_SCMN.VX  ...    4222.4135  11336.1399
214  None  RelDiff_SCMN.VX  ...    4222.4135  11336.1399
215  None  RelDiff_SCMN.VX  ...    6549.6267  26000.4633

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _SCMN.VX             T+S+R  ...  0.0071       0.0097   0.0046
1  None        _SCMN.VX             T+S+R  ...  0.0074       0.0098   0.0042
2  None        _SCMN.VX             T+S+R  ...  0.0074       0.0098   0.0042
3  None  CumSum_SCMN.VX             T+S+R  ...  0.0075       0.0098   0.0042
4  None    Diff_SCMN.VX             T+S+R  ...  0.0074       0.0098   0.0042

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SCMN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['SCMN.VX'], 'Horizon': 7}))
7 0    479.4
1    480.3
2    477.4
3    479.7
4    479.5
5    478.5
6    479.9
Name: SCMN.VX, dtype: float64
7 0    482.5
1    482.5
2    482.5
3    482.5
4    482.5
5    482.5
6    482.5
Name: SCMN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SCMN.VX SCMN.VX [479.4, 480.3, 477.4, 479.7, 479.5, 478.5, 479.9]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SCMN.VX SCMN.VX [482.5, 482.5, 482.5, 482.5, 482.5, 482.5, 482.5]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SCMN.VX SCMN.VX 1031 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SCMN.VX SCMN.VX 12.556528806686401
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SCMN.VX SCMN.VX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SCMN.VX SCMN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SCMN.VX SCMN.VX 0.0068 0.0068 2.2463
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SCMN.VX SCMN.VX 3.257142857142867 3.381884512685631 -12.81025135510918
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_SCMN.VX_7'
