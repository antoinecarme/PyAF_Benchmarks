BENCH_DATA YAHOO_STOCKS_smi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  NESN.VX N= 1293 H= 7 HEAD= [51.   50.4  49.58 49.01 49.55] TAIL= [77.95 77.75 78.3  77.75 77.9 ]
   NESN.VX       Date
0    51.00 2011-07-28
1    50.40 2011-07-29
2    49.58 2011-08-02
3    49.01 2011-08-03
4    49.55 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   NESN.VX  1293 non-null   float64       
 1   Date     1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NESN.VX'], 'Transformations': [('NESN.VX', 'None', '_', 'T+S+R'), ('NESN.VX', 'None', 'Diff_', 'T+S+R'), ('NESN.VX', 'None', 'RelDiff_', 'T+S+R'), ('NESN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': '_NESN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.448, ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': '_NESN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': 'Diff_NESN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.321, ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': 'Diff_NESN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': 'RelDiff_NESN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.482, ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': 'RelDiff_NESN.VX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': 'CumSum_NESN.VX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.615, ('TRAINING', {'Signal': 'NESN.VX', 'Transformation': 'CumSum_NESN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.869, ('SIGNAL_TRAINING', {'Signals': ['NESN.VX'], 'Transformations': [('NESN.VX', 'None', '_', 'T+S+R'), ('NESN.VX', 'None', 'Diff_', 'T+S+R'), ('NESN.VX', 'None', 'RelDiff_', 'T+S+R'), ('NESN.VX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NESN.VX'], 'Transformations': [('NESN.VX', [('NESN.VX', 'None', 'CumSum_', 'T+S+R'), ('NESN.VX', 'None', 'Diff_', 'T+S+R'), ('NESN.VX', 'None', 'RelDiff_', 'T+S+R'), ('NESN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NESN.VX', 'Transformations': [('NESN.VX', 'None', 'CumSum_', 'T+S+R'), ('NESN.VX', 'None', 'Diff_', 'T+S+R'), ('NESN.VX', 'None', 'RelDiff_', 'T+S+R'), ('NESN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.012, ('MODEL_SELECTION', {'Signal': 'NESN.VX', 'Transformations': [('NESN.VX', 'None', 'CumSum_', 'T+S+R'), ('NESN.VX', 'None', 'Diff_', 'T+S+R'), ('NESN.VX', 'None', 'RelDiff_', 'T+S+R'), ('NESN.VX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NESN.VX', 'Model': '_NESN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.046, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NESN.VX', 'Model': '_NESN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NESN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.308, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NESN.VX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.367, ('FINALIZE_TRAINING', {'Signals': ['NESN.VX'], 'Transformations': [('NESN.VX', [('NESN.VX', 'None', 'CumSum_', 'T+S+R'), ('NESN.VX', 'None', 'Diff_', 'T+S+R'), ('NESN.VX', 'None', 'RelDiff_', 'T+S+R'), ('NESN.VX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NESN.VX' Length=1293  Min=45.36 Max=78.3  Mean=65.39208816705337 StdDev=7.428812892478396
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NESN.VX' Min=0.0 Max=1.0  Mean=0.6081386814527431 StdDev=0.22552558872126274
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NESN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NESN.VX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NESN.VX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_NESN.VX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0059 MAPE_Forecast=0.009 MAPE_Test=0.0051
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0059 SMAPE_Forecast=0.009 SMAPE_Test=0.0052
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9994 MASE_Test=1.0667
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.1023257986893307 CRPS_Forecast=0.4885383173734609 CRPS_Test=0.20000000000000082
INFO:pyaf.std:MODEL_L1 L1_Fit=0.37293774319066153 L1_Forecast=0.6513565891472861 L1_Test=0.40000000000000163
INFO:pyaf.std:MODEL_L2 L2_Fit=0.571575787908268 L2_Forecast=0.8704477374121266 L2_Test=0.4682795258023946
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.08706418515896439 LnQ_Forecast=0.03725961145426009 LnQ_Test=0.00025488525217935113
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.25 MedAE_Forecast=0.5 MedAE_Test=0.5499999999999972
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.17122040072859748
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _NESN.VX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation  ... ForecastMAPE     TestMAPE
0    None         _NESN.VX  ...       0.0090       0.0051
1    None   CumSum_NESN.VX  ...       0.0090       0.0051
2    None     Diff_NESN.VX  ...       0.0090       0.0051
3    None     Diff_NESN.VX  ...       0.0090       0.0051
4    None  RelDiff_NESN.VX  ...       0.0090       0.0051
..    ...              ...  ...          ...          ...
179  None  RelDiff_NESN.VX  ...   11709.4564  182425.6623
180  None  RelDiff_NESN.VX  ...   11709.4564  182425.6623
181  None  RelDiff_NESN.VX  ...   13104.8417  209231.3010
182  None  RelDiff_NESN.VX  ...   23647.0526  251855.4645
183  None  RelDiff_NESN.VX  ...   23647.0526  251855.4645

[184 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _NESN.VX             T+S+R  ...  0.0059        0.009   0.0051
1  None   CumSum_NESN.VX             T+S+R  ...  0.0060        0.009   0.0051
2  None     Diff_NESN.VX             T+S+R  ...  0.0059        0.009   0.0051
3  None     Diff_NESN.VX             T+S+R  ...  0.0059        0.009   0.0051
4  None  RelDiff_NESN.VX             T+S+R  ...  0.0072        0.009   0.0051

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NESN.VX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('FORECASTING', {'Signals': ['NESN.VX'], 'Horizon': 7}))
7 0    77.90
1    78.10
2    77.90
3    78.05
4    78.20
5    78.40
6    78.05
Name: NESN.VX, dtype: float64
7 0    77.9
1    77.9
2    77.9
3    77.9
4    77.9
5    77.9
6    77.9
Name: NESN.VX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NESN.VX NESN.VX [77.9, 78.1, 77.9, 78.05, 78.2, 78.4, 78.05]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NESN.VX NESN.VX [77.9, 77.9, 77.9, 77.9, 77.9, 77.9, 77.9]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NESN.VX NESN.VX 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NESN.VX NESN.VX 13.50118350982666
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NESN.VX NESN.VX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NESN.VX NESN.VX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NESN.VX NESN.VX 0.0024 0.0024 0.8914
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NESN.VX NESN.VX 0.18571428571428125 0.2464026901522873 -1.3151750960150146
BENCHMARK_SUCCESS 'YAHOO_STOCKS_smi_NESN.VX_7'
