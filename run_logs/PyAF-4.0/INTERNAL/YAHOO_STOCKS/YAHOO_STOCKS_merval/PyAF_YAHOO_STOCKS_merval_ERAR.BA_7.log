BENCH_DATA YAHOO_STOCKS_merval
TIME :  Date N= 1279 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-08-01T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ERAR.BA N= 1279 H= 7 HEAD= [33.39999 34.29998 33.24997 32.90001 31.39994] TAIL= [7.62 7.65 7.5  7.54 7.65]
    ERAR.BA       Date
0  33.39999 2011-07-28
1  34.29998 2011-08-01
2  33.24997 2011-08-02
3  32.90001 2011-08-03
4  31.39994 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1279 entries, 0 to 1278
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   ERAR.BA  1279 non-null   float64       
 1   Date     1279 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ERAR.BA'], 'Transformations': [('ERAR.BA', 'None', '_', 'T+S+R'), ('ERAR.BA', 'None', 'Diff_', 'T+S+R'), ('ERAR.BA', 'None', 'RelDiff_', 'T+S+R'), ('ERAR.BA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': '_ERAR.BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.798, ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': '_ERAR.BA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': 'Diff_ERAR.BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.734, ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': 'Diff_ERAR.BA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': 'RelDiff_ERAR.BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.046, ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': 'RelDiff_ERAR.BA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': 'CumSum_ERAR.BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.059, ('TRAINING', {'Signal': 'ERAR.BA', 'Transformation': 'CumSum_ERAR.BA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.638, ('SIGNAL_TRAINING', {'Signals': ['ERAR.BA'], 'Transformations': [('ERAR.BA', 'None', '_', 'T+S+R'), ('ERAR.BA', 'None', 'Diff_', 'T+S+R'), ('ERAR.BA', 'None', 'RelDiff_', 'T+S+R'), ('ERAR.BA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ERAR.BA'], 'Transformations': [('ERAR.BA', [('ERAR.BA', 'None', 'CumSum_', 'T+S+R'), ('ERAR.BA', 'None', 'Diff_', 'T+S+R'), ('ERAR.BA', 'None', 'RelDiff_', 'T+S+R'), ('ERAR.BA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ERAR.BA', 'Transformations': [('ERAR.BA', 'None', 'CumSum_', 'T+S+R'), ('ERAR.BA', 'None', 'Diff_', 'T+S+R'), ('ERAR.BA', 'None', 'RelDiff_', 'T+S+R'), ('ERAR.BA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'ERAR.BA', 'Transformations': [('ERAR.BA', 'None', 'CumSum_', 'T+S+R'), ('ERAR.BA', 'None', 'Diff_', 'T+S+R'), ('ERAR.BA', 'None', 'RelDiff_', 'T+S+R'), ('ERAR.BA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ERAR.BA', 'Model': '_ERAR.BA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ERAR.BA', 'Model': '_ERAR.BA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ERAR.BA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.179, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ERAR.BA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.214, ('FINALIZE_TRAINING', {'Signals': ['ERAR.BA'], 'Transformations': [('ERAR.BA', [('ERAR.BA', 'None', 'CumSum_', 'T+S+R'), ('ERAR.BA', 'None', 'Diff_', 'T+S+R'), ('ERAR.BA', 'None', 'RelDiff_', 'T+S+R'), ('ERAR.BA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-15T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ERAR.BA' Length=1279  Min=1.21 Max=34.29998  Mean=6.778444261141519 StdDev=7.10266643402731
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ERAR.BA' Min=0.0 Max=1.0  Mean=0.1682818865753776 StdDev=0.21464704523929362
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ERAR.BA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ERAR.BA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ERAR.BA_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ERAR.BA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0313 MAPE_Forecast=0.0198 MAPE_Test=0.0094
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0211 SMAPE_Forecast=0.0199 SMAPE_Test=0.0094
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0013 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.8714334089685871 CRPS_Forecast=0.311700705882353 CRPS_Test=0.03285714285714292
INFO:pyaf.std:MODEL_L1 L1_Fit=0.16502518190757132 L1_Forecast=0.14329411764705885 L1_Test=0.07142857142857155
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7973961264165326 L2_Forecast=0.19632905551450014 L2_Test=0.08783100656536814
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=7.429246858191137 LnQ_Forecast=0.18264819127580656 LnQ_Test=0.0009318002127942049
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.04999999999999982 MedAE_Forecast=0.09999999999999964 MedAE_Test=0.04999999999999982
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.972801736356444
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ERAR.BA_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None   CumSum_ERAR.BA             T+S+R  ...   0.0332       0.0197    0.0085
1    None         _ERAR.BA             T+S+R  ...   0.0313       0.0198    0.0094
2    None   CumSum_ERAR.BA             T+S+R  ...   0.0322       0.0198    0.0094
3    None     Diff_ERAR.BA             T+S+R  ...   0.0313       0.0198    0.0094
4    None         _ERAR.BA             T+S+R  ...   0.0313       0.0198    0.0094
..    ...              ...               ...  ...      ...          ...       ...
203  None  RelDiff_ERAR.BA             T+S+R  ...  13.9795      96.7740  233.5104
204  None  RelDiff_ERAR.BA             T+S+R  ...  14.3854     102.0123  238.6328
205  None  RelDiff_ERAR.BA             T+S+R  ...  14.3854     102.0123  238.6328
206  None  RelDiff_ERAR.BA             T+S+R  ...  14.1737     103.6687  250.0935
207  None  RelDiff_ERAR.BA             T+S+R  ...  14.2708     104.1433  253.3527

[208 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_ERAR.BA             T+S+R  ...  0.0332       0.0197   0.0085
1  None        _ERAR.BA             T+S+R  ...  0.0313       0.0198   0.0094
2  None  CumSum_ERAR.BA             T+S+R  ...  0.0322       0.0198   0.0094
3  None    Diff_ERAR.BA             T+S+R  ...  0.0313       0.0198   0.0094
4  None        _ERAR.BA             T+S+R  ...  0.0313       0.0198   0.0094

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ERAR.BA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.148, ('FORECASTING', {'Signals': ['ERAR.BA'], 'Horizon': 7}))
7 0    7.86
1    8.37
2    8.50
3    8.45
4    8.40
5    8.28
6    8.23
Name: ERAR.BA, dtype: float64
7 0    7.65
1    7.65
2    7.65
3    7.65
4    7.65
5    7.65
6    7.65
Name: ERAR.BA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ERAR.BA ERAR.BA [7.86, 8.37, 8.5, 8.45, 8.4, 8.28, 8.23]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ERAR.BA ERAR.BA [7.65, 7.65, 7.65, 7.65, 7.65, 7.65, 7.65]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ERAR.BA ERAR.BA 1279 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ERAR.BA ERAR.BA 12.109480381011963
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ERAR.BA ERAR.BA Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ERAR.BA ERAR.BA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ERAR.BA ERAR.BA 0.0776 0.081 4.2763
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ERAR.BA ERAR.BA 0.648571428571428 0.6783172456264731 -10.657497410465233
BENCHMARK_SUCCESS 'YAHOO_STOCKS_merval_ERAR.BA_7'
