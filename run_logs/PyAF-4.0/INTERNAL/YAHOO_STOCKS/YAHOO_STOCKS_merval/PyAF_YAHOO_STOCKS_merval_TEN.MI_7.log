BENCH_DATA YAHOO_STOCKS_merval
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  TEN.MI N= 1297 H= 7 HEAD= [15.51 15.33 15.26 15.25 14.74] TAIL= [13.03 12.67 12.82 12.92 12.71]
   TEN.MI       Date
0   15.51 2011-07-28
1   15.33 2011-07-29
2   15.26 2011-08-01
3   15.25 2011-08-02
4   14.74 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   TEN.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['TEN.MI'], 'Transformations': [('TEN.MI', 'None', '_', 'T+S+R'), ('TEN.MI', 'None', 'Diff_', 'T+S+R'), ('TEN.MI', 'None', 'RelDiff_', 'T+S+R'), ('TEN.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': '_TEN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.606, ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': '_TEN.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': 'Diff_TEN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.767, ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': 'Diff_TEN.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': 'RelDiff_TEN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.778, ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': 'RelDiff_TEN.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': 'CumSum_TEN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.745, ('TRAINING', {'Signal': 'TEN.MI', 'Transformation': 'CumSum_TEN.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.897, ('SIGNAL_TRAINING', {'Signals': ['TEN.MI'], 'Transformations': [('TEN.MI', 'None', '_', 'T+S+R'), ('TEN.MI', 'None', 'Diff_', 'T+S+R'), ('TEN.MI', 'None', 'RelDiff_', 'T+S+R'), ('TEN.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['TEN.MI'], 'Transformations': [('TEN.MI', [('TEN.MI', 'None', 'CumSum_', 'T+S+R'), ('TEN.MI', 'None', 'Diff_', 'T+S+R'), ('TEN.MI', 'None', 'RelDiff_', 'T+S+R'), ('TEN.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'TEN.MI', 'Transformations': [('TEN.MI', 'None', 'CumSum_', 'T+S+R'), ('TEN.MI', 'None', 'Diff_', 'T+S+R'), ('TEN.MI', 'None', 'RelDiff_', 'T+S+R'), ('TEN.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'TEN.MI', 'Transformations': [('TEN.MI', 'None', 'CumSum_', 'T+S+R'), ('TEN.MI', 'None', 'Diff_', 'T+S+R'), ('TEN.MI', 'None', 'RelDiff_', 'T+S+R'), ('TEN.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TEN.MI', 'Model': '_TEN.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TEN.MI', 'Model': '_TEN.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TEN.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.18, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TEN.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.215, ('FINALIZE_TRAINING', {'Signals': ['TEN.MI'], 'Transformations': [('TEN.MI', [('TEN.MI', 'None', 'CumSum_', 'T+S+R'), ('TEN.MI', 'None', 'Diff_', 'T+S+R'), ('TEN.MI', 'None', 'RelDiff_', 'T+S+R'), ('TEN.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='TEN.MI' Length=1297  Min=8.64 Max=18.44  Mean=14.191430223592905 StdDev=2.2719308852870923
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_TEN.MI' Min=0.0 Max=1.0  Mean=0.5664724717951942 StdDev=0.23182968217215197
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_TEN.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_TEN.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_TEN.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_TEN.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.014 MAPE_Forecast=0.0195 MAPE_Test=0.0144
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.014 SMAPE_Forecast=0.0196 SMAPE_Test=0.0144
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9986 MASE_Test=0.9699
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5413950479396166 CRPS_Forecast=0.26322814683082535 CRPS_Test=0.06571428571428559
INFO:pyaf.std:MODEL_L1 L1_Fit=0.20190891472868214 L1_Forecast=0.21527131782945735 L1_Test=0.18428571428571391
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2745332543644539 L2_Forecast=0.2798888899146846 L2_Test=0.20110409529111284
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4048156008105692 LnQ_Forecast=0.17241877726269714 LnQ_Test=0.001722730623219993
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.15000000000000036 MedAE_Forecast=0.17999999999999972 MedAE_Test=0.15000000000000036
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7010204081632652
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _TEN.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _TEN.MI             T+S+R  ...  0.0140       0.0195   0.0144
1    None         _TEN.MI             T+S+R  ...  0.0140       0.0195   0.0144
2    None   CumSum_TEN.MI             T+S+R  ...  0.0145       0.0195   0.0144
3    None   CumSum_TEN.MI             T+S+R  ...  0.0145       0.0195   0.0144
4    None     Diff_TEN.MI             T+S+R  ...  0.0140       0.0195   0.0144
..    ...             ...               ...  ...     ...          ...      ...
211  None  RelDiff_TEN.MI             T+S+R  ...  1.3871      44.1299  24.2147
212  None  RelDiff_TEN.MI             T+S+R  ...  2.0523      64.6430  39.5527
213  None  RelDiff_TEN.MI             T+S+R  ...  1.9155      80.7927  41.2958
214  None  RelDiff_TEN.MI             T+S+R  ...  1.8798      85.6555  50.5852
215  None  RelDiff_TEN.MI             T+S+R  ...  1.8798      85.6555  50.5852

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _TEN.MI             T+S+R  ...  0.0140       0.0195   0.0144
1  None        _TEN.MI             T+S+R  ...  0.0140       0.0195   0.0144
2  None  CumSum_TEN.MI             T+S+R  ...  0.0145       0.0195   0.0144
3  None  CumSum_TEN.MI             T+S+R  ...  0.0145       0.0195   0.0144
4  None    Diff_TEN.MI             T+S+R  ...  0.0140       0.0195   0.0144

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['TEN.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.145, ('FORECASTING', {'Signals': ['TEN.MI'], 'Horizon': 7}))
7 0    12.60
1    12.32
2    12.53
3    12.28
4    12.12
5    12.25
6    12.16
Name: TEN.MI, dtype: float64
7 0    12.71
1    12.71
2    12.71
3    12.71
4    12.71
5    12.71
6    12.71
Name: TEN.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_TEN.MI TEN.MI [12.6, 12.32, 12.53, 12.28, 12.12, 12.25, 12.16]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_TEN.MI TEN.MI [12.71, 12.71, 12.71, 12.71, 12.71, 12.71, 12.71]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_TEN.MI TEN.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_TEN.MI TEN.MI 12.350263833999634
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_TEN.MI TEN.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_TEN.MI TEN.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_TEN.MI TEN.MI 0.0316 0.031 2.074
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_TEN.MI TEN.MI 0.3871428571428583 0.42151088784446533 -5.392935816951825
BENCHMARK_SUCCESS 'YAHOO_STOCKS_merval_TEN.MI_7'
