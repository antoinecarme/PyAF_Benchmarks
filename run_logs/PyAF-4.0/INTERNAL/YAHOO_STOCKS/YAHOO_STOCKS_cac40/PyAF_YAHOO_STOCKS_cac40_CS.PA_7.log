BENCH_DATA YAHOO_STOCKS_cac40
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  CS.PA N= 1298 H= 7 HEAD= [13.455 13.11  12.805 12.4   12.03 ] TAIL= [18.165 17.91  18.335 18.15  18.17 ]
    CS.PA       Date
0  13.455 2011-07-28
1  13.110 2011-07-29
2  12.805 2011-08-01
3  12.400 2011-08-02
4  12.030 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   CS.PA   1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CS.PA'], 'Transformations': [('CS.PA', 'None', '_', 'T+S+R'), ('CS.PA', 'None', 'Diff_', 'T+S+R'), ('CS.PA', 'None', 'RelDiff_', 'T+S+R'), ('CS.PA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CS.PA', 'Transformation': '_CS.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.071, ('TRAINING', {'Signal': 'CS.PA', 'Transformation': '_CS.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CS.PA', 'Transformation': 'Diff_CS.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.858, ('TRAINING', {'Signal': 'CS.PA', 'Transformation': 'Diff_CS.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CS.PA', 'Transformation': 'RelDiff_CS.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.224, ('TRAINING', {'Signal': 'CS.PA', 'Transformation': 'RelDiff_CS.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CS.PA', 'Transformation': 'CumSum_CS.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.827, ('TRAINING', {'Signal': 'CS.PA', 'Transformation': 'CumSum_CS.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.982, ('SIGNAL_TRAINING', {'Signals': ['CS.PA'], 'Transformations': [('CS.PA', 'None', '_', 'T+S+R'), ('CS.PA', 'None', 'Diff_', 'T+S+R'), ('CS.PA', 'None', 'RelDiff_', 'T+S+R'), ('CS.PA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CS.PA'], 'Transformations': [('CS.PA', [('CS.PA', 'None', 'CumSum_', 'T+S+R'), ('CS.PA', 'None', 'Diff_', 'T+S+R'), ('CS.PA', 'None', 'RelDiff_', 'T+S+R'), ('CS.PA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CS.PA', 'Transformations': [('CS.PA', 'None', 'CumSum_', 'T+S+R'), ('CS.PA', 'None', 'Diff_', 'T+S+R'), ('CS.PA', 'None', 'RelDiff_', 'T+S+R'), ('CS.PA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'CS.PA', 'Transformations': [('CS.PA', 'None', 'CumSum_', 'T+S+R'), ('CS.PA', 'None', 'Diff_', 'T+S+R'), ('CS.PA', 'None', 'RelDiff_', 'T+S+R'), ('CS.PA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CS.PA', 'Model': '_CS.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CS.PA', 'Model': '_CS.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CS.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CS.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['CS.PA'], 'Transformations': [('CS.PA', [('CS.PA', 'None', 'CumSum_', 'T+S+R'), ('CS.PA', 'None', 'Diff_', 'T+S+R'), ('CS.PA', 'None', 'RelDiff_', 'T+S+R'), ('CS.PA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CS.PA' Length=1298  Min=8.164 Max=25.805  Mean=17.055308166409883 StdDev=4.678967468928954
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CS.PA' Min=0.0 Max=1.0  Mean=0.5040138408485834 StdDev=0.26523255308253224
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CS.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CS.PA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CS.PA_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CS.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0155 MAPE_Forecast=0.0162 MAPE_Test=0.0214
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0155 SMAPE_Forecast=0.0161 SMAPE_Test=0.0217
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0033 MASE_Test=1.1566
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.2598023378212972 CRPS_Forecast=0.5384265564387919 CRPS_Test=0.2953571428571425
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2222519379844961 L1_Forecast=0.3506563706563706 L1_Test=0.3807142857142861
INFO:pyaf.std:MODEL_L2 L2_Fit=0.30086058091296514 L2_Forecast=0.5016293914156609 L2_Test=0.4723308465169597
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5267642341332857 LnQ_Forecast=0.148047486989769 LnQ_Test=0.005128101401524549
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.16550000000000153 MedAE_Forecast=0.25500000000000256 MedAE_Test=0.254999999999999
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.29992630803242454
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CS.PA_Lag1Trend_residue_bestCycle_byMAPE None 0.0008502919335638959 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ... ForecastMAPE      TestMAPE
0    None         _CS.PA  ...       0.0162  2.140000e-02
1    None         _CS.PA  ...       0.0162  2.140000e-02
2    None   CumSum_CS.PA  ...       0.0162  2.140000e-02
3    None     Diff_CS.PA  ...       0.0162  2.140000e-02
4    None     Diff_CS.PA  ...       0.0162  2.140000e-02
..    ...            ...  ...          ...           ...
211  None  RelDiff_CS.PA  ...   60120.1303  6.110904e+05
212  None  RelDiff_CS.PA  ...  118569.9228  4.397819e+05
213  None  RelDiff_CS.PA  ...  118569.9228  4.397819e+05
214  None  RelDiff_CS.PA  ...  732622.0589  8.377804e+06
215  None  RelDiff_CS.PA  ...  732622.0589  8.377804e+06

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _CS.PA             T+S+R  ...  0.0155       0.0162   0.0214
1  None         _CS.PA             T+S+R  ...  0.0155       0.0162   0.0214
2  None   CumSum_CS.PA             T+S+R  ...  0.0158       0.0162   0.0214
3  None     Diff_CS.PA             T+S+R  ...  0.0155       0.0162   0.0214
4  None     Diff_CS.PA             T+S+R  ...  0.0155       0.0162   0.0214

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CS.PA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['CS.PA'], 'Horizon': 7}))
7 0    17.890
1    18.135
2    17.980
3    17.830
4    17.930
5    17.880
6    18.195
Name: CS.PA, dtype: float64
7 0    18.17
1    18.17
2    18.17
3    18.17
4    18.17
5    18.17
6    18.17
Name: CS.PA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CS.PA CS.PA [17.89, 18.135, 17.98, 17.83, 17.93, 17.88, 18.195]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CS.PA CS.PA [18.17, 18.17, 18.17, 18.17, 18.17, 18.17, 18.17]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CS.PA CS.PA 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CS.PA CS.PA 12.457124710083008
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CS.PA CS.PA Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CS.PA CS.PA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CS.PA CS.PA 0.0112 0.0111 1.1823
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CS.PA CS.PA 0.20000000000000132 0.23103803026465639 -2.2980896509568756
BENCHMARK_SUCCESS 'YAHOO_STOCKS_cac40_CS.PA_7'
