BENCH_DATA YAHOO_STOCKS_cac40
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  DG.PA N= 1298 H= 7 HEAD= [40.485 40.52  39.16  38.17  37.525] TAIL= [65.76 66.09 66.31 66.27 65.9 ]
    DG.PA       Date
0  40.485 2011-07-28
1  40.520 2011-07-29
2  39.160 2011-08-01
3  38.170 2011-08-02
4  37.525 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   DG.PA   1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DG.PA'], 'Transformations': [('DG.PA', 'None', '_', 'T+S+R'), ('DG.PA', 'None', 'Diff_', 'T+S+R'), ('DG.PA', 'None', 'RelDiff_', 'T+S+R'), ('DG.PA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DG.PA', 'Transformation': '_DG.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.455, ('TRAINING', {'Signal': 'DG.PA', 'Transformation': '_DG.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DG.PA', 'Transformation': 'Diff_DG.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.803, ('TRAINING', {'Signal': 'DG.PA', 'Transformation': 'Diff_DG.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DG.PA', 'Transformation': 'RelDiff_DG.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.174, ('TRAINING', {'Signal': 'DG.PA', 'Transformation': 'RelDiff_DG.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DG.PA', 'Transformation': 'CumSum_DG.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.812, ('TRAINING', {'Signal': 'DG.PA', 'Transformation': 'CumSum_DG.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.247, ('SIGNAL_TRAINING', {'Signals': ['DG.PA'], 'Transformations': [('DG.PA', 'None', '_', 'T+S+R'), ('DG.PA', 'None', 'Diff_', 'T+S+R'), ('DG.PA', 'None', 'RelDiff_', 'T+S+R'), ('DG.PA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DG.PA'], 'Transformations': [('DG.PA', [('DG.PA', 'None', 'CumSum_', 'T+S+R'), ('DG.PA', 'None', 'Diff_', 'T+S+R'), ('DG.PA', 'None', 'RelDiff_', 'T+S+R'), ('DG.PA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DG.PA', 'Transformations': [('DG.PA', 'None', 'CumSum_', 'T+S+R'), ('DG.PA', 'None', 'Diff_', 'T+S+R'), ('DG.PA', 'None', 'RelDiff_', 'T+S+R'), ('DG.PA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'DG.PA', 'Transformations': [('DG.PA', 'None', 'CumSum_', 'T+S+R'), ('DG.PA', 'None', 'Diff_', 'T+S+R'), ('DG.PA', 'None', 'RelDiff_', 'T+S+R'), ('DG.PA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DG.PA', 'Model': '_DG.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DG.PA', 'Model': '_DG.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DG.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DG.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['DG.PA'], 'Transformations': [('DG.PA', [('DG.PA', 'None', 'CumSum_', 'T+S+R'), ('DG.PA', 'None', 'Diff_', 'T+S+R'), ('DG.PA', 'None', 'RelDiff_', 'T+S+R'), ('DG.PA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DG.PA' Length=1298  Min=28.95 Max=68.18  Mean=46.1856710323574 StdDev=10.454228978434365
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DG.PA' Min=0.0 Max=1.0  Mean=0.43934924884928567 StdDev=0.2664855717163996
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DG.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DG.PA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_DG.PA_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_DG.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0123 MAPE_Forecast=0.011 MAPE_Test=0.0078
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0122 SMAPE_Forecast=0.011 SMAPE_Test=0.0079
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0018 MASE_Test=0.9863
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.3330003773969814 CRPS_Forecast=0.9751146781739725 CRPS_Test=0.47357142857142726
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4966230620155039 L1_Forecast=0.6651737451737456 L1_Test=0.5128571428571403
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6691418177687161 L2_Forecast=0.8976171802704105 L2_Test=0.7592571557591167
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2925961164975762 LnQ_Forecast=0.0582413940399141 LnQ_Test=0.0009673002574735691
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.379999999999999 MedAE_Forecast=0.5200000000000031 MedAE_Test=0.3299999999999983
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.29403517716033645
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _DG.PA_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None         _DG.PA             T+S+R  ...    0.0123       0.0110      0.0078
1    None         _DG.PA             T+S+R  ...    0.0123       0.0110      0.0078
2    None   CumSum_DG.PA             T+S+R  ...    0.0125       0.0110      0.0078
3    None     Diff_DG.PA             T+S+R  ...    0.0123       0.0110      0.0078
4    None     Diff_DG.PA             T+S+R  ...    0.0123       0.0110      0.0078
..    ...            ...               ...  ...       ...          ...         ...
219  None  RelDiff_DG.PA             T+S+R  ...   73.0005     718.1621   3314.6258
220  None  RelDiff_DG.PA             T+S+R  ...  125.4557    2982.2914   7040.3891
221  None  RelDiff_DG.PA             T+S+R  ...  125.4557    2982.2914   7040.3891
222  None  RelDiff_DG.PA             T+S+R  ...  429.0717    3081.0915  11630.5432
223  None  RelDiff_DG.PA             T+S+R  ...  429.0717    3081.0915  11630.5432

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _DG.PA             T+S+R  ...  0.0123        0.011   0.0078
1  None         _DG.PA             T+S+R  ...  0.0123        0.011   0.0078
2  None   CumSum_DG.PA             T+S+R  ...  0.0125        0.011   0.0078
3  None     Diff_DG.PA             T+S+R  ...  0.0123        0.011   0.0078
4  None     Diff_DG.PA             T+S+R  ...  0.0123        0.011   0.0078

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DG.PA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.151, ('FORECASTING', {'Signals': ['DG.PA'], 'Horizon': 7}))
7 0    65.94
1    66.38
2    65.97
3    66.55
4    67.21
5    67.38
6    67.61
Name: DG.PA, dtype: float64
7 0    65.9
1    65.9
2    65.9
3    65.9
4    65.9
5    65.9
6    65.9
Name: DG.PA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DG.PA DG.PA [65.94, 66.38, 65.97, 66.55, 67.21, 67.38, 67.61]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DG.PA DG.PA [65.9, 65.9, 65.9, 65.9, 65.9, 65.9, 65.9]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DG.PA DG.PA 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DG.PA DG.PA 12.713437557220459
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DG.PA DG.PA Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DG.PA DG.PA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DG.PA DG.PA 0.0122 0.0123 1.9759
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DG.PA DG.PA 0.8199999999999912 1.0344080432788527 -1.6911468811909995
BENCHMARK_SUCCESS 'YAHOO_STOCKS_cac40_DG.PA_7'
