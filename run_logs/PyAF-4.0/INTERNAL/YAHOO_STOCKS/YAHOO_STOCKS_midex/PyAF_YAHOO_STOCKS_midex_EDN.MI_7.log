BENCH_DATA YAHOO_STOCKS_midex
TIME :  Date N= 284 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2012-08-23T00:00:00.000000000' '2012-08-24T00:00:00.000000000'
 '2012-08-27T00:00:00.000000000' '2012-08-28T00:00:00.000000000'
 '2012-08-29T00:00:00.000000000']
SIGNAL :  EDN.MI N= 284 H= 7 HEAD= [0.851  0.8435 0.834  0.835  0.8485] TAIL= [0.889  0.889  0.8895 0.889  0.8895]
   EDN.MI       Date
0  0.8510 2011-07-28
1  0.8435 2011-07-29
2  0.8340 2011-08-01
3  0.8350 2011-08-02
4  0.8485 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 284 entries, 0 to 283
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   EDN.MI  284 non-null    float64       
 1   Date    284 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 6.7 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['EDN.MI'], 'Transformations': [('EDN.MI', 'None', '_', 'T+S+R'), ('EDN.MI', 'None', 'Diff_', 'T+S+R'), ('EDN.MI', 'None', 'RelDiff_', 'T+S+R'), ('EDN.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': '_EDN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.537, ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': '_EDN.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': 'Diff_EDN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.128, ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': 'Diff_EDN.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': 'RelDiff_EDN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.161, ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': 'RelDiff_EDN.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': 'CumSum_EDN.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.104, ('TRAINING', {'Signal': 'EDN.MI', 'Transformation': 'CumSum_EDN.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.931, ('SIGNAL_TRAINING', {'Signals': ['EDN.MI'], 'Transformations': [('EDN.MI', 'None', '_', 'T+S+R'), ('EDN.MI', 'None', 'Diff_', 'T+S+R'), ('EDN.MI', 'None', 'RelDiff_', 'T+S+R'), ('EDN.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['EDN.MI'], 'Transformations': [('EDN.MI', [('EDN.MI', 'None', 'CumSum_', 'T+S+R'), ('EDN.MI', 'None', 'Diff_', 'T+S+R'), ('EDN.MI', 'None', 'RelDiff_', 'T+S+R'), ('EDN.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'EDN.MI', 'Transformations': [('EDN.MI', 'None', 'CumSum_', 'T+S+R'), ('EDN.MI', 'None', 'Diff_', 'T+S+R'), ('EDN.MI', 'None', 'RelDiff_', 'T+S+R'), ('EDN.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'EDN.MI', 'Transformations': [('EDN.MI', 'None', 'CumSum_', 'T+S+R'), ('EDN.MI', 'None', 'Diff_', 'T+S+R'), ('EDN.MI', 'None', 'RelDiff_', 'T+S+R'), ('EDN.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EDN.MI', 'Model': 'Diff_EDN.MI_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EDN.MI', 'Model': 'Diff_EDN.MI_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EDN.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EDN.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('FINALIZE_TRAINING', {'Signals': ['EDN.MI'], 'Transformations': [('EDN.MI', [('EDN.MI', 'None', 'CumSum_', 'T+S+R'), ('EDN.MI', 'None', 'Diff_', 'T+S+R'), ('EDN.MI', 'None', 'RelDiff_', 'T+S+R'), ('EDN.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2012-06-01T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='EDN.MI' Length=284  Min=0.7415 Max=0.9585  Mean=0.8544753521126761 StdDev=0.039310152949028544
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_EDN.MI' Min=-0.25806451612903203 Max=0.34562211981566804  Mean=0.0006247160381644708 StdDev=0.05786016169471151
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_EDN.MI_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_EDN.MI_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_EDN.MI_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_EDN.MI_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.043 MAPE_Forecast=0.0018 MAPE_Test=0.0042
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0421 SMAPE_Forecast=0.0018 SMAPE_Test=0.0042
INFO:pyaf.std:MODEL_MASE MASE_Fit=4.2989 MASE_Forecast=2.3343 MASE_Test=11.235
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.00706796962661151 CRPS_Forecast=0.0008529399529042176 CRPS_Test=0.0019796380090496635
INFO:pyaf.std:MODEL_L1 L1_Fit=0.03568093405130932 L1_Forecast=0.0016127989657400718 L1_Test=0.0037449903038136367
INFO:pyaf.std:MODEL_L2 L2_Fit=0.04451518139769256 L2_Forecast=0.0021503786141435248 L2_Test=0.003762184554080682
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6177884568674701 LnQ_Forecast=0.00032814874094747786 LnQ_Test=0.00012477646643507172
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.030300904977375476 MedAE_Forecast=0.0013054298642534157 MedAE_Test=0.003809954751130995
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.5046082949308753
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_EDN.MI_ConstantTrend 0.0006881164376420552
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_EDN.MI_ConstantTrend_residue_bestCycle_byMAPE None -0.0006881164376420552 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None         _EDN.MI  ...  8.000000e-04  3.000000e-04
1    None         _EDN.MI  ...  8.000000e-04  3.000000e-04
2    None   CumSum_EDN.MI  ...  8.000000e-04  3.000000e-04
3    None     Diff_EDN.MI  ...  8.000000e-04  3.000000e-04
4    None     Diff_EDN.MI  ...  8.000000e-04  3.000000e-04
..    ...             ...  ...           ...           ...
203  None  RelDiff_EDN.MI  ...  1.154083e+07  1.231424e+07
204  None  RelDiff_EDN.MI  ...  1.159766e+07  1.231424e+07
205  None  RelDiff_EDN.MI  ...  1.164766e+07  1.231424e+07
206  None  RelDiff_EDN.MI  ...  1.234280e+07  1.231424e+07
207  None  RelDiff_EDN.MI  ...  1.234280e+07  1.231424e+07

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _EDN.MI             T+S+R  ...  0.0098       0.0008   0.0003
1  None        _EDN.MI             T+S+R  ...  0.0098       0.0008   0.0003
2  None  CumSum_EDN.MI             T+S+R  ...  0.0104       0.0008   0.0003
3  None    Diff_EDN.MI             T+S+R  ...  0.0098       0.0008   0.0003
4  None    Diff_EDN.MI             T+S+R  ...  0.0098       0.0008   0.0003

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['EDN.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.12, ('FORECASTING', {'Signals': ['EDN.MI'], 'Horizon': 7}))
7 0    0.8890
1    0.8565
2    0.8170
3    0.7800
4    0.7405
5    0.6215
6    0.5015
Name: EDN.MI, dtype: float64
7 0    0.893557
1    0.893706
2    0.893855
3    0.894005
4    0.894154
5    0.894303
6    0.894452
Name: EDN.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_EDN.MI EDN.MI [0.889, 0.8565, 0.817, 0.78, 0.7405, 0.6215, 0.5015]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_EDN.MI EDN.MI [0.8935565610859727, 0.893705882352941, 0.8938552036199093, 0.8940045248868776, 0.894153846153846, 0.8943031674208143, 0.8944524886877826]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_EDN.MI EDN.MI 284 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_EDN.MI EDN.MI 9.336589813232422
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_EDN.MI EDN.MI ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_EDN.MI EDN.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_EDN.MI EDN.MI 0.2455 0.1978 2.3271
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_EDN.MI EDN.MI 0.15029023917259193 0.19739428451247806 -1.3898230128669673
BENCHMARK_SUCCESS 'YAHOO_STOCKS_midex_EDN.MI_7'
