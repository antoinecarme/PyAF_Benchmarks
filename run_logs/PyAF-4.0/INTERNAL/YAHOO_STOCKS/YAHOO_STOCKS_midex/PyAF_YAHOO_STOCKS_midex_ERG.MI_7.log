BENCH_DATA YAHOO_STOCKS_midex
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ERG.MI N= 1297 H= 7 HEAD= [9.265 9.295 9.08  8.94  8.855] TAIL= [10.12 10.25 10.33 10.23 10.23]
   ERG.MI       Date
0   9.265 2011-07-28
1   9.295 2011-07-29
2   9.080 2011-08-01
3   8.940 2011-08-02
4   8.855 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ERG.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ERG.MI'], 'Transformations': [('ERG.MI', 'None', '_', 'T+S+R'), ('ERG.MI', 'None', 'Diff_', 'T+S+R'), ('ERG.MI', 'None', 'RelDiff_', 'T+S+R'), ('ERG.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': '_ERG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.446, ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': '_ERG.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': 'Diff_ERG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.548, ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': 'Diff_ERG.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': 'RelDiff_ERG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.217, ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': 'RelDiff_ERG.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': 'CumSum_ERG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.847, ('TRAINING', {'Signal': 'ERG.MI', 'Transformation': 'CumSum_ERG.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.06, ('SIGNAL_TRAINING', {'Signals': ['ERG.MI'], 'Transformations': [('ERG.MI', 'None', '_', 'T+S+R'), ('ERG.MI', 'None', 'Diff_', 'T+S+R'), ('ERG.MI', 'None', 'RelDiff_', 'T+S+R'), ('ERG.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ERG.MI'], 'Transformations': [('ERG.MI', [('ERG.MI', 'None', 'CumSum_', 'T+S+R'), ('ERG.MI', 'None', 'Diff_', 'T+S+R'), ('ERG.MI', 'None', 'RelDiff_', 'T+S+R'), ('ERG.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ERG.MI', 'Transformations': [('ERG.MI', 'None', 'CumSum_', 'T+S+R'), ('ERG.MI', 'None', 'Diff_', 'T+S+R'), ('ERG.MI', 'None', 'RelDiff_', 'T+S+R'), ('ERG.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'ERG.MI', 'Transformations': [('ERG.MI', 'None', 'CumSum_', 'T+S+R'), ('ERG.MI', 'None', 'Diff_', 'T+S+R'), ('ERG.MI', 'None', 'RelDiff_', 'T+S+R'), ('ERG.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ERG.MI', 'Model': '_ERG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ERG.MI', 'Model': '_ERG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ERG.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ERG.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['ERG.MI'], 'Transformations': [('ERG.MI', [('ERG.MI', 'None', 'CumSum_', 'T+S+R'), ('ERG.MI', 'None', 'Diff_', 'T+S+R'), ('ERG.MI', 'None', 'RelDiff_', 'T+S+R'), ('ERG.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ERG.MI' Length=1297  Min=4.368 Max=13.46  Mean=9.275809560524289 StdDev=2.3046655037142303
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ERG.MI' Min=0.0 Max=1.0  Mean=0.5397942763445098 StdDev=0.25348278747406855
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ERG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ERG.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ERG.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ERG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0133 MAPE_Forecast=0.0133 MAPE_Test=0.0083
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0133 SMAPE_Forecast=0.0133 SMAPE_Test=0.0083
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9981 MASE_Test=1.1494
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.6412606232150143 CRPS_Forecast=0.22453048153214775 CRPS_Test=0.06071428571428594
INFO:pyaf.std:MODEL_L1 L1_Fit=0.11015019379844959 L1_Forecast=0.15480620155038766 L1_Test=0.08428571428571452
INFO:pyaf.std:MODEL_L2 L2_Fit=0.15663749625347737 L2_Forecast=0.20791974450503437 L2_Test=0.09613977919080734
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3700089961408141 LnQ_Forecast=0.08449076897285945 LnQ_Test=0.0006299949917611716
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.08000000000000007 MedAE_Forecast=0.11500000000000021 MedAE_Test=0.08000000000000007
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5386053673559172
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ERG.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _ERG.MI             T+S+R  ...   0.0133       0.0133    0.0083
1    None         _ERG.MI             T+S+R  ...   0.0133       0.0133    0.0083
2    None   CumSum_ERG.MI             T+S+R  ...   0.0138       0.0133    0.0083
3    None     Diff_ERG.MI             T+S+R  ...   0.0133       0.0133    0.0083
4    None     Diff_ERG.MI             T+S+R  ...   0.0133       0.0133    0.0083
..    ...             ...               ...  ...      ...          ...       ...
203  None  RelDiff_ERG.MI             T+S+R  ...   9.7214     136.4543  310.1276
204  None  RelDiff_ERG.MI             T+S+R  ...  65.5143     147.4797  137.9103
205  None  RelDiff_ERG.MI             T+S+R  ...  65.5143     147.4797  137.9103
206  None  RelDiff_ERG.MI             T+S+R  ...  30.3585     382.0945  844.2533
207  None  RelDiff_ERG.MI             T+S+R  ...  30.3585     382.0945  844.2533

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ERG.MI             T+S+R  ...  0.0133       0.0133   0.0083
1  None        _ERG.MI             T+S+R  ...  0.0133       0.0133   0.0083
2  None  CumSum_ERG.MI             T+S+R  ...  0.0138       0.0133   0.0083
3  None    Diff_ERG.MI             T+S+R  ...  0.0133       0.0133   0.0083
4  None    Diff_ERG.MI             T+S+R  ...  0.0133       0.0133   0.0083

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ERG.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.216, ('FORECASTING', {'Signals': ['ERG.MI'], 'Horizon': 7}))
7 0    10.12
1    10.14
2    10.19
3    10.23
4    10.20
5    10.16
6    10.31
Name: ERG.MI, dtype: float64
7 0    10.23
1    10.23
2    10.23
3    10.23
4    10.23
5    10.23
6    10.23
Name: ERG.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ERG.MI ERG.MI [10.12, 10.14, 10.19, 10.23, 10.2, 10.16, 10.31]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ERG.MI ERG.MI [10.23, 10.23, 10.23, 10.23, 10.23, 10.23, 10.23]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ERG.MI ERG.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ERG.MI ERG.MI 12.602291345596313
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ERG.MI ERG.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ERG.MI ERG.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ERG.MI ERG.MI 0.0059 0.0059 1.0909
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ERG.MI ERG.MI 0.0600000000000005 0.0696932052437174 -0.3967136092858081
BENCHMARK_SUCCESS 'YAHOO_STOCKS_midex_ERG.MI_7'
