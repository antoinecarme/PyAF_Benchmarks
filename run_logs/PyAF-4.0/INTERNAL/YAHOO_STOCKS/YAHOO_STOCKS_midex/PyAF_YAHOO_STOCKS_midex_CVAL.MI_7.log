BENCH_DATA YAHOO_STOCKS_midex
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  CVAL.MI N= 1297 H= 7 HEAD= [1.97342 1.99    1.89188 1.8518  1.84628] TAIL= [0.37   0.3744 0.3865 0.3901 0.4062]
   CVAL.MI       Date
0  1.97342 2011-07-28
1  1.99000 2011-07-29
2  1.89188 2011-08-01
3  1.85180 2011-08-02
4  1.84628 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   CVAL.MI  1297 non-null   float64       
 1   Date     1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CVAL.MI'], 'Transformations': [('CVAL.MI', 'None', '_', 'T+S+R'), ('CVAL.MI', 'None', 'Diff_', 'T+S+R'), ('CVAL.MI', 'None', 'RelDiff_', 'T+S+R'), ('CVAL.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': '_CVAL.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.632, ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': '_CVAL.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': 'Diff_CVAL.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.895, ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': 'Diff_CVAL.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': 'RelDiff_CVAL.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.267, ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': 'RelDiff_CVAL.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': 'CumSum_CVAL.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.975, ('TRAINING', {'Signal': 'CVAL.MI', 'Transformation': 'CumSum_CVAL.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.771, ('SIGNAL_TRAINING', {'Signals': ['CVAL.MI'], 'Transformations': [('CVAL.MI', 'None', '_', 'T+S+R'), ('CVAL.MI', 'None', 'Diff_', 'T+S+R'), ('CVAL.MI', 'None', 'RelDiff_', 'T+S+R'), ('CVAL.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CVAL.MI'], 'Transformations': [('CVAL.MI', [('CVAL.MI', 'None', 'CumSum_', 'T+S+R'), ('CVAL.MI', 'None', 'Diff_', 'T+S+R'), ('CVAL.MI', 'None', 'RelDiff_', 'T+S+R'), ('CVAL.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CVAL.MI', 'Transformations': [('CVAL.MI', 'None', 'CumSum_', 'T+S+R'), ('CVAL.MI', 'None', 'Diff_', 'T+S+R'), ('CVAL.MI', 'None', 'RelDiff_', 'T+S+R'), ('CVAL.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'CVAL.MI', 'Transformations': [('CVAL.MI', 'None', 'CumSum_', 'T+S+R'), ('CVAL.MI', 'None', 'Diff_', 'T+S+R'), ('CVAL.MI', 'None', 'RelDiff_', 'T+S+R'), ('CVAL.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CVAL.MI', 'Model': '_CVAL.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CVAL.MI', 'Model': '_CVAL.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CVAL.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CVAL.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['CVAL.MI'], 'Transformations': [('CVAL.MI', [('CVAL.MI', 'None', 'CumSum_', 'T+S+R'), ('CVAL.MI', 'None', 'Diff_', 'T+S+R'), ('CVAL.MI', 'None', 'RelDiff_', 'T+S+R'), ('CVAL.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CVAL.MI' Length=1297  Min=0.3226 Max=1.99  Mean=0.961861156515033 StdDev=0.29675686025144504
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CVAL.MI' Min=0.0 Max=1.0  Mean=0.3833880031876182 StdDev=0.1779758067958766
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CVAL.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CVAL.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CVAL.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CVAL.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0192 MAPE_Forecast=0.0243 MAPE_Test=0.0322
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0192 SMAPE_Forecast=0.0241 SMAPE_Test=0.0329
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9967 MASE_Test=1.0385
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.08426200709914321 CRPS_Forecast=0.08083356497948016 CRPS_Test=0.010671428571428573
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01887054263565892 L1_Forecast=0.019179844961240308 L1_Test=0.011942857142857144
INFO:pyaf.std:MODEL_L2 L2_Fit=0.027480307346542998 L2_Forecast=0.025388838113927028 L2_Test=0.01362004824828878
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7623320486183691 LnQ_Forecast=0.30681154089024565 LnQ_Test=0.009946473624765532
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.012440000000000007 MedAE_Forecast=0.015000000000000013 MedAE_Test=0.0121
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9900563751949142
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CVAL.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _CVAL.MI             T+S+R  ...  0.0192       0.0240   0.0346
1    None         _CVAL.MI             T+S+R  ...  0.0190       0.0240   0.0327
2    None         _CVAL.MI             T+S+R  ...  0.0187       0.0240   0.0318
3    None         _CVAL.MI             T+S+R  ...  0.0188       0.0242   0.0326
4    None         _CVAL.MI             T+S+R  ...  0.0191       0.0242   0.0320
..    ...              ...               ...  ...     ...          ...      ...
219  None  RelDiff_CVAL.MI             T+S+R  ...  1.2107       7.1727  29.0727
220  None  RelDiff_CVAL.MI             T+S+R  ...  1.2479       8.5182  29.9240
221  None   CumSum_CVAL.MI             T+S+R  ...  8.3642       9.4302  24.7321
222  None   CumSum_CVAL.MI             T+S+R  ...  5.6229      12.6636   2.0374
223  None   CumSum_CVAL.MI             T+S+R  ...  8.4250      15.7443  15.2765

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None       _CVAL.MI             T+S+R  ...  0.0192       0.0240   0.0346
1  None       _CVAL.MI             T+S+R  ...  0.0190       0.0240   0.0327
2  None       _CVAL.MI             T+S+R  ...  0.0187       0.0240   0.0318
3  None       _CVAL.MI             T+S+R  ...  0.0188       0.0242   0.0326
4  None       _CVAL.MI             T+S+R  ...  0.0191       0.0242   0.0320

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CVAL.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['CVAL.MI'], 'Horizon': 7}))
7 0    0.3998
1    0.4001
2    0.4101
3    0.4091
4    0.3841
5    0.3823
6    0.3941
Name: CVAL.MI, dtype: float64
7 0    0.4062
1    0.4062
2    0.4062
3    0.4062
4    0.4062
5    0.4062
6    0.4062
Name: CVAL.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CVAL.MI CVAL.MI [0.3998, 0.4001, 0.4101, 0.4091, 0.3841, 0.3823, 0.3941]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CVAL.MI CVAL.MI [0.4062, 0.4062, 0.4062, 0.4062, 0.4062, 0.4062, 0.4062]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CVAL.MI CVAL.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CVAL.MI CVAL.MI 13.247568607330322
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CVAL.MI CVAL.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CVAL.MI CVAL.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CVAL.MI CVAL.MI 0.0284 0.0278 1.3295
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CVAL.MI CVAL.MI 0.011057142857142868 0.013668629359647914 -0.8005898038249379
BENCHMARK_SUCCESS 'YAHOO_STOCKS_midex_CVAL.MI_7'
