BENCH_DATA YAHOO_STOCKS_midex
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  CRG.MI N= 1297 H= 7 HEAD= [0.18463 0.18161 0.17544 0.16689 0.16652] TAIL= [0.3479 0.3621 0.3726 0.3753 0.3765]
    CRG.MI       Date
0  0.18463 2011-07-28
1  0.18161 2011-07-29
2  0.17544 2011-08-01
3  0.16689 2011-08-02
4  0.16652 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   CRG.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CRG.MI'], 'Transformations': [('CRG.MI', 'None', '_', 'T+S+R'), ('CRG.MI', 'None', 'Diff_', 'T+S+R'), ('CRG.MI', 'None', 'RelDiff_', 'T+S+R'), ('CRG.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': '_CRG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.718, ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': '_CRG.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': 'Diff_CRG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.806, ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': 'Diff_CRG.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': 'RelDiff_CRG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.66, ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': 'RelDiff_CRG.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': 'CumSum_CRG.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.441, ('TRAINING', {'Signal': 'CRG.MI', 'Transformation': 'CumSum_CRG.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.626, ('SIGNAL_TRAINING', {'Signals': ['CRG.MI'], 'Transformations': [('CRG.MI', 'None', '_', 'T+S+R'), ('CRG.MI', 'None', 'Diff_', 'T+S+R'), ('CRG.MI', 'None', 'RelDiff_', 'T+S+R'), ('CRG.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CRG.MI'], 'Transformations': [('CRG.MI', [('CRG.MI', 'None', 'CumSum_', 'T+S+R'), ('CRG.MI', 'None', 'Diff_', 'T+S+R'), ('CRG.MI', 'None', 'RelDiff_', 'T+S+R'), ('CRG.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CRG.MI', 'Transformations': [('CRG.MI', 'None', 'CumSum_', 'T+S+R'), ('CRG.MI', 'None', 'Diff_', 'T+S+R'), ('CRG.MI', 'None', 'RelDiff_', 'T+S+R'), ('CRG.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'CRG.MI', 'Transformations': [('CRG.MI', 'None', 'CumSum_', 'T+S+R'), ('CRG.MI', 'None', 'Diff_', 'T+S+R'), ('CRG.MI', 'None', 'RelDiff_', 'T+S+R'), ('CRG.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CRG.MI', 'Model': '_CRG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CRG.MI', 'Model': '_CRG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CRG.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CRG.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['CRG.MI'], 'Transformations': [('CRG.MI', [('CRG.MI', 'None', 'CumSum_', 'T+S+R'), ('CRG.MI', 'None', 'Diff_', 'T+S+R'), ('CRG.MI', 'None', 'RelDiff_', 'T+S+R'), ('CRG.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CRG.MI' Length=1297  Min=0.01649 Max=2.18585  Mean=0.3308856900539707 StdDev=0.5252221222209914
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CRG.MI' Min=0.0 Max=1.0  Mean=0.14492554949569034 StdDev=0.2421092498345095
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CRG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CRG.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CRG.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CRG.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0221 MAPE_Forecast=0.0319 MAPE_Test=0.0384
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0229 SMAPE_Forecast=0.0317 SMAPE_Test=0.0396
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9988 MASE_Test=1.1778
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.046998802983476126 CRPS_Forecast=0.13947975009575922 CRPS_Test=0.014935714285714287
INFO:pyaf.std:MODEL_L1 L1_Fit=0.005644796511627906 L1_Forecast=0.02702635658914729 L1_Test=0.013014285714285716
INFO:pyaf.std:MODEL_L2 L2_Fit=0.0676751062482879 L2_Forecast=0.03670400565343995 L2_Test=0.01616305310621374
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=22.089981154053863 LnQ_Forecast=0.5406966571809073 LnQ_Test=0.01754746626240786
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0010100000000000109 MedAE_Forecast=0.020250000000000046 MedAE_Test=0.01050000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.07750673009551204
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CRG.MI_Lag1Trend_residue_bestCycle_byMAPE None -2.7657926761811115e-05 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None     Diff_CRG.MI  ...  3.150000e-02  5.640000e-02
1    None         _CRG.MI  ...  3.190000e-02  3.840000e-02
2    None         _CRG.MI  ...  3.190000e-02  3.840000e-02
3    None   CumSum_CRG.MI  ...  3.190000e-02  3.840000e-02
4    None     Diff_CRG.MI  ...  3.190000e-02  3.840000e-02
..    ...             ...  ...           ...           ...
155  None  RelDiff_CRG.MI  ...  2.125499e+07  4.802582e+07
156  None  RelDiff_CRG.MI  ...  2.125499e+07  4.802582e+07
157  None  RelDiff_CRG.MI  ...  2.125499e+07  4.802582e+07
158  None  RelDiff_CRG.MI  ...  2.125499e+07  4.802582e+07
159  None  RelDiff_CRG.MI  ...  2.125499e+07  4.802582e+07

[160 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    Diff_CRG.MI             T+S+R  ...  0.0656       0.0315   0.0564
1  None        _CRG.MI             T+S+R  ...  0.0221       0.0319   0.0384
2  None        _CRG.MI             T+S+R  ...  0.0221       0.0319   0.0384
3  None  CumSum_CRG.MI             T+S+R  ...  0.0229       0.0319   0.0384
4  None    Diff_CRG.MI             T+S+R  ...  0.0221       0.0319   0.0384

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CRG.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['CRG.MI'], 'Horizon': 7}))
7 0    0.3700
1    0.3622
2    0.3550
3    0.3476
4    0.3350
5    0.3302
6    0.3380
Name: CRG.MI, dtype: float64
7 0    0.3765
1    0.3765
2    0.3765
3    0.3765
4    0.3765
5    0.3765
6    0.3765
Name: CRG.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CRG.MI CRG.MI [0.37, 0.3622, 0.355, 0.3476, 0.335, 0.3302, 0.338]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CRG.MI CRG.MI [0.3765, 0.3765, 0.3765, 0.3765, 0.3765, 0.3765, 0.3765]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CRG.MI CRG.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CRG.MI CRG.MI 10.101973295211792
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CRG.MI CRG.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CRG.MI CRG.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CRG.MI CRG.MI 0.0827 0.0786 3.5564
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CRG.MI CRG.MI 0.02821428571428571 0.03137876898250061 -4.221235947173181
BENCHMARK_SUCCESS 'YAHOO_STOCKS_midex_CRG.MI_7'
