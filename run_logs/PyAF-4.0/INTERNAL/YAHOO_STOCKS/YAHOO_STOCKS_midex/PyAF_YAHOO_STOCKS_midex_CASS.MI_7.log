BENCH_DATA YAHOO_STOCKS_midex
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  CASS.MI N= 1297 H= 7 HEAD= [10.1148 10.3663 10.1087 10.029  10.1823] TAIL= [5.77  5.68  5.795 5.72  5.79 ]
   CASS.MI       Date
0  10.1148 2011-07-28
1  10.3663 2011-07-29
2  10.1087 2011-08-01
3  10.0290 2011-08-02
4  10.1823 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   CASS.MI  1297 non-null   float64       
 1   Date     1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CASS.MI'], 'Transformations': [('CASS.MI', 'None', '_', 'T+S+R'), ('CASS.MI', 'None', 'Diff_', 'T+S+R'), ('CASS.MI', 'None', 'RelDiff_', 'T+S+R'), ('CASS.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': '_CASS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.494, ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': '_CASS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': 'Diff_CASS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.846, ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': 'Diff_CASS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': 'RelDiff_CASS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.215, ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': 'RelDiff_CASS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': 'CumSum_CASS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.939, ('TRAINING', {'Signal': 'CASS.MI', 'Transformation': 'CumSum_CASS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.497, ('SIGNAL_TRAINING', {'Signals': ['CASS.MI'], 'Transformations': [('CASS.MI', 'None', '_', 'T+S+R'), ('CASS.MI', 'None', 'Diff_', 'T+S+R'), ('CASS.MI', 'None', 'RelDiff_', 'T+S+R'), ('CASS.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CASS.MI'], 'Transformations': [('CASS.MI', [('CASS.MI', 'None', 'CumSum_', 'T+S+R'), ('CASS.MI', 'None', 'Diff_', 'T+S+R'), ('CASS.MI', 'None', 'RelDiff_', 'T+S+R'), ('CASS.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CASS.MI', 'Transformations': [('CASS.MI', 'None', 'CumSum_', 'T+S+R'), ('CASS.MI', 'None', 'Diff_', 'T+S+R'), ('CASS.MI', 'None', 'RelDiff_', 'T+S+R'), ('CASS.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'CASS.MI', 'Transformations': [('CASS.MI', 'None', 'CumSum_', 'T+S+R'), ('CASS.MI', 'None', 'Diff_', 'T+S+R'), ('CASS.MI', 'None', 'RelDiff_', 'T+S+R'), ('CASS.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CASS.MI', 'Model': '_CASS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CASS.MI', 'Model': '_CASS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CASS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.215, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CASS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.251, ('FINALIZE_TRAINING', {'Signals': ['CASS.MI'], 'Transformations': [('CASS.MI', [('CASS.MI', 'None', 'CumSum_', 'T+S+R'), ('CASS.MI', 'None', 'Diff_', 'T+S+R'), ('CASS.MI', 'None', 'RelDiff_', 'T+S+R'), ('CASS.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CASS.MI' Length=1297  Min=4.942 Max=12.5561  Mean=8.370051719352352 StdDev=1.933072946700957
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CASS.MI' Min=0.0 Max=1.0  Mean=0.4502241524740081 StdDev=0.25388068802628805
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CASS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CASS.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CASS.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CASS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0125 MAPE_Forecast=0.0158 MAPE_Test=0.0208
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0124 SMAPE_Forecast=0.0157 SMAPE_Test=0.021
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9987 MASE_Test=1.1049
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5547122463535292 CRPS_Forecast=0.17617690834473324 CRPS_Test=0.06785714285714281
INFO:pyaf.std:MODEL_L1 L1_Fit=0.10484874031007754 L1_Forecast=0.09920542635658912 L1_Test=0.11785714285714288
INFO:pyaf.std:MODEL_L2 L2_Fit=0.15327760301128054 L2_Forecast=0.1317712517611397 L2_Test=0.12500000000000003
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.36899473996548465 LnQ_Forecast=0.1170493899782593 LnQ_Test=0.0035095010192442984
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.07500000000000018 MedAE_Forecast=0.07749999999999968 MedAE_Test=0.11500000000000021
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6793711666513442
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CASS.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE   TestMAPE
0    None         _CASS.MI             T+S+R  ...  0.0122       0.0156     0.0205
1    None         _CASS.MI             T+S+R  ...  0.0124       0.0157     0.0217
2    None         _CASS.MI             T+S+R  ...  0.0124       0.0157     0.0208
3    None         _CASS.MI             T+S+R  ...  0.0120       0.0157     0.0201
4    None         _CASS.MI             T+S+R  ...  0.0125       0.0158     0.0208
..    ...              ...               ...  ...     ...          ...        ...
219  None  RelDiff_CASS.MI             T+S+R  ...  3.2596     424.8706  1674.9769
220  None  RelDiff_CASS.MI             T+S+R  ...  5.2638     551.2481  2313.0245
221  None  RelDiff_CASS.MI             T+S+R  ...  5.2638     551.2481  2313.0245
222  None  RelDiff_CASS.MI             T+S+R  ...  4.8816     925.7588  4890.8811
223  None  RelDiff_CASS.MI             T+S+R  ...  4.8816     925.7588  4890.8811

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None       _CASS.MI             T+S+R  ...  0.0122       0.0156   0.0205
1  None       _CASS.MI             T+S+R  ...  0.0124       0.0157   0.0217
2  None       _CASS.MI             T+S+R  ...  0.0124       0.0157   0.0208
3  None       _CASS.MI             T+S+R  ...  0.0120       0.0157   0.0201
4  None       _CASS.MI             T+S+R  ...  0.0125       0.0158   0.0208

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CASS.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['CASS.MI'], 'Horizon': 7}))
7 0    5.850
1    6.170
2    6.155
3    6.140
4    6.165
5    6.235
6    6.350
Name: CASS.MI, dtype: float64
7 0    5.79
1    5.79
2    5.79
3    5.79
4    5.79
5    5.79
6    5.79
Name: CASS.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CASS.MI CASS.MI [5.85, 6.17, 6.155, 6.14, 6.165, 6.235, 6.35]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CASS.MI CASS.MI [5.79, 5.79, 5.79, 5.79, 5.79, 5.79, 5.79]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CASS.MI CASS.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CASS.MI CASS.MI 13.009032487869263
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CASS.MI CASS.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CASS.MI CASS.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CASS.MI CASS.MI 0.0584 0.0604 3.8801
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CASS.MI CASS.MI 0.36214285714285704 0.38839872737764136 -6.65516258765677
BENCHMARK_SUCCESS 'YAHOO_STOCKS_midex_CASS.MI_7'
