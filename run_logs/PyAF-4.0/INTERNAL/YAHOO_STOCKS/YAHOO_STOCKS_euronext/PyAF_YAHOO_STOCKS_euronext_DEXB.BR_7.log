BENCH_DATA YAHOO_STOCKS_euronext
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  DEXB.BR N= 1297 H= 7 HEAD= [1.88 1.85 1.79 1.7  1.68] TAIL= [32. 32. 32. 32. 32.]
   DEXB.BR       Date
0     1.88 2011-07-28
1     1.85 2011-07-29
2     1.79 2011-08-01
3     1.70 2011-08-02
4     1.68 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   DEXB.BR  1297 non-null   float64       
 1   Date     1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DEXB.BR'], 'Transformations': [('DEXB.BR', 'None', '_', 'T+S+R'), ('DEXB.BR', 'None', 'Diff_', 'T+S+R'), ('DEXB.BR', 'None', 'RelDiff_', 'T+S+R'), ('DEXB.BR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': '_DEXB.BR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.587, ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': '_DEXB.BR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': 'Diff_DEXB.BR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.825, ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': 'Diff_DEXB.BR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': 'RelDiff_DEXB.BR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.068, ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': 'RelDiff_DEXB.BR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': 'CumSum_DEXB.BR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.251, ('TRAINING', {'Signal': 'DEXB.BR', 'Transformation': 'CumSum_DEXB.BR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 7.732, ('SIGNAL_TRAINING', {'Signals': ['DEXB.BR'], 'Transformations': [('DEXB.BR', 'None', '_', 'T+S+R'), ('DEXB.BR', 'None', 'Diff_', 'T+S+R'), ('DEXB.BR', 'None', 'RelDiff_', 'T+S+R'), ('DEXB.BR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DEXB.BR'], 'Transformations': [('DEXB.BR', [('DEXB.BR', 'None', 'CumSum_', 'T+S+R'), ('DEXB.BR', 'None', 'Diff_', 'T+S+R'), ('DEXB.BR', 'None', 'RelDiff_', 'T+S+R'), ('DEXB.BR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DEXB.BR', 'Transformations': [('DEXB.BR', 'None', 'CumSum_', 'T+S+R'), ('DEXB.BR', 'None', 'Diff_', 'T+S+R'), ('DEXB.BR', 'None', 'RelDiff_', 'T+S+R'), ('DEXB.BR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'DEXB.BR', 'Transformations': [('DEXB.BR', 'None', 'CumSum_', 'T+S+R'), ('DEXB.BR', 'None', 'Diff_', 'T+S+R'), ('DEXB.BR', 'None', 'RelDiff_', 'T+S+R'), ('DEXB.BR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DEXB.BR', 'Model': '_DEXB.BR_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DEXB.BR', 'Model': '_DEXB.BR_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DEXB.BR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.197, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DEXB.BR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.234, ('FINALIZE_TRAINING', {'Signals': ['DEXB.BR'], 'Transformations': [('DEXB.BR', [('DEXB.BR', 'None', 'CumSum_', 'T+S+R'), ('DEXB.BR', 'None', 'Diff_', 'T+S+R'), ('DEXB.BR', 'None', 'RelDiff_', 'T+S+R'), ('DEXB.BR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DEXB.BR' Length=1297  Min=0.02 Max=32000.0  Mean=27.787972243639167 StdDev=888.165668034617
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DEXB.BR' Min=0.0 Max=1.0  Mean=0.0008677496749572759 StdDev=0.027755194473078285
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DEXB.BR_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR' [ConstantTrend + Seasonal_DayOfWeek + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DEXB.BR_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_DEXB.BR_ConstantTrend_residue_Seasonal_DayOfWeek' [Seasonal_DayOfWeek]
INFO:pyaf.std:AUTOREG_DETAIL '_DEXB.BR_ConstantTrend_residue_Seasonal_DayOfWeek_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.5261 MAPE_Forecast=0.498 MAPE_Test=0.9984
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.6658 SMAPE_Forecast=0.9286 SMAPE_Test=1.9938
INFO:pyaf.std:MODEL_MASE MASE_Fit=17.1674 MASE_Forecast=0.5544 MASE_Test=319500000000.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.012926315789473676 CRPS_Forecast=2.6364 CRPS_Test=15.974999999999998
INFO:pyaf.std:MODEL_L1 L1_Fit=0.14386627906976743 L1_Forecast=138.05817829457362 L1_Test=31.949999999999996
INFO:pyaf.std:MODEL_L2 L2_Fit=0.35658248118979835 L2_Forecast=1992.3437212103047 L2_Test=31.95
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1495.332365497757 LnQ_Forecast=4873.28116013721 LnQ_Test=292.2539969582228
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.019999999999999997 MedAE_Forecast=0.009999999999999995 MedAE_Test=31.95
INFO:pyaf.std:MODEL_COMPLEXITY 5.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _DEXB.BR_ConstantTrend 5.013629587006923e-06
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:SEASONAL_MODEL_VALUES _DEXB.BR_ConstantTrend_residue_Seasonal_DayOfWeek -4.076129001069057e-06 {3: -4.076129001069057e-06, 4: -4.076129001069057e-06, 0: -4.076129001069057e-06, 1: -4.076129001069057e-06, 2: -4.076129001069057e-06}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None         _DEXB.BR             T+S+R  ...   0.5261       0.4980   0.9984
1    None         _DEXB.BR             T+S+R  ...   0.5261       0.4980   0.9984
2    None   CumSum_DEXB.BR             T+S+R  ...   0.6537       0.5103   0.9311
3    None   CumSum_DEXB.BR             T+S+R  ...   0.6440       0.5110   0.9310
4    None   CumSum_DEXB.BR             T+S+R  ...   0.6775       0.5134   0.9310
..    ...              ...               ...  ...      ...          ...      ...
119  None  RelDiff_DEXB.BR             T+S+R  ...  34.1105      23.0077   0.9407
120  None  RelDiff_DEXB.BR             T+S+R  ...  34.1105      23.0077   0.9407
121  None  RelDiff_DEXB.BR             T+S+R  ...  34.1105      23.0227   0.9407
122  None  RelDiff_DEXB.BR             T+S+R  ...  34.1105      23.0227   0.9407
123  None  RelDiff_DEXB.BR             T+S+R  ...  34.1105      23.0227   0.9407

[124 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _DEXB.BR             T+S+R  ...  0.5261       0.4980   0.9984
1  None        _DEXB.BR             T+S+R  ...  0.5261       0.4980   0.9984
2  None  CumSum_DEXB.BR             T+S+R  ...  0.6537       0.5103   0.9311
3  None  CumSum_DEXB.BR             T+S+R  ...  0.6440       0.5110   0.9310
4  None  CumSum_DEXB.BR             T+S+R  ...  0.6775       0.5134   0.9310

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DEXB.BR'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('FORECASTING', {'Signals': ['DEXB.BR'], 'Horizon': 7}))
7 0    32.0
1    32.0
2    32.0
3    32.0
4    32.0
5    32.0
6    32.0
Name: DEXB.BR, dtype: float64
7 0    0.05
1    0.05
2    0.05
3    0.05
4    0.05
5    0.05
6    0.05
Name: DEXB.BR_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DEXB.BR DEXB.BR [32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DEXB.BR DEXB.BR [0.049999999999999996, 0.049999999999999996, 0.049999999999999996, 0.049999999999999996, 0.049999999999999996, 0.049999999999999996, 0.049999999999999996]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DEXB.BR DEXB.BR 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DEXB.BR DEXB.BR 8.24415373802185
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DEXB.BR DEXB.BR ConstantTrend + Seasonal_DayOfWeek + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DEXB.BR DEXB.BR 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DEXB.BR DEXB.BR 0.9984 1.9938 319500000000.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DEXB.BR DEXB.BR 31.949999999999996 31.95 -71456174999998.98
BENCHMARK_SUCCESS 'YAHOO_STOCKS_euronext_DEXB.BR_7'
