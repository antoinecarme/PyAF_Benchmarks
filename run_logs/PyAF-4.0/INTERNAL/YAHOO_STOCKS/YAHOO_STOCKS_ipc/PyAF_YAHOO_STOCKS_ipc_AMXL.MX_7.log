BENCH_DATA YAHOO_STOCKS_ipc
TIME :  Date N= 1295 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AMXL.MX N= 1295 H= 7 HEAD= [15.23 15.12 14.83 14.58 14.42] TAIL= [11.23 11.19 11.43 11.38 11.63]
   AMXL.MX       Date
0    15.23 2011-07-28
1    15.12 2011-07-29
2    14.83 2011-08-01
3    14.58 2011-08-02
4    14.42 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1295 entries, 0 to 1294
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   AMXL.MX  1295 non-null   float64       
 1   Date     1295 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AMXL.MX'], 'Transformations': [('AMXL.MX', 'None', '_', 'T+S+R'), ('AMXL.MX', 'None', 'Diff_', 'T+S+R'), ('AMXL.MX', 'None', 'RelDiff_', 'T+S+R'), ('AMXL.MX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': '_AMXL.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.405, ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': '_AMXL.MX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': 'Diff_AMXL.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.604, ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': 'Diff_AMXL.MX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': 'RelDiff_AMXL.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.238, ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': 'RelDiff_AMXL.MX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': 'CumSum_AMXL.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.621, ('TRAINING', {'Signal': 'AMXL.MX', 'Transformation': 'CumSum_AMXL.MX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.87, ('SIGNAL_TRAINING', {'Signals': ['AMXL.MX'], 'Transformations': [('AMXL.MX', 'None', '_', 'T+S+R'), ('AMXL.MX', 'None', 'Diff_', 'T+S+R'), ('AMXL.MX', 'None', 'RelDiff_', 'T+S+R'), ('AMXL.MX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AMXL.MX'], 'Transformations': [('AMXL.MX', [('AMXL.MX', 'None', 'CumSum_', 'T+S+R'), ('AMXL.MX', 'None', 'Diff_', 'T+S+R'), ('AMXL.MX', 'None', 'RelDiff_', 'T+S+R'), ('AMXL.MX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AMXL.MX', 'Transformations': [('AMXL.MX', 'None', 'CumSum_', 'T+S+R'), ('AMXL.MX', 'None', 'Diff_', 'T+S+R'), ('AMXL.MX', 'None', 'RelDiff_', 'T+S+R'), ('AMXL.MX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'AMXL.MX', 'Transformations': [('AMXL.MX', 'None', 'CumSum_', 'T+S+R'), ('AMXL.MX', 'None', 'Diff_', 'T+S+R'), ('AMXL.MX', 'None', 'RelDiff_', 'T+S+R'), ('AMXL.MX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMXL.MX', 'Model': '_AMXL.MX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMXL.MX', 'Model': '_AMXL.MX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMXL.MX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMXL.MX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['AMXL.MX'], 'Transformations': [('AMXL.MX', [('AMXL.MX', 'None', 'CumSum_', 'T+S+R'), ('AMXL.MX', 'None', 'Diff_', 'T+S+R'), ('AMXL.MX', 'None', 'RelDiff_', 'T+S+R'), ('AMXL.MX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AMXL.MX' Length=1295  Min=10.92 Max=18.66  Mean=14.738949806949813 StdDev=1.6692292100792547
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AMXL.MX' Min=0.0 Max=1.0  Mean=0.49340436782297037 StdDev=0.2156626886407308
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AMXL.MX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AMXL.MX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AMXL.MX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_AMXL.MX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0102 MAPE_Forecast=0.0129 MAPE_Test=0.01
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0102 SMAPE_Forecast=0.0129 SMAPE_Test=0.0101
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9973 MASE_Test=0.9938
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4443705416453756 CRPS_Forecast=0.41466286548107617 CRPS_Test=0.03714285714285711
INFO:pyaf.std:MODEL_L1 L1_Fit=0.15304854368932042 L1_Forecast=0.17015503875968996 L1_Test=0.11428571428571413
INFO:pyaf.std:MODEL_L2 L2_Fit=0.21855882769874233 L2_Forecast=0.23007076767711046 L2_Test=0.14461772268392867
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22040718258422093 LnQ_Forecast=0.07932979240537025 LnQ_Test=0.0011292228599170287
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.120000000000001 MedAE_Forecast=0.14000000000000057 MedAE_Test=0.09999999999999964
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5568475452196383
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _AMXL.MX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _AMXL.MX             T+S+R  ...  0.0102       0.0129    0.0100
1    None   CumSum_AMXL.MX             T+S+R  ...  0.0105       0.0129    0.0100
2    None   CumSum_AMXL.MX             T+S+R  ...  0.0105       0.0129    0.0100
3    None     Diff_AMXL.MX             T+S+R  ...  0.0102       0.0129    0.0100
4    None     Diff_AMXL.MX             T+S+R  ...  0.0102       0.0129    0.0100
..    ...              ...               ...  ...     ...          ...       ...
203  None  RelDiff_AMXL.MX             T+S+R  ...  0.6040       6.9700  173.1994
204  None  RelDiff_AMXL.MX             T+S+R  ...  1.2746       7.5457   12.2175
205  None  RelDiff_AMXL.MX             T+S+R  ...  1.2746       7.5457   12.2175
206  None  RelDiff_AMXL.MX             T+S+R  ...  1.0581       9.0552   16.8877
207  None  RelDiff_AMXL.MX             T+S+R  ...  1.0581       9.0552   16.8877

[208 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _AMXL.MX             T+S+R  ...  0.0102       0.0129     0.01
1  None  CumSum_AMXL.MX             T+S+R  ...  0.0105       0.0129     0.01
2  None  CumSum_AMXL.MX             T+S+R  ...  0.0105       0.0129     0.01
3  None    Diff_AMXL.MX             T+S+R  ...  0.0102       0.0129     0.01
4  None    Diff_AMXL.MX             T+S+R  ...  0.0102       0.0129     0.01

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AMXL.MX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['AMXL.MX'], 'Horizon': 7}))
7 0    11.65
1    11.88
2    11.86
3    11.60
4    11.58
5    11.53
6    11.35
Name: AMXL.MX, dtype: float64
7 0    11.63
1    11.63
2    11.63
3    11.63
4    11.63
5    11.63
6    11.63
Name: AMXL.MX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AMXL.MX AMXL.MX [11.65, 11.88, 11.86, 11.6, 11.58, 11.53, 11.35]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AMXL.MX AMXL.MX [11.63, 11.63, 11.63, 11.63, 11.63, 11.63, 11.63]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AMXL.MX AMXL.MX 1295 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AMXL.MX AMXL.MX 12.334839820861816
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AMXL.MX AMXL.MX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AMXL.MX AMXL.MX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AMXL.MX AMXL.MX 0.0118 0.0118 1.0827
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AMXL.MX AMXL.MX 0.1371428571428575 0.17221249332479602 -0.001102231537081666
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ipc_AMXL.MX_7'
