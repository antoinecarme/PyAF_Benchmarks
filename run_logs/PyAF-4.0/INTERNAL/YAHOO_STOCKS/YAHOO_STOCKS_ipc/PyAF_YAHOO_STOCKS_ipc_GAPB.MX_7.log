BENCH_DATA YAHOO_STOCKS_ipc
TIME :  Date N= 1296 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  GAPB.MX N= 1296 H= 7 HEAD= [47.73 48.1  48.03 47.8  47.68] TAIL= [191.56 191.82 191.32 192.03 191.46]
   GAPB.MX       Date
0    47.73 2011-07-28
1    48.10 2011-07-29
2    48.03 2011-08-01
3    47.80 2011-08-02
4    47.68 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1296 entries, 0 to 1295
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   GAPB.MX  1296 non-null   float64       
 1   Date     1296 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['GAPB.MX'], 'Transformations': [('GAPB.MX', 'None', '_', 'T+S+R'), ('GAPB.MX', 'None', 'Diff_', 'T+S+R'), ('GAPB.MX', 'None', 'RelDiff_', 'T+S+R'), ('GAPB.MX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': '_GAPB.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.794, ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': '_GAPB.MX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': 'Diff_GAPB.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.522, ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': 'Diff_GAPB.MX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': 'RelDiff_GAPB.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.185, ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': 'RelDiff_GAPB.MX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': 'CumSum_GAPB.MX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.922, ('TRAINING', {'Signal': 'GAPB.MX', 'Transformation': 'CumSum_GAPB.MX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.425, ('SIGNAL_TRAINING', {'Signals': ['GAPB.MX'], 'Transformations': [('GAPB.MX', 'None', '_', 'T+S+R'), ('GAPB.MX', 'None', 'Diff_', 'T+S+R'), ('GAPB.MX', 'None', 'RelDiff_', 'T+S+R'), ('GAPB.MX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['GAPB.MX'], 'Transformations': [('GAPB.MX', [('GAPB.MX', 'None', 'CumSum_', 'T+S+R'), ('GAPB.MX', 'None', 'Diff_', 'T+S+R'), ('GAPB.MX', 'None', 'RelDiff_', 'T+S+R'), ('GAPB.MX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'GAPB.MX', 'Transformations': [('GAPB.MX', 'None', 'CumSum_', 'T+S+R'), ('GAPB.MX', 'None', 'Diff_', 'T+S+R'), ('GAPB.MX', 'None', 'RelDiff_', 'T+S+R'), ('GAPB.MX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'GAPB.MX', 'Transformations': [('GAPB.MX', 'None', 'CumSum_', 'T+S+R'), ('GAPB.MX', 'None', 'Diff_', 'T+S+R'), ('GAPB.MX', 'None', 'RelDiff_', 'T+S+R'), ('GAPB.MX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GAPB.MX', 'Model': '_GAPB.MX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GAPB.MX', 'Model': '_GAPB.MX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GAPB.MX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GAPB.MX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.231, ('FINALIZE_TRAINING', {'Signals': ['GAPB.MX'], 'Transformations': [('GAPB.MX', [('GAPB.MX', 'None', 'CumSum_', 'T+S+R'), ('GAPB.MX', 'None', 'Diff_', 'T+S+R'), ('GAPB.MX', 'None', 'RelDiff_', 'T+S+R'), ('GAPB.MX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='GAPB.MX' Length=1296  Min=44.48 Max=194.16  Mean=88.49026234567906 StdDev=38.61192422116259
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_GAPB.MX' Min=0.0 Max=1.0  Mean=0.29402901086102967 StdDev=0.2579631495267412
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_GAPB.MX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_GAPB.MX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_GAPB.MX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_GAPB.MX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0104 MAPE_Forecast=0.0118 MAPE_Test=0.0029
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0104 SMAPE_Forecast=0.0119 SMAPE_Test=0.0029
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9966 MASE_Test=0.9661
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.713472880187861 CRPS_Forecast=4.513283941632467 CRPS_Test=0.1978571428571436
INFO:pyaf.std:MODEL_L1 L1_Fit=0.7573811833171675 L1_Forecast=1.805697674418604 L1_Test=0.5571428571428539
INFO:pyaf.std:MODEL_L2 L2_Fit=1.0832698282761961 L2_Forecast=2.4138143284857474 L2_Test=0.6401562309311677
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.21530230985873455 LnQ_Forecast=0.06554513244520821 LnQ_Test=7.835460328195842e-05
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5200000000000031 MedAE_Forecast=1.375 MedAE_Test=0.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.021712987707108496
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _GAPB.MX_Lag1Trend_residue_bestCycle_byMAPE None 0.00013361838588984987 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _GAPB.MX             T+S+R  ...   0.0104       0.0118    0.0029
1    None         _GAPB.MX             T+S+R  ...   0.0104       0.0118    0.0029
2    None   CumSum_GAPB.MX             T+S+R  ...   0.0105       0.0118    0.0029
3    None     Diff_GAPB.MX             T+S+R  ...   0.0104       0.0118    0.0029
4    None     Diff_GAPB.MX             T+S+R  ...   0.0104       0.0118    0.0029
..    ...              ...               ...  ...      ...          ...       ...
211  None  RelDiff_GAPB.MX             T+S+R  ...   9.8707      89.7543  448.0278
212  None  RelDiff_GAPB.MX             T+S+R  ...   9.8707      89.7543  448.0278
213  None  RelDiff_GAPB.MX             T+S+R  ...   9.7819      90.7538  455.5443
214  None  RelDiff_GAPB.MX             T+S+R  ...   9.6872      98.9300  511.5309
215  None  RelDiff_GAPB.MX             T+S+R  ...  13.2005     146.2217  701.7965

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _GAPB.MX             T+S+R  ...  0.0104       0.0118   0.0029
1  None        _GAPB.MX             T+S+R  ...  0.0104       0.0118   0.0029
2  None  CumSum_GAPB.MX             T+S+R  ...  0.0105       0.0118   0.0029
3  None    Diff_GAPB.MX             T+S+R  ...  0.0104       0.0118   0.0029
4  None    Diff_GAPB.MX             T+S+R  ...  0.0104       0.0118   0.0029

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['GAPB.MX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.163, ('FORECASTING', {'Signals': ['GAPB.MX'], 'Horizon': 7}))
7 0    193.01
1    195.83
2    197.95
3    196.22
4    191.26
5    190.75
6    189.96
Name: GAPB.MX, dtype: float64
7 0    191.46
1    191.46
2    191.46
3    191.46
4    191.46
5    191.46
6    191.46
Name: GAPB.MX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_GAPB.MX GAPB.MX [193.01, 195.83, 197.95, 196.22, 191.26, 190.75, 189.96]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_GAPB.MX GAPB.MX [191.46, 191.46, 191.46, 191.46, 191.46, 191.46, 191.46]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_GAPB.MX GAPB.MX 1296 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_GAPB.MX GAPB.MX 12.920670747756958
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_GAPB.MX GAPB.MX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_GAPB.MX GAPB.MX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_GAPB.MX GAPB.MX 0.0143 0.0144 1.298
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_GAPB.MX GAPB.MX 2.797142857142855 3.567135705696812 -0.5370702355357801
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ipc_GAPB.MX_7'
