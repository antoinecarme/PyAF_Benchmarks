BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  NMS.AX N= 1299 H= 7 HEAD= [0.00117 0.0012  0.00117 0.0011  0.0011 ] TAIL= [1.1  1.1  1.14 1.14 1.14]
    NMS.AX       Date
0  0.00117 2011-07-28
1  0.00120 2011-07-29
2  0.00117 2011-08-01
3  0.00110 2011-08-02
4  0.00110 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NMS.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NMS.AX'], 'Transformations': [('NMS.AX', 'None', '_', 'T+S+R'), ('NMS.AX', 'None', 'Diff_', 'T+S+R'), ('NMS.AX', 'None', 'RelDiff_', 'T+S+R'), ('NMS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': '_NMS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.267, ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': '_NMS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': 'Diff_NMS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.499, ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': 'Diff_NMS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': 'RelDiff_NMS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.169, ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': 'RelDiff_NMS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': 'CumSum_NMS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.773, ('TRAINING', {'Signal': 'NMS.AX', 'Transformation': 'CumSum_NMS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.71, ('SIGNAL_TRAINING', {'Signals': ['NMS.AX'], 'Transformations': [('NMS.AX', 'None', '_', 'T+S+R'), ('NMS.AX', 'None', 'Diff_', 'T+S+R'), ('NMS.AX', 'None', 'RelDiff_', 'T+S+R'), ('NMS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NMS.AX'], 'Transformations': [('NMS.AX', [('NMS.AX', 'None', 'CumSum_', 'T+S+R'), ('NMS.AX', 'None', 'Diff_', 'T+S+R'), ('NMS.AX', 'None', 'RelDiff_', 'T+S+R'), ('NMS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NMS.AX', 'Transformations': [('NMS.AX', 'None', 'CumSum_', 'T+S+R'), ('NMS.AX', 'None', 'Diff_', 'T+S+R'), ('NMS.AX', 'None', 'RelDiff_', 'T+S+R'), ('NMS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'NMS.AX', 'Transformations': [('NMS.AX', 'None', 'CumSum_', 'T+S+R'), ('NMS.AX', 'None', 'Diff_', 'T+S+R'), ('NMS.AX', 'None', 'RelDiff_', 'T+S+R'), ('NMS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NMS.AX', 'Model': '_NMS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NMS.AX', 'Model': '_NMS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NMS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NMS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.228, ('FINALIZE_TRAINING', {'Signals': ['NMS.AX'], 'Transformations': [('NMS.AX', [('NMS.AX', 'None', 'CumSum_', 'T+S+R'), ('NMS.AX', 'None', 'Diff_', 'T+S+R'), ('NMS.AX', 'None', 'RelDiff_', 'T+S+R'), ('NMS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NMS.AX' Length=1299  Min=0.00063 Max=1.45  Mean=0.4888611393379527 StdDev=0.589340943533627
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NMS.AX' Min=0.0 Max=1.0  Mean=0.33685748934913373 StdDev=0.4066186988371688
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NMS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NMS.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NMS.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_NMS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0265 MAPE_Forecast=0.0137 MAPE_Test=0.0183
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0281 SMAPE_Forecast=0.0131 SMAPE_Test=0.0187
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9961 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.12619743167575279 CRPS_Forecast=0.05360738678173973 CRPS_Test=0.023571428571428577
INFO:pyaf.std:MODEL_L1 L1_Fit=0.0070032817037754104 L1_Forecast=0.013552123552123572 L1_Test=0.020000000000000018
INFO:pyaf.std:MODEL_L2 L2_Fit=0.05082852243983914 L2_Forecast=0.046838257800887455 L2_Test=0.03070597894314955
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=25.535962354542605 LnQ_Forecast=0.5328250359481986 LnQ_Test=0.0058203733991197635
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=1.1102230246251565e-16
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0003725756708086962
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _NMS.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE    TestMAPE
0    None         _NMS.AX  ...       0.0137      0.0183
1    None   CumSum_NMS.AX  ...       0.0137      0.0183
2    None     Diff_NMS.AX  ...       0.0137      0.0183
3    None         _NMS.AX  ...       0.0137      0.0183
4    None         _NMS.AX  ...       0.0137      0.0183
..    ...             ...  ...          ...         ...
163  None  RelDiff_NMS.AX  ...   49549.3258  49386.9510
164  None  RelDiff_NMS.AX  ...   49549.3258  49386.9510
165  None  RelDiff_NMS.AX  ...   49549.3258  49386.9510
166  None  RelDiff_NMS.AX  ...   49549.3258  49386.9510
167  None  RelDiff_NMS.AX  ...   49549.3258  49386.9510

[168 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _NMS.AX             T+S+R  ...  0.0265       0.0137   0.0183
1  None  CumSum_NMS.AX             T+S+R  ...  0.0269       0.0137   0.0183
2  None    Diff_NMS.AX             T+S+R  ...  0.0265       0.0137   0.0183
3  None        _NMS.AX             T+S+R  ...  0.0265       0.0137   0.0183
4  None        _NMS.AX             T+S+R  ...  0.0265       0.0137   0.0183

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NMS.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['NMS.AX'], 'Horizon': 7}))
7 0    1.140
1    1.140
2    1.290
3    1.290
4    1.290
5    1.295
6    1.295
Name: NMS.AX, dtype: float64
7 0    1.14
1    1.14
2    1.14
3    1.14
4    1.14
5    1.14
6    1.14
Name: NMS.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NMS.AX NMS.AX [1.14, 1.14, 1.29, 1.29, 1.29, 1.295, 1.295]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NMS.AX NMS.AX [1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NMS.AX NMS.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NMS.AX NMS.AX 10.204536199569702
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NMS.AX NMS.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NMS.AX NMS.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NMS.AX NMS.AX 0.084 0.0893 4.2028
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NMS.AX NMS.AX 0.10857142857142864 0.1284801263119821 -2.4977297191420065
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_NMS.AX_7'
