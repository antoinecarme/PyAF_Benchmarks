BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  DXS.AX N= 1299 H= 7 HEAD= [0.865 0.865 0.87  0.87  0.85 ] TAIL= [9.29 9.37 9.17 9.32 9.36]
   DXS.AX       Date
0   0.865 2011-07-28
1   0.865 2011-07-29
2   0.870 2011-08-01
3   0.870 2011-08-02
4   0.850 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   DXS.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DXS.AX'], 'Transformations': [('DXS.AX', 'None', '_', 'T+S+R'), ('DXS.AX', 'None', 'Diff_', 'T+S+R'), ('DXS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DXS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': '_DXS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.383, ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': '_DXS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': 'Diff_DXS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.162, ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': 'Diff_DXS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': 'RelDiff_DXS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.188, ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': 'RelDiff_DXS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': 'CumSum_DXS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.74, ('TRAINING', {'Signal': 'DXS.AX', 'Transformation': 'CumSum_DXS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.475, ('SIGNAL_TRAINING', {'Signals': ['DXS.AX'], 'Transformations': [('DXS.AX', 'None', '_', 'T+S+R'), ('DXS.AX', 'None', 'Diff_', 'T+S+R'), ('DXS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DXS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DXS.AX'], 'Transformations': [('DXS.AX', [('DXS.AX', 'None', 'CumSum_', 'T+S+R'), ('DXS.AX', 'None', 'Diff_', 'T+S+R'), ('DXS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DXS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DXS.AX', 'Transformations': [('DXS.AX', 'None', 'CumSum_', 'T+S+R'), ('DXS.AX', 'None', 'Diff_', 'T+S+R'), ('DXS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DXS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'DXS.AX', 'Transformations': [('DXS.AX', 'None', 'CumSum_', 'T+S+R'), ('DXS.AX', 'None', 'Diff_', 'T+S+R'), ('DXS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DXS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DXS.AX', 'Model': '_DXS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DXS.AX', 'Model': '_DXS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DXS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DXS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.217, ('FINALIZE_TRAINING', {'Signals': ['DXS.AX'], 'Transformations': [('DXS.AX', [('DXS.AX', 'None', 'CumSum_', 'T+S+R'), ('DXS.AX', 'None', 'Diff_', 'T+S+R'), ('DXS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DXS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DXS.AX' Length=1299  Min=0.75 Max=9.39  Mean=3.302578906851424 StdDev=3.1987232357976416
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DXS.AX' Min=0.0 Max=1.0  Mean=0.2954373734781741 StdDev=0.37022259673583846
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DXS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DXS.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_DXS.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_DXS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0116 MAPE_Forecast=0.0111 MAPE_Test=0.0109
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0122 SMAPE_Forecast=0.0111 SMAPE_Test=0.0109
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0034 MASE_Test=1.0677
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5085265858256484 CRPS_Forecast=0.1479487622075857 CRPS_Test=0.0264285714285715
INFO:pyaf.std:MODEL_L1 L1_Fit=0.0286592449177154 L1_Forecast=0.08594594594594597 L1_Test=0.10142857142857155
INFO:pyaf.std:MODEL_L2 L2_Fit=0.19958069550290924 L2_Forecast=0.1099631387870131 L2_Test=0.11704699910719628
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.511593289270168 LnQ_Forecast=0.052494064788396536 LnQ_Test=0.0011126789574468143
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.010000000000000009 MedAE_Forecast=0.07999999999999918 MedAE_Test=0.08000000000000007
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.013310185185185184
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _DXS.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None         _DXS.AX  ...  1.100000e-02  1.090000e-02
1    None         _DXS.AX  ...  1.110000e-02  1.090000e-02
2    None   CumSum_DXS.AX  ...  1.110000e-02  1.090000e-02
3    None     Diff_DXS.AX  ...  1.110000e-02  1.090000e-02
4    None  RelDiff_DXS.AX  ...  1.110000e-02  1.090000e-02
..    ...             ...  ...           ...           ...
203  None  RelDiff_DXS.AX  ...  1.320250e+06  1.234349e+06
204  None  RelDiff_DXS.AX  ...  1.320407e+06  1.234349e+06
205  None  RelDiff_DXS.AX  ...  1.323485e+06  1.234349e+06
206  None  RelDiff_DXS.AX  ...  1.330072e+06  1.234349e+06
207  None  RelDiff_DXS.AX  ...  1.343560e+06  1.234349e+06

[208 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _DXS.AX             T+S+R  ...  0.0114       0.0110   0.0109
1  None         _DXS.AX             T+S+R  ...  0.0116       0.0111   0.0109
2  None   CumSum_DXS.AX             T+S+R  ...  0.0117       0.0111   0.0109
3  None     Diff_DXS.AX             T+S+R  ...  0.0116       0.0111   0.0109
4  None  RelDiff_DXS.AX             T+S+R  ...  0.0148       0.0111   0.0109

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DXS.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['DXS.AX'], 'Horizon': 7}))
7 0    9.43
1    9.46
2    9.49
3    9.60
4    9.64
5    9.59
6    9.72
Name: DXS.AX, dtype: float64
7 0    9.36
1    9.36
2    9.36
3    9.36
4    9.36
5    9.36
6    9.36
Name: DXS.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DXS.AX DXS.AX [9.43, 9.46, 9.49, 9.6, 9.64, 9.59, 9.72]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DXS.AX DXS.AX [9.36, 9.36, 9.36, 9.36, 9.36, 9.36, 9.36]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DXS.AX DXS.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DXS.AX DXS.AX 11.956238269805908
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DXS.AX DXS.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DXS.AX DXS.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DXS.AX DXS.AX 0.021 0.0212 3.0989
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DXS.AX DXS.AX 0.2014285714285722 0.2237026087082077 -4.284698267889491
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_DXS.AX_7'
