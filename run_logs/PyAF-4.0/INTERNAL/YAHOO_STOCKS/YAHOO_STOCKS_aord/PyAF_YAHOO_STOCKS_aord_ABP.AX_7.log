BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  ABP.AX N= 1297 H= 7 HEAD= [2.1018  2.08188 2.11176 2.11176 2.07192] TAIL= [3.11 3.15 3.11 3.14 3.16]
    ABP.AX       Date
0  2.10180 2011-07-28
1  2.08188 2011-07-29
2  2.11176 2011-08-01
3  2.11176 2011-08-02
4  2.07192 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ABP.AX  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ABP.AX'], 'Transformations': [('ABP.AX', 'None', '_', 'T+S+R'), ('ABP.AX', 'None', 'Diff_', 'T+S+R'), ('ABP.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABP.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': '_ABP.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.403, ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': '_ABP.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': 'Diff_ABP.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.506, ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': 'Diff_ABP.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': 'RelDiff_ABP.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.193, ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': 'RelDiff_ABP.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': 'CumSum_ABP.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.84, ('TRAINING', {'Signal': 'ABP.AX', 'Transformation': 'CumSum_ABP.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.943, ('SIGNAL_TRAINING', {'Signals': ['ABP.AX'], 'Transformations': [('ABP.AX', 'None', '_', 'T+S+R'), ('ABP.AX', 'None', 'Diff_', 'T+S+R'), ('ABP.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABP.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ABP.AX'], 'Transformations': [('ABP.AX', [('ABP.AX', 'None', 'CumSum_', 'T+S+R'), ('ABP.AX', 'None', 'Diff_', 'T+S+R'), ('ABP.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABP.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ABP.AX', 'Transformations': [('ABP.AX', 'None', 'CumSum_', 'T+S+R'), ('ABP.AX', 'None', 'Diff_', 'T+S+R'), ('ABP.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABP.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'ABP.AX', 'Transformations': [('ABP.AX', 'None', 'CumSum_', 'T+S+R'), ('ABP.AX', 'None', 'Diff_', 'T+S+R'), ('ABP.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABP.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ABP.AX', 'Model': '_ABP.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ABP.AX', 'Model': '_ABP.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ABP.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.263, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ABP.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.301, ('FINALIZE_TRAINING', {'Signals': ['ABP.AX'], 'Transformations': [('ABP.AX', [('ABP.AX', 'None', 'CumSum_', 'T+S+R'), ('ABP.AX', 'None', 'Diff_', 'T+S+R'), ('ABP.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABP.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ABP.AX' Length=1297  Min=1.79301 Max=3.35  Mean=2.475559028527369 StdDev=0.45310914714810197
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ABP.AX' Min=0.0 Max=1.0  Mean=0.4383772718690362 StdDev=0.2910160933262913
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ABP.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ABP.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ABP.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ABP.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0099 MAPE_Forecast=0.011 MAPE_Test=0.0123
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0099 SMAPE_Forecast=0.011 SMAPE_Test=0.0124
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9973 MASE_Test=1.3613
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.10561593437372499 CRPS_Forecast=0.03413207660738714 CRPS_Test=0.013571428571428599
INFO:pyaf.std:MODEL_L1 L1_Fit=0.023154748062015517 L1_Forecast=0.03403100775193797 L1_Test=0.03857142857142864
INFO:pyaf.std:MODEL_L2 L2_Fit=0.03292487629837911 L2_Forecast=0.045486176450236115 L2_Test=0.04705619740571606
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.19739048717991084 LnQ_Forecast=0.05615928463501273 LnQ_Test=0.0016017604274671472
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.019919999999999938 MedAE_Forecast=0.029999999999999805 MedAE_Test=0.03000000000000025
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.19832497318544107
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ABP.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE      TestMAPE
0    None         _ABP.AX  ...       0.0110  1.230000e-02
1    None   CumSum_ABP.AX  ...       0.0110  1.230000e-02
2    None     Diff_ABP.AX  ...       0.0110  1.230000e-02
3    None     Diff_ABP.AX  ...       0.0110  1.230000e-02
4    None  RelDiff_ABP.AX  ...       0.0110  1.230000e-02
..    ...             ...  ...          ...           ...
211  None  RelDiff_ABP.AX  ...  155488.1310  1.878860e+06
212  None  RelDiff_ABP.AX  ...  353518.9808  1.247006e+06
213  None  RelDiff_ABP.AX  ...  353518.9808  1.247006e+06
214  None  RelDiff_ABP.AX  ...  558538.0378  4.263896e+06
215  None  RelDiff_ABP.AX  ...  558538.0378  4.263896e+06

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _ABP.AX             T+S+R  ...  0.0099        0.011   0.0123
1  None   CumSum_ABP.AX             T+S+R  ...  0.0100        0.011   0.0123
2  None     Diff_ABP.AX             T+S+R  ...  0.0099        0.011   0.0123
3  None     Diff_ABP.AX             T+S+R  ...  0.0099        0.011   0.0123
4  None  RelDiff_ABP.AX             T+S+R  ...  0.0316        0.011   0.0123

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ABP.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['ABP.AX'], 'Horizon': 7}))
7 0    3.18
1    3.19
2    3.15
3    3.18
4    3.19
5    3.18
6    3.17
Name: ABP.AX, dtype: float64
7 0    3.16
1    3.16
2    3.16
3    3.16
4    3.16
5    3.16
6    3.16
Name: ABP.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ABP.AX ABP.AX [3.18, 3.19, 3.15, 3.18, 3.19, 3.18, 3.17]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ABP.AX ABP.AX [3.16, 3.16, 3.16, 3.16, 3.16, 3.16, 3.16]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ABP.AX ABP.AX 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ABP.AX ABP.AX 12.494895935058594
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ABP.AX ABP.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ABP.AX ABP.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ABP.AX ABP.AX 0.0063 0.0063 1.0909
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ABP.AX ABP.AX 0.019999999999999955 0.021380899352993882 -1.7999997549999889
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_ABP.AX_7'
