BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  DWS.AX N= 1299 H= 7 HEAD= [1.46  1.47  1.445 1.445 1.4  ] TAIL= [1.12 1.13 1.14 1.15 1.16]
   DWS.AX       Date
0   1.460 2011-07-28
1   1.470 2011-07-29
2   1.445 2011-08-01
3   1.445 2011-08-02
4   1.400 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   DWS.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DWS.AX'], 'Transformations': [('DWS.AX', 'None', '_', 'T+S+R'), ('DWS.AX', 'None', 'Diff_', 'T+S+R'), ('DWS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DWS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': '_DWS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.446, ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': '_DWS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': 'Diff_DWS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.58, ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': 'Diff_DWS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': 'RelDiff_DWS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.877, ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': 'RelDiff_DWS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': 'CumSum_DWS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.531, ('TRAINING', {'Signal': 'DWS.AX', 'Transformation': 'CumSum_DWS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.437, ('SIGNAL_TRAINING', {'Signals': ['DWS.AX'], 'Transformations': [('DWS.AX', 'None', '_', 'T+S+R'), ('DWS.AX', 'None', 'Diff_', 'T+S+R'), ('DWS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DWS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DWS.AX'], 'Transformations': [('DWS.AX', [('DWS.AX', 'None', 'CumSum_', 'T+S+R'), ('DWS.AX', 'None', 'Diff_', 'T+S+R'), ('DWS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DWS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DWS.AX', 'Transformations': [('DWS.AX', 'None', 'CumSum_', 'T+S+R'), ('DWS.AX', 'None', 'Diff_', 'T+S+R'), ('DWS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DWS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'DWS.AX', 'Transformations': [('DWS.AX', 'None', 'CumSum_', 'T+S+R'), ('DWS.AX', 'None', 'Diff_', 'T+S+R'), ('DWS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DWS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DWS.AX', 'Model': '_DWS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DWS.AX', 'Model': '_DWS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DWS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DWS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['DWS.AX'], 'Transformations': [('DWS.AX', [('DWS.AX', 'None', 'CumSum_', 'T+S+R'), ('DWS.AX', 'None', 'Diff_', 'T+S+R'), ('DWS.AX', 'None', 'RelDiff_', 'T+S+R'), ('DWS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DWS.AX' Length=1299  Min=0.575 Max=1.74  Mean=1.2648545034642034 StdDev=0.24050061577938892
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DWS.AX' Min=0.0 Max=1.0  Mean=0.5921497883812916 StdDev=0.20643829680634224
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DWS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DWS.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_DWS.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_DWS.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0132 MAPE_Forecast=0.019 MAPE_Test=0.0088
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0132 SMAPE_Forecast=0.0191 SMAPE_Test=0.0089
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.998 MASE_Test=1.3333
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.07038938961634483 CRPS_Forecast=0.03580988453327277 CRPS_Test=0.006071428571428521
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01698935140367861 L1_Forecast=0.02059459459459459 L1_Test=0.009999999999999945
INFO:pyaf.std:MODEL_L2 L2_Fit=0.024641239958240215 L2_Forecast=0.029057658032737087 L2_Test=0.012247448713915837
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.37077412008456717 LnQ_Forecast=0.1931286515638141 LnQ_Test=0.0008327502850253893
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.010000000000000009 MedAE_Forecast=0.014999999999999902 MedAE_Test=0.010000000000000009
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.759656652360515
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _DWS.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE    TestMAPE
0    None         _DWS.AX             T+S+R  ...  0.0132       0.0190      0.0088
1    None   CumSum_DWS.AX             T+S+R  ...  0.0138       0.0190      0.0088
2    None     Diff_DWS.AX             T+S+R  ...  0.0132       0.0190      0.0088
3    None     Diff_DWS.AX             T+S+R  ...  0.0132       0.0190      0.0088
4    None         _DWS.AX             T+S+R  ...  0.0132       0.0190      0.0088
..    ...             ...               ...  ...     ...          ...         ...
171  None  RelDiff_DWS.AX             T+S+R  ...  0.2780     447.0664   6241.5771
172  None  RelDiff_DWS.AX             T+S+R  ...  0.3261     566.1824   7877.8359
173  None  RelDiff_DWS.AX             T+S+R  ...  0.3669     759.6198  10688.7816
174  None  RelDiff_DWS.AX             T+S+R  ...  0.4281    1040.4402  14771.5745
175  None  RelDiff_DWS.AX             T+S+R  ...  0.4281    1040.4402  14771.5745

[176 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _DWS.AX             T+S+R  ...  0.0132        0.019   0.0088
1  None  CumSum_DWS.AX             T+S+R  ...  0.0138        0.019   0.0088
2  None    Diff_DWS.AX             T+S+R  ...  0.0132        0.019   0.0088
3  None    Diff_DWS.AX             T+S+R  ...  0.0132        0.019   0.0088
4  None        _DWS.AX             T+S+R  ...  0.0132        0.019   0.0088

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DWS.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['DWS.AX'], 'Horizon': 7}))
7 0    1.180
1    1.190
2    1.200
3    1.200
4    1.260
5    1.270
6    1.305
Name: DWS.AX, dtype: float64
7 0    1.16
1    1.16
2    1.16
3    1.16
4    1.16
5    1.16
6    1.16
Name: DWS.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DWS.AX DWS.AX [1.18, 1.19, 1.2, 1.2, 1.26, 1.27, 1.305]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DWS.AX DWS.AX [1.16, 1.16, 1.16, 1.16, 1.16, 1.16, 1.16]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DWS.AX DWS.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DWS.AX DWS.AX 10.92526650428772
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DWS.AX DWS.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DWS.AX DWS.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DWS.AX DWS.AX 0.0551 0.0573 3.3257
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DWS.AX DWS.AX 0.06928571428571433 0.0824837646362691 -2.396586832627503
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_DWS.AX_7'
