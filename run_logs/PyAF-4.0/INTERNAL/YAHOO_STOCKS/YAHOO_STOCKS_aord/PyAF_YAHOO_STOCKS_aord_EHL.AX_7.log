BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  EHL.AX N= 1299 H= 7 HEAD= [1.17 1.15 1.18 1.18 1.14] TAIL= [0.032 0.034 0.033 0.032 0.03 ]
   EHL.AX       Date
0    1.17 2011-07-28
1    1.15 2011-07-29
2    1.18 2011-08-01
3    1.18 2011-08-02
4    1.14 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   EHL.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['EHL.AX'], 'Transformations': [('EHL.AX', 'None', '_', 'T+S+R'), ('EHL.AX', 'None', 'Diff_', 'T+S+R'), ('EHL.AX', 'None', 'RelDiff_', 'T+S+R'), ('EHL.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': '_EHL.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.068, ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': '_EHL.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': 'Diff_EHL.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.734, ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': 'Diff_EHL.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': 'RelDiff_EHL.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.754, ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': 'RelDiff_EHL.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': 'CumSum_EHL.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.389, ('TRAINING', {'Signal': 'EHL.AX', 'Transformation': 'CumSum_EHL.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.947, ('SIGNAL_TRAINING', {'Signals': ['EHL.AX'], 'Transformations': [('EHL.AX', 'None', '_', 'T+S+R'), ('EHL.AX', 'None', 'Diff_', 'T+S+R'), ('EHL.AX', 'None', 'RelDiff_', 'T+S+R'), ('EHL.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['EHL.AX'], 'Transformations': [('EHL.AX', [('EHL.AX', 'None', 'CumSum_', 'T+S+R'), ('EHL.AX', 'None', 'Diff_', 'T+S+R'), ('EHL.AX', 'None', 'RelDiff_', 'T+S+R'), ('EHL.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'EHL.AX', 'Transformations': [('EHL.AX', 'None', 'CumSum_', 'T+S+R'), ('EHL.AX', 'None', 'Diff_', 'T+S+R'), ('EHL.AX', 'None', 'RelDiff_', 'T+S+R'), ('EHL.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'EHL.AX', 'Transformations': [('EHL.AX', 'None', 'CumSum_', 'T+S+R'), ('EHL.AX', 'None', 'Diff_', 'T+S+R'), ('EHL.AX', 'None', 'RelDiff_', 'T+S+R'), ('EHL.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EHL.AX', 'Model': '_EHL.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EHL.AX', 'Model': '_EHL.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EHL.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EHL.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['EHL.AX'], 'Transformations': [('EHL.AX', [('EHL.AX', 'None', 'CumSum_', 'T+S+R'), ('EHL.AX', 'None', 'Diff_', 'T+S+R'), ('EHL.AX', 'None', 'RelDiff_', 'T+S+R'), ('EHL.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='EHL.AX' Length=1299  Min=0.026 Max=1.18  Mean=0.40126020015396446 StdDev=0.35689665307968876
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_EHL.AX' Min=0.0 Max=1.0  Mean=0.3251821491802121 StdDev=0.3092691967761582
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_EHL.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_EHL.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_EHL.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_EHL.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0253 MAPE_Forecast=0.031 MAPE_Test=0.0452
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0252 SMAPE_Forecast=0.0309 SMAPE_Test=0.045
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0021 MASE_Test=1.0714
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.10046464054618638 CRPS_Forecast=0.004180452055416761 CRPS_Test=0.00035714285714285747
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01086350435624395 L1_Forecast=0.0012895752895752894 L1_Test=0.0014285714285714299
INFO:pyaf.std:MODEL_L2 L2_Fit=0.01634744962953322 L2_Forecast=0.0019030558640306967 L2_Test=0.0016035674514745478
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.3785567108447565 LnQ_Forecast=0.5578366477367984 LnQ_Test=0.018009101288179417
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0050000000000000044 MedAE_Forecast=0.0010000000000000009 MedAE_Test=0.0020000000000000018
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9913344887348353
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _EHL.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None        _EHL.AX             T+S+R  ...   0.0253       0.0310    0.0452
1    None  CumSum_EHL.AX             T+S+R  ...   0.0263       0.0310    0.0452
2    None  CumSum_EHL.AX             T+S+R  ...   0.0263       0.0310    0.0452
3    None    Diff_EHL.AX             T+S+R  ...   0.0253       0.0310    0.0452
4    None        _EHL.AX             T+S+R  ...   0.0253       0.0310    0.0452
..    ...            ...               ...  ...      ...          ...       ...
171  None  CumSum_EHL.AX             T+S+R  ...   7.1979      54.6772   23.0128
172  None  CumSum_EHL.AX             T+S+R  ...  10.0686      74.7604   13.4385
173  None  CumSum_EHL.AX             T+S+R  ...  11.4973      90.1781   37.2072
174  None  CumSum_EHL.AX             T+S+R  ...  10.7332      97.0323   35.5240
175  None  CumSum_EHL.AX             T+S+R  ...  20.1289     141.1966  162.5022

[176 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _EHL.AX             T+S+R  ...  0.0253        0.031   0.0452
1  None  CumSum_EHL.AX             T+S+R  ...  0.0263        0.031   0.0452
2  None  CumSum_EHL.AX             T+S+R  ...  0.0263        0.031   0.0452
3  None    Diff_EHL.AX             T+S+R  ...  0.0253        0.031   0.0452
4  None        _EHL.AX             T+S+R  ...  0.0253        0.031   0.0452

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['EHL.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['EHL.AX'], 'Horizon': 7}))
7 0    0.034
1    0.040
2    0.038
3    0.038
4    0.038
5    0.039
6    0.035
Name: EHL.AX, dtype: float64
7 0    0.03
1    0.03
2    0.03
3    0.03
4    0.03
5    0.03
6    0.03
Name: EHL.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_EHL.AX EHL.AX [0.034, 0.04, 0.038, 0.038, 0.038, 0.039, 0.035]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_EHL.AX EHL.AX [0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_EHL.AX EHL.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_EHL.AX EHL.AX 10.424257516860962
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_EHL.AX EHL.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_EHL.AX EHL.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_EHL.AX EHL.AX 0.1961 0.2188 3.4286
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_EHL.AX EHL.AX 0.00742857142857143 0.0076904393335398705 -13.938090429570636
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_EHL.AX_7'
