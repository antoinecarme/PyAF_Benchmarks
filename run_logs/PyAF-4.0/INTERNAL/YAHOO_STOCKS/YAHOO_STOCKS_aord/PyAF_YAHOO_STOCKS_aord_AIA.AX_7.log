BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1264 H= 7 HEAD= ['2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000' '2011-08-04T00:00:00.000000000'
 '2011-08-05T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  AIA.AX N= 1264 H= 7 HEAD= [1.83  1.81  1.845 1.82  1.77 ] TAIL= [6.6  6.48 6.34 6.43 6.63]
   AIA.AX       Date
0   1.830 2011-08-01
1   1.810 2011-08-02
2   1.845 2011-08-03
3   1.820 2011-08-04
4   1.770 2011-08-05
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1264 entries, 0 to 1263
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AIA.AX  1264 non-null   float64       
 1   Date    1264 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AIA.AX'], 'Transformations': [('AIA.AX', 'None', '_', 'T+S+R'), ('AIA.AX', 'None', 'Diff_', 'T+S+R'), ('AIA.AX', 'None', 'RelDiff_', 'T+S+R'), ('AIA.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': '_AIA.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.343, ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': '_AIA.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': 'Diff_AIA.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.443, ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': 'Diff_AIA.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': 'RelDiff_AIA.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.07, ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': 'RelDiff_AIA.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': 'CumSum_AIA.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.713, ('TRAINING', {'Signal': 'AIA.AX', 'Transformation': 'CumSum_AIA.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.571, ('SIGNAL_TRAINING', {'Signals': ['AIA.AX'], 'Transformations': [('AIA.AX', 'None', '_', 'T+S+R'), ('AIA.AX', 'None', 'Diff_', 'T+S+R'), ('AIA.AX', 'None', 'RelDiff_', 'T+S+R'), ('AIA.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AIA.AX'], 'Transformations': [('AIA.AX', [('AIA.AX', 'None', 'CumSum_', 'T+S+R'), ('AIA.AX', 'None', 'Diff_', 'T+S+R'), ('AIA.AX', 'None', 'RelDiff_', 'T+S+R'), ('AIA.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AIA.AX', 'Transformations': [('AIA.AX', 'None', 'CumSum_', 'T+S+R'), ('AIA.AX', 'None', 'Diff_', 'T+S+R'), ('AIA.AX', 'None', 'RelDiff_', 'T+S+R'), ('AIA.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'AIA.AX', 'Transformations': [('AIA.AX', 'None', 'CumSum_', 'T+S+R'), ('AIA.AX', 'None', 'Diff_', 'T+S+R'), ('AIA.AX', 'None', 'RelDiff_', 'T+S+R'), ('AIA.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AIA.AX', 'Model': '_AIA.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AIA.AX', 'Model': '_AIA.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AIA.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AIA.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['AIA.AX'], 'Transformations': [('AIA.AX', [('AIA.AX', 'None', 'CumSum_', 'T+S+R'), ('AIA.AX', 'None', 'Diff_', 'T+S+R'), ('AIA.AX', 'None', 'RelDiff_', 'T+S+R'), ('AIA.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-08-01T00:00:00.000000 TimeMax=2015-07-22T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AIA.AX' Length=1264  Min=1.7 Max=6.76  Mean=3.394802215189879 StdDev=1.2954931922621686
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AIA.AX' Min=0.0 Max=1.0  Mean=0.3349411492470104 StdDev=0.2560263225814563
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AIA.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AIA.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AIA.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_AIA.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0102 MAPE_Forecast=0.0133 MAPE_Test=0.0155
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0103 SMAPE_Forecast=0.0133 SMAPE_Test=0.0156
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9988 MASE_Test=0.9221
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.2654208431526578 CRPS_Forecast=0.16891393277310923 CRPS_Test=0.06214285714285715
INFO:pyaf.std:MODEL_L1 L1_Fit=0.03050746268656718 L1_Forecast=0.07138888888888888 L1_Test=0.10142857142857142
INFO:pyaf.std:MODEL_L2 L2_Fit=0.045270332283678105 L2_Forecast=0.09678359102690644 L2_Test=0.11382944635349353
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22418601193292348 LnQ_Forecast=0.07955333853998033 LnQ_Test=0.0021434097365377576
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.020000000000000018 MedAE_Forecast=0.05999999999999961 MedAE_Test=0.08999999999999986
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.025691699604743108
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _AIA.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _AIA.AX             T+S+R  ...   0.0102       0.0132    0.0155
1    None         _AIA.AX             T+S+R  ...   0.0104       0.0132    0.0156
2    None         _AIA.AX             T+S+R  ...   0.0102       0.0133    0.0155
3    None   CumSum_AIA.AX             T+S+R  ...   0.0103       0.0133    0.0155
4    None     Diff_AIA.AX             T+S+R  ...   0.0102       0.0133    0.0155
..    ...             ...               ...  ...      ...          ...       ...
187  None  RelDiff_AIA.AX             T+S+R  ...  10.5355     124.9114  705.9305
188  None  RelDiff_AIA.AX             T+S+R  ...   8.4818     148.3177  289.6905
189  None  RelDiff_AIA.AX             T+S+R  ...   8.4818     148.3177  289.6905
190  None  RelDiff_AIA.AX             T+S+R  ...  26.6424     165.9932  516.0496
191  None  RelDiff_AIA.AX             T+S+R  ...  26.6424     165.9932  516.0496

[192 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _AIA.AX             T+S+R  ...  0.0102       0.0132   0.0155
1  None        _AIA.AX             T+S+R  ...  0.0104       0.0132   0.0156
2  None        _AIA.AX             T+S+R  ...  0.0102       0.0133   0.0155
3  None  CumSum_AIA.AX             T+S+R  ...  0.0103       0.0133   0.0155
4  None    Diff_AIA.AX             T+S+R  ...  0.0102       0.0133   0.0155

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AIA.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['AIA.AX'], 'Horizon': 7}))
7 0    6.83
1    6.71
2    6.66
3    6.65
4    6.75
5    6.82
6    6.83
Name: AIA.AX, dtype: float64
7 0    6.63
1    6.63
2    6.63
3    6.63
4    6.63
5    6.63
6    6.63
Name: AIA.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AIA.AX AIA.AX [6.83, 6.71, 6.66, 6.65, 6.75, 6.82, 6.83]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AIA.AX AIA.AX [6.63, 6.63, 6.63, 6.63, 6.63, 6.63, 6.63]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AIA.AX AIA.AX 1264 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AIA.AX AIA.AX 11.052152633666992
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AIA.AX AIA.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AIA.AX AIA.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AIA.AX AIA.AX 0.0177 0.0179 2.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AIA.AX AIA.AX 0.12000000000000023 0.14050927778213507 -2.695187155895234
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_AIA.AX_7'
