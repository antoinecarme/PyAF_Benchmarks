BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  DOW.AX N= 1299 H= 7 HEAD= [3.9  3.83 3.91 3.98 3.86] TAIL= [4.04 4.05 4.13 4.11 4.14]
   DOW.AX       Date
0    3.90 2011-07-28
1    3.83 2011-07-29
2    3.91 2011-08-01
3    3.98 2011-08-02
4    3.86 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   DOW.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DOW.AX'], 'Transformations': [('DOW.AX', 'None', '_', 'T+S+R'), ('DOW.AX', 'None', 'Diff_', 'T+S+R'), ('DOW.AX', 'None', 'RelDiff_', 'T+S+R'), ('DOW.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': '_DOW.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.471, ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': '_DOW.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': 'Diff_DOW.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.501, ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': 'Diff_DOW.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': 'RelDiff_DOW.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.199, ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': 'RelDiff_DOW.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': 'CumSum_DOW.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.791, ('TRAINING', {'Signal': 'DOW.AX', 'Transformation': 'CumSum_DOW.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.963, ('SIGNAL_TRAINING', {'Signals': ['DOW.AX'], 'Transformations': [('DOW.AX', 'None', '_', 'T+S+R'), ('DOW.AX', 'None', 'Diff_', 'T+S+R'), ('DOW.AX', 'None', 'RelDiff_', 'T+S+R'), ('DOW.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DOW.AX'], 'Transformations': [('DOW.AX', [('DOW.AX', 'None', 'CumSum_', 'T+S+R'), ('DOW.AX', 'None', 'Diff_', 'T+S+R'), ('DOW.AX', 'None', 'RelDiff_', 'T+S+R'), ('DOW.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DOW.AX', 'Transformations': [('DOW.AX', 'None', 'CumSum_', 'T+S+R'), ('DOW.AX', 'None', 'Diff_', 'T+S+R'), ('DOW.AX', 'None', 'RelDiff_', 'T+S+R'), ('DOW.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'DOW.AX', 'Transformations': [('DOW.AX', 'None', 'CumSum_', 'T+S+R'), ('DOW.AX', 'None', 'Diff_', 'T+S+R'), ('DOW.AX', 'None', 'RelDiff_', 'T+S+R'), ('DOW.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DOW.AX', 'Model': '_DOW.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DOW.AX', 'Model': '_DOW.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DOW.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DOW.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.228, ('FINALIZE_TRAINING', {'Signals': ['DOW.AX'], 'Transformations': [('DOW.AX', [('DOW.AX', 'None', 'CumSum_', 'T+S+R'), ('DOW.AX', 'None', 'Diff_', 'T+S+R'), ('DOW.AX', 'None', 'RelDiff_', 'T+S+R'), ('DOW.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DOW.AX' Length=1299  Min=2.75 Max=5.56  Mean=4.080939183987683 StdDev=0.6673738671228477
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DOW.AX' Min=0.0 Max=1.0  Mean=0.4736438377180379 StdDev=0.23749959684087066
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DOW.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DOW.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_DOW.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_DOW.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0162 MAPE_Forecast=0.0169 MAPE_Test=0.0098
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0162 SMAPE_Forecast=0.0168 SMAPE_Test=0.0099
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0077 MASE_Test=0.8889
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.206259576094156 CRPS_Forecast=0.08944782920735862 CRPS_Test=0.03428571428571425
INFO:pyaf.std:MODEL_L1 L1_Fit=0.066621490803485 L1_Forecast=0.060540540540540554 L1_Test=0.03999999999999985
INFO:pyaf.std:MODEL_L2 L2_Fit=0.09045651669923592 L2_Forecast=0.08378129277652036 L2_Test=0.05398412465054615
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.49254935953483037 LnQ_Forecast=0.13790870601640665 LnQ_Test=0.001259427447948971
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.04999999999999982 MedAE_Forecast=0.04999999999999982 MedAE_Test=0.020000000000000018
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4092526690391459
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _DOW.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE     TestMAPE
0    None         _DOW.AX  ...       0.0169       0.0098
1    None   CumSum_DOW.AX  ...       0.0169       0.0098
2    None   CumSum_DOW.AX  ...       0.0169       0.0098
3    None     Diff_DOW.AX  ...       0.0169       0.0098
4    None     Diff_DOW.AX  ...       0.0169       0.0098
..    ...             ...  ...          ...          ...
211  None  RelDiff_DOW.AX  ...   11139.8368   78507.4738
212  None  RelDiff_DOW.AX  ...   72247.5812  193902.4945
213  None  RelDiff_DOW.AX  ...   72247.5812  193902.4945
214  None  RelDiff_DOW.AX  ...  149847.8400  990682.2347
215  None  RelDiff_DOW.AX  ...  149847.8400  990682.2347

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _DOW.AX             T+S+R  ...  0.0162       0.0169   0.0098
1  None  CumSum_DOW.AX             T+S+R  ...  0.0164       0.0169   0.0098
2  None  CumSum_DOW.AX             T+S+R  ...  0.0164       0.0169   0.0098
3  None    Diff_DOW.AX             T+S+R  ...  0.0162       0.0169   0.0098
4  None    Diff_DOW.AX             T+S+R  ...  0.0162       0.0169   0.0098

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DOW.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['DOW.AX'], 'Horizon': 7}))
7 0    4.05
1    4.03
2    4.02
3    4.09
4    4.10
5    4.15
6    4.18
Name: DOW.AX, dtype: float64
7 0    4.14
1    4.14
2    4.14
3    4.14
4    4.14
5    4.14
6    4.14
Name: DOW.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DOW.AX DOW.AX [4.05, 4.03, 4.02, 4.09, 4.1, 4.15, 4.18]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DOW.AX DOW.AX [4.14, 4.14, 4.14, 4.14, 4.14, 4.14, 4.14]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DOW.AX DOW.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DOW.AX DOW.AX 12.462705612182617
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DOW.AX DOW.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DOW.AX DOW.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DOW.AX DOW.AX 0.0162 0.016 2.0752
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DOW.AX DOW.AX 0.06571428571428571 0.07596991885890464 -0.845952994176447
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_DOW.AX_7'
