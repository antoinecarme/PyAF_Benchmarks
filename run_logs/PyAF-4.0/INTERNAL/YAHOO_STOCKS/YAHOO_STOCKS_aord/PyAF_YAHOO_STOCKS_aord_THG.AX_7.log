BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 303 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-08-01T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2012-10-03T00:00:00.000000000' '2012-10-04T00:00:00.000000000'
 '2012-10-05T00:00:00.000000000' '2012-10-08T00:00:00.000000000'
 '2012-10-09T00:00:00.000000000']
SIGNAL :  THG.AX N= 303 H= 7 HEAD= [0.55  0.545 0.55  0.525 0.52 ] TAIL= [0.8   0.8   0.79  0.79  0.805]
   THG.AX       Date
0   0.550 2011-07-28
1   0.545 2011-08-01
2   0.550 2011-08-02
3   0.525 2011-08-03
4   0.520 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 303 entries, 0 to 302
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   THG.AX  303 non-null    float64       
 1   Date    303 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 7.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['THG.AX'], 'Transformations': [('THG.AX', 'None', '_', 'T+S+R'), ('THG.AX', 'None', 'Diff_', 'T+S+R'), ('THG.AX', 'None', 'RelDiff_', 'T+S+R'), ('THG.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'THG.AX', 'Transformation': '_THG.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.844, ('TRAINING', {'Signal': 'THG.AX', 'Transformation': '_THG.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'THG.AX', 'Transformation': 'Diff_THG.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.457, ('TRAINING', {'Signal': 'THG.AX', 'Transformation': 'Diff_THG.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'THG.AX', 'Transformation': 'RelDiff_THG.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.355, ('TRAINING', {'Signal': 'THG.AX', 'Transformation': 'RelDiff_THG.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'THG.AX', 'Transformation': 'CumSum_THG.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.234, ('TRAINING', {'Signal': 'THG.AX', 'Transformation': 'CumSum_THG.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.891, ('SIGNAL_TRAINING', {'Signals': ['THG.AX'], 'Transformations': [('THG.AX', 'None', '_', 'T+S+R'), ('THG.AX', 'None', 'Diff_', 'T+S+R'), ('THG.AX', 'None', 'RelDiff_', 'T+S+R'), ('THG.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['THG.AX'], 'Transformations': [('THG.AX', [('THG.AX', 'None', 'CumSum_', 'T+S+R'), ('THG.AX', 'None', 'Diff_', 'T+S+R'), ('THG.AX', 'None', 'RelDiff_', 'T+S+R'), ('THG.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'THG.AX', 'Transformations': [('THG.AX', 'None', 'CumSum_', 'T+S+R'), ('THG.AX', 'None', 'Diff_', 'T+S+R'), ('THG.AX', 'None', 'RelDiff_', 'T+S+R'), ('THG.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'THG.AX', 'Transformations': [('THG.AX', 'None', 'CumSum_', 'T+S+R'), ('THG.AX', 'None', 'Diff_', 'T+S+R'), ('THG.AX', 'None', 'RelDiff_', 'T+S+R'), ('THG.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'THG.AX', 'Model': '_THG.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'THG.AX', 'Model': '_THG.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'THG.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'THG.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('FINALIZE_TRAINING', {'Signals': ['THG.AX'], 'Transformations': [('THG.AX', [('THG.AX', 'None', 'CumSum_', 'T+S+R'), ('THG.AX', 'None', 'Diff_', 'T+S+R'), ('THG.AX', 'None', 'RelDiff_', 'T+S+R'), ('THG.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2012-07-06T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='THG.AX' Length=303  Min=0.45 Max=0.81  Mean=0.6271980198019808 StdDev=0.11925370407946613
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_THG.AX' Min=0.0 Max=1.0  Mean=0.4922167216721682 StdDev=0.3312602891096281
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_THG.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_THG.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_THG.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_THG.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.014 MAPE_Forecast=0.0057 MAPE_Test=0.0045
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0141 SMAPE_Forecast=0.0057 SMAPE_Test=0.0045
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9958 MASE_Forecast=1.0428 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.02488976071784646 CRPS_Forecast=0.00810385714285715 CRPS_Test=0.0014285714285714299
INFO:pyaf.std:MODEL_L1 L1_Fit=0.0077754237288135625 L1_Forecast=0.004383333333333337 L1_Test=0.003571428571428575
INFO:pyaf.std:MODEL_L2 L2_Fit=0.015380071851896259 L2_Forecast=0.00956643437580935 L2_Test=0.006813851438692475
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.16406141344977532 LnQ_Forecast=0.009372593660855072 LnQ_Test=0.0005120167304949088
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0050000000000000044 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.27777777777777785
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _THG.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE     TestMAPE
0    None         _THG.AX  ...       0.0057       0.0045
1    None   CumSum_THG.AX  ...       0.0057       0.0045
2    None     Diff_THG.AX  ...       0.0057       0.0045
3    None     Diff_THG.AX  ...       0.0057       0.0045
4    None  RelDiff_THG.AX  ...       0.0057       0.0045
..    ...             ...  ...          ...          ...
187  None  RelDiff_THG.AX  ...     542.9931    7946.2807
188  None  RelDiff_THG.AX  ...    1687.4054     183.3179
189  None  RelDiff_THG.AX  ...    1687.4054     183.3179
190  None  RelDiff_THG.AX  ...   26983.5284   90863.4117
191  None  RelDiff_THG.AX  ...   27358.7541  190452.1148

[192 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _THG.AX             T+S+R  ...  0.0140       0.0057   0.0045
1  None   CumSum_THG.AX             T+S+R  ...  0.0147       0.0057   0.0045
2  None     Diff_THG.AX             T+S+R  ...  0.0140       0.0057   0.0045
3  None     Diff_THG.AX             T+S+R  ...  0.0140       0.0057   0.0045
4  None  RelDiff_THG.AX             T+S+R  ...  0.0427       0.0057   0.0045

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['THG.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.122, ('FORECASTING', {'Signals': ['THG.AX'], 'Horizon': 7}))
7 0    0.795
1    0.795
2    0.795
3    0.795
4    0.795
5    0.795
6    0.795
Name: THG.AX, dtype: float64
7 0    0.805
1    0.805
2    0.805
3    0.805
4    0.805
5    0.805
6    0.805
Name: THG.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_THG.AX THG.AX [0.795, 0.795, 0.795, 0.795, 0.795, 0.795, 0.795]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_THG.AX THG.AX [0.805, 0.805, 0.805, 0.805, 0.805, 0.805, 0.805]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_THG.AX THG.AX 303 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_THG.AX THG.AX 9.297554731369019
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_THG.AX THG.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_THG.AX THG.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_THG.AX THG.AX 0.0126 0.0125 100000000.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_THG.AX THG.AX 0.010000000000000009 0.010000000000000009 -6999999.000000011
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_THG.AX_7'
