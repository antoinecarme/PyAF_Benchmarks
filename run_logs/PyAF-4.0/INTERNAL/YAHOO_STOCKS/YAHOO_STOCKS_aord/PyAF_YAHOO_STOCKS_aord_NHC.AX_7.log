BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  NHC.AX N= 1299 H= 7 HEAD= [5.35 5.37 5.44 5.35 5.23] TAIL= [1.575 1.705 1.73  1.705 1.715]
   NHC.AX       Date
0    5.35 2011-07-28
1    5.37 2011-07-29
2    5.44 2011-08-01
3    5.35 2011-08-02
4    5.23 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NHC.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NHC.AX'], 'Transformations': [('NHC.AX', 'None', '_', 'T+S+R'), ('NHC.AX', 'None', 'Diff_', 'T+S+R'), ('NHC.AX', 'None', 'RelDiff_', 'T+S+R'), ('NHC.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': '_NHC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.343, ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': '_NHC.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': 'Diff_NHC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.526, ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': 'Diff_NHC.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': 'RelDiff_NHC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.952, ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': 'RelDiff_NHC.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': 'CumSum_NHC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.463, ('TRAINING', {'Signal': 'NHC.AX', 'Transformation': 'CumSum_NHC.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.286, ('SIGNAL_TRAINING', {'Signals': ['NHC.AX'], 'Transformations': [('NHC.AX', 'None', '_', 'T+S+R'), ('NHC.AX', 'None', 'Diff_', 'T+S+R'), ('NHC.AX', 'None', 'RelDiff_', 'T+S+R'), ('NHC.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NHC.AX'], 'Transformations': [('NHC.AX', [('NHC.AX', 'None', 'CumSum_', 'T+S+R'), ('NHC.AX', 'None', 'Diff_', 'T+S+R'), ('NHC.AX', 'None', 'RelDiff_', 'T+S+R'), ('NHC.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NHC.AX', 'Transformations': [('NHC.AX', 'None', 'CumSum_', 'T+S+R'), ('NHC.AX', 'None', 'Diff_', 'T+S+R'), ('NHC.AX', 'None', 'RelDiff_', 'T+S+R'), ('NHC.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'NHC.AX', 'Transformations': [('NHC.AX', 'None', 'CumSum_', 'T+S+R'), ('NHC.AX', 'None', 'Diff_', 'T+S+R'), ('NHC.AX', 'None', 'RelDiff_', 'T+S+R'), ('NHC.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NHC.AX', 'Model': '_NHC.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NHC.AX', 'Model': '_NHC.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NHC.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NHC.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.228, ('FINALIZE_TRAINING', {'Signals': ['NHC.AX'], 'Transformations': [('NHC.AX', [('NHC.AX', 'None', 'CumSum_', 'T+S+R'), ('NHC.AX', 'None', 'Diff_', 'T+S+R'), ('NHC.AX', 'None', 'RelDiff_', 'T+S+R'), ('NHC.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NHC.AX' Length=1299  Min=1.21 Max=6.54  Mean=3.3493956889915304 StdDev=1.3163504119118927
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NHC.AX' Min=0.0 Max=1.0  Mean=0.40138755891023137 StdDev=0.24697005852005532
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NHC.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NHC.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NHC.AX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_NHC.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0129 MAPE_Forecast=0.0196 MAPE_Test=0.0323
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0129 SMAPE_Forecast=0.0196 SMAPE_Test=0.033
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0009 MASE_Test=0.9932
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.3314423090640444 CRPS_Forecast=0.06454567431296843 CRPS_Test=0.06107142857142859
INFO:pyaf.std:MODEL_L1 L1_Fit=0.04692158760890612 L1_Forecast=0.0322007722007722 L1_Test=0.052142857142857144
INFO:pyaf.std:MODEL_L2 L2_Fit=0.06885876506047314 L2_Forecast=0.043741518758731536 L2_Test=0.0687386354243376
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.34135424585709345 LnQ_Forecast=0.18359441111704403 LnQ_Test=0.013245019161519107
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.03999999999999959 MedAE_Forecast=0.02499999999999991 MedAE_Test=0.02499999999999991
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7767354596622889
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _NHC.AX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None        _NHC.AX             T+S+R  ...  0.0129       0.0196   0.0323
1    None        _NHC.AX             T+S+R  ...  0.0129       0.0196   0.0323
2    None  CumSum_NHC.AX             T+S+R  ...  0.0137       0.0196   0.0323
3    None  CumSum_NHC.AX             T+S+R  ...  0.0137       0.0196   0.0323
4    None    Diff_NHC.AX             T+S+R  ...  0.0129       0.0196   0.0323
..    ...            ...               ...  ...     ...          ...      ...
187  None  CumSum_NHC.AX             T+S+R  ...  1.3598       3.0842   1.3413
188  None  CumSum_NHC.AX             T+S+R  ...  1.5131       3.9881   1.4291
189  None  CumSum_NHC.AX             T+S+R  ...  1.7450       4.9626   1.0315
190  None  CumSum_NHC.AX             T+S+R  ...  2.0065       4.9821   0.5156
191  None  CumSum_NHC.AX             T+S+R  ...  3.0822       6.7179   7.9983

[192 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _NHC.AX             T+S+R  ...  0.0129       0.0196   0.0323
1  None        _NHC.AX             T+S+R  ...  0.0129       0.0196   0.0323
2  None  CumSum_NHC.AX             T+S+R  ...  0.0137       0.0196   0.0323
3  None  CumSum_NHC.AX             T+S+R  ...  0.0137       0.0196   0.0323
4  None    Diff_NHC.AX             T+S+R  ...  0.0129       0.0196   0.0323

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NHC.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('FORECASTING', {'Signals': ['NHC.AX'], 'Horizon': 7}))
7 0    1.670
1    1.655
2    1.615
3    1.545
4    1.670
5    1.640
6    1.615
Name: NHC.AX, dtype: float64
7 0    1.715
1    1.715
2    1.715
3    1.715
4    1.715
5    1.715
6    1.715
Name: NHC.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NHC.AX NHC.AX [1.67, 1.655, 1.615, 1.545, 1.67, 1.64, 1.615]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NHC.AX NHC.AX [1.715, 1.715, 1.715, 1.715, 1.715, 1.715, 1.715]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NHC.AX NHC.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NHC.AX NHC.AX 11.809001684188843
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NHC.AX NHC.AX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NHC.AX NHC.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NHC.AX NHC.AX 0.0528 0.0511 1.6721
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NHC.AX NHC.AX 0.08500000000000012 0.09424512113177466 -4.359913746897308
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_NHC.AX_7'
