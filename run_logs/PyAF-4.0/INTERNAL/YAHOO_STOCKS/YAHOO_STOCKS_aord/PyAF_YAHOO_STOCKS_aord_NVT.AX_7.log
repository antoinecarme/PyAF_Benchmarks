BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  NVT.AX N= 1299 H= 7 HEAD= [3.78 3.77 3.85 3.75 3.52] TAIL= [5.61 5.66 5.68 5.79 5.79]
   NVT.AX       Date
0    3.78 2011-07-28
1    3.77 2011-07-29
2    3.85 2011-08-01
3    3.75 2011-08-02
4    3.52 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NVT.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NVT.AX'], 'Transformations': [('NVT.AX', 'None', '_', 'T+S+R'), ('NVT.AX', 'None', 'Diff_', 'T+S+R'), ('NVT.AX', 'None', 'RelDiff_', 'T+S+R'), ('NVT.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': '_NVT.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.234, ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': '_NVT.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': 'Diff_NVT.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.003, ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': 'Diff_NVT.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': 'RelDiff_NVT.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.113, ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': 'RelDiff_NVT.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': 'CumSum_NVT.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.731, ('TRAINING', {'Signal': 'NVT.AX', 'Transformation': 'CumSum_NVT.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.084, ('SIGNAL_TRAINING', {'Signals': ['NVT.AX'], 'Transformations': [('NVT.AX', 'None', '_', 'T+S+R'), ('NVT.AX', 'None', 'Diff_', 'T+S+R'), ('NVT.AX', 'None', 'RelDiff_', 'T+S+R'), ('NVT.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NVT.AX'], 'Transformations': [('NVT.AX', [('NVT.AX', 'None', 'CumSum_', 'T+S+R'), ('NVT.AX', 'None', 'Diff_', 'T+S+R'), ('NVT.AX', 'None', 'RelDiff_', 'T+S+R'), ('NVT.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NVT.AX', 'Transformations': [('NVT.AX', 'None', 'CumSum_', 'T+S+R'), ('NVT.AX', 'None', 'Diff_', 'T+S+R'), ('NVT.AX', 'None', 'RelDiff_', 'T+S+R'), ('NVT.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'NVT.AX', 'Transformations': [('NVT.AX', 'None', 'CumSum_', 'T+S+R'), ('NVT.AX', 'None', 'Diff_', 'T+S+R'), ('NVT.AX', 'None', 'RelDiff_', 'T+S+R'), ('NVT.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NVT.AX', 'Model': '_NVT.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NVT.AX', 'Model': '_NVT.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NVT.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.189, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NVT.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['NVT.AX'], 'Transformations': [('NVT.AX', [('NVT.AX', 'None', 'CumSum_', 'T+S+R'), ('NVT.AX', 'None', 'Diff_', 'T+S+R'), ('NVT.AX', 'None', 'RelDiff_', 'T+S+R'), ('NVT.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NVT.AX' Length=1299  Min=2.85 Max=7.81  Mean=4.930153964588147 StdDev=1.067197653107598
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NVT.AX' Min=0.0 Max=1.0  Mean=0.41938587995728693 StdDev=0.21516081715879048
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NVT.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NVT.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NVT.AX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_NVT.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0142 MAPE_Forecast=0.0113 MAPE_Test=0.0078
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0141 SMAPE_Forecast=0.0113 SMAPE_Test=0.0078
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0021 MASE_Test=1.2078
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.3440817088704336 CRPS_Forecast=0.13504105927776514 CRPS_Test=0.029999999999999995
INFO:pyaf.std:MODEL_L1 L1_Fit=0.06927395934172313 L1_Forecast=0.05166023166023167 L1_Test=0.04428571428571423
INFO:pyaf.std:MODEL_L2 L2_Fit=0.11588624792811997 L2_Forecast=0.06998069231793365 L2_Test=0.058431889532050335
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5176879857724932 LnQ_Forecast=0.062213386607520405 LnQ_Test=0.000745978732732771
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.04999999999999982 MedAE_Forecast=0.040000000000000036 MedAE_Test=0.019999999999999574
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.18749999999999997
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _NVT.AX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _NVT.AX             T+S+R  ...  0.0142       0.0113    0.0078
1    None         _NVT.AX             T+S+R  ...  0.0142       0.0113    0.0078
2    None   CumSum_NVT.AX             T+S+R  ...  0.0144       0.0113    0.0078
3    None     Diff_NVT.AX             T+S+R  ...  0.0142       0.0113    0.0078
4    None     Diff_NVT.AX             T+S+R  ...  0.0142       0.0113    0.0078
..    ...             ...               ...  ...     ...          ...       ...
219  None  RelDiff_NVT.AX             T+S+R  ...  6.0340      57.9905   88.0052
220  None  RelDiff_NVT.AX             T+S+R  ...  6.0340      57.9905   88.0052
221  None  RelDiff_NVT.AX             T+S+R  ...  6.0846      62.6763   99.8721
222  None  RelDiff_NVT.AX             T+S+R  ...  8.4004     113.0330  180.1015
223  None  RelDiff_NVT.AX             T+S+R  ...  8.4004     113.0330  180.1015

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _NVT.AX             T+S+R  ...  0.0142       0.0113   0.0078
1  None        _NVT.AX             T+S+R  ...  0.0142       0.0113   0.0078
2  None  CumSum_NVT.AX             T+S+R  ...  0.0144       0.0113   0.0078
3  None    Diff_NVT.AX             T+S+R  ...  0.0142       0.0113   0.0078
4  None    Diff_NVT.AX             T+S+R  ...  0.0142       0.0113   0.0078

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NVT.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.161, ('FORECASTING', {'Signals': ['NVT.AX'], 'Horizon': 7}))
7 0    5.93
1    5.89
2    5.89
3    6.01
4    5.95
5    5.84
6    5.88
Name: NVT.AX, dtype: float64
7 0    5.79
1    5.79
2    5.79
3    5.79
4    5.79
5    5.79
6    5.79
Name: NVT.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NVT.AX NVT.AX [5.93, 5.89, 5.89, 6.01, 5.95, 5.84, 5.88]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NVT.AX NVT.AX [5.79, 5.79, 5.79, 5.79, 5.79, 5.79, 5.79]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NVT.AX NVT.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NVT.AX NVT.AX 12.57209062576294
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NVT.AX NVT.AX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NVT.AX NVT.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NVT.AX NVT.AX 0.0207 0.021 1.9923
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NVT.AX NVT.AX 0.12285714285714265 0.13320231658217171 -5.697996882214168
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_NVT.AX_7'
