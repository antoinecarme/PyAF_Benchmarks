BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1274 H= 7 HEAD= ['2011-07-29T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000' '2011-08-05T00:00:00.000000000'
 '2011-08-08T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  NPX.AX N= 1274 H= 7 HEAD= [2.15 2.21 2.11 2.03 1.98] TAIL= [5.12 5.12 5.12 4.96 4.92]
   NPX.AX       Date
0    2.15 2011-07-29
1    2.21 2011-08-02
2    2.11 2011-08-04
3    2.03 2011-08-05
4    1.98 2011-08-08
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1274 entries, 0 to 1273
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NPX.AX  1274 non-null   float64       
 1   Date    1274 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.9 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NPX.AX'], 'Transformations': [('NPX.AX', 'None', '_', 'T+S+R'), ('NPX.AX', 'None', 'Diff_', 'T+S+R'), ('NPX.AX', 'None', 'RelDiff_', 'T+S+R'), ('NPX.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': '_NPX.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.886, ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': '_NPX.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': 'Diff_NPX.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.853, ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': 'Diff_NPX.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': 'RelDiff_NPX.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.338, ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': 'RelDiff_NPX.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': 'CumSum_NPX.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.825, ('TRAINING', {'Signal': 'NPX.AX', 'Transformation': 'CumSum_NPX.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.903, ('SIGNAL_TRAINING', {'Signals': ['NPX.AX'], 'Transformations': [('NPX.AX', 'None', '_', 'T+S+R'), ('NPX.AX', 'None', 'Diff_', 'T+S+R'), ('NPX.AX', 'None', 'RelDiff_', 'T+S+R'), ('NPX.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NPX.AX'], 'Transformations': [('NPX.AX', [('NPX.AX', 'None', 'CumSum_', 'T+S+R'), ('NPX.AX', 'None', 'Diff_', 'T+S+R'), ('NPX.AX', 'None', 'RelDiff_', 'T+S+R'), ('NPX.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NPX.AX', 'Transformations': [('NPX.AX', 'None', 'CumSum_', 'T+S+R'), ('NPX.AX', 'None', 'Diff_', 'T+S+R'), ('NPX.AX', 'None', 'RelDiff_', 'T+S+R'), ('NPX.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'NPX.AX', 'Transformations': [('NPX.AX', 'None', 'CumSum_', 'T+S+R'), ('NPX.AX', 'None', 'Diff_', 'T+S+R'), ('NPX.AX', 'None', 'RelDiff_', 'T+S+R'), ('NPX.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NPX.AX', 'Model': '_NPX.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NPX.AX', 'Model': '_NPX.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NPX.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NPX.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['NPX.AX'], 'Transformations': [('NPX.AX', [('NPX.AX', 'None', 'CumSum_', 'T+S+R'), ('NPX.AX', 'None', 'Diff_', 'T+S+R'), ('NPX.AX', 'None', 'RelDiff_', 'T+S+R'), ('NPX.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-29T00:00:00.000000 TimeMax=2015-07-20T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NPX.AX' Length=1274  Min=1.63 Max=5.13  Mean=2.9849332810047065 StdDev=0.8347256617592644
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NPX.AX' Min=0.0 Max=1.0  Mean=0.3871237945727741 StdDev=0.2384930462169325
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NPX.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NPX.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NPX.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_NPX.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.009 MAPE_Forecast=0.0117 MAPE_Test=0.0069
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.009 SMAPE_Forecast=0.0118 SMAPE_Test=0.0068
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9961 MASE_Test=0.9351
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.14472303216085625 CRPS_Forecast=0.14541057989810097 CRPS_Test=0.015714285714285823
INFO:pyaf.std:MODEL_L1 L1_Fit=0.0231786771964462 L1_Forecast=0.04948818897637795 L1_Test=0.03428571428571444
INFO:pyaf.std:MODEL_L2 L2_Fit=0.047470570713961095 L2_Forecast=0.09652730020589703 L2_Test=0.06324555320336768
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3386656055925006 LnQ_Forecast=0.13820671674475435 LnQ_Test=0.0011041818740134496
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.029999999999999805 MedAE_Test=0.020000000000000462
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.14857142857142858
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _NPX.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0    None         _NPX.AX             T+S+R  ...   0.0090       0.0117     0.0069
1    None   CumSum_NPX.AX             T+S+R  ...   0.0092       0.0117     0.0069
2    None     Diff_NPX.AX             T+S+R  ...   0.0090       0.0117     0.0069
3    None  RelDiff_NPX.AX             T+S+R  ...   0.0304       0.0117     0.0069
4    None         _NPX.AX             T+S+R  ...   0.0090       0.0117     0.0069
..    ...             ...               ...  ...      ...          ...        ...
179  None  RelDiff_NPX.AX             T+S+R  ...  26.7428     256.5138  1263.7532
180  None  RelDiff_NPX.AX             T+S+R  ...  26.7036     257.4483  1271.0745
181  None  RelDiff_NPX.AX             T+S+R  ...  26.0022     264.5083  1322.6415
182  None  RelDiff_NPX.AX             T+S+R  ...  31.4248     322.2465  1659.0047
183  None  RelDiff_NPX.AX             T+S+R  ...  30.4933     400.2856  2296.2287

[184 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _NPX.AX             T+S+R  ...  0.0090       0.0117   0.0069
1  None   CumSum_NPX.AX             T+S+R  ...  0.0092       0.0117   0.0069
2  None     Diff_NPX.AX             T+S+R  ...  0.0090       0.0117   0.0069
3  None  RelDiff_NPX.AX             T+S+R  ...  0.0304       0.0117   0.0069
4  None         _NPX.AX             T+S+R  ...  0.0090       0.0117   0.0069

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NPX.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('FORECASTING', {'Signals': ['NPX.AX'], 'Horizon': 7}))
7 0    4.92
1    4.91
2    4.95
3    4.95
4    4.93
5    4.96
6    5.01
Name: NPX.AX, dtype: float64
7 0    4.92
1    4.92
2    4.92
3    4.92
4    4.92
5    4.92
6    4.92
Name: NPX.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NPX.AX NPX.AX [4.92, 4.91, 4.95, 4.95, 4.93, 4.96, 5.01]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NPX.AX NPX.AX [4.92, 4.92, 4.92, 4.92, 4.92, 4.92, 4.92]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NPX.AX NPX.AX 1274 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NPX.AX NPX.AX 11.417869091033936
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NPX.AX NPX.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NPX.AX NPX.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NPX.AX NPX.AX 0.006 0.0061 1.2
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NPX.AX NPX.AX 0.029999999999999995 0.04088310863215481 -0.7882095796561912
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_NPX.AX_7'
