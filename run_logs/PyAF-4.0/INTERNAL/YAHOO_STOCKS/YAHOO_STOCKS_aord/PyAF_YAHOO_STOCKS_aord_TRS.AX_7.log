BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  TRS.AX N= 1299 H= 7 HEAD= [11.01 10.86 10.69 10.57 10.33] TAIL= [12.09 12.09 11.92 12.15 12.48]
   TRS.AX       Date
0   11.01 2011-07-28
1   10.86 2011-07-29
2   10.69 2011-08-01
3   10.57 2011-08-02
4   10.33 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   TRS.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['TRS.AX'], 'Transformations': [('TRS.AX', 'None', '_', 'T+S+R'), ('TRS.AX', 'None', 'Diff_', 'T+S+R'), ('TRS.AX', 'None', 'RelDiff_', 'T+S+R'), ('TRS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': '_TRS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.415, ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': '_TRS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': 'Diff_TRS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.487, ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': 'Diff_TRS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': 'RelDiff_TRS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.188, ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': 'RelDiff_TRS.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': 'CumSum_TRS.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.821, ('TRAINING', {'Signal': 'TRS.AX', 'Transformation': 'CumSum_TRS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.914, ('SIGNAL_TRAINING', {'Signals': ['TRS.AX'], 'Transformations': [('TRS.AX', 'None', '_', 'T+S+R'), ('TRS.AX', 'None', 'Diff_', 'T+S+R'), ('TRS.AX', 'None', 'RelDiff_', 'T+S+R'), ('TRS.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['TRS.AX'], 'Transformations': [('TRS.AX', [('TRS.AX', 'None', 'CumSum_', 'T+S+R'), ('TRS.AX', 'None', 'Diff_', 'T+S+R'), ('TRS.AX', 'None', 'RelDiff_', 'T+S+R'), ('TRS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'TRS.AX', 'Transformations': [('TRS.AX', 'None', 'CumSum_', 'T+S+R'), ('TRS.AX', 'None', 'Diff_', 'T+S+R'), ('TRS.AX', 'None', 'RelDiff_', 'T+S+R'), ('TRS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'TRS.AX', 'Transformations': [('TRS.AX', 'None', 'CumSum_', 'T+S+R'), ('TRS.AX', 'None', 'Diff_', 'T+S+R'), ('TRS.AX', 'None', 'RelDiff_', 'T+S+R'), ('TRS.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TRS.AX', 'Model': '_TRS.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TRS.AX', 'Model': '_TRS.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TRS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TRS.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['TRS.AX'], 'Transformations': [('TRS.AX', [('TRS.AX', 'None', 'CumSum_', 'T+S+R'), ('TRS.AX', 'None', 'Diff_', 'T+S+R'), ('TRS.AX', 'None', 'RelDiff_', 'T+S+R'), ('TRS.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='TRS.AX' Length=1299  Min=5.28 Max=18.4  Mean=11.467505773672062 StdDev=3.5308973314346264
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_TRS.AX' Min=0.0 Max=1.0  Mean=0.4716086717737843 StdDev=0.26912327221300525
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_TRS.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_TRS.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_TRS.AX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_TRS.AX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0144 MAPE_Forecast=0.0173 MAPE_Test=0.0098
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0143 SMAPE_Forecast=0.0175 SMAPE_Test=0.0099
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9993 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.1225511336424312 CRPS_Forecast=0.6170793622530093 CRPS_Test=0.029999999999999995
INFO:pyaf.std:MODEL_L1 L1_Fit=0.16218780251694093 L1_Forecast=0.18498069498069503 L1_Test=0.11999999999999947
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2764496246445599 L2_Forecast=0.2978448975752028 L2_Test=0.16936857526032986
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5558577682084431 LnQ_Forecast=0.2070106788021829 LnQ_Test=0.001353480612283678
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.11999999999999744 MedAE_Forecast=0.11000000000000121 MedAE_Test=0.09999999999999964
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4367378048780488
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _TRS.AX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None         _TRS.AX  ...  1.730000e-02  9.800000e-03
1    None         _TRS.AX  ...  1.730000e-02  9.800000e-03
2    None   CumSum_TRS.AX  ...  1.730000e-02  9.800000e-03
3    None     Diff_TRS.AX  ...  1.730000e-02  9.800000e-03
4    None     Diff_TRS.AX  ...  1.730000e-02  9.800000e-03
..    ...             ...  ...           ...           ...
187  None  RelDiff_TRS.AX  ...  1.747602e+07  4.729127e+07
188  None  RelDiff_TRS.AX  ...  1.747797e+07  4.729127e+07
189  None  RelDiff_TRS.AX  ...  1.764032e+07  4.729127e+07
190  None  RelDiff_TRS.AX  ...  1.779402e+07  4.729127e+07
191  None  RelDiff_TRS.AX  ...  1.790040e+07  4.729127e+07

[192 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _TRS.AX             T+S+R  ...  0.0144       0.0173   0.0098
1  None        _TRS.AX             T+S+R  ...  0.0144       0.0173   0.0098
2  None  CumSum_TRS.AX             T+S+R  ...  0.0149       0.0173   0.0098
3  None    Diff_TRS.AX             T+S+R  ...  0.0144       0.0173   0.0098
4  None    Diff_TRS.AX             T+S+R  ...  0.0144       0.0173   0.0098

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['TRS.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.232, ('FORECASTING', {'Signals': ['TRS.AX'], 'Horizon': 7}))
7 0    12.42
1    12.35
2    12.26
3    12.37
4    12.26
5    12.50
6    12.40
Name: TRS.AX, dtype: float64
7 0    12.48
1    12.48
2    12.48
3    12.48
4    12.48
5    12.48
6    12.48
Name: TRS.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_TRS.AX TRS.AX [12.42, 12.35, 12.26, 12.37, 12.26, 12.5, 12.4]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_TRS.AX TRS.AX [12.48, 12.48, 12.48, 12.48, 12.48, 12.48, 12.48]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_TRS.AX TRS.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_TRS.AX TRS.AX 11.471616268157959
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_TRS.AX TRS.AX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_TRS.AX TRS.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_TRS.AX TRS.AX 0.0097 0.0097 1.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_TRS.AX TRS.AX 0.12000000000000048 0.13948886284267648 -2.04211869135457
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_TRS.AX_7'
