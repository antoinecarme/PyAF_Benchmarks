BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  ELD.AX N= 1299 H= 7 HEAD= [0.30402 0.29169 0.29991 0.29991 0.28758] TAIL= [3.74 3.63 3.65 3.67 3.67]
    ELD.AX       Date
0  0.30402 2011-07-28
1  0.29169 2011-07-29
2  0.29991 2011-08-01
3  0.29991 2011-08-02
4  0.28758 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ELD.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ELD.AX'], 'Transformations': [('ELD.AX', 'None', '_', 'T+S+R'), ('ELD.AX', 'None', 'Diff_', 'T+S+R'), ('ELD.AX', 'None', 'RelDiff_', 'T+S+R'), ('ELD.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': '_ELD.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.53, ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': '_ELD.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': 'Diff_ELD.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.857, ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': 'Diff_ELD.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': 'RelDiff_ELD.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.169, ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': 'RelDiff_ELD.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': 'CumSum_ELD.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.808, ('TRAINING', {'Signal': 'ELD.AX', 'Transformation': 'CumSum_ELD.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.367, ('SIGNAL_TRAINING', {'Signals': ['ELD.AX'], 'Transformations': [('ELD.AX', 'None', '_', 'T+S+R'), ('ELD.AX', 'None', 'Diff_', 'T+S+R'), ('ELD.AX', 'None', 'RelDiff_', 'T+S+R'), ('ELD.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ELD.AX'], 'Transformations': [('ELD.AX', [('ELD.AX', 'None', 'CumSum_', 'T+S+R'), ('ELD.AX', 'None', 'Diff_', 'T+S+R'), ('ELD.AX', 'None', 'RelDiff_', 'T+S+R'), ('ELD.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ELD.AX', 'Transformations': [('ELD.AX', 'None', 'CumSum_', 'T+S+R'), ('ELD.AX', 'None', 'Diff_', 'T+S+R'), ('ELD.AX', 'None', 'RelDiff_', 'T+S+R'), ('ELD.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ELD.AX', 'Transformations': [('ELD.AX', 'None', 'CumSum_', 'T+S+R'), ('ELD.AX', 'None', 'Diff_', 'T+S+R'), ('ELD.AX', 'None', 'RelDiff_', 'T+S+R'), ('ELD.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ELD.AX', 'Model': '_ELD.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ELD.AX', 'Model': '_ELD.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ELD.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ELD.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['ELD.AX'], 'Transformations': [('ELD.AX', [('ELD.AX', 'None', 'CumSum_', 'T+S+R'), ('ELD.AX', 'None', 'Diff_', 'T+S+R'), ('ELD.AX', 'None', 'RelDiff_', 'T+S+R'), ('ELD.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ELD.AX' Length=1299  Min=0.0493 Max=4.74633  Mean=1.235962086220168 StdDev=1.6333438841380437
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ELD.AX' Min=0.0 Max=1.0  Mean=0.25264094251477454 StdDev=0.34773971725495556
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ELD.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ELD.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ELD.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ELD.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0289 MAPE_Forecast=0.0156 MAPE_Test=0.0101
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0296 SMAPE_Forecast=0.0156 SMAPE_Test=0.01
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.998 MASE_Test=1.0612
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.1921551053803434 CRPS_Forecast=0.09538174679264139 CRPS_Test=0.026428571428571405
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01411768635043562 L1_Forecast=0.06103741312741314 L1_Test=0.03714285714285718
INFO:pyaf.std:MODEL_L2 L2_Fit=0.07050467324627761 L2_Forecast=0.09010727857890145 L2_Test=0.04985693819032909
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=7.447761281239869 LnQ_Forecast=0.13751344819006486 LnQ_Test=0.0012717828785887336
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.004109999999999989 MedAE_Forecast=0.038670000000000204 MedAE_Test=0.020000000000000018
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.05423001343402106
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ELD.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None         _ELD.AX  ...  1.560000e-02  1.010000e-02
1    None   CumSum_ELD.AX  ...  1.560000e-02  1.010000e-02
2    None     Diff_ELD.AX  ...  1.560000e-02  1.010000e-02
3    None  RelDiff_ELD.AX  ...  1.560000e-02  1.010000e-02
4    None         _ELD.AX  ...  1.560000e-02  1.010000e-02
..    ...             ...  ...           ...           ...
195  None  RelDiff_ELD.AX  ...  4.881609e+06  6.885813e+06
196  None  RelDiff_ELD.AX  ...  4.885435e+06  6.885813e+06
197  None  RelDiff_ELD.AX  ...  4.885435e+06  6.885813e+06
198  None  RelDiff_ELD.AX  ...  4.885460e+06  6.885813e+06
199  None  RelDiff_ELD.AX  ...  4.968344e+06  6.885813e+06

[200 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _ELD.AX             T+S+R  ...  0.0289       0.0156   0.0101
1  None   CumSum_ELD.AX             T+S+R  ...  0.0296       0.0156   0.0101
2  None     Diff_ELD.AX             T+S+R  ...  0.0289       0.0156   0.0101
3  None  RelDiff_ELD.AX             T+S+R  ...  1.2733       0.0156   0.0101
4  None         _ELD.AX             T+S+R  ...  0.0289       0.0156   0.0101

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ELD.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['ELD.AX'], 'Horizon': 7}))
7 0    3.74
1    3.69
2    3.77
3    3.75
4    3.75
5    3.72
6    3.73
Name: ELD.AX, dtype: float64
7 0    3.67
1    3.67
2    3.67
3    3.67
4    3.67
5    3.67
6    3.67
Name: ELD.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ELD.AX ELD.AX [3.74, 3.69, 3.77, 3.75, 3.75, 3.72, 3.73]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ELD.AX ELD.AX [3.67, 3.67, 3.67, 3.67, 3.67, 3.67, 3.67]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ELD.AX ELD.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ELD.AX ELD.AX 11.857053756713867
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ELD.AX ELD.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ELD.AX ELD.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ELD.AX ELD.AX 0.0176 0.0177 2.0752
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ELD.AX ELD.AX 0.06571428571428584 0.06989788470128623 -7.611510574530335
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_ELD.AX_7'
