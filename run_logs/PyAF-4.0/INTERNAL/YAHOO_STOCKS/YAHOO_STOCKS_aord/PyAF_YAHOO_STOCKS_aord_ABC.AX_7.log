BENCH_DATA YAHOO_STOCKS_aord
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  ABC.AX N= 1299 H= 7 HEAD= [2.69 2.62 2.7  2.61 2.54] TAIL= [5.8  5.79 5.81 5.88 5.82]
   ABC.AX       Date
0    2.69 2011-07-28
1    2.62 2011-07-29
2    2.70 2011-08-01
3    2.61 2011-08-02
4    2.54 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ABC.AX  1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ABC.AX'], 'Transformations': [('ABC.AX', 'None', '_', 'T+S+R'), ('ABC.AX', 'None', 'Diff_', 'T+S+R'), ('ABC.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABC.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': '_ABC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.404, ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': '_ABC.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': 'Diff_ABC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.836, ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': 'Diff_ABC.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': 'RelDiff_ABC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.163, ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': 'RelDiff_ABC.AX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': 'CumSum_ABC.AX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.789, ('TRAINING', {'Signal': 'ABC.AX', 'Transformation': 'CumSum_ABC.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.193, ('SIGNAL_TRAINING', {'Signals': ['ABC.AX'], 'Transformations': [('ABC.AX', 'None', '_', 'T+S+R'), ('ABC.AX', 'None', 'Diff_', 'T+S+R'), ('ABC.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABC.AX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ABC.AX'], 'Transformations': [('ABC.AX', [('ABC.AX', 'None', 'CumSum_', 'T+S+R'), ('ABC.AX', 'None', 'Diff_', 'T+S+R'), ('ABC.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABC.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ABC.AX', 'Transformations': [('ABC.AX', 'None', 'CumSum_', 'T+S+R'), ('ABC.AX', 'None', 'Diff_', 'T+S+R'), ('ABC.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABC.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ABC.AX', 'Transformations': [('ABC.AX', 'None', 'CumSum_', 'T+S+R'), ('ABC.AX', 'None', 'Diff_', 'T+S+R'), ('ABC.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABC.AX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ABC.AX', 'Model': '_ABC.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ABC.AX', 'Model': '_ABC.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ABC.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ABC.AX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.227, ('FINALIZE_TRAINING', {'Signals': ['ABC.AX'], 'Transformations': [('ABC.AX', [('ABC.AX', 'None', 'CumSum_', 'T+S+R'), ('ABC.AX', 'None', 'Diff_', 'T+S+R'), ('ABC.AX', 'None', 'RelDiff_', 'T+S+R'), ('ABC.AX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ABC.AX' Length=1299  Min=2.41 Max=5.88  Mean=3.710685142417245 StdDev=0.7307132617118755
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ABC.AX' Min=0.0 Max=1.0  Mean=0.37483721683494 StdDev=0.21058019069506523
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ABC.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ABC.AX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ABC.AX_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ABC.AX_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0117 MAPE_Forecast=0.011 MAPE_Test=0.0061
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0117 SMAPE_Forecast=0.011 SMAPE_Test=0.0061
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0043 MASE_Test=1.1905
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.14153376471187648 CRPS_Forecast=0.11922600408812173 CRPS_Test=0.01642857142857133
INFO:pyaf.std:MODEL_L1 L1_Fit=0.04001936108422072 L1_Forecast=0.051969111969111956 L1_Test=0.03571428571428559
INFO:pyaf.std:MODEL_L2 L2_Fit=0.05669162178522428 L2_Forecast=0.06902520383511204 L2_Test=0.04519797719873249
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2736639335862372 LnQ_Forecast=0.055016164041559616 LnQ_Test=0.0004238910165010412
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.03000000000000025 MedAE_Forecast=0.040000000000000036 MedAE_Test=0.019999999999999574
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.08069164265129677
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ABC.AX_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE    TestMAPE
0    None         _ABC.AX             T+S+R  ...   0.0117       0.0110      0.0061
1    None   CumSum_ABC.AX             T+S+R  ...   0.0117       0.0110      0.0061
2    None     Diff_ABC.AX             T+S+R  ...   0.0117       0.0110      0.0061
3    None  RelDiff_ABC.AX             T+S+R  ...   0.0125       0.0110      0.0061
4    None  RelDiff_ABC.AX             T+S+R  ...   0.0125       0.0110      0.0061
..    ...             ...               ...  ...      ...          ...         ...
195  None  RelDiff_ABC.AX             T+S+R  ...  20.0981    1226.8289  11107.4731
196  None  RelDiff_ABC.AX             T+S+R  ...  20.7528    1313.0724  12137.9999
197  None  RelDiff_ABC.AX             T+S+R  ...  20.7528    1313.0724  12137.9999
198  None  RelDiff_ABC.AX             T+S+R  ...  22.9436    1444.3001  13947.4791
199  None  RelDiff_ABC.AX             T+S+R  ...  21.6323    1474.2785  13549.2553

[200 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _ABC.AX             T+S+R  ...  0.0117        0.011   0.0061
1  None   CumSum_ABC.AX             T+S+R  ...  0.0117        0.011   0.0061
2  None     Diff_ABC.AX             T+S+R  ...  0.0117        0.011   0.0061
3  None  RelDiff_ABC.AX             T+S+R  ...  0.0125        0.011   0.0061
4  None  RelDiff_ABC.AX             T+S+R  ...  0.0125        0.011   0.0061

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ABC.AX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['ABC.AX'], 'Horizon': 7}))
7 0    5.86
1    5.74
2    5.64
3    5.77
4    5.93
5    5.87
6    5.87
Name: ABC.AX, dtype: float64
7 0    5.82
1    5.82
2    5.82
3    5.82
4    5.82
5    5.82
6    5.82
Name: ABC.AX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ABC.AX ABC.AX [5.86, 5.74, 5.64, 5.77, 5.93, 5.87, 5.87]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ABC.AX ABC.AX [5.82, 5.82, 5.82, 5.82, 5.82, 5.82, 5.82]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ABC.AX ABC.AX 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ABC.AX ABC.AX 11.676738500595093
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ABC.AX ABC.AX Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ABC.AX ABC.AX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ABC.AX ABC.AX 0.0138 0.0138 0.8421
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ABC.AX ABC.AX 0.08000000000000007 0.09258200997725526 -0.008645531445601318
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aord_ABC.AX_7'
