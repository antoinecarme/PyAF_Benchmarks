BENCH_DATA YAHOO_STOCKS_nasdaq
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AKAM N= 1251 H= 7 HEAD= [23.84     24.219999 23.77     23.030001 23.620001] TAIL= [56.16     56.860001 57.43     57.25     57.470001]
        AKAM       Date
0  23.840000 2011-07-28
1  24.219999 2011-07-29
2  23.770000 2011-08-01
3  23.030001 2011-08-02
4  23.620001 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AKAM    1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AKAM'], 'Transformations': [('AKAM', 'None', '_', 'T+S+R'), ('AKAM', 'None', 'Diff_', 'T+S+R'), ('AKAM', 'None', 'RelDiff_', 'T+S+R'), ('AKAM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AKAM', 'Transformation': '_AKAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.352, ('TRAINING', {'Signal': 'AKAM', 'Transformation': '_AKAM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AKAM', 'Transformation': 'Diff_AKAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.794, ('TRAINING', {'Signal': 'AKAM', 'Transformation': 'Diff_AKAM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AKAM', 'Transformation': 'RelDiff_AKAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.231, ('TRAINING', {'Signal': 'AKAM', 'Transformation': 'RelDiff_AKAM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AKAM', 'Transformation': 'CumSum_AKAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.739, ('TRAINING', {'Signal': 'AKAM', 'Transformation': 'CumSum_AKAM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.118, ('SIGNAL_TRAINING', {'Signals': ['AKAM'], 'Transformations': [('AKAM', 'None', '_', 'T+S+R'), ('AKAM', 'None', 'Diff_', 'T+S+R'), ('AKAM', 'None', 'RelDiff_', 'T+S+R'), ('AKAM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AKAM'], 'Transformations': [('AKAM', [('AKAM', 'None', 'CumSum_', 'T+S+R'), ('AKAM', 'None', 'Diff_', 'T+S+R'), ('AKAM', 'None', 'RelDiff_', 'T+S+R'), ('AKAM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AKAM', 'Transformations': [('AKAM', 'None', 'CumSum_', 'T+S+R'), ('AKAM', 'None', 'Diff_', 'T+S+R'), ('AKAM', 'None', 'RelDiff_', 'T+S+R'), ('AKAM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'AKAM', 'Transformations': [('AKAM', 'None', 'CumSum_', 'T+S+R'), ('AKAM', 'None', 'Diff_', 'T+S+R'), ('AKAM', 'None', 'RelDiff_', 'T+S+R'), ('AKAM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AKAM', 'Model': '_AKAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AKAM', 'Model': '_AKAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AKAM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AKAM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['AKAM'], 'Transformations': [('AKAM', [('AKAM', 'None', 'CumSum_', 'T+S+R'), ('AKAM', 'None', 'Diff_', 'T+S+R'), ('AKAM', 'None', 'RelDiff_', 'T+S+R'), ('AKAM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AKAM' Length=1251  Min=18.65 Max=78.360001  Mean=49.08772178577139 StdDev=14.590286536681997
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AKAM' Min=0.0 Max=1.0  Mean=0.5097591906885307 StdDev=0.2443524751688076
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AKAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AKAM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AKAM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AKAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.015 MAPE_Forecast=0.017 MAPE_Test=0.0084
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0151 SMAPE_Forecast=0.0169 SMAPE_Test=0.0084
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9986 MASE_Test=1.5102
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.381201608007141 CRPS_Forecast=2.620777816478904 CRPS_Test=0.33428571428571424
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6407537025125629 L1_Forecast=0.9681526947791164 L1_Test=0.4757148571428585
INFO:pyaf.std:MODEL_L2 L2_Fit=0.9677014762928496 L2_Forecast=1.4932859013116477 L2_Test=0.6541413674223207
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5743590800762777 LnQ_Forecast=0.17322141142331002 LnQ_Test=0.0009551179216509689
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4799999999999969 MedAE_Forecast=0.6800000000000068 MedAE_Test=0.22000100000000344
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.08692011242806714
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AKAM_Lag1Trend_residue_bestCycle_byMAPE None 0.0003350360017578824 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0    None          _AKAM             T+S+R  ...   0.0150       0.0170     0.0084
1    None          _AKAM             T+S+R  ...   0.0150       0.0170     0.0084
2    None    CumSum_AKAM             T+S+R  ...   0.0152       0.0170     0.0084
3    None      Diff_AKAM             T+S+R  ...   0.0150       0.0170     0.0084
4    None      Diff_AKAM             T+S+R  ...   0.0150       0.0170     0.0084
..    ...            ...               ...  ...      ...          ...        ...
219  None   RelDiff_AKAM             T+S+R  ...  22.1886     300.7490  1681.8819
220  None   RelDiff_AKAM             T+S+R  ...  22.1769     301.2369  1677.8063
221  None   RelDiff_AKAM             T+S+R  ...  22.0247     307.5686  1722.2696
222  None   RelDiff_AKAM             T+S+R  ...  21.2265     311.4803  1748.7430
223  None   RelDiff_AKAM             T+S+R  ...  53.8759     683.1771  3419.4649

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None          _AKAM             T+S+R  ...  0.0150        0.017   0.0084
1  None          _AKAM             T+S+R  ...  0.0150        0.017   0.0084
2  None    CumSum_AKAM             T+S+R  ...  0.0152        0.017   0.0084
3  None      Diff_AKAM             T+S+R  ...  0.0150        0.017   0.0084
4  None      Diff_AKAM             T+S+R  ...  0.0150        0.017   0.0084

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AKAM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['AKAM'], 'Horizon': 7}))
7 0    57.450001
1    57.830002
2    57.200001
3    57.889999
4    57.900002
5    58.090000
6    50.509998
Name: AKAM, dtype: float64
7 0    57.470001
1    57.470001
2    57.470001
3    57.470001
4    57.470001
5    57.470001
6    57.470001
Name: AKAM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AKAM AKAM [57.450001, 57.830002, 57.200001, 57.889999, 57.900002, 58.09, 50.509998]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AKAM AKAM [57.470001, 57.470001, 57.470001, 57.470001, 57.470001, 57.470001, 57.470001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AKAM AKAM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AKAM AKAM 12.600799560546875
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AKAM AKAM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AKAM AKAM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AKAM AKAM 0.0249 0.0237 0.821
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AKAM AKAM 1.297143142857143 2.6562659188098725 -0.09285903846019106
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nasdaq_AKAM_7'
