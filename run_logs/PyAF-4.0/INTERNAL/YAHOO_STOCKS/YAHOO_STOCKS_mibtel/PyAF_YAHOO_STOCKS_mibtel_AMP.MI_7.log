BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AMP.MI N= 1297 H= 7 HEAD= [4.312 4.466 4.502 4.306 4.31 ] TAIL= [8.43 8.46 8.45 8.41 8.41]
   AMP.MI       Date
0   4.312 2011-07-28
1   4.466 2011-07-29
2   4.502 2011-08-01
3   4.306 2011-08-02
4   4.310 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AMP.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AMP.MI'], 'Transformations': [('AMP.MI', 'None', '_', 'T+S+R'), ('AMP.MI', 'None', 'Diff_', 'T+S+R'), ('AMP.MI', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': '_AMP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.271, ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': '_AMP.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': 'Diff_AMP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.511, ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': 'Diff_AMP.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': 'RelDiff_AMP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.198, ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': 'RelDiff_AMP.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': 'CumSum_AMP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.953, ('TRAINING', {'Signal': 'AMP.MI', 'Transformation': 'CumSum_AMP.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.936, ('SIGNAL_TRAINING', {'Signals': ['AMP.MI'], 'Transformations': [('AMP.MI', 'None', '_', 'T+S+R'), ('AMP.MI', 'None', 'Diff_', 'T+S+R'), ('AMP.MI', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AMP.MI'], 'Transformations': [('AMP.MI', [('AMP.MI', 'None', 'CumSum_', 'T+S+R'), ('AMP.MI', 'None', 'Diff_', 'T+S+R'), ('AMP.MI', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AMP.MI', 'Transformations': [('AMP.MI', 'None', 'CumSum_', 'T+S+R'), ('AMP.MI', 'None', 'Diff_', 'T+S+R'), ('AMP.MI', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'AMP.MI', 'Transformations': [('AMP.MI', 'None', 'CumSum_', 'T+S+R'), ('AMP.MI', 'None', 'Diff_', 'T+S+R'), ('AMP.MI', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMP.MI', 'Model': '_AMP.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMP.MI', 'Model': '_AMP.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMP.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMP.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['AMP.MI'], 'Transformations': [('AMP.MI', [('AMP.MI', 'None', 'CumSum_', 'T+S+R'), ('AMP.MI', 'None', 'Diff_', 'T+S+R'), ('AMP.MI', 'None', 'RelDiff_', 'T+S+R'), ('AMP.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AMP.MI' Length=1297  Min=2.818 Max=8.8  Mean=4.941351580570546 StdDev=1.6034880406281062
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AMP.MI' Min=0.0 Max=1.0  Mean=0.35495680049658085 StdDev=0.2680521632611345
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AMP.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AMP.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AMP.MI_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_AMP.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0121 MAPE_Forecast=0.0132 MAPE_Test=0.0052
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0121 SMAPE_Forecast=0.0132 SMAPE_Test=0.0052
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9981 MASE_Test=1.1071
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.25549665697674423 CRPS_Forecast=0.14640279434564527 CRPS_Test=0.015357142857142974
INFO:pyaf.std:MODEL_L1 L1_Fit=0.050488372093023266 L1_Forecast=0.09918604651162792 L1_Test=0.044285714285714865
INFO:pyaf.std:MODEL_L2 L2_Fit=0.07046519015269749 L2_Forecast=0.12845911484221936 L2_Test=0.05391792704790226
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.30021424258351875 LnQ_Forecast=0.0751592249212244 LnQ_Test=0.00028442222979812616
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.038000000000000034 MedAE_Forecast=0.07500000000000062 MedAE_Test=0.03999999999999915
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.24974924774322968
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _AMP.MI_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None         _AMP.MI             T+S+R  ...    0.0119       0.0131     0.0045
1    None         _AMP.MI             T+S+R  ...    0.0118       0.0131     0.0050
2    None         _AMP.MI             T+S+R  ...    0.0119       0.0131     0.0046
3    None         _AMP.MI             T+S+R  ...    0.0117       0.0131     0.0051
4    None         _AMP.MI             T+S+R  ...    0.0121       0.0132     0.0052
..    ...             ...               ...  ...       ...          ...        ...
211  None  RelDiff_AMP.MI             T+S+R  ...  109.7704     445.9704   633.2281
212  None  RelDiff_AMP.MI             T+S+R  ...  109.7704     445.9704   633.2281
213  None  RelDiff_AMP.MI             T+S+R  ...   21.5372     654.3452  1691.9011
214  None  RelDiff_AMP.MI             T+S+R  ...   56.2777     849.0344  1738.9268
215  None  RelDiff_AMP.MI             T+S+R  ...   56.2777     849.0344  1738.9268

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _AMP.MI             T+S+R  ...  0.0119       0.0131   0.0045
1  None        _AMP.MI             T+S+R  ...  0.0118       0.0131   0.0050
2  None        _AMP.MI             T+S+R  ...  0.0119       0.0131   0.0046
3  None        _AMP.MI             T+S+R  ...  0.0117       0.0131   0.0051
4  None        _AMP.MI             T+S+R  ...  0.0121       0.0132   0.0052

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AMP.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['AMP.MI'], 'Horizon': 7}))
7 0    8.605
1    8.740
2    8.725
3    8.755
4    8.750
5    8.875
6    8.935
Name: AMP.MI, dtype: float64
7 0    8.41
1    8.41
2    8.41
3    8.41
4    8.41
5    8.41
6    8.41
Name: AMP.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AMP.MI AMP.MI [8.605, 8.74, 8.725, 8.755, 8.75, 8.875, 8.935]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AMP.MI AMP.MI [8.41, 8.41, 8.41, 8.41, 8.41, 8.41, 8.41]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AMP.MI AMP.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AMP.MI AMP.MI 12.405672550201416
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AMP.MI AMP.MI Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AMP.MI AMP.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AMP.MI AMP.MI 0.0408 0.0418 5.8263
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AMP.MI AMP.MI 0.3592857142857144 0.3727551858410941 -13.091638187179665
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_AMP.MI_7'
