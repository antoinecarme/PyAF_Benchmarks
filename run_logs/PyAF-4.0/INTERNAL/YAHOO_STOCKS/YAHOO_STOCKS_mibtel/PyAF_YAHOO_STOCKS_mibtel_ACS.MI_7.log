BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 1294 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ACS.MI N= 1294 H= 7 HEAD= [0.9685 0.966  0.969  0.9685 0.95  ] TAIL= [1.646 1.605 1.645 1.65  1.65 ]
   ACS.MI       Date
0  0.9685 2011-07-28
1  0.9660 2011-07-29
2  0.9690 2011-08-01
3  0.9685 2011-08-02
4  0.9500 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1294 entries, 0 to 1293
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ACS.MI  1294 non-null   float64       
 1   Date    1294 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ACS.MI'], 'Transformations': [('ACS.MI', 'None', '_', 'T+S+R'), ('ACS.MI', 'None', 'Diff_', 'T+S+R'), ('ACS.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': '_ACS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.35, ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': '_ACS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': 'Diff_ACS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.486, ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': 'Diff_ACS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': 'RelDiff_ACS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.173, ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': 'RelDiff_ACS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': 'CumSum_ACS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.879, ('TRAINING', {'Signal': 'ACS.MI', 'Transformation': 'CumSum_ACS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.89, ('SIGNAL_TRAINING', {'Signals': ['ACS.MI'], 'Transformations': [('ACS.MI', 'None', '_', 'T+S+R'), ('ACS.MI', 'None', 'Diff_', 'T+S+R'), ('ACS.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ACS.MI'], 'Transformations': [('ACS.MI', [('ACS.MI', 'None', 'CumSum_', 'T+S+R'), ('ACS.MI', 'None', 'Diff_', 'T+S+R'), ('ACS.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ACS.MI', 'Transformations': [('ACS.MI', 'None', 'CumSum_', 'T+S+R'), ('ACS.MI', 'None', 'Diff_', 'T+S+R'), ('ACS.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ACS.MI', 'Transformations': [('ACS.MI', 'None', 'CumSum_', 'T+S+R'), ('ACS.MI', 'None', 'Diff_', 'T+S+R'), ('ACS.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACS.MI', 'Model': '_ACS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACS.MI', 'Model': '_ACS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.226, ('FINALIZE_TRAINING', {'Signals': ['ACS.MI'], 'Transformations': [('ACS.MI', [('ACS.MI', 'None', 'CumSum_', 'T+S+R'), ('ACS.MI', 'None', 'Diff_', 'T+S+R'), ('ACS.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACS.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ACS.MI' Length=1294  Min=0.4305 Max=1.717  Mean=1.0446306800618244 StdDev=0.3468090298165385
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ACS.MI' Min=0.0 Max=1.0  Mean=0.4773654722594826 StdDev=0.26957561586983164
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ACS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ACS.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ACS.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ACS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0136 MAPE_Forecast=0.0128 MAPE_Test=0.0129
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0136 SMAPE_Forecast=0.0128 SMAPE_Test=0.0129
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9971 MASE_Test=1.0769
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.08417599406679965 CRPS_Forecast=0.02658326548107615 CRPS_Test=0.007428571428571435
INFO:pyaf.std:MODEL_L1 L1_Fit=0.012241690962099129 L1_Forecast=0.019034883720930224 L1_Test=0.021
INFO:pyaf.std:MODEL_L2 L2_Fit=0.018351088230985618 L2_Forecast=0.027700292445214127 L2_Test=0.026862081612775795
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4015569382481913 LnQ_Forecast=0.09067148361773415 LnQ_Test=0.0019077172574827608
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.008999999999999897 MedAE_Forecast=0.01200000000000001 MedAE_Test=0.028999999999999915
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4181888845705402
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ACS.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _ACS.MI             T+S+R  ...  0.0136       0.0127   0.0130
1    None         _ACS.MI             T+S+R  ...  0.0132       0.0127   0.0134
2    None         _ACS.MI             T+S+R  ...  0.0136       0.0128   0.0129
3    None         _ACS.MI             T+S+R  ...  0.0136       0.0128   0.0129
4    None   CumSum_ACS.MI             T+S+R  ...  0.0141       0.0128   0.0129
..    ...             ...               ...  ...     ...          ...      ...
211  None  RelDiff_ACS.MI             T+S+R  ...  2.2712       8.9570  12.3861
212  None  RelDiff_ACS.MI             T+S+R  ...  3.4399      13.7319  18.9428
213  None  RelDiff_ACS.MI             T+S+R  ...  3.4399      13.7319  18.9428
214  None  RelDiff_ACS.MI             T+S+R  ...  3.4293      13.7739  19.0532
215  None  RelDiff_ACS.MI             T+S+R  ...  3.4293      13.7739  19.0532

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ACS.MI             T+S+R  ...  0.0136       0.0127   0.0130
1  None        _ACS.MI             T+S+R  ...  0.0132       0.0127   0.0134
2  None        _ACS.MI             T+S+R  ...  0.0136       0.0128   0.0129
3  None        _ACS.MI             T+S+R  ...  0.0136       0.0128   0.0129
4  None  CumSum_ACS.MI             T+S+R  ...  0.0141       0.0128   0.0129

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ACS.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['ACS.MI'], 'Horizon': 7}))
7 0    1.620
1    1.606
2    1.630
3    1.630
4    1.630
5    1.620
6    1.640
Name: ACS.MI, dtype: float64
7 0    1.65
1    1.65
2    1.65
3    1.65
4    1.65
5    1.65
6    1.65
Name: ACS.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ACS.MI ACS.MI [1.62, 1.606, 1.63, 1.63, 1.63, 1.62, 1.64]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ACS.MI ACS.MI [1.65, 1.65, 1.65, 1.65, 1.65, 1.65, 1.65]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ACS.MI ACS.MI 1294 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ACS.MI ACS.MI 12.37263011932373
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ACS.MI ACS.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ACS.MI ACS.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ACS.MI ACS.MI 0.0153 0.0152 2.1933
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ACS.MI ACS.MI 0.024857142857142783 0.026822165673721542 -6.084404148094339
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_ACS.MI_7'
