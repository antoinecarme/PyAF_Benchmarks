BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-29T00:00:00.000000000' '2011-08-01T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  IF.MI N= 1297 H= 7 HEAD= [4.7   4.644 4.482 4.456 4.5  ] TAIL= [19.64 20.   19.72 20.05 19.6 ]
   IF.MI       Date
0  4.700 2011-07-29
1  4.644 2011-08-01
2  4.482 2011-08-02
3  4.456 2011-08-03
4  4.500 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   IF.MI   1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['IF.MI'], 'Transformations': [('IF.MI', 'None', '_', 'T+S+R'), ('IF.MI', 'None', 'Diff_', 'T+S+R'), ('IF.MI', 'None', 'RelDiff_', 'T+S+R'), ('IF.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IF.MI', 'Transformation': '_IF.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.341, ('TRAINING', {'Signal': 'IF.MI', 'Transformation': '_IF.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IF.MI', 'Transformation': 'Diff_IF.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.826, ('TRAINING', {'Signal': 'IF.MI', 'Transformation': 'Diff_IF.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IF.MI', 'Transformation': 'RelDiff_IF.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.159, ('TRAINING', {'Signal': 'IF.MI', 'Transformation': 'RelDiff_IF.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IF.MI', 'Transformation': 'CumSum_IF.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.771, ('TRAINING', {'Signal': 'IF.MI', 'Transformation': 'CumSum_IF.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.098, ('SIGNAL_TRAINING', {'Signals': ['IF.MI'], 'Transformations': [('IF.MI', 'None', '_', 'T+S+R'), ('IF.MI', 'None', 'Diff_', 'T+S+R'), ('IF.MI', 'None', 'RelDiff_', 'T+S+R'), ('IF.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['IF.MI'], 'Transformations': [('IF.MI', [('IF.MI', 'None', 'CumSum_', 'T+S+R'), ('IF.MI', 'None', 'Diff_', 'T+S+R'), ('IF.MI', 'None', 'RelDiff_', 'T+S+R'), ('IF.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'IF.MI', 'Transformations': [('IF.MI', 'None', 'CumSum_', 'T+S+R'), ('IF.MI', 'None', 'Diff_', 'T+S+R'), ('IF.MI', 'None', 'RelDiff_', 'T+S+R'), ('IF.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'IF.MI', 'Transformations': [('IF.MI', 'None', 'CumSum_', 'T+S+R'), ('IF.MI', 'None', 'Diff_', 'T+S+R'), ('IF.MI', 'None', 'RelDiff_', 'T+S+R'), ('IF.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IF.MI', 'Model': '_IF.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IF.MI', 'Model': '_IF.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IF.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IF.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['IF.MI'], 'Transformations': [('IF.MI', [('IF.MI', 'None', 'CumSum_', 'T+S+R'), ('IF.MI', 'None', 'Diff_', 'T+S+R'), ('IF.MI', 'None', 'RelDiff_', 'T+S+R'), ('IF.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-29T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='IF.MI' Length=1297  Min=3.678 Max=29.11  Mean=12.684531996915963 StdDev=7.34281333234819
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_IF.MI' Min=0.0 Max=1.0  Mean=0.35414171110868026 StdDev=0.288723393061819
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_IF.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_IF.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_IF.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_IF.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0125 MAPE_Forecast=0.0194 MAPE_Test=0.0305
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0125 SMAPE_Forecast=0.0193 SMAPE_Test=0.0313
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9979 MASE_Test=0.8698
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.470569692982456 CRPS_Forecast=0.8499241422708618 CRPS_Test=0.4985714285714286
INFO:pyaf.std:MODEL_L1 L1_Fit=0.13163178294573646 L1_Forecast=0.4587209302325581 L1_Test=0.5885714285714292
INFO:pyaf.std:MODEL_L2 L2_Fit=0.21268612459890093 L2_Forecast=0.6438718274878612 L2_Test=0.8079603950689668
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3230758077377835 LnQ_Forecast=0.19619259311960796 LnQ_Test=0.013688248452979295
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.06999999999999895 MedAE_Forecast=0.33999999999999986 MedAE_Test=0.35999999999999943
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.04018559295375906
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _IF.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _IF.MI             T+S+R  ...  0.0125       0.0193   0.0301
1    None         _IF.MI             T+S+R  ...  0.0123       0.0193   0.0318
2    None         _IF.MI             T+S+R  ...  0.0127       0.0193   0.0302
3    None         _IF.MI             T+S+R  ...  0.0127       0.0193   0.0298
4    None         _IF.MI             T+S+R  ...  0.0124       0.0193   0.0315
..    ...            ...               ...  ...     ...          ...      ...
219  None  RelDiff_IF.MI             T+S+R  ...  0.9501       6.5321  15.3704
220  None  RelDiff_IF.MI             T+S+R  ...  0.9436       6.6054  15.3506
221  None  RelDiff_IF.MI             T+S+R  ...  0.9465       6.6560  16.0005
222  None  RelDiff_IF.MI             T+S+R  ...  1.2515       8.1310  18.2881
223  None  RelDiff_IF.MI             T+S+R  ...  1.2515       8.1310  18.2881

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _IF.MI             T+S+R  ...  0.0125       0.0193   0.0301
1  None         _IF.MI             T+S+R  ...  0.0123       0.0193   0.0318
2  None         _IF.MI             T+S+R  ...  0.0127       0.0193   0.0302
3  None         _IF.MI             T+S+R  ...  0.0127       0.0193   0.0298
4  None         _IF.MI             T+S+R  ...  0.0124       0.0193   0.0315

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['IF.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['IF.MI'], 'Horizon': 7}))
7 0    20.02
1    19.55
2    19.23
3    18.91
4    18.46
5    19.15
6    20.00
Name: IF.MI, dtype: float64
7 0    19.6
1    19.6
2    19.6
3    19.6
4    19.6
5    19.6
6    19.6
Name: IF.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_IF.MI IF.MI [20.02, 19.55, 19.23, 18.91, 18.46, 19.15, 20.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_IF.MI IF.MI [19.6, 19.6, 19.6, 19.6, 19.6, 19.6, 19.6]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_IF.MI IF.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_IF.MI IF.MI 12.573145389556885
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_IF.MI IF.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_IF.MI IF.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_IF.MI IF.MI 0.0264 0.026 0.9733
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_IF.MI IF.MI 0.5028571428571433 0.5920907266386032 -0.2590518630800305
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_IF.MI_7'
