BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  GEO.MI N= 1297 H= 7 HEAD= [3.524 3.586 3.418 3.16  3.122] TAIL= [2.698 2.69  2.758 2.776 2.734]
   GEO.MI       Date
0   3.524 2011-07-28
1   3.586 2011-07-29
2   3.418 2011-08-01
3   3.160 2011-08-02
4   3.122 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   GEO.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['GEO.MI'], 'Transformations': [('GEO.MI', 'None', '_', 'T+S+R'), ('GEO.MI', 'None', 'Diff_', 'T+S+R'), ('GEO.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEO.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': '_GEO.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.122, ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': '_GEO.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': 'Diff_GEO.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.825, ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': 'Diff_GEO.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': 'RelDiff_GEO.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.207, ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': 'RelDiff_GEO.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': 'CumSum_GEO.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.844, ('TRAINING', {'Signal': 'GEO.MI', 'Transformation': 'CumSum_GEO.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.001, ('SIGNAL_TRAINING', {'Signals': ['GEO.MI'], 'Transformations': [('GEO.MI', 'None', '_', 'T+S+R'), ('GEO.MI', 'None', 'Diff_', 'T+S+R'), ('GEO.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEO.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['GEO.MI'], 'Transformations': [('GEO.MI', [('GEO.MI', 'None', 'CumSum_', 'T+S+R'), ('GEO.MI', 'None', 'Diff_', 'T+S+R'), ('GEO.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEO.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'GEO.MI', 'Transformations': [('GEO.MI', 'None', 'CumSum_', 'T+S+R'), ('GEO.MI', 'None', 'Diff_', 'T+S+R'), ('GEO.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEO.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'GEO.MI', 'Transformations': [('GEO.MI', 'None', 'CumSum_', 'T+S+R'), ('GEO.MI', 'None', 'Diff_', 'T+S+R'), ('GEO.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEO.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GEO.MI', 'Model': '_GEO.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GEO.MI', 'Model': '_GEO.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GEO.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GEO.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.226, ('FINALIZE_TRAINING', {'Signals': ['GEO.MI'], 'Transformations': [('GEO.MI', [('GEO.MI', 'None', 'CumSum_', 'T+S+R'), ('GEO.MI', 'None', 'Diff_', 'T+S+R'), ('GEO.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEO.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='GEO.MI' Length=1297  Min=1.47 Max=4.364  Mean=2.705856592135695 StdDev=0.5918564388422469
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_GEO.MI' Min=0.0 Max=1.0  Mean=0.42704097862325446 StdDev=0.20451155454120473
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_GEO.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_GEO.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_GEO.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_GEO.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0175 MAPE_Forecast=0.0179 MAPE_Test=0.0123
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0175 SMAPE_Forecast=0.0178 SMAPE_Test=0.0124
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0004 MASE_Test=0.8875
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.14297064259485923 CRPS_Forecast=0.14205145353397175 CRPS_Test=0.025142857142857102
INFO:pyaf.std:MODEL_L1 L1_Fit=0.04414728682170543 L1_Forecast=0.05943410852713181 L1_Test=0.03342857142857136
INFO:pyaf.std:MODEL_L2 L2_Fit=0.06281872221292882 L2_Forecast=0.08603992222831365 L2_Test=0.041999999999999975
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6226977017935797 LnQ_Forecast=0.17480618713110313 LnQ_Test=0.0017026786431427795
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.03000000000000025 MedAE_Forecast=0.041999999999999815 MedAE_Test=0.017999999999999794
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7097442985487216
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _GEO.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _GEO.MI             T+S+R  ...   0.0175       0.0179    0.0123
1    None         _GEO.MI             T+S+R  ...   0.0175       0.0179    0.0123
2    None   CumSum_GEO.MI             T+S+R  ...   0.0181       0.0179    0.0123
3    None     Diff_GEO.MI             T+S+R  ...   0.0175       0.0179    0.0123
4    None     Diff_GEO.MI             T+S+R  ...   0.0175       0.0179    0.0123
..    ...             ...               ...  ...      ...          ...       ...
211  None  RelDiff_GEO.MI             T+S+R  ...   8.1593      63.5407   96.0726
212  None  RelDiff_GEO.MI             T+S+R  ...  15.2181      86.4099  154.1272
213  None  RelDiff_GEO.MI             T+S+R  ...  15.2181      86.4099  154.1272
214  None  RelDiff_GEO.MI             T+S+R  ...  13.5164     100.3893  200.1108
215  None  RelDiff_GEO.MI             T+S+R  ...  13.5164     100.3893  200.1108

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _GEO.MI             T+S+R  ...  0.0175       0.0179   0.0123
1  None        _GEO.MI             T+S+R  ...  0.0175       0.0179   0.0123
2  None  CumSum_GEO.MI             T+S+R  ...  0.0181       0.0179   0.0123
3  None    Diff_GEO.MI             T+S+R  ...  0.0175       0.0179   0.0123
4  None    Diff_GEO.MI             T+S+R  ...  0.0175       0.0179   0.0123

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['GEO.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['GEO.MI'], 'Horizon': 7}))
7 0    2.658
1    2.722
2    2.732
3    2.680
4    2.770
5    2.750
6    2.788
Name: GEO.MI, dtype: float64
7 0    2.734
1    2.734
2    2.734
3    2.734
4    2.734
5    2.734
6    2.734
Name: GEO.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_GEO.MI GEO.MI [2.658, 2.722, 2.732, 2.68, 2.77, 2.75, 2.788]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_GEO.MI GEO.MI [2.734, 2.734, 2.734, 2.734, 2.734, 2.734, 2.734]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_GEO.MI GEO.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_GEO.MI GEO.MI 12.485533475875854
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_GEO.MI GEO.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_GEO.MI GEO.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_GEO.MI GEO.MI 0.0132 0.0131 0.7821
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_GEO.MI GEO.MI 0.03571428571428565 0.0436020969351573 -0.01574493293111634
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_GEO.MI_7'
