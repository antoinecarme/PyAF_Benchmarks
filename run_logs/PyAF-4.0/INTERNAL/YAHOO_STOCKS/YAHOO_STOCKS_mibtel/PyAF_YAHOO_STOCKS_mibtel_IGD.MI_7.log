BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  IGD.MI N= 1297 H= 7 HEAD= [1.06021 1.05057 0.98014 0.95641 0.93417] TAIL= [0.73   0.7395 0.765  0.753  0.785 ]
    IGD.MI       Date
0  1.06021 2011-07-28
1  1.05057 2011-07-29
2  0.98014 2011-08-01
3  0.95641 2011-08-02
4  0.93417 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   IGD.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['IGD.MI'], 'Transformations': [('IGD.MI', 'None', '_', 'T+S+R'), ('IGD.MI', 'None', 'Diff_', 'T+S+R'), ('IGD.MI', 'None', 'RelDiff_', 'T+S+R'), ('IGD.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': '_IGD.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.348, ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': '_IGD.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': 'Diff_IGD.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.48, ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': 'Diff_IGD.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': 'RelDiff_IGD.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.145, ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': 'RelDiff_IGD.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': 'CumSum_IGD.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.787, ('TRAINING', {'Signal': 'IGD.MI', 'Transformation': 'CumSum_IGD.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.762, ('SIGNAL_TRAINING', {'Signals': ['IGD.MI'], 'Transformations': [('IGD.MI', 'None', '_', 'T+S+R'), ('IGD.MI', 'None', 'Diff_', 'T+S+R'), ('IGD.MI', 'None', 'RelDiff_', 'T+S+R'), ('IGD.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['IGD.MI'], 'Transformations': [('IGD.MI', [('IGD.MI', 'None', 'CumSum_', 'T+S+R'), ('IGD.MI', 'None', 'Diff_', 'T+S+R'), ('IGD.MI', 'None', 'RelDiff_', 'T+S+R'), ('IGD.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'IGD.MI', 'Transformations': [('IGD.MI', 'None', 'CumSum_', 'T+S+R'), ('IGD.MI', 'None', 'Diff_', 'T+S+R'), ('IGD.MI', 'None', 'RelDiff_', 'T+S+R'), ('IGD.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'IGD.MI', 'Transformations': [('IGD.MI', 'None', 'CumSum_', 'T+S+R'), ('IGD.MI', 'None', 'Diff_', 'T+S+R'), ('IGD.MI', 'None', 'RelDiff_', 'T+S+R'), ('IGD.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IGD.MI', 'Model': '_IGD.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IGD.MI', 'Model': '_IGD.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IGD.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IGD.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['IGD.MI'], 'Transformations': [('IGD.MI', [('IGD.MI', 'None', 'CumSum_', 'T+S+R'), ('IGD.MI', 'None', 'Diff_', 'T+S+R'), ('IGD.MI', 'None', 'RelDiff_', 'T+S+R'), ('IGD.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='IGD.MI' Length=1297  Min=0.39332 Max=1.08086  Mean=0.7199038627602158 StdDev=0.14282500213157376
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_IGD.MI' Min=0.0 Max=1.0  Mean=0.4750034365421885 StdDev=0.2077333713406836
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_IGD.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_IGD.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_IGD.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_IGD.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0165 MAPE_Forecast=0.0164 MAPE_Test=0.023
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0164 SMAPE_Forecast=0.0163 SMAPE_Test=0.0233
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9976 MASE_Test=0.9931
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.04254009305895552 CRPS_Forecast=0.01963338586411309 CRPS_Test=0.011607142857142863
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01149966085271318 L1_Forecast=0.012897286821705429 L1_Test=0.017214285714285706
INFO:pyaf.std:MODEL_L2 L2_Fit=0.01657336048633703 L2_Forecast=0.018308060452144562 L2_Test=0.019189841062395484
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5523911030069631 LnQ_Forecast=0.1468890575862045 LnQ_Test=0.004626734829740426
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.008000000000000007 MedAE_Forecast=0.009499999999999953 MedAE_Test=0.01649999999999996
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9699653838322136
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _IGD.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None   CumSum_IGD.MI             T+S+R  ...   0.0175       0.0163   0.0230
1    None   CumSum_IGD.MI             T+S+R  ...   0.0175       0.0163   0.0230
2    None         _IGD.MI             T+S+R  ...   0.0165       0.0164   0.0230
3    None         _IGD.MI             T+S+R  ...   0.0165       0.0164   0.0230
4    None   CumSum_IGD.MI             T+S+R  ...   0.0171       0.0164   0.0230
..    ...             ...               ...  ...      ...          ...      ...
211  None  RelDiff_IGD.MI             T+S+R  ...   6.3324      35.5952  62.7746
212  None  RelDiff_IGD.MI             T+S+R  ...  10.8921      48.4201  71.4838
213  None  RelDiff_IGD.MI             T+S+R  ...  10.8921      48.4201  71.4838
214  None  RelDiff_IGD.MI             T+S+R  ...   9.4731      56.8161  96.0267
215  None  RelDiff_IGD.MI             T+S+R  ...   9.4731      56.8161  96.0267

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_IGD.MI             T+S+R  ...  0.0175       0.0163    0.023
1  None  CumSum_IGD.MI             T+S+R  ...  0.0175       0.0163    0.023
2  None        _IGD.MI             T+S+R  ...  0.0165       0.0164    0.023
3  None        _IGD.MI             T+S+R  ...  0.0165       0.0164    0.023
4  None  CumSum_IGD.MI             T+S+R  ...  0.0171       0.0164    0.023

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['IGD.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.163, ('FORECASTING', {'Signals': ['IGD.MI'], 'Horizon': 7}))
7 0    0.7675
1    0.7740
2    0.7930
3    0.7600
4    0.7790
5    0.7745
6    0.7885
Name: IGD.MI, dtype: float64
7 0    0.785
1    0.785
2    0.785
3    0.785
4    0.785
5    0.785
6    0.785
Name: IGD.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_IGD.MI IGD.MI [0.7675, 0.774, 0.793, 0.76, 0.779, 0.7745, 0.7885]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_IGD.MI IGD.MI [0.785, 0.785, 0.785, 0.785, 0.785, 0.785, 0.785]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_IGD.MI IGD.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_IGD.MI IGD.MI 12.246718406677246
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_IGD.MI IGD.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_IGD.MI IGD.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_IGD.MI IGD.MI 0.0151 0.015 0.7277
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_IGD.MI IGD.MI 0.011642857142857161 0.013494707957460345 -0.6221139546482914
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_IGD.MI_7'
