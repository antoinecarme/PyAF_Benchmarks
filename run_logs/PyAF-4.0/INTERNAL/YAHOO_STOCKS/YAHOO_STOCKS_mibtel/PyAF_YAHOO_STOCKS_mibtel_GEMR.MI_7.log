BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 569 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000' '2011-08-09T00:00:00.000000000'
 '2011-08-12T00:00:00.000000000'] TAIL= ['2013-11-14T00:00:00.000000000' '2013-11-15T00:00:00.000000000'
 '2013-11-18T00:00:00.000000000' '2013-11-19T00:00:00.000000000'
 '2013-11-20T00:00:00.000000000']
SIGNAL :  GEMR.MI N= 569 H= 7 HEAD= [0.888  0.887  0.885  0.8845 0.8895] TAIL= [1.761 1.765 1.787 1.769 1.742]
   GEMR.MI       Date
0   0.8880 2011-07-28
1   0.8870 2011-07-29
2   0.8850 2011-08-04
3   0.8845 2011-08-09
4   0.8895 2011-08-12
<class 'pandas.core.frame.DataFrame'>
Int64Index: 569 entries, 0 to 568
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   GEMR.MI  569 non-null    float64       
 1   Date     569 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 13.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['GEMR.MI'], 'Transformations': [('GEMR.MI', 'None', '_', 'T+S+R'), ('GEMR.MI', 'None', 'Diff_', 'T+S+R'), ('GEMR.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEMR.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': '_GEMR.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.08, ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': '_GEMR.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': 'Diff_GEMR.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.338, ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': 'Diff_GEMR.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': 'RelDiff_GEMR.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.674, ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': 'RelDiff_GEMR.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': 'CumSum_GEMR.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.309, ('TRAINING', {'Signal': 'GEMR.MI', 'Transformation': 'CumSum_GEMR.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.404, ('SIGNAL_TRAINING', {'Signals': ['GEMR.MI'], 'Transformations': [('GEMR.MI', 'None', '_', 'T+S+R'), ('GEMR.MI', 'None', 'Diff_', 'T+S+R'), ('GEMR.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEMR.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['GEMR.MI'], 'Transformations': [('GEMR.MI', [('GEMR.MI', 'None', 'CumSum_', 'T+S+R'), ('GEMR.MI', 'None', 'Diff_', 'T+S+R'), ('GEMR.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEMR.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'GEMR.MI', 'Transformations': [('GEMR.MI', 'None', 'CumSum_', 'T+S+R'), ('GEMR.MI', 'None', 'Diff_', 'T+S+R'), ('GEMR.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEMR.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'GEMR.MI', 'Transformations': [('GEMR.MI', 'None', 'CumSum_', 'T+S+R'), ('GEMR.MI', 'None', 'Diff_', 'T+S+R'), ('GEMR.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEMR.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GEMR.MI', 'Model': '_GEMR.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GEMR.MI', 'Model': '_GEMR.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GEMR.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.166, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GEMR.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.201, ('FINALIZE_TRAINING', {'Signals': ['GEMR.MI'], 'Transformations': [('GEMR.MI', [('GEMR.MI', 'None', 'CumSum_', 'T+S+R'), ('GEMR.MI', 'None', 'Diff_', 'T+S+R'), ('GEMR.MI', 'None', 'RelDiff_', 'T+S+R'), ('GEMR.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2013-06-05T00:00:00.000000 TimeDelta=<DateOffset: days=2> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='GEMR.MI' Length=569  Min=0.5 Max=3.1  Mean=1.0742267135325136 StdDev=0.42601206645195083
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_GEMR.MI' Min=0.0 Max=1.0  Mean=0.22085642828173577 StdDev=0.16385079478921183
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_GEMR.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_GEMR.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_GEMR.MI_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_GEMR.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0209 MAPE_Forecast=0.0113 MAPE_Test=0.0092
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0208 SMAPE_Forecast=0.0113 SMAPE_Test=0.0091
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9978 MASE_Forecast=1.0008 MASE_Test=1.1133
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.09288596178642597 CRPS_Forecast=0.04421301868239921 CRPS_Test=0.005499999999999997
INFO:pyaf.std:MODEL_L1 L1_Fit=0.023917594654788422 L1_Forecast=0.017469026548672568 L1_Test=0.016142857142857108
INFO:pyaf.std:MODEL_L2 L2_Fit=0.063984808191377 L2_Forecast=0.024334323332186544 L2_Test=0.018543385420605973
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7267829739070009 LnQ_Forecast=0.02952457613932756 LnQ_Test=0.0007727463431101548
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.007000000000000117 MedAE_Forecast=0.013000000000000123 MedAE_Test=0.018000000000000016
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.14923076923076922
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _GEMR.MI_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _GEMR.MI             T+S+R  ...  0.0209       0.0113    0.0092
1    None   CumSum_GEMR.MI             T+S+R  ...  0.0219       0.0113    0.0092
2    None     Diff_GEMR.MI             T+S+R  ...  0.0209       0.0113    0.0092
3    None  RelDiff_GEMR.MI             T+S+R  ...  0.1644       0.0113    0.0092
4    None  RelDiff_GEMR.MI             T+S+R  ...  0.1644       0.0113    0.0092
..    ...              ...               ...  ...     ...          ...       ...
219  None  RelDiff_GEMR.MI             T+S+R  ...  2.0405      50.2080  157.6162
220  None  RelDiff_GEMR.MI             T+S+R  ...  2.0444      50.6451  158.4372
221  None  RelDiff_GEMR.MI             T+S+R  ...  2.0444      50.6451  158.4372
222  None  RelDiff_GEMR.MI             T+S+R  ...  2.6122      61.8682  175.5162
223  None  RelDiff_GEMR.MI             T+S+R  ...  2.6122      61.8682  175.5162

[224 rows x 10 columns]
  Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _GEMR.MI             T+S+R  ...  0.0209       0.0113   0.0092
1  None   CumSum_GEMR.MI             T+S+R  ...  0.0219       0.0113   0.0092
2  None     Diff_GEMR.MI             T+S+R  ...  0.0209       0.0113   0.0092
3  None  RelDiff_GEMR.MI             T+S+R  ...  0.1644       0.0113   0.0092
4  None  RelDiff_GEMR.MI             T+S+R  ...  0.1644       0.0113   0.0092

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['GEMR.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.13, ('FORECASTING', {'Signals': ['GEMR.MI'], 'Horizon': 7}))
7 0    1.773
1    1.739
2    1.739
3    1.750
4    1.796
5    1.815
6    1.817
Name: GEMR.MI, dtype: float64
7 0    1.742
1    1.742
2    1.742
3    1.742
4    1.742
5    1.742
6    1.742
Name: GEMR.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_GEMR.MI GEMR.MI [1.773, 1.739, 1.739, 1.75, 1.796, 1.815, 1.817]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_GEMR.MI GEMR.MI [1.742, 1.742, 1.742, 1.742, 1.742, 1.742, 1.742]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_GEMR.MI GEMR.MI 569 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_GEMR.MI GEMR.MI 10.840155124664307
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_GEMR.MI GEMR.MI Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_GEMR.MI GEMR.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_GEMR.MI GEMR.MI 0.0196 0.0199 1.8903
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_GEMR.MI GEMR.MI 0.03528571428571424 0.04615656585393425 -1.123235539066333
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_GEMR.MI_7'
