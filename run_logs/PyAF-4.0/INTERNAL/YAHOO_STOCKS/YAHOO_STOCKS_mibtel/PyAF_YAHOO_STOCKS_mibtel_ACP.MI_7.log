BENCH_DATA YAHOO_STOCKS_mibtel
TIME :  Date N= 908 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2015-01-14T00:00:00.000000000' '2015-01-15T00:00:00.000000000'
 '2015-01-16T00:00:00.000000000' '2015-01-19T00:00:00.000000000'
 '2015-01-20T00:00:00.000000000']
SIGNAL :  ACP.MI N= 908 H= 7 HEAD= [0.98  0.977 0.948 0.946 0.95 ] TAIL= [0.935  0.9485 0.9485 0.9485 0.9485]
   ACP.MI       Date
0   0.980 2011-07-28
1   0.977 2011-07-29
2   0.948 2011-08-01
3   0.946 2011-08-02
4   0.950 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 908 entries, 0 to 907
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ACP.MI  908 non-null    float64       
 1   Date    908 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 21.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ACP.MI'], 'Transformations': [('ACP.MI', 'None', '_', 'T+S+R'), ('ACP.MI', 'None', 'Diff_', 'T+S+R'), ('ACP.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACP.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': '_ACP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.217, ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': '_ACP.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': 'Diff_ACP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.643, ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': 'Diff_ACP.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': 'RelDiff_ACP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.957, ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': 'RelDiff_ACP.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': 'CumSum_ACP.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.719, ('TRAINING', {'Signal': 'ACP.MI', 'Transformation': 'CumSum_ACP.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.539, ('SIGNAL_TRAINING', {'Signals': ['ACP.MI'], 'Transformations': [('ACP.MI', 'None', '_', 'T+S+R'), ('ACP.MI', 'None', 'Diff_', 'T+S+R'), ('ACP.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACP.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ACP.MI'], 'Transformations': [('ACP.MI', [('ACP.MI', 'None', 'CumSum_', 'T+S+R'), ('ACP.MI', 'None', 'Diff_', 'T+S+R'), ('ACP.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACP.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ACP.MI', 'Transformations': [('ACP.MI', 'None', 'CumSum_', 'T+S+R'), ('ACP.MI', 'None', 'Diff_', 'T+S+R'), ('ACP.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACP.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ACP.MI', 'Transformations': [('ACP.MI', 'None', 'CumSum_', 'T+S+R'), ('ACP.MI', 'None', 'Diff_', 'T+S+R'), ('ACP.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACP.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACP.MI', 'Model': '_ACP.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACP.MI', 'Model': '_ACP.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACP.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.178, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACP.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.213, ('FINALIZE_TRAINING', {'Signals': ['ACP.MI'], 'Transformations': [('ACP.MI', [('ACP.MI', 'None', 'CumSum_', 'T+S+R'), ('ACP.MI', 'None', 'Diff_', 'T+S+R'), ('ACP.MI', 'None', 'RelDiff_', 'T+S+R'), ('ACP.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2014-05-01T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ACP.MI' Length=908  Min=0.4455 Max=1.439  Mean=0.8361884361233489 StdDev=0.16665406720262013
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ACP.MI' Min=0.0 Max=1.0  Mean=0.3932445255393528 StdDev=0.16774440584058387
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ACP.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ACP.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ACP.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ACP.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0164 MAPE_Forecast=0.013 MAPE_Test=0.0057
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0164 SMAPE_Forecast=0.0131 SMAPE_Test=0.0057
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9986 MASE_Forecast=0.9945 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.02930709795321638 CRPS_Forecast=0.03358702504604051 CRPS_Test=0.003071428571428566
INFO:pyaf.std:MODEL_L1 L1_Fit=0.012430555555555554 L1_Forecast=0.01460773480662984 L1_Test=0.005357142857142838
INFO:pyaf.std:MODEL_L2 L2_Fit=0.02073325428709476 L2_Forecast=0.02785514027570147 L2_Test=0.009009915173217293
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5193050818149757 LnQ_Forecast=0.10421232886811746 LnQ_Test=0.0006343923712441481
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.008499999999999952 MedAE_Forecast=0.006500000000000061 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5379969803724207
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ACP.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _ACP.MI             T+S+R  ...   0.0164       0.0130    0.0057
1    None         _ACP.MI             T+S+R  ...   0.0164       0.0130    0.0057
2    None   CumSum_ACP.MI             T+S+R  ...   0.0171       0.0130    0.0057
3    None     Diff_ACP.MI             T+S+R  ...   0.0164       0.0130    0.0057
4    None     Diff_ACP.MI             T+S+R  ...   0.0164       0.0130    0.0057
..    ...             ...               ...  ...      ...          ...       ...
219  None  RelDiff_ACP.MI             T+S+R  ...   8.4824      48.2112   82.4966
220  None  RelDiff_ACP.MI             T+S+R  ...  14.2001     104.1161  198.3744
221  None  RelDiff_ACP.MI             T+S+R  ...  14.2001     104.1161  198.3744
222  None  RelDiff_ACP.MI             T+S+R  ...  14.1664     104.4507  199.4789
223  None  RelDiff_ACP.MI             T+S+R  ...  14.1664     104.4507  199.4789

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ACP.MI             T+S+R  ...  0.0164        0.013   0.0057
1  None        _ACP.MI             T+S+R  ...  0.0164        0.013   0.0057
2  None  CumSum_ACP.MI             T+S+R  ...  0.0171        0.013   0.0057
3  None    Diff_ACP.MI             T+S+R  ...  0.0164        0.013   0.0057
4  None    Diff_ACP.MI             T+S+R  ...  0.0164        0.013   0.0057

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ACP.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.147, ('FORECASTING', {'Signals': ['ACP.MI'], 'Horizon': 7}))
7 0    0.9485
1    0.9225
2    0.9100
3    0.9110
4    0.8950
5    0.8970
6    0.8600
Name: ACP.MI, dtype: float64
7 0    0.9485
1    0.9485
2    0.9485
3    0.9485
4    0.9485
5    0.9485
6    0.9485
Name: ACP.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ACP.MI ACP.MI [0.9485, 0.9225, 0.91, 0.911, 0.895, 0.897, 0.86]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ACP.MI ACP.MI [0.9485, 0.9485, 0.9485, 0.9485, 0.9485, 0.9485, 0.9485]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ACP.MI ACP.MI 908 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ACP.MI ACP.MI 12.002848148345947
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ACP.MI ACP.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ACP.MI ACP.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ACP.MI ACP.MI 0.0474 0.0459 2.6803
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ACP.MI ACP.MI 0.04221428571428571 0.049151733002437026 -2.811476643494256
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mibtel_ACP.MI_7'
