BENCH_DATA YAHOO_STOCKS_ibexnm
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  TEC.MC N= 1298 H= 7 HEAD= [1.615 1.565 1.55  1.535 1.485] TAIL= [2.1   2.11  2.09  2.3   2.395]
   TEC.MC       Date
0   1.615 2011-07-28
1   1.565 2011-07-29
2   1.550 2011-08-01
3   1.535 2011-08-02
4   1.485 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   TEC.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['TEC.MC'], 'Transformations': [('TEC.MC', 'None', '_', 'T+S+R'), ('TEC.MC', 'None', 'Diff_', 'T+S+R'), ('TEC.MC', 'None', 'RelDiff_', 'T+S+R'), ('TEC.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': '_TEC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.294, ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': '_TEC.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': 'Diff_TEC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.373, ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': 'Diff_TEC.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': 'RelDiff_TEC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.7, ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': 'RelDiff_TEC.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': 'CumSum_TEC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.574, ('TRAINING', {'Signal': 'TEC.MC', 'Transformation': 'CumSum_TEC.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.943, ('SIGNAL_TRAINING', {'Signals': ['TEC.MC'], 'Transformations': [('TEC.MC', 'None', '_', 'T+S+R'), ('TEC.MC', 'None', 'Diff_', 'T+S+R'), ('TEC.MC', 'None', 'RelDiff_', 'T+S+R'), ('TEC.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['TEC.MC'], 'Transformations': [('TEC.MC', [('TEC.MC', 'None', 'CumSum_', 'T+S+R'), ('TEC.MC', 'None', 'Diff_', 'T+S+R'), ('TEC.MC', 'None', 'RelDiff_', 'T+S+R'), ('TEC.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'TEC.MC', 'Transformations': [('TEC.MC', 'None', 'CumSum_', 'T+S+R'), ('TEC.MC', 'None', 'Diff_', 'T+S+R'), ('TEC.MC', 'None', 'RelDiff_', 'T+S+R'), ('TEC.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'TEC.MC', 'Transformations': [('TEC.MC', 'None', 'CumSum_', 'T+S+R'), ('TEC.MC', 'None', 'Diff_', 'T+S+R'), ('TEC.MC', 'None', 'RelDiff_', 'T+S+R'), ('TEC.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TEC.MC', 'Model': '_TEC.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TEC.MC', 'Model': '_TEC.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TEC.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.174, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TEC.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.207, ('FINALIZE_TRAINING', {'Signals': ['TEC.MC'], 'Transformations': [('TEC.MC', [('TEC.MC', 'None', 'CumSum_', 'T+S+R'), ('TEC.MC', 'None', 'Diff_', 'T+S+R'), ('TEC.MC', 'None', 'RelDiff_', 'T+S+R'), ('TEC.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='TEC.MC' Length=1298  Min=0.97 Max=2.395  Mean=1.357677195685669 StdDev=0.19901330519161597
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_TEC.MC' Min=0.0 Max=1.0  Mean=0.27205417241099566 StdDev=0.13965845978359032
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_TEC.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_TEC.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_TEC.MC_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_TEC.MC_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0186 MAPE_Forecast=0.0169 MAPE_Test=0.0409
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0186 SMAPE_Forecast=0.0169 SMAPE_Test=0.0423
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.997 MASE_Test=0.8932
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.056135220318237464 CRPS_Forecast=0.050488784919373156 CRPS_Test=0.06821428571428574
INFO:pyaf.std:MODEL_L1 L1_Fit=0.025755813953488364 L1_Forecast=0.022084942084942084 L1_Test=0.08857142857142862
INFO:pyaf.std:MODEL_L2 L2_Fit=0.03738224405439881 L2_Forecast=0.03218851326328052 L2_Test=0.11664965862420203
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7233172503915932 LnQ_Forecast=0.15003694678691187 LnQ_Test=0.021493295796043622
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.020000000000000018 MedAE_Forecast=0.015000000000000124 MedAE_Test=0.07000000000000006
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.45263157894736844
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _TEC.MC_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE    TestMAPE
0    None         _TEC.MC  ...       0.0169      0.0409
1    None   CumSum_TEC.MC  ...       0.0169      0.0409
2    None   CumSum_TEC.MC  ...       0.0169      0.0409
3    None     Diff_TEC.MC  ...       0.0169      0.0409
4    None     Diff_TEC.MC  ...       0.0169      0.0409
..    ...             ...  ...          ...         ...
203  None  RelDiff_TEC.MC  ...    9853.4246  28058.1701
204  None  RelDiff_TEC.MC  ...   14627.8856  35994.9447
205  None  RelDiff_TEC.MC  ...   28640.7351  37503.5212
206  None  RelDiff_TEC.MC  ...   28640.7351  37503.5212
207  None  RelDiff_TEC.MC  ...   46508.7008  85031.6475

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _TEC.MC             T+S+R  ...  0.0186       0.0169   0.0409
1  None  CumSum_TEC.MC             T+S+R  ...  0.0189       0.0169   0.0409
2  None  CumSum_TEC.MC             T+S+R  ...  0.0189       0.0169   0.0409
3  None    Diff_TEC.MC             T+S+R  ...  0.0186       0.0169   0.0409
4  None    Diff_TEC.MC             T+S+R  ...  0.0186       0.0169   0.0409

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['TEC.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.198, ('FORECASTING', {'Signals': ['TEC.MC'], 'Horizon': 7}))
7 0    2.560
1    2.500
2    2.740
3    2.760
4    2.845
5    2.750
6    2.760
Name: TEC.MC, dtype: float64
7 0    2.395
1    2.395
2    2.395
3    2.395
4    2.395
5    2.395
6    2.395
Name: TEC.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_TEC.MC TEC.MC [2.56, 2.5, 2.74, 2.76, 2.845, 2.75, 2.76]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_TEC.MC TEC.MC [2.395, 2.395, 2.395, 2.395, 2.395, 2.395, 2.395]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_TEC.MC TEC.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_TEC.MC TEC.MC 11.441991329193115
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_TEC.MC TEC.MC Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_TEC.MC TEC.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_TEC.MC TEC.MC 0.112 0.1195 3.6134
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_TEC.MC TEC.MC 0.3071428571428571 0.3278174579156603 -7.186164001973861
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ibexnm_TEC.MC_7'
