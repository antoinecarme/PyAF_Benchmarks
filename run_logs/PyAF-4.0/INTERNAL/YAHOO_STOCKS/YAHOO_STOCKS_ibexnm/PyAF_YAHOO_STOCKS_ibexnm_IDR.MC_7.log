BENCH_DATA YAHOO_STOCKS_ibexnm
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  IDR.MC N= 1298 H= 7 HEAD= [13.385 13.83  13.445 13.07  12.9  ] TAIL= [9.68  9.637 9.736 9.778 9.838]
   IDR.MC       Date
0  13.385 2011-07-28
1  13.830 2011-07-29
2  13.445 2011-08-01
3  13.070 2011-08-02
4  12.900 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   IDR.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['IDR.MC'], 'Transformations': [('IDR.MC', 'None', '_', 'T+S+R'), ('IDR.MC', 'None', 'Diff_', 'T+S+R'), ('IDR.MC', 'None', 'RelDiff_', 'T+S+R'), ('IDR.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': '_IDR.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.845, ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': '_IDR.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': 'Diff_IDR.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.649, ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': 'Diff_IDR.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': 'RelDiff_IDR.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.0, ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': 'RelDiff_IDR.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': 'CumSum_IDR.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.544, ('TRAINING', {'Signal': 'IDR.MC', 'Transformation': 'CumSum_IDR.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.041, ('SIGNAL_TRAINING', {'Signals': ['IDR.MC'], 'Transformations': [('IDR.MC', 'None', '_', 'T+S+R'), ('IDR.MC', 'None', 'Diff_', 'T+S+R'), ('IDR.MC', 'None', 'RelDiff_', 'T+S+R'), ('IDR.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['IDR.MC'], 'Transformations': [('IDR.MC', [('IDR.MC', 'None', 'CumSum_', 'T+S+R'), ('IDR.MC', 'None', 'Diff_', 'T+S+R'), ('IDR.MC', 'None', 'RelDiff_', 'T+S+R'), ('IDR.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'IDR.MC', 'Transformations': [('IDR.MC', 'None', 'CumSum_', 'T+S+R'), ('IDR.MC', 'None', 'Diff_', 'T+S+R'), ('IDR.MC', 'None', 'RelDiff_', 'T+S+R'), ('IDR.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'IDR.MC', 'Transformations': [('IDR.MC', 'None', 'CumSum_', 'T+S+R'), ('IDR.MC', 'None', 'Diff_', 'T+S+R'), ('IDR.MC', 'None', 'RelDiff_', 'T+S+R'), ('IDR.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IDR.MC', 'Model': '_IDR.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IDR.MC', 'Model': '_IDR.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IDR.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.24, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IDR.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.274, ('FINALIZE_TRAINING', {'Signals': ['IDR.MC'], 'Transformations': [('IDR.MC', [('IDR.MC', 'None', 'CumSum_', 'T+S+R'), ('IDR.MC', 'None', 'Diff_', 'T+S+R'), ('IDR.MC', 'None', 'RelDiff_', 'T+S+R'), ('IDR.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='IDR.MC' Length=1298  Min=6.103 Max=14.77  Mean=10.188497688751955 StdDev=1.7096274246286627
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_IDR.MC' Min=0.0 Max=1.0  Mean=0.47138544926178993 StdDev=0.19725711602961346
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_IDR.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_IDR.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_IDR.MC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_IDR.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0161 MAPE_Forecast=0.0178 MAPE_Test=0.0107
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0161 SMAPE_Forecast=0.0179 SMAPE_Test=0.0108
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9986 MASE_Test=1.3001
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5562071542227662 CRPS_Forecast=0.20456863865546218 CRPS_Test=0.06778571428571427
INFO:pyaf.std:MODEL_L1 L1_Fit=0.16164728682170543 L1_Forecast=0.17079922779922777 L1_Test=0.10314285714285683
INFO:pyaf.std:MODEL_L2 L2_Fit=0.23075474832810916 L2_Forecast=0.23399103206918653 L2_Test=0.128393368765124
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5539216002303593 LnQ_Forecast=0.15635034567537634 LnQ_Test=0.0012915914922553803
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.11999999999999922 MedAE_Forecast=0.13299999999999912 MedAE_Test=0.05999999999999872
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.840198453905619
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _IDR.MC_Lag1Trend_residue_bestCycle_byMAPE None -0.00011538017768550346 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _IDR.MC             T+S+R  ...   0.0161       0.0178    0.0107
1    None         _IDR.MC             T+S+R  ...   0.0161       0.0178    0.0107
2    None   CumSum_IDR.MC             T+S+R  ...   0.0166       0.0178    0.0107
3    None     Diff_IDR.MC             T+S+R  ...   0.0161       0.0178    0.0107
4    None     Diff_IDR.MC             T+S+R  ...   0.0161       0.0178    0.0107
..    ...             ...               ...  ...      ...          ...       ...
211  None  RelDiff_IDR.MC             T+S+R  ...  20.1420     128.0110  211.7024
212  None  RelDiff_IDR.MC             T+S+R  ...  18.1813     130.1626  192.8053
213  None  RelDiff_IDR.MC             T+S+R  ...  18.1813     130.1626  192.8053
214  None  RelDiff_IDR.MC             T+S+R  ...  16.0752     154.2617  263.5302
215  None  RelDiff_IDR.MC             T+S+R  ...  16.0752     154.2617  263.5302

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _IDR.MC             T+S+R  ...  0.0161       0.0178   0.0107
1  None        _IDR.MC             T+S+R  ...  0.0161       0.0178   0.0107
2  None  CumSum_IDR.MC             T+S+R  ...  0.0166       0.0178   0.0107
3  None    Diff_IDR.MC             T+S+R  ...  0.0161       0.0178   0.0107
4  None    Diff_IDR.MC             T+S+R  ...  0.0161       0.0178   0.0107

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['IDR.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.173, ('FORECASTING', {'Signals': ['IDR.MC'], 'Horizon': 7}))
7 0    10.300
1    10.435
2    10.330
3    10.330
4    10.590
5    10.665
6    10.680
Name: IDR.MC, dtype: float64
7 0    9.838
1    9.838
2    9.838
3    9.838
4    9.838
5    9.838
6    9.838
Name: IDR.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_IDR.MC IDR.MC [10.3, 10.435, 10.33, 10.33, 10.59, 10.665, 10.68]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_IDR.MC IDR.MC [9.838, 9.838, 9.838, 9.838, 9.838, 9.838, 9.838]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_IDR.MC IDR.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_IDR.MC IDR.MC 11.573367595672607
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_IDR.MC IDR.MC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_IDR.MC IDR.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_IDR.MC IDR.MC 0.0607 0.0627 6.4852
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_IDR.MC IDR.MC 0.6377142857142866 0.656002831004345 -17.1883348318181
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ibexnm_IDR.MC_7'
