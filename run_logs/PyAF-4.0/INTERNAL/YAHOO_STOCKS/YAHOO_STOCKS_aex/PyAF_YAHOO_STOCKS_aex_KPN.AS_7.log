BENCH_DATA YAHOO_STOCKS_aex
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  KPN.AS N= 1298 H= 7 HEAD= [6.01556 6.03011 5.98949 6.02041 6.05315] TAIL= [3.201 3.173 3.2   3.191 3.175]
    KPN.AS       Date
0  6.01556 2011-07-28
1  6.03011 2011-07-29
2  5.98949 2011-08-01
3  6.02041 2011-08-02
4  6.05315 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   KPN.AS  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['KPN.AS'], 'Transformations': [('KPN.AS', 'None', '_', 'T+S+R'), ('KPN.AS', 'None', 'Diff_', 'T+S+R'), ('KPN.AS', 'None', 'RelDiff_', 'T+S+R'), ('KPN.AS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': '_KPN.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.28, ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': '_KPN.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': 'Diff_KPN.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.482, ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': 'Diff_KPN.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': 'RelDiff_KPN.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.162, ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': 'RelDiff_KPN.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': 'CumSum_KPN.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.148, ('TRAINING', {'Signal': 'KPN.AS', 'Transformation': 'CumSum_KPN.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.073, ('SIGNAL_TRAINING', {'Signals': ['KPN.AS'], 'Transformations': [('KPN.AS', 'None', '_', 'T+S+R'), ('KPN.AS', 'None', 'Diff_', 'T+S+R'), ('KPN.AS', 'None', 'RelDiff_', 'T+S+R'), ('KPN.AS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['KPN.AS'], 'Transformations': [('KPN.AS', [('KPN.AS', 'None', 'CumSum_', 'T+S+R'), ('KPN.AS', 'None', 'Diff_', 'T+S+R'), ('KPN.AS', 'None', 'RelDiff_', 'T+S+R'), ('KPN.AS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'KPN.AS', 'Transformations': [('KPN.AS', 'None', 'CumSum_', 'T+S+R'), ('KPN.AS', 'None', 'Diff_', 'T+S+R'), ('KPN.AS', 'None', 'RelDiff_', 'T+S+R'), ('KPN.AS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'KPN.AS', 'Transformations': [('KPN.AS', 'None', 'CumSum_', 'T+S+R'), ('KPN.AS', 'None', 'Diff_', 'T+S+R'), ('KPN.AS', 'None', 'RelDiff_', 'T+S+R'), ('KPN.AS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'KPN.AS', 'Model': '_KPN.AS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'KPN.AS', 'Model': '_KPN.AS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'KPN.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'KPN.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.218, ('FINALIZE_TRAINING', {'Signals': ['KPN.AS'], 'Transformations': [('KPN.AS', [('KPN.AS', 'None', 'CumSum_', 'T+S+R'), ('KPN.AS', 'None', 'Diff_', 'T+S+R'), ('KPN.AS', 'None', 'RelDiff_', 'T+S+R'), ('KPN.AS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='KPN.AS' Length=1298  Min=1.39 Max=6.15379  Mean=3.2803834283513074 StdDev=1.1387023258380164
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_KPN.AS' Min=0.0 Max=1.0  Mean=0.3968234175627623 StdDev=0.23903285531856283
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_KPN.AS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_KPN.AS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_KPN.AS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_KPN.AS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0147 MAPE_Forecast=0.0138 MAPE_Test=0.0079
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0147 SMAPE_Forecast=0.0138 SMAPE_Test=0.0079
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0011 MASE_Test=0.8876
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.3657159546154631 CRPS_Forecast=0.03848348507835564 CRPS_Test=0.014785714285714275
INFO:pyaf.std:MODEL_L1 L1_Fit=0.04495804263565892 L1_Forecast=0.04652123552123551 L1_Test=0.025000000000000102
INFO:pyaf.std:MODEL_L2 L2_Fit=0.06733399698661738 L2_Forecast=0.06254113704110134 L2_Test=0.02966238599400164
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5008039043309848 LnQ_Forecast=0.0906581625197395 LnQ_Test=0.000616296459688139
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.030919999999999837 MedAE_Forecast=0.03699999999999992 MedAE_Test=0.027000000000000135
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9709831877559674
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _KPN.AS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _KPN.AS             T+S+R  ...   0.0143       0.0137    0.0094
1    None         _KPN.AS             T+S+R  ...   0.0146       0.0137    0.0081
2    None         _KPN.AS             T+S+R  ...   0.0146       0.0137    0.0081
3    None         _KPN.AS             T+S+R  ...   0.0146       0.0137    0.0082
4    None         _KPN.AS             T+S+R  ...   0.0142       0.0137    0.0097
..    ...             ...               ...  ...      ...          ...       ...
195  None  RelDiff_KPN.AS             T+S+R  ...   4.9299      50.3822  105.7069
196  None  RelDiff_KPN.AS             T+S+R  ...  17.8291      90.5946  151.8955
197  None  RelDiff_KPN.AS             T+S+R  ...  17.8291      90.5946  151.8955
198  None  RelDiff_KPN.AS             T+S+R  ...  10.3704     183.1747  507.3197
199  None  RelDiff_KPN.AS             T+S+R  ...  10.3704     183.1747  507.3197

[200 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _KPN.AS             T+S+R  ...  0.0143       0.0137   0.0094
1  None        _KPN.AS             T+S+R  ...  0.0146       0.0137   0.0081
2  None        _KPN.AS             T+S+R  ...  0.0146       0.0137   0.0081
3  None        _KPN.AS             T+S+R  ...  0.0146       0.0137   0.0082
4  None        _KPN.AS             T+S+R  ...  0.0142       0.0137   0.0097

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['KPN.AS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.151, ('FORECASTING', {'Signals': ['KPN.AS'], 'Horizon': 7}))
7 0    3.160
1    3.118
2    3.060
3    3.150
4    3.098
5    3.076
6    2.942
Name: KPN.AS, dtype: float64
7 0    3.175
1    3.175
2    3.175
3    3.175
4    3.175
5    3.175
6    3.175
Name: KPN.AS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_KPN.AS KPN.AS [3.16, 3.118, 3.06, 3.15, 3.098, 3.076, 2.942]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_KPN.AS KPN.AS [3.175, 3.175, 3.175, 3.175, 3.175, 3.175, 3.175]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_KPN.AS KPN.AS 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_KPN.AS KPN.AS 11.52352499961853
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_KPN.AS KPN.AS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_KPN.AS KPN.AS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_KPN.AS KPN.AS 0.0293 0.0286 1.3374
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_KPN.AS KPN.AS 0.08871428571428552 0.1117030502205351 -1.7081901049976347
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aex_KPN.AS_7'
