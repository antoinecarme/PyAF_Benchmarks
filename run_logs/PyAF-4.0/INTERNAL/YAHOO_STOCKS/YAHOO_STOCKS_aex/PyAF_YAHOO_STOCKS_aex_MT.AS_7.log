BENCH_DATA YAHOO_STOCKS_aex
TIME :  Date N= 776 H= 7 HEAD= ['2013-07-29T00:00:00.000000000' '2013-07-30T00:00:00.000000000'
 '2013-07-31T00:00:00.000000000' '2013-08-01T00:00:00.000000000'
 '2013-08-02T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MT.AS N= 776 H= 7 HEAD= [6.77026 6.73223 6.72204 6.47481 6.4198 ] TAIL= [5.123 5.034 5.159 5.124 5.22 ]
     MT.AS       Date
0  6.77026 2013-07-29
1  6.73223 2013-07-30
2  6.72204 2013-07-31
3  6.47481 2013-08-01
4  6.41980 2013-08-02
<class 'pandas.core.frame.DataFrame'>
Int64Index: 776 entries, 0 to 775
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MT.AS   776 non-null    float64       
 1   Date    776 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 18.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MT.AS'], 'Transformations': [('MT.AS', 'None', '_', 'T+S+R'), ('MT.AS', 'None', 'Diff_', 'T+S+R'), ('MT.AS', 'None', 'RelDiff_', 'T+S+R'), ('MT.AS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT.AS', 'Transformation': '_MT.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.868, ('TRAINING', {'Signal': 'MT.AS', 'Transformation': '_MT.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT.AS', 'Transformation': 'Diff_MT.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.494, ('TRAINING', {'Signal': 'MT.AS', 'Transformation': 'Diff_MT.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT.AS', 'Transformation': 'RelDiff_MT.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.19, ('TRAINING', {'Signal': 'MT.AS', 'Transformation': 'RelDiff_MT.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT.AS', 'Transformation': 'CumSum_MT.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.151, ('TRAINING', {'Signal': 'MT.AS', 'Transformation': 'CumSum_MT.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.706, ('SIGNAL_TRAINING', {'Signals': ['MT.AS'], 'Transformations': [('MT.AS', 'None', '_', 'T+S+R'), ('MT.AS', 'None', 'Diff_', 'T+S+R'), ('MT.AS', 'None', 'RelDiff_', 'T+S+R'), ('MT.AS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MT.AS'], 'Transformations': [('MT.AS', [('MT.AS', 'None', 'CumSum_', 'T+S+R'), ('MT.AS', 'None', 'Diff_', 'T+S+R'), ('MT.AS', 'None', 'RelDiff_', 'T+S+R'), ('MT.AS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MT.AS', 'Transformations': [('MT.AS', 'None', 'CumSum_', 'T+S+R'), ('MT.AS', 'None', 'Diff_', 'T+S+R'), ('MT.AS', 'None', 'RelDiff_', 'T+S+R'), ('MT.AS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MT.AS', 'Transformations': [('MT.AS', 'None', 'CumSum_', 'T+S+R'), ('MT.AS', 'None', 'Diff_', 'T+S+R'), ('MT.AS', 'None', 'RelDiff_', 'T+S+R'), ('MT.AS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MT.AS', 'Model': '_MT.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MT.AS', 'Model': '_MT.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MT.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.178, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MT.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.211, ('FINALIZE_TRAINING', {'Signals': ['MT.AS'], 'Transformations': [('MT.AS', [('MT.AS', 'None', 'CumSum_', 'T+S+R'), ('MT.AS', 'None', 'Diff_', 'T+S+R'), ('MT.AS', 'None', 'RelDiff_', 'T+S+R'), ('MT.AS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2013-07-29T00:00:00.000000 TimeMax=2015-12-04T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MT.AS' Length=776  Min=1.78222 Max=8.84318  Mean=6.033621649484542 StdDev=1.8487839886218862
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MT.AS' Min=0.0 Max=1.0  Mean=0.602099664845083 StdDev=0.2618318172914004
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MT.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MT.AS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MT.AS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MT.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0163 MAPE_Forecast=0.0386 MAPE_Test=0.0356
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0163 SMAPE_Forecast=0.0387 SMAPE_Test=0.0365
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9986 MASE_Test=1.0511
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.39705066852802734 CRPS_Forecast=0.28100286794805196 CRPS_Test=0.14742857142857138
INFO:pyaf.std:MODEL_L1 L1_Fit=0.10072481300813009 L1_Forecast=0.12668532467532467 L1_Test=0.17500000000000007
INFO:pyaf.std:MODEL_L2 L2_Fit=0.13181274201703258 L2_Forecast=0.16284900406810607 L2_Test=0.21070595625183453
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3044175830207716 LnQ_Forecast=0.3668219990596302 LnQ_Test=0.013703029035916546
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.08150999999999975 MedAE_Forecast=0.10999999999999988 MedAE_Test=0.125
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7064251886429042
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MT.AS_Lag1Trend_residue_bestCycle_byMAPE None -0.00019260837053314273 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _MT.AS             T+S+R  ...  0.0163       0.0386   0.0356
1    None         _MT.AS             T+S+R  ...  0.0163       0.0386   0.0356
2    None   CumSum_MT.AS             T+S+R  ...  0.0175       0.0386   0.0356
3    None   CumSum_MT.AS             T+S+R  ...  0.0175       0.0386   0.0356
4    None     Diff_MT.AS             T+S+R  ...  0.0163       0.0386   0.0356
..    ...            ...               ...  ...     ...          ...      ...
195  None   CumSum_MT.AS             T+S+R  ...  1.0634       2.0590   0.1401
196  None   CumSum_MT.AS             T+S+R  ...  0.8884       2.1050   0.4459
197  None   CumSum_MT.AS             T+S+R  ...  1.4240       2.4594   1.7172
198  None   CumSum_MT.AS             T+S+R  ...  1.4240       2.4594   1.7172
199  None   CumSum_MT.AS             T+S+R  ...  1.7117       3.1775   2.2455

[200 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _MT.AS             T+S+R  ...  0.0163       0.0386   0.0356
1  None         _MT.AS             T+S+R  ...  0.0163       0.0386   0.0356
2  None   CumSum_MT.AS             T+S+R  ...  0.0175       0.0386   0.0356
3  None   CumSum_MT.AS             T+S+R  ...  0.0175       0.0386   0.0356
4  None     Diff_MT.AS             T+S+R  ...  0.0163       0.0386   0.0356

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MT.AS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.143, ('FORECASTING', {'Signals': ['MT.AS'], 'Horizon': 7}))
7 0    5.022
1    5.020
2    5.110
3    5.189
4    5.257
5    5.407
6    5.474
Name: MT.AS, dtype: float64
7 0    5.22
1    5.22
2    5.22
3    5.22
4    5.22
5    5.22
6    5.22
Name: MT.AS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MT.AS MT.AS [5.022, 5.02, 5.11, 5.189, 5.257, 5.407, 5.474]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MT.AS MT.AS [5.22, 5.22, 5.22, 5.22, 5.22, 5.22, 5.22]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MT.AS MT.AS 776 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MT.AS MT.AS 10.15151047706604
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MT.AS MT.AS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MT.AS MT.AS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MT.AS MT.AS 0.0278 0.0278 1.9117
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MT.AS MT.AS 0.1452857142857142 0.16609764769986532 -0.002760155905493944
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aex_MT.AS_7'
