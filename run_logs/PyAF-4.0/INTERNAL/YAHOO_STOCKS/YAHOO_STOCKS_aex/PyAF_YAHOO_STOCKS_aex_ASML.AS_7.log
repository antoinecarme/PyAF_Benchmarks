BENCH_DATA YAHOO_STOCKS_aex
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ASML.AS N= 1298 H= 7 HEAD= [25.30997 24.98504 24.77999 24.65001 24.29997] TAIL= [90.61 91.   92.45 92.   93.  ]
    ASML.AS       Date
0  25.30997 2011-07-28
1  24.98504 2011-07-29
2  24.77999 2011-08-01
3  24.65001 2011-08-02
4  24.29997 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype         
---  ------   --------------  -----         
 0   ASML.AS  1298 non-null   float64       
 1   Date     1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ASML.AS'], 'Transformations': [('ASML.AS', 'None', '_', 'T+S+R'), ('ASML.AS', 'None', 'Diff_', 'T+S+R'), ('ASML.AS', 'None', 'RelDiff_', 'T+S+R'), ('ASML.AS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': '_ASML.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.007, ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': '_ASML.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': 'Diff_ASML.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.904, ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': 'Diff_ASML.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': 'RelDiff_ASML.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.288, ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': 'RelDiff_ASML.AS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': 'CumSum_ASML.AS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.864, ('TRAINING', {'Signal': 'ASML.AS', 'Transformation': 'CumSum_ASML.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.064, ('SIGNAL_TRAINING', {'Signals': ['ASML.AS'], 'Transformations': [('ASML.AS', 'None', '_', 'T+S+R'), ('ASML.AS', 'None', 'Diff_', 'T+S+R'), ('ASML.AS', 'None', 'RelDiff_', 'T+S+R'), ('ASML.AS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ASML.AS'], 'Transformations': [('ASML.AS', [('ASML.AS', 'None', 'CumSum_', 'T+S+R'), ('ASML.AS', 'None', 'Diff_', 'T+S+R'), ('ASML.AS', 'None', 'RelDiff_', 'T+S+R'), ('ASML.AS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ASML.AS', 'Transformations': [('ASML.AS', 'None', 'CumSum_', 'T+S+R'), ('ASML.AS', 'None', 'Diff_', 'T+S+R'), ('ASML.AS', 'None', 'RelDiff_', 'T+S+R'), ('ASML.AS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ASML.AS', 'Transformations': [('ASML.AS', 'None', 'CumSum_', 'T+S+R'), ('ASML.AS', 'None', 'Diff_', 'T+S+R'), ('ASML.AS', 'None', 'RelDiff_', 'T+S+R'), ('ASML.AS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ASML.AS', 'Model': '_ASML.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ASML.AS', 'Model': '_ASML.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ASML.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ASML.AS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.257, ('FINALIZE_TRAINING', {'Signals': ['ASML.AS'], 'Transformations': [('ASML.AS', [('ASML.AS', 'None', 'CumSum_', 'T+S+R'), ('ASML.AS', 'None', 'Diff_', 'T+S+R'), ('ASML.AS', 'None', 'RelDiff_', 'T+S+R'), ('ASML.AS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ASML.AS' Length=1298  Min=22.27502 Max=103.8  Mean=64.27970295839754 StdDev=21.34756462986258
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ASML.AS' Min=0.0 Max=1.0  Mean=0.5152369612160291 StdDev=0.2618530495789461
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ASML.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ASML.AS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ASML.AS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ASML.AS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0125 MAPE_Forecast=0.0151 MAPE_Test=0.0131
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0126 SMAPE_Forecast=0.0151 SMAPE_Test=0.0132
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0004 MASE_Test=1.0779
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.291832375316198 CRPS_Forecast=1.3228025746082215 CRPS_Test=0.9107142857142867
INFO:pyaf.std:MODEL_L1 L1_Fit=0.7221121608527131 L1_Forecast=1.248146718146718 L1_Test=1.1857142857142873
INFO:pyaf.std:MODEL_L2 L2_Fit=1.0806984924928225 L2_Forecast=1.6318349573977535 L2_Test=1.4577673731723173
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3140579319093259 LnQ_Forecast=0.102248153184942 LnQ_Test=0.0018780233254147808
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5 MedAE_Forecast=1.019999999999996 MedAE_Test=1.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.03722724004348113
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ASML.AS_Lag1Trend_residue_bestCycle_byMAPE None 0.00036798537086429883 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _ASML.AS             T+S+R  ...  0.0124       0.0150    0.0129
1    None         _ASML.AS             T+S+R  ...  0.0125       0.0151    0.0131
2    None         _ASML.AS             T+S+R  ...  0.0125       0.0151    0.0131
3    None   CumSum_ASML.AS             T+S+R  ...  0.0126       0.0151    0.0131
4    None     Diff_ASML.AS             T+S+R  ...  0.0125       0.0151    0.0131
..    ...              ...               ...  ...     ...          ...       ...
211  None  RelDiff_ASML.AS             T+S+R  ...  5.3168      62.9859  362.3075
212  None  RelDiff_ASML.AS             T+S+R  ...  5.6751      64.8795  370.7466
213  None  RelDiff_ASML.AS             T+S+R  ...  5.8711      67.2987  385.3164
214  None  RelDiff_ASML.AS             T+S+R  ...  5.8711      67.2987  385.3164
215  None  RelDiff_ASML.AS             T+S+R  ...  6.0426      67.8465  390.2730

[216 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ASML.AS             T+S+R  ...  0.0124       0.0150   0.0129
1  None        _ASML.AS             T+S+R  ...  0.0125       0.0151   0.0131
2  None        _ASML.AS             T+S+R  ...  0.0125       0.0151   0.0131
3  None  CumSum_ASML.AS             T+S+R  ...  0.0126       0.0151   0.0131
4  None    Diff_ASML.AS             T+S+R  ...  0.0125       0.0151   0.0131

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ASML.AS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['ASML.AS'], 'Horizon': 7}))
7 0    94.52
1    97.31
2    96.38
3    96.00
4    96.81
5    98.15
6    99.19
Name: ASML.AS, dtype: float64
7 0    93.0
1    93.0
2    93.0
3    93.0
4    93.0
5    93.0
6    93.0
Name: ASML.AS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ASML.AS ASML.AS [94.52, 97.31, 96.38, 96.0, 96.81, 98.15, 99.19]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ASML.AS ASML.AS [93.0, 93.0, 93.0, 93.0, 93.0, 93.0, 93.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ASML.AS ASML.AS 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ASML.AS ASML.AS 12.570151090621948
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ASML.AS ASML.AS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ASML.AS ASML.AS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ASML.AS ASML.AS 0.0401 0.0411 3.2169
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ASML.AS ASML.AS 3.9085714285714284 4.151860168303222 -7.790329026178119
BENCHMARK_SUCCESS 'YAHOO_STOCKS_aex_ASML.AS_7'
