BENCH_DATA YAHOO_STOCKS_ny100
TIME :  Date N= 1299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  ACL N= 1299 H= 7 HEAD= [68.36 68.81 67.4  66.4  65.32] TAIL= [8.9  8.9  8.7  8.45 8.1 ]
     ACL       Date
0  68.36 2011-07-28
1  68.81 2011-07-29
2  67.40 2011-08-01
3  66.40 2011-08-02
4  65.32 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1299 entries, 0 to 1298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ACL     1299 non-null   float64       
 1   Date    1299 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ACL'], 'Transformations': [('ACL', 'None', '_', 'T+S+R'), ('ACL', 'None', 'Diff_', 'T+S+R'), ('ACL', 'None', 'RelDiff_', 'T+S+R'), ('ACL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACL', 'Transformation': '_ACL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.112, ('TRAINING', {'Signal': 'ACL', 'Transformation': '_ACL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACL', 'Transformation': 'Diff_ACL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.8, ('TRAINING', {'Signal': 'ACL', 'Transformation': 'Diff_ACL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACL', 'Transformation': 'RelDiff_ACL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.452, ('TRAINING', {'Signal': 'ACL', 'Transformation': 'RelDiff_ACL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ACL', 'Transformation': 'CumSum_ACL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.459, ('TRAINING', {'Signal': 'ACL', 'Transformation': 'CumSum_ACL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.824, ('SIGNAL_TRAINING', {'Signals': ['ACL'], 'Transformations': [('ACL', 'None', '_', 'T+S+R'), ('ACL', 'None', 'Diff_', 'T+S+R'), ('ACL', 'None', 'RelDiff_', 'T+S+R'), ('ACL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ACL'], 'Transformations': [('ACL', [('ACL', 'None', 'CumSum_', 'T+S+R'), ('ACL', 'None', 'Diff_', 'T+S+R'), ('ACL', 'None', 'RelDiff_', 'T+S+R'), ('ACL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ACL', 'Transformations': [('ACL', 'None', 'CumSum_', 'T+S+R'), ('ACL', 'None', 'Diff_', 'T+S+R'), ('ACL', 'None', 'RelDiff_', 'T+S+R'), ('ACL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ACL', 'Transformations': [('ACL', 'None', 'CumSum_', 'T+S+R'), ('ACL', 'None', 'Diff_', 'T+S+R'), ('ACL', 'None', 'RelDiff_', 'T+S+R'), ('ACL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACL', 'Model': '_ACL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ACL', 'Model': '_ACL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ACL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['ACL'], 'Transformations': [('ACL', [('ACL', 'None', 'CumSum_', 'T+S+R'), ('ACL', 'None', 'Diff_', 'T+S+R'), ('ACL', 'None', 'RelDiff_', 'T+S+R'), ('ACL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ACL' Length=1299  Min=0.15 Max=23299.98  Mean=51.06851039260966 StdDev=645.5495127315537
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ACL' Min=0.0 Max=1.0  Mean=0.0021853597383590254 StdDev=0.027706189819048203
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ACL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ACL_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ACL_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ACL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.8255 MAPE_Forecast=0.278 MAPE_Test=0.0288
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0247 SMAPE_Forecast=0.0605 SMAPE_Test=0.0288
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0037 MASE_Test=0.9218
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=15.36735443012177 CRPS_Forecast=0.7692307263229615 CRPS_Test=0.1221428571428572
INFO:pyaf.std:MODEL_L1 L1_Fit=45.74923523717329 L1_Forecast=0.43760617760617754 L1_Test=0.24428571428571466
INFO:pyaf.std:MODEL_L2 L2_Fit=1022.5839989788703 L2_Forecast=0.9494042025230033 L2_Test=0.28432878352860674
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=145.93657040113115 LnQ_Forecast=34.91894473155949 LnQ_Test=0.007935145232229452
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4599999999999973 MedAE_Forecast=0.23999999999999932 MedAE_Test=0.25
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.002927489170521845
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ACL_Lag1Trend_residue_bestCycle_byMAPE None -8.583753615368402e-07 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _ACL  ...  2.740000e-01  2.950000e-02
1    None           _ACL  ...  2.756000e-01  3.020000e-02
2    None           _ACL  ...  2.760000e-01  2.210000e-02
3    None           _ACL  ...  2.770000e-01  2.650000e-02
4    None           _ACL  ...  2.780000e-01  2.880000e-02
..    ...            ...  ...           ...           ...
187  None    RelDiff_ACL  ...  1.069737e+09  8.001819e+08
188  None    RelDiff_ACL  ...  1.069737e+09  8.001819e+08
189  None    RelDiff_ACL  ...  1.069737e+09  8.001819e+08
190  None    RelDiff_ACL  ...  1.069737e+09  8.001819e+08
191  None    RelDiff_ACL  ...  1.069737e+09  8.001819e+08

[192 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _ACL             T+S+R  ...  0.8249       0.2740   0.0295
1  None           _ACL             T+S+R  ...  0.8254       0.2756   0.0302
2  None           _ACL             T+S+R  ...  0.8248       0.2760   0.0221
3  None           _ACL             T+S+R  ...  0.8250       0.2770   0.0265
4  None           _ACL             T+S+R  ...  0.8255       0.2780   0.0288

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ACL'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.159, ('FORECASTING', {'Signals': ['ACL'], 'Horizon': 7}))
7 0       7.83
1       8.20
2       8.11
3       8.50
4       8.50
5       8.50
6    9400.00
Name: ACL, dtype: float64
7 0    8.1
1    8.1
2    8.1
3    8.1
4    8.1
5    8.1
6    8.1
Name: ACL_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ACL ACL [7.83, 8.2, 8.11, 8.5, 8.5, 8.5, 9400.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ACL ACL [8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ACL ACL 1299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ACL ACL 11.309229612350464
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ACL ACL Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ACL ACL 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ACL ACL 0.1697 0.3126 0.8572
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ACL ACL 1341.9257142857143 3549.8045453839527 -0.1667097325115483
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ny100_ACL_7'
