BENCH_DATA YAHOO_STOCKS_ny100
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  BAX N= 1251 H= 7 HEAD= [58.7      58.169995 57.209999 55.919998 55.659998] TAIL= [46.849998 46.82     46.950001 46.77     46.549999]
         BAX       Date
0  58.700000 2011-07-28
1  58.169995 2011-07-29
2  57.209999 2011-08-01
3  55.919998 2011-08-02
4  55.659998 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   BAX     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BAX'], 'Transformations': [('BAX', 'None', '_', 'T+S+R'), ('BAX', 'None', 'Diff_', 'T+S+R'), ('BAX', 'None', 'RelDiff_', 'T+S+R'), ('BAX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BAX', 'Transformation': '_BAX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.471, ('TRAINING', {'Signal': 'BAX', 'Transformation': '_BAX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BAX', 'Transformation': 'Diff_BAX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.842, ('TRAINING', {'Signal': 'BAX', 'Transformation': 'Diff_BAX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BAX', 'Transformation': 'RelDiff_BAX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.386, ('TRAINING', {'Signal': 'BAX', 'Transformation': 'RelDiff_BAX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BAX', 'Transformation': 'CumSum_BAX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.804, ('TRAINING', {'Signal': 'BAX', 'Transformation': 'CumSum_BAX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.505, ('SIGNAL_TRAINING', {'Signals': ['BAX'], 'Transformations': [('BAX', 'None', '_', 'T+S+R'), ('BAX', 'None', 'Diff_', 'T+S+R'), ('BAX', 'None', 'RelDiff_', 'T+S+R'), ('BAX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BAX'], 'Transformations': [('BAX', [('BAX', 'None', 'CumSum_', 'T+S+R'), ('BAX', 'None', 'Diff_', 'T+S+R'), ('BAX', 'None', 'RelDiff_', 'T+S+R'), ('BAX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BAX', 'Transformations': [('BAX', 'None', 'CumSum_', 'T+S+R'), ('BAX', 'None', 'Diff_', 'T+S+R'), ('BAX', 'None', 'RelDiff_', 'T+S+R'), ('BAX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'BAX', 'Transformations': [('BAX', 'None', 'CumSum_', 'T+S+R'), ('BAX', 'None', 'Diff_', 'T+S+R'), ('BAX', 'None', 'RelDiff_', 'T+S+R'), ('BAX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BAX', 'Model': '_BAX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BAX', 'Model': '_BAX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BAX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.189, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BAX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['BAX'], 'Transformations': [('BAX', [('BAX', 'None', 'CumSum_', 'T+S+R'), ('BAX', 'None', 'Diff_', 'T+S+R'), ('BAX', 'None', 'RelDiff_', 'T+S+R'), ('BAX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BAX' Length=1251  Min=32.27 Max=77.0  Mean=59.94724911271 StdDev=12.711884856595207
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BAX' Min=0.0 Max=1.0  Mean=0.6187625556161377 StdDev=0.28419147902068437
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BAX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BAX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BAX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_BAX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0092 MAPE_Forecast=0.0107 MAPE_Test=0.0049
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.009 SMAPE_Forecast=0.0107 SMAPE_Test=0.0049
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9972 MASE_Test=1.2778
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.2913900294062417 CRPS_Forecast=0.9591377063862038 CRPS_Test=0.0971425714285716
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5628942854271356 L1_Forecast=0.4159037148594375 L1_Test=0.23000000000000093
INFO:pyaf.std:MODEL_L2 L2_Fit=1.2257368081966866 L2_Forecast=0.559070646873644 L2_Test=0.2763799765416146
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.48265435424698383 LnQ_Forecast=0.05152373819982658 LnQ_Test=0.000246950035553861
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.41000099999999406 MedAE_Forecast=0.31000100000000685 MedAE_Test=0.1800009999999972
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5908786049631121
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _BAX_Lag1Trend_residue_bestCycle_byMAPE None 0.00022358596020566335 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None           _BAX             T+S+R  ...   0.0092       0.0107   0.0049
1    None           _BAX             T+S+R  ...   0.0092       0.0107   0.0049
2    None     CumSum_BAX             T+S+R  ...   0.0096       0.0107   0.0049
3    None     CumSum_BAX             T+S+R  ...   0.0096       0.0107   0.0049
4    None       Diff_BAX             T+S+R  ...   0.0092       0.0107   0.0049
..    ...            ...               ...  ...      ...          ...      ...
219  None     CumSum_BAX             T+S+R  ...  11.1490      19.5362   4.8338
220  None     CumSum_BAX             T+S+R  ...  12.8072      23.1775  18.0146
221  None     CumSum_BAX             T+S+R  ...  13.4837      24.4087  30.4622
222  None     CumSum_BAX             T+S+R  ...  16.8096      28.3696  23.2337
223  None     CumSum_BAX             T+S+R  ...  15.5550      29.0767  11.5447

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _BAX             T+S+R  ...  0.0092       0.0107   0.0049
1  None           _BAX             T+S+R  ...  0.0092       0.0107   0.0049
2  None     CumSum_BAX             T+S+R  ...  0.0096       0.0107   0.0049
3  None     CumSum_BAX             T+S+R  ...  0.0096       0.0107   0.0049
4  None       Diff_BAX             T+S+R  ...  0.0092       0.0107   0.0049

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BAX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('FORECASTING', {'Signals': ['BAX'], 'Horizon': 7}))
7 0    46.200001
1    46.700001
2    46.099998
3    46.320000
4    46.099998
5    48.009998
6    48.320000
Name: BAX, dtype: float64
7 0    46.549999
1    46.549999
2    46.549999
3    46.549999
4    46.549999
5    46.549999
6    46.549999
Name: BAX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_BAX BAX [46.200001, 46.700001, 46.099998, 46.32, 46.099998, 48.009998, 48.32]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_BAX BAX [46.549999, 46.549999, 46.549999, 46.549999, 46.549999, 46.549999, 46.549999]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_BAX BAX 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_BAX BAX 12.998386144638062
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_BAX BAX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_BAX BAX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_BAX BAX 0.0146 0.0148 1.1079
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_BAX BAX 0.6942858571428577 0.9155327223623111 -0.09636514303400623
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ny100_BAX_7'
