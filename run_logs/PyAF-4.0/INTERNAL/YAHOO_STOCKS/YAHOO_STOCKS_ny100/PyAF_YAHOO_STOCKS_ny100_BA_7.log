BENCH_DATA YAHOO_STOCKS_ny100
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  BA N= 1251 H= 7 HEAD= [70.660004 70.470001 70.330002 67.699997 67.339996] TAIL= [130.809998 130.110001 131.550003 132.389999 133.429993]
          BA       Date
0  70.660004 2011-07-28
1  70.470001 2011-07-29
2  70.330002 2011-08-01
3  67.699997 2011-08-02
4  67.339996 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   BA      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BA'], 'Transformations': [('BA', 'None', '_', 'T+S+R'), ('BA', 'None', 'Diff_', 'T+S+R'), ('BA', 'None', 'RelDiff_', 'T+S+R'), ('BA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BA', 'Transformation': '_BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.966, ('TRAINING', {'Signal': 'BA', 'Transformation': '_BA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BA', 'Transformation': 'Diff_BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.788, ('TRAINING', {'Signal': 'BA', 'Transformation': 'Diff_BA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BA', 'Transformation': 'RelDiff_BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.154, ('TRAINING', {'Signal': 'BA', 'Transformation': 'RelDiff_BA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BA', 'Transformation': 'CumSum_BA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.785, ('TRAINING', {'Signal': 'BA', 'Transformation': 'CumSum_BA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.694, ('SIGNAL_TRAINING', {'Signals': ['BA'], 'Transformations': [('BA', 'None', '_', 'T+S+R'), ('BA', 'None', 'Diff_', 'T+S+R'), ('BA', 'None', 'RelDiff_', 'T+S+R'), ('BA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BA'], 'Transformations': [('BA', [('BA', 'None', 'CumSum_', 'T+S+R'), ('BA', 'None', 'Diff_', 'T+S+R'), ('BA', 'None', 'RelDiff_', 'T+S+R'), ('BA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BA', 'Transformations': [('BA', 'None', 'CumSum_', 'T+S+R'), ('BA', 'None', 'Diff_', 'T+S+R'), ('BA', 'None', 'RelDiff_', 'T+S+R'), ('BA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'BA', 'Transformations': [('BA', 'None', 'CumSum_', 'T+S+R'), ('BA', 'None', 'Diff_', 'T+S+R'), ('BA', 'None', 'RelDiff_', 'T+S+R'), ('BA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BA', 'Model': '_BA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BA', 'Model': '_BA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['BA'], 'Transformations': [('BA', [('BA', 'None', 'CumSum_', 'T+S+R'), ('BA', 'None', 'Diff_', 'T+S+R'), ('BA', 'None', 'RelDiff_', 'T+S+R'), ('BA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BA' Length=1251  Min=57.41 Max=158.309998  Mean=109.72100718065538 StdDev=29.67643718164409
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BA' Min=0.0 Max=1.0  Mean=0.5184440854067757 StdDev=0.29411732180256434
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BA_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_BA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0105 MAPE_Forecast=0.0124 MAPE_Test=0.011
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0105 SMAPE_Forecast=0.0123 SMAPE_Test=0.0111
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9988 MASE_Test=1.2048
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=8.849516229656174 CRPS_Forecast=2.6281721657494916 CRPS_Test=0.6678574999999977
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0430754844221113 L1_Forecast=1.6321690321285134 L1_Test=1.4457112857142838
INFO:pyaf.std:MODEL_L2 L2_Fit=1.421811239659729 L2_Forecast=2.2195782301574627 L2_Test=1.6121213477944871
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.20921491391309427 LnQ_Forecast=0.07265982152161665 LnQ_Test=0.0010760060816039385
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.7999950000000098 MedAE_Forecast=1.319991999999985 MedAE_Test=1.2299950000000024
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.13131817901522658
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _BA_Lag1Trend_residue_bestCycle_byMAPE None 0.0007928741485207502 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ... ForecastMAPE      TestMAPE
0    None            _BA  ...       0.0122  1.060000e-02
1    None            _BA  ...       0.0122  1.050000e-02
2    None            _BA  ...       0.0123  1.060000e-02
3    None            _BA  ...       0.0123  1.000000e-02
4    None            _BA  ...       0.0123  9.800000e-03
..    ...            ...  ...          ...           ...
211  None     RelDiff_BA  ...   75368.2120  1.018505e+06
212  None     RelDiff_BA  ...   75368.2120  1.018505e+06
213  None     RelDiff_BA  ...   81563.0805  1.123939e+06
214  None     RelDiff_BA  ...  923577.2174  1.004975e+07
215  None     RelDiff_BA  ...  923577.2174  1.004975e+07

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _BA             T+S+R  ...  0.0104       0.0122   0.0106
1  None            _BA             T+S+R  ...  0.0103       0.0122   0.0105
2  None            _BA             T+S+R  ...  0.0105       0.0123   0.0106
3  None            _BA             T+S+R  ...  0.0102       0.0123   0.0100
4  None            _BA             T+S+R  ...  0.0101       0.0123   0.0098

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['BA'], 'Horizon': 7}))
7 0    134.660004
1    134.720001
2    133.529999
3    133.470001
4    132.940002
5    134.850006
6    135.960007
Name: BA, dtype: float64
7 0    133.429993
1    133.429993
2    133.429993
3    133.429993
4    133.429993
5    133.429993
6    133.429993
Name: BA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_BA BA [134.660004, 134.720001, 133.529999, 133.470001, 132.940002, 134.850006, 135.960007]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_BA BA [133.429993, 133.429993, 133.429993, 133.429993, 133.429993, 133.429993, 133.429993]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_BA BA 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_BA BA 12.176197528839111
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_BA BA Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_BA BA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_BA BA 0.0075 0.0076 1.2522
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_BA BA 1.014293000000001 1.3008869765735656 -0.8237752617637659
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ny100_BA_7'
