BENCH_DATA YAHOO_STOCKS_ftse250
TIME :  Date N= 1294 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AGK.L N= 1294 H= 7 HEAD= [1933.996 1932.996 1902.995 1872.994 1820.997] TAIL= [1236. 1246. 1257. 1259. 1248.]
      AGK.L       Date
0  1933.996 2011-07-28
1  1932.996 2011-07-29
2  1902.995 2011-08-01
3  1872.994 2011-08-02
4  1820.997 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1294 entries, 0 to 1293
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AGK.L   1294 non-null   float64       
 1   Date    1294 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AGK.L'], 'Transformations': [('AGK.L', 'None', '_', 'T+S+R'), ('AGK.L', 'None', 'Diff_', 'T+S+R'), ('AGK.L', 'None', 'RelDiff_', 'T+S+R'), ('AGK.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AGK.L', 'Transformation': '_AGK.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.267, ('TRAINING', {'Signal': 'AGK.L', 'Transformation': '_AGK.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AGK.L', 'Transformation': 'Diff_AGK.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.829, ('TRAINING', {'Signal': 'AGK.L', 'Transformation': 'Diff_AGK.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AGK.L', 'Transformation': 'RelDiff_AGK.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.799, ('TRAINING', {'Signal': 'AGK.L', 'Transformation': 'RelDiff_AGK.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AGK.L', 'Transformation': 'CumSum_AGK.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.479, ('TRAINING', {'Signal': 'AGK.L', 'Transformation': 'CumSum_AGK.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.376, ('SIGNAL_TRAINING', {'Signals': ['AGK.L'], 'Transformations': [('AGK.L', 'None', '_', 'T+S+R'), ('AGK.L', 'None', 'Diff_', 'T+S+R'), ('AGK.L', 'None', 'RelDiff_', 'T+S+R'), ('AGK.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AGK.L'], 'Transformations': [('AGK.L', [('AGK.L', 'None', 'CumSum_', 'T+S+R'), ('AGK.L', 'None', 'Diff_', 'T+S+R'), ('AGK.L', 'None', 'RelDiff_', 'T+S+R'), ('AGK.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AGK.L', 'Transformations': [('AGK.L', 'None', 'CumSum_', 'T+S+R'), ('AGK.L', 'None', 'Diff_', 'T+S+R'), ('AGK.L', 'None', 'RelDiff_', 'T+S+R'), ('AGK.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'AGK.L', 'Transformations': [('AGK.L', 'None', 'CumSum_', 'T+S+R'), ('AGK.L', 'None', 'Diff_', 'T+S+R'), ('AGK.L', 'None', 'RelDiff_', 'T+S+R'), ('AGK.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AGK.L', 'Model': '_AGK.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AGK.L', 'Model': '_AGK.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AGK.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AGK.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['AGK.L'], 'Transformations': [('AGK.L', [('AGK.L', 'None', 'CumSum_', 'T+S+R'), ('AGK.L', 'None', 'Diff_', 'T+S+R'), ('AGK.L', 'None', 'RelDiff_', 'T+S+R'), ('AGK.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-08T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AGK.L' Length=1294  Min=770.0 Max=2400.0  Mean=1631.0821275115927 StdDev=381.3287136064922
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AGK.L' Min=0.0 Max=1.0  Mean=0.5282712438721414 StdDev=0.23394399607760277
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AGK.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AGK.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AGK.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AGK.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0124 MAPE_Forecast=0.0188 MAPE_Test=0.008
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0124 SMAPE_Forecast=0.0188 SMAPE_Test=0.008
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9989 MASE_Test=0.9388
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=72.37377577924403 CRPS_Forecast=38.62562252621979 CRPS_Test=9.571428571428571
INFO:pyaf.std:MODEL_L1 L1_Fit=22.13602526724976 L1_Forecast=19.333333333333332 L1_Test=9.857142857142858
INFO:pyaf.std:MODEL_L2 L2_Fit=33.87240064578034 L2_Forecast=26.780727479683694 L2_Test=11.631238725334214
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.35911427081635816 LnQ_Forecast=0.1673020204245653 LnQ_Test=0.0006265505324996049
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=15.000999999999976 MedAE_Forecast=15.75 MedAE_Test=10.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7141079754601227
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AGK.L_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _AGK.L             T+S+R  ...  0.0124       0.0188   0.0080
1    None         _AGK.L             T+S+R  ...  0.0124       0.0188   0.0080
2    None   CumSum_AGK.L             T+S+R  ...  0.0130       0.0188   0.0080
3    None   CumSum_AGK.L             T+S+R  ...  0.0130       0.0188   0.0080
4    None     Diff_AGK.L             T+S+R  ...  0.0124       0.0188   0.0080
..    ...            ...               ...  ...     ...          ...      ...
195  None  RelDiff_AGK.L             T+S+R  ...  0.1460       4.1872  13.2359
196  None  RelDiff_AGK.L             T+S+R  ...  0.1501       4.2376  12.9623
197  None  RelDiff_AGK.L             T+S+R  ...  0.1501       4.2376  12.9623
198  None  RelDiff_AGK.L             T+S+R  ...  0.1438       4.2622  12.7473
199  None  RelDiff_AGK.L             T+S+R  ...  0.1644       4.4298  13.3905

[200 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _AGK.L             T+S+R  ...  0.0124       0.0188    0.008
1  None         _AGK.L             T+S+R  ...  0.0124       0.0188    0.008
2  None   CumSum_AGK.L             T+S+R  ...  0.0130       0.0188    0.008
3  None   CumSum_AGK.L             T+S+R  ...  0.0130       0.0188    0.008
4  None     Diff_AGK.L             T+S+R  ...  0.0124       0.0188    0.008

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AGK.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['AGK.L'], 'Horizon': 7}))
7 0    1238.0
1    1257.0
2    1264.0
3    1262.0
4    1278.0
5    1261.0
6    1279.0
Name: AGK.L, dtype: float64
7 0    1248.0
1    1248.0
2    1248.0
3    1248.0
4    1248.0
5    1248.0
6    1248.0
Name: AGK.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AGK.L AGK.L [1238.0, 1257.0, 1264.0, 1262.0, 1278.0, 1261.0, 1279.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AGK.L AGK.L [1248.0, 1248.0, 1248.0, 1248.0, 1248.0, 1248.0, 1248.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AGK.L AGK.L 1294 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AGK.L AGK.L 11.869773149490356
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AGK.L AGK.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AGK.L AGK.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AGK.L AGK.L 0.0139 0.014 1.3345
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AGK.L AGK.L 17.571428571428573 19.504578217141006 -1.3208416334659328
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftse250_AGK.L_7'
