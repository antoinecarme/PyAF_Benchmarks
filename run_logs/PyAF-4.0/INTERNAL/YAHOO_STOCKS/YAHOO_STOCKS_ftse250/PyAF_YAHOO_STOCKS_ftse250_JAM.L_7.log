BENCH_DATA YAHOO_STOCKS_ftse250
TIME :  Date N= 1292 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  JAM.L N= 1292 H= 7 HEAD= [1.738 1.696 1.691 1.682 1.634] TAIL= [3.32335 3.32407 3.31461 3.33801 3.33163]
   JAM.L       Date
0  1.738 2011-07-28
1  1.696 2011-07-29
2  1.691 2011-08-01
3  1.682 2011-08-02
4  1.634 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1292 entries, 0 to 1291
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   JAM.L   1292 non-null   float64       
 1   Date    1292 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['JAM.L'], 'Transformations': [('JAM.L', 'None', '_', 'T+S+R'), ('JAM.L', 'None', 'Diff_', 'T+S+R'), ('JAM.L', 'None', 'RelDiff_', 'T+S+R'), ('JAM.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'JAM.L', 'Transformation': '_JAM.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.276, ('TRAINING', {'Signal': 'JAM.L', 'Transformation': '_JAM.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'JAM.L', 'Transformation': 'Diff_JAM.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.838, ('TRAINING', {'Signal': 'JAM.L', 'Transformation': 'Diff_JAM.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'JAM.L', 'Transformation': 'RelDiff_JAM.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.844, ('TRAINING', {'Signal': 'JAM.L', 'Transformation': 'RelDiff_JAM.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'JAM.L', 'Transformation': 'CumSum_JAM.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.831, ('TRAINING', {'Signal': 'JAM.L', 'Transformation': 'CumSum_JAM.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.79, ('SIGNAL_TRAINING', {'Signals': ['JAM.L'], 'Transformations': [('JAM.L', 'None', '_', 'T+S+R'), ('JAM.L', 'None', 'Diff_', 'T+S+R'), ('JAM.L', 'None', 'RelDiff_', 'T+S+R'), ('JAM.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['JAM.L'], 'Transformations': [('JAM.L', [('JAM.L', 'None', 'CumSum_', 'T+S+R'), ('JAM.L', 'None', 'Diff_', 'T+S+R'), ('JAM.L', 'None', 'RelDiff_', 'T+S+R'), ('JAM.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'JAM.L', 'Transformations': [('JAM.L', 'None', 'CumSum_', 'T+S+R'), ('JAM.L', 'None', 'Diff_', 'T+S+R'), ('JAM.L', 'None', 'RelDiff_', 'T+S+R'), ('JAM.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'JAM.L', 'Transformations': [('JAM.L', 'None', 'CumSum_', 'T+S+R'), ('JAM.L', 'None', 'Diff_', 'T+S+R'), ('JAM.L', 'None', 'RelDiff_', 'T+S+R'), ('JAM.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'JAM.L', 'Model': '_JAM.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'JAM.L', 'Model': '_JAM.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'JAM.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'JAM.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['JAM.L'], 'Transformations': [('JAM.L', [('JAM.L', 'None', 'CumSum_', 'T+S+R'), ('JAM.L', 'None', 'Diff_', 'T+S+R'), ('JAM.L', 'None', 'RelDiff_', 'T+S+R'), ('JAM.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='JAM.L' Length=1292  Min=1.443 Max=11.9386  Mean=2.450345433436532 StdDev=1.0185818186354438
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_JAM.L' Min=0.0 Max=1.0  Mean=0.09597787962922864 StdDev=0.09704846017716413
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_JAM.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_JAM.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_JAM.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_JAM.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0589 MAPE_Forecast=0.011 MAPE_Test=0.0048
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0364 SMAPE_Forecast=0.011 SMAPE_Test=0.0048
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0005 MASE_Test=1.2817
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.18437067260393197 CRPS_Forecast=0.036159782595559624 CRPS_Test=0.006919999999999974
INFO:pyaf.std:MODEL_L1 L1_Fit=0.19962280155642023 L1_Forecast=0.03128346303501946 L1_Test=0.015857142857142632
INFO:pyaf.std:MODEL_L2 L2_Fit=1.2567897028301447 L2_Forecast=0.043216468952425466 L2_Test=0.020375910847300525
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=57.02475963609522 LnQ_Forecast=0.06060837498334399 LnQ_Test=0.0002619230054214627
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.014000000000000012 MedAE_Forecast=0.02444000000000024 MedAE_Test=0.009459999999999802
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.028107016273486028
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _JAM.L_Lag1Trend_residue_bestCycle_byMAPE None 6.288349403560378e-05 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None         _JAM.L  ...  1.090000e-02  4.600000e-03
1    None         _JAM.L  ...  1.100000e-02  4.800000e-03
2    None         _JAM.L  ...  1.100000e-02  4.800000e-03
3    None   CumSum_JAM.L  ...  1.100000e-02  4.800000e-03
4    None     Diff_JAM.L  ...  1.100000e-02  4.800000e-03
..    ...            ...  ...           ...           ...
211  None  RelDiff_JAM.L  ...  1.028333e+07  8.850804e+06
212  None  RelDiff_JAM.L  ...  1.028333e+07  8.850804e+06
213  None  RelDiff_JAM.L  ...  1.028333e+07  8.850804e+06
214  None  RelDiff_JAM.L  ...  1.028333e+07  8.850804e+06
215  None  RelDiff_JAM.L  ...  1.028333e+07  8.850804e+06

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _JAM.L             T+S+R  ...  0.0587       0.0109   0.0046
1  None         _JAM.L             T+S+R  ...  0.0589       0.0110   0.0048
2  None         _JAM.L             T+S+R  ...  0.0589       0.0110   0.0048
3  None   CumSum_JAM.L             T+S+R  ...  0.0591       0.0110   0.0048
4  None     Diff_JAM.L             T+S+R  ...  0.0589       0.0110   0.0048

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['JAM.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['JAM.L'], 'Horizon': 7}))
7 0    3.36769
1    3.37075
2    3.36382
3    3.30000
4    3.31500
5    3.33000
6    3.29700
Name: JAM.L, dtype: float64
7 0    3.33163
1    3.33163
2    3.33163
3    3.33163
4    3.33163
5    3.33163
6    3.33163
Name: JAM.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_JAM.L JAM.L [3.36769, 3.37075, 3.36382, 3.3, 3.315, 3.33, 3.297]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_JAM.L JAM.L [3.33163, 3.33163, 3.33163, 3.33163, 3.33163, 3.33163, 3.33163]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_JAM.L JAM.L 1292 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_JAM.L JAM.L 12.252263307571411
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_JAM.L JAM.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_JAM.L JAM.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_JAM.L JAM.L 0.0082 0.0082 1.2022
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_JAM.L JAM.L 0.02741285714285719 0.030108854179460274 -0.01189384415752337
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftse250_JAM.L_7'
