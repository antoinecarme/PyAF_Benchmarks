BENCH_DATA YAHOO_STOCKS_ibex35
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  FCC.MC N= 1298 H= 7 HEAD= [13.4052 13.6763 13.0913 12.7666 12.7809] TAIL= [7.596 7.59  7.598 7.592 7.575]
    FCC.MC       Date
0  13.4052 2011-07-28
1  13.6763 2011-07-29
2  13.0913 2011-08-01
3  12.7666 2011-08-02
4  12.7809 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   FCC.MC  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['FCC.MC'], 'Transformations': [('FCC.MC', 'None', '_', 'T+S+R'), ('FCC.MC', 'None', 'Diff_', 'T+S+R'), ('FCC.MC', 'None', 'RelDiff_', 'T+S+R'), ('FCC.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': '_FCC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.303, ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': '_FCC.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': 'Diff_FCC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.848, ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': 'Diff_FCC.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': 'RelDiff_FCC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.181, ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': 'RelDiff_FCC.MC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': 'CumSum_FCC.MC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.822, ('TRAINING', {'Signal': 'FCC.MC', 'Transformation': 'CumSum_FCC.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.155, ('SIGNAL_TRAINING', {'Signals': ['FCC.MC'], 'Transformations': [('FCC.MC', 'None', '_', 'T+S+R'), ('FCC.MC', 'None', 'Diff_', 'T+S+R'), ('FCC.MC', 'None', 'RelDiff_', 'T+S+R'), ('FCC.MC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['FCC.MC'], 'Transformations': [('FCC.MC', [('FCC.MC', 'None', 'CumSum_', 'T+S+R'), ('FCC.MC', 'None', 'Diff_', 'T+S+R'), ('FCC.MC', 'None', 'RelDiff_', 'T+S+R'), ('FCC.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'FCC.MC', 'Transformations': [('FCC.MC', 'None', 'CumSum_', 'T+S+R'), ('FCC.MC', 'None', 'Diff_', 'T+S+R'), ('FCC.MC', 'None', 'RelDiff_', 'T+S+R'), ('FCC.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'FCC.MC', 'Transformations': [('FCC.MC', 'None', 'CumSum_', 'T+S+R'), ('FCC.MC', 'None', 'Diff_', 'T+S+R'), ('FCC.MC', 'None', 'RelDiff_', 'T+S+R'), ('FCC.MC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'FCC.MC', 'Model': '_FCC.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'FCC.MC', 'Model': '_FCC.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'FCC.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'FCC.MC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.226, ('FINALIZE_TRAINING', {'Signals': ['FCC.MC'], 'Transformations': [('FCC.MC', [('FCC.MC', 'None', 'CumSum_', 'T+S+R'), ('FCC.MC', 'None', 'Diff_', 'T+S+R'), ('FCC.MC', 'None', 'RelDiff_', 'T+S+R'), ('FCC.MC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='FCC.MC' Length=1298  Min=4.7742 Max=15.0924  Mean=9.379528906009229 StdDev=2.5833243275918885
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_FCC.MC' Min=0.0 Max=1.0  Mean=0.4463306493389576 StdDev=0.2503657932189614
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_FCC.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_FCC.MC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_FCC.MC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_FCC.MC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0203 MAPE_Forecast=0.0155 MAPE_Test=0.0008
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0203 SMAPE_Forecast=0.0156 SMAPE_Test=0.0008
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0024 MASE_Test=0.9214
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.7785650582058344 CRPS_Forecast=0.20974535516148074 CRPS_Test=0.0010714285714286756
INFO:pyaf.std:MODEL_L1 L1_Fit=0.19651453488372092 L1_Forecast=0.11016849420849423 L1_Test=0.006142857142857291
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2738462706017385 L2_Forecast=0.19071856282335345 L2_Test=0.007955231881329053
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7978185797781003 LnQ_Forecast=0.20207475849461493 LnQ_Test=7.695765769073847e-06
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.14980000000000082 MedAE_Forecast=0.05356999999999967 MedAE_Test=0.006000000000000227
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8364831075187533
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _FCC.MC_Lag1Trend_residue_bestCycle_byMAPE None -0.0011062976100482576 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE    TestMAPE
0    None         _FCC.MC  ...       0.0155      0.0008
1    None         _FCC.MC  ...       0.0155      0.0008
2    None   CumSum_FCC.MC  ...       0.0155      0.0008
3    None   CumSum_FCC.MC  ...       0.0155      0.0008
4    None     Diff_FCC.MC  ...       0.0155      0.0008
..    ...             ...  ...          ...         ...
219  None  RelDiff_FCC.MC  ...     507.9211      0.7774
220  None  RelDiff_FCC.MC  ...    5820.7399   9196.4396
221  None  RelDiff_FCC.MC  ...    5820.7399   9196.4396
222  None  RelDiff_FCC.MC  ...    9299.3509  20704.2129
223  None  RelDiff_FCC.MC  ...    9299.3509  20704.2129

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _FCC.MC             T+S+R  ...  0.0203       0.0155   0.0008
1  None        _FCC.MC             T+S+R  ...  0.0203       0.0155   0.0008
2  None  CumSum_FCC.MC             T+S+R  ...  0.0209       0.0155   0.0008
3  None  CumSum_FCC.MC             T+S+R  ...  0.0209       0.0155   0.0008
4  None    Diff_FCC.MC             T+S+R  ...  0.0203       0.0155   0.0008

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['FCC.MC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.159, ('FORECASTING', {'Signals': ['FCC.MC'], 'Horizon': 7}))
7 0    7.620
1    7.460
2    7.164
3    7.092
4    7.041
5    7.028
6    7.230
Name: FCC.MC, dtype: float64
7 0    7.575
1    7.575
2    7.575
3    7.575
4    7.575
5    7.575
6    7.575
Name: FCC.MC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_FCC.MC FCC.MC [7.62, 7.46, 7.164, 7.092, 7.041, 7.028, 7.23]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_FCC.MC FCC.MC [7.575, 7.575, 7.575, 7.575, 7.575, 7.575, 7.575]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_FCC.MC FCC.MC 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_FCC.MC FCC.MC 12.63969874382019
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_FCC.MC FCC.MC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_FCC.MC FCC.MC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_FCC.MC FCC.MC 0.0497 0.0482 2.6772
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_FCC.MC FCC.MC 0.3542857142857145 0.40015175692658 -2.676898562422932
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ibex35_FCC.MC_7'
