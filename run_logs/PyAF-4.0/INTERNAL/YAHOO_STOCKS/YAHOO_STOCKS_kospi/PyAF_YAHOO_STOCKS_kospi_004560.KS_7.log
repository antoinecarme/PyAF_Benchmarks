BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  004560.KS N= 1293 H= 7 HEAD= [22250. 21150. 21850. 21300. 20400.] TAIL= [11000. 11300. 11050. 11100. 10950.]
   004560.KS       Date
0    22250.0 2011-07-28
1    21150.0 2011-07-29
2    21850.0 2011-08-01
3    21300.0 2011-08-02
4    20400.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   004560.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['004560.KS'], 'Transformations': [('004560.KS', 'None', '_', 'T+S+R'), ('004560.KS', 'None', 'Diff_', 'T+S+R'), ('004560.KS', 'None', 'RelDiff_', 'T+S+R'), ('004560.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004560.KS', 'Transformation': '_004560.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004560.KS', 'Transformation': 'Diff_004560.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.102, ('TRAINING', {'Signal': '004560.KS', 'Transformation': 'Diff_004560.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004560.KS', 'Transformation': 'RelDiff_004560.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.806, ('TRAINING', {'Signal': '004560.KS', 'Transformation': 'RelDiff_004560.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004560.KS', 'Transformation': 'CumSum_004560.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.179, ('TRAINING', {'Signal': '004560.KS', 'Transformation': '_004560.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.903, ('TRAINING', {'Signal': '004560.KS', 'Transformation': 'CumSum_004560.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.833, ('SIGNAL_TRAINING', {'Signals': ['004560.KS'], 'Transformations': [('004560.KS', 'None', '_', 'T+S+R'), ('004560.KS', 'None', 'Diff_', 'T+S+R'), ('004560.KS', 'None', 'RelDiff_', 'T+S+R'), ('004560.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['004560.KS'], 'Transformations': [('004560.KS', [('004560.KS', 'None', 'CumSum_', 'T+S+R'), ('004560.KS', 'None', 'Diff_', 'T+S+R'), ('004560.KS', 'None', 'RelDiff_', 'T+S+R'), ('004560.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '004560.KS', 'Transformations': [('004560.KS', 'None', 'CumSum_', 'T+S+R'), ('004560.KS', 'None', 'Diff_', 'T+S+R'), ('004560.KS', 'None', 'RelDiff_', 'T+S+R'), ('004560.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '004560.KS', 'Transformations': [('004560.KS', 'None', 'CumSum_', 'T+S+R'), ('004560.KS', 'None', 'Diff_', 'T+S+R'), ('004560.KS', 'None', 'RelDiff_', 'T+S+R'), ('004560.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004560.KS', 'Model': '_004560.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004560.KS', 'Model': '_004560.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004560.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004560.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['004560.KS'], 'Transformations': [('004560.KS', [('004560.KS', 'None', 'CumSum_', 'T+S+R'), ('004560.KS', 'None', 'Diff_', 'T+S+R'), ('004560.KS', 'None', 'RelDiff_', 'T+S+R'), ('004560.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='004560.KS' Length=1293  Min=8250.0 Max=24300.0  Mean=13725.460170146946 StdDev=3779.074579836724
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_004560.KS' Min=0.0 Max=1.0  Mean=0.3411501663642948 StdDev=0.23545636011443782
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_004560.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_004560.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_004560.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_004560.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0188 MAPE_Forecast=0.0143 MAPE_Test=0.0155
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0187 SMAPE_Forecast=0.0143 SMAPE_Test=0.0156
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9961 MASE_Test=1.1429
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1078.020095228343 CRPS_Forecast=213.2867159142727 CRPS_Test=78.57142857142857
INFO:pyaf.std:MODEL_L1 L1_Fit=279.43579766536965 L1_Forecast=145.27131782945736 L1_Test=171.42857142857142
INFO:pyaf.std:MODEL_L2 L2_Fit=415.50798687815023 L2_Forecast=202.84794014656748 L2_Test=200.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.761165076845613 LnQ_Forecast=0.10258528286073174 LnQ_Test=0.00232114934220418
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=200.0 MedAE_Forecast=100.0 MedAE_Test=150.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8722741433021807
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _004560.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None         _004560.KS             T+S+R  ...   0.0188       0.0143   0.0155
1    None   CumSum_004560.KS             T+S+R  ...   0.0193       0.0143   0.0155
2    None   CumSum_004560.KS             T+S+R  ...   0.0193       0.0143   0.0155
3    None     Diff_004560.KS             T+S+R  ...   0.0188       0.0143   0.0155
4    None     Diff_004560.KS             T+S+R  ...   0.0188       0.0143   0.0155
..    ...                ...               ...  ...      ...          ...      ...
179  None  RelDiff_004560.KS             T+S+R  ...   2.5974       9.6279  29.7146
180  None   CumSum_004560.KS             T+S+R  ...   7.9054      10.8364   8.7842
181  None  RelDiff_004560.KS             T+S+R  ...   2.3921      11.2351  12.9194
182  None   CumSum_004560.KS             T+S+R  ...   9.1401      13.7659   6.4350
183  None   CumSum_004560.KS             T+S+R  ...  10.9537      14.7942  12.1659

[184 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _004560.KS             T+S+R  ...  0.0188       0.0143   0.0155
1  None  CumSum_004560.KS             T+S+R  ...  0.0193       0.0143   0.0155
2  None  CumSum_004560.KS             T+S+R  ...  0.0193       0.0143   0.0155
3  None    Diff_004560.KS             T+S+R  ...  0.0188       0.0143   0.0155
4  None    Diff_004560.KS             T+S+R  ...  0.0188       0.0143   0.0155

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['004560.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['004560.KS'], 'Horizon': 7}))
7 0    10850.0
1    10950.0
2    11300.0
3    11250.0
4    11200.0
5    11250.0
6    11250.0
Name: 004560.KS, dtype: float64
7 0    10950.0
1    10950.0
2    10950.0
3    10950.0
4    10950.0
5    10950.0
6    10950.0
Name: 004560.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_004560.KS 004560.KS [10850.0, 10950.0, 11300.0, 11250.0, 11200.0, 11250.0, 11250.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_004560.KS 004560.KS [10950.0, 10950.0, 10950.0, 10950.0, 10950.0, 10950.0, 10950.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_004560.KS 004560.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_004560.KS 004560.KS 13.313377618789673
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_004560.KS 004560.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_004560.KS 004560.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_004560.KS 004560.KS 0.0204 0.0206 2.2857
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_004560.KS 004560.KS 228.57142857142858 257.7374078952674 -1.5135135135135123
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_004560.KS_7'
