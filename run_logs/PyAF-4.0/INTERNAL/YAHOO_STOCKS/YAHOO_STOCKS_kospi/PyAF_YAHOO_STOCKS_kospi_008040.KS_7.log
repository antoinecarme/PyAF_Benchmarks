BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  008040.KS N= 1293 H= 7 HEAD= [3180. 3195. 3190. 3185. 3165.] TAIL= [1720. 1705. 1680. 1670. 1655.]
   008040.KS       Date
0     3180.0 2011-07-28
1     3195.0 2011-07-29
2     3190.0 2011-08-01
3     3185.0 2011-08-02
4     3165.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   008040.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['008040.KS'], 'Transformations': [('008040.KS', 'None', '_', 'T+S+R'), ('008040.KS', 'None', 'Diff_', 'T+S+R'), ('008040.KS', 'None', 'RelDiff_', 'T+S+R'), ('008040.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008040.KS', 'Transformation': '_008040.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.219, ('TRAINING', {'Signal': '008040.KS', 'Transformation': '_008040.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008040.KS', 'Transformation': 'Diff_008040.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.448, ('TRAINING', {'Signal': '008040.KS', 'Transformation': 'Diff_008040.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008040.KS', 'Transformation': 'RelDiff_008040.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.787, ('TRAINING', {'Signal': '008040.KS', 'Transformation': 'RelDiff_008040.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008040.KS', 'Transformation': 'CumSum_008040.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.411, ('TRAINING', {'Signal': '008040.KS', 'Transformation': 'CumSum_008040.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.867, ('SIGNAL_TRAINING', {'Signals': ['008040.KS'], 'Transformations': [('008040.KS', 'None', '_', 'T+S+R'), ('008040.KS', 'None', 'Diff_', 'T+S+R'), ('008040.KS', 'None', 'RelDiff_', 'T+S+R'), ('008040.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['008040.KS'], 'Transformations': [('008040.KS', [('008040.KS', 'None', 'CumSum_', 'T+S+R'), ('008040.KS', 'None', 'Diff_', 'T+S+R'), ('008040.KS', 'None', 'RelDiff_', 'T+S+R'), ('008040.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '008040.KS', 'Transformations': [('008040.KS', 'None', 'CumSum_', 'T+S+R'), ('008040.KS', 'None', 'Diff_', 'T+S+R'), ('008040.KS', 'None', 'RelDiff_', 'T+S+R'), ('008040.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '008040.KS', 'Transformations': [('008040.KS', 'None', 'CumSum_', 'T+S+R'), ('008040.KS', 'None', 'Diff_', 'T+S+R'), ('008040.KS', 'None', 'RelDiff_', 'T+S+R'), ('008040.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '008040.KS', 'Model': '_008040.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '008040.KS', 'Model': '_008040.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '008040.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '008040.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.227, ('FINALIZE_TRAINING', {'Signals': ['008040.KS'], 'Transformations': [('008040.KS', [('008040.KS', 'None', 'CumSum_', 'T+S+R'), ('008040.KS', 'None', 'Diff_', 'T+S+R'), ('008040.KS', 'None', 'RelDiff_', 'T+S+R'), ('008040.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='008040.KS' Length=1293  Min=965.0 Max=5070.0  Mean=2973.4416086620263 StdDev=605.4705397540156
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_008040.KS' Min=0.0 Max=1.0  Mean=0.4892671397471424 StdDev=0.14749586839318274
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_008040.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_008040.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_008040.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_008040.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0138 MAPE_Forecast=0.0256 MAPE_Test=0.0093
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0138 SMAPE_Forecast=0.0253 SMAPE_Test=0.0093
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9976 MASE_Test=0.898
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=110.76804986688512 CRPS_Forecast=117.86281532147741 CRPS_Test=7.5
INFO:pyaf.std:MODEL_L1 L1_Fit=45.12645914396887 L1_Forecast=52.5 L1_Test=15.714285714285714
INFO:pyaf.std:MODEL_L2 L2_Fit=76.16762948983752 L2_Forecast=113.26334478249277 L2_Test=17.113069358158484
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5193124300891 LnQ_Forecast=0.782666266926179 LnQ_Test=0.000715764768742572
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=25.0 MedAE_Forecast=25.0 MedAE_Test=15.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5395858708891595
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _008040.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _008040.KS             T+S+R  ...  0.0138       0.0256   0.0093
1    None         _008040.KS             T+S+R  ...  0.0138       0.0256   0.0093
2    None   CumSum_008040.KS             T+S+R  ...  0.0145       0.0256   0.0093
3    None   CumSum_008040.KS             T+S+R  ...  0.0145       0.0256   0.0093
4    None     Diff_008040.KS             T+S+R  ...  0.0138       0.0256   0.0093
..    ...                ...               ...  ...     ...          ...      ...
163  None  RelDiff_008040.KS             T+S+R  ...  0.1458       2.4621   3.5384
164  None  RelDiff_008040.KS             T+S+R  ...  0.1386       2.4965   3.6126
165  None  RelDiff_008040.KS             T+S+R  ...  0.1386       2.4965   3.6126
166  None  RelDiff_008040.KS             T+S+R  ...  0.1371       2.5111   3.5873
167  None   CumSum_008040.KS             T+S+R  ...  3.6707       4.8093   6.4589

[168 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _008040.KS             T+S+R  ...  0.0138       0.0256   0.0093
1  None        _008040.KS             T+S+R  ...  0.0138       0.0256   0.0093
2  None  CumSum_008040.KS             T+S+R  ...  0.0145       0.0256   0.0093
3  None  CumSum_008040.KS             T+S+R  ...  0.0145       0.0256   0.0093
4  None    Diff_008040.KS             T+S+R  ...  0.0138       0.0256   0.0093

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['008040.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('FORECASTING', {'Signals': ['008040.KS'], 'Horizon': 7}))
7 0    1645.0
1    1615.0
2    1625.0
3    1630.0
4    1810.0
5    1790.0
6    1750.0
Name: 008040.KS, dtype: float64
7 0    1655.0
1    1655.0
2    1655.0
3    1655.0
4    1655.0
5    1655.0
6    1655.0
Name: 008040.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_008040.KS 008040.KS [1645.0, 1615.0, 1625.0, 1630.0, 1810.0, 1790.0, 1750.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_008040.KS 008040.KS [1655.0, 1655.0, 1655.0, 1655.0, 1655.0, 1655.0, 1655.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_008040.KS 008040.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_008040.KS 008040.KS 10.35534954071045
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_008040.KS 008040.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_008040.KS 008040.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_008040.KS 008040.KS 0.04 0.0411 1.4737
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_008040.KS 008040.KS 70.0 88.23669466675577 -0.2586605080831379
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_008040.KS_7'
