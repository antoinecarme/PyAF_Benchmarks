BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  004800.KS N= 1293 H= 7 HEAD= [97100. 93400. 95100. 93800. 90000.] TAIL= [127500. 130000. 130000. 131500. 134500.]
   004800.KS       Date
0    97100.0 2011-07-28
1    93400.0 2011-07-29
2    95100.0 2011-08-01
3    93800.0 2011-08-02
4    90000.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   004800.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['004800.KS'], 'Transformations': [('004800.KS', 'None', '_', 'T+S+R'), ('004800.KS', 'None', 'Diff_', 'T+S+R'), ('004800.KS', 'None', 'RelDiff_', 'T+S+R'), ('004800.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004800.KS', 'Transformation': '_004800.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.709, ('TRAINING', {'Signal': '004800.KS', 'Transformation': '_004800.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004800.KS', 'Transformation': 'Diff_004800.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.487, ('TRAINING', {'Signal': '004800.KS', 'Transformation': 'Diff_004800.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004800.KS', 'Transformation': 'RelDiff_004800.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.138, ('TRAINING', {'Signal': '004800.KS', 'Transformation': 'RelDiff_004800.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004800.KS', 'Transformation': 'CumSum_004800.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.871, ('TRAINING', {'Signal': '004800.KS', 'Transformation': 'CumSum_004800.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.206, ('SIGNAL_TRAINING', {'Signals': ['004800.KS'], 'Transformations': [('004800.KS', 'None', '_', 'T+S+R'), ('004800.KS', 'None', 'Diff_', 'T+S+R'), ('004800.KS', 'None', 'RelDiff_', 'T+S+R'), ('004800.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['004800.KS'], 'Transformations': [('004800.KS', [('004800.KS', 'None', 'CumSum_', 'T+S+R'), ('004800.KS', 'None', 'Diff_', 'T+S+R'), ('004800.KS', 'None', 'RelDiff_', 'T+S+R'), ('004800.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '004800.KS', 'Transformations': [('004800.KS', 'None', 'CumSum_', 'T+S+R'), ('004800.KS', 'None', 'Diff_', 'T+S+R'), ('004800.KS', 'None', 'RelDiff_', 'T+S+R'), ('004800.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '004800.KS', 'Transformations': [('004800.KS', 'None', 'CumSum_', 'T+S+R'), ('004800.KS', 'None', 'Diff_', 'T+S+R'), ('004800.KS', 'None', 'RelDiff_', 'T+S+R'), ('004800.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004800.KS', 'Model': '_004800.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004800.KS', 'Model': '_004800.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004800.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004800.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['004800.KS'], 'Transformations': [('004800.KS', [('004800.KS', 'None', 'CumSum_', 'T+S+R'), ('004800.KS', 'None', 'Diff_', 'T+S+R'), ('004800.KS', 'None', 'RelDiff_', 'T+S+R'), ('004800.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='004800.KS' Length=1293  Min=45750.0 Max=151500.0  Mean=80966.2799690642 StdDev=27073.088320680636
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_004800.KS' Min=0.0 Max=1.0  Mean=0.3330144677925692 StdDev=0.2560102914485166
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_004800.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_004800.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_004800.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_004800.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0168 MAPE_Forecast=0.0195 MAPE_Test=0.0205
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0168 SMAPE_Forecast=0.0194 SMAPE_Test=0.0207
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0091 MASE_Test=1.1327
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4024.7074544337497 CRPS_Forecast=2813.7407204742362 CRPS_Test=1428.5714285714287
INFO:pyaf.std:MODEL_L1 L1_Fit=1217.8015564202335 L1_Forecast=2410.8527131782944 L1_Test=2642.8571428571427
INFO:pyaf.std:MODEL_L2 L2_Fit=1919.9824699264582 L2_Forecast=3267.765991261218 L2_Test=3087.9951887453267
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5955149516080538 LnQ_Forecast=0.17761235803675374 LnQ_Test=0.004165438399100207
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=800.0 MedAE_Forecast=2000.0 MedAE_Test=2500.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.48557919621749407
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _004800.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE    TestMAPE
0    None   CumSum_004800.KS  ...       0.0194      0.0219
1    None         _004800.KS  ...       0.0195      0.0205
2    None   CumSum_004800.KS  ...       0.0195      0.0205
3    None     Diff_004800.KS  ...       0.0195      0.0205
4    None     Diff_004800.KS  ...       0.0195      0.0205
..    ...                ...  ...          ...         ...
211  None  RelDiff_004800.KS  ...    3272.2844  16344.2000
212  None  RelDiff_004800.KS  ...    3272.2844  16344.2000
213  None  RelDiff_004800.KS  ...    3308.8828  13868.7631
214  None  RelDiff_004800.KS  ...    4619.4208  27409.7018
215  None  RelDiff_004800.KS  ...    4950.8378  26213.2076

[216 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_004800.KS             T+S+R  ...  0.0183       0.0194   0.0219
1  None        _004800.KS             T+S+R  ...  0.0168       0.0195   0.0205
2  None  CumSum_004800.KS             T+S+R  ...  0.0173       0.0195   0.0205
3  None    Diff_004800.KS             T+S+R  ...  0.0168       0.0195   0.0205
4  None    Diff_004800.KS             T+S+R  ...  0.0168       0.0195   0.0205

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['004800.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['004800.KS'], 'Horizon': 7}))
7 0    134000.0
1    133000.0
2    136000.0
3    135000.0
4    135000.0
5    136000.0
6    134500.0
Name: 004800.KS, dtype: float64
7 0    134500.0
1    134500.0
2    134500.0
3    134500.0
4    134500.0
5    134500.0
6    134500.0
Name: 004800.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_004800.KS 004800.KS [134000.0, 133000.0, 136000.0, 135000.0, 135000.0, 136000.0, 134500.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_004800.KS 004800.KS [134500.0, 134500.0, 134500.0, 134500.0, 134500.0, 134500.0, 134500.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_004800.KS 004800.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_004800.KS 004800.KS 12.682391881942749
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_004800.KS 004800.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_004800.KS 004800.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_004800.KS 004800.KS 0.0064 0.0064 0.6857
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_004800.KS 004800.KS 857.1428571428571 1035.0983390135314 -0.08247422680412386
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_004800.KS_7'
