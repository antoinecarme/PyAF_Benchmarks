BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1292 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  000180.KS N= 1292 H= 7 HEAD= [14027.2   13830.4   14076.5   13682.7   13338.199] TAIL= [3215. 3315. 3270. 3225. 3225.]
   000180.KS       Date
0  14027.200 2011-07-28
1  13830.400 2011-07-29
2  14076.500 2011-08-01
3  13682.700 2011-08-02
4  13338.199 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1292 entries, 0 to 1291
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   000180.KS  1292 non-null   float64       
 1   Date       1292 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['000180.KS'], 'Transformations': [('000180.KS', 'None', '_', 'T+S+R'), ('000180.KS', 'None', 'Diff_', 'T+S+R'), ('000180.KS', 'None', 'RelDiff_', 'T+S+R'), ('000180.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000180.KS', 'Transformation': '_000180.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.346, ('TRAINING', {'Signal': '000180.KS', 'Transformation': '_000180.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000180.KS', 'Transformation': 'Diff_000180.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.822, ('TRAINING', {'Signal': '000180.KS', 'Transformation': 'Diff_000180.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000180.KS', 'Transformation': 'RelDiff_000180.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.846, ('TRAINING', {'Signal': '000180.KS', 'Transformation': 'RelDiff_000180.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000180.KS', 'Transformation': 'CumSum_000180.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.869, ('TRAINING', {'Signal': '000180.KS', 'Transformation': 'CumSum_000180.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.884, ('SIGNAL_TRAINING', {'Signals': ['000180.KS'], 'Transformations': [('000180.KS', 'None', '_', 'T+S+R'), ('000180.KS', 'None', 'Diff_', 'T+S+R'), ('000180.KS', 'None', 'RelDiff_', 'T+S+R'), ('000180.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['000180.KS'], 'Transformations': [('000180.KS', [('000180.KS', 'None', 'CumSum_', 'T+S+R'), ('000180.KS', 'None', 'Diff_', 'T+S+R'), ('000180.KS', 'None', 'RelDiff_', 'T+S+R'), ('000180.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '000180.KS', 'Transformations': [('000180.KS', 'None', 'CumSum_', 'T+S+R'), ('000180.KS', 'None', 'Diff_', 'T+S+R'), ('000180.KS', 'None', 'RelDiff_', 'T+S+R'), ('000180.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': '000180.KS', 'Transformations': [('000180.KS', 'None', 'CumSum_', 'T+S+R'), ('000180.KS', 'None', 'Diff_', 'T+S+R'), ('000180.KS', 'None', 'RelDiff_', 'T+S+R'), ('000180.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000180.KS', 'Model': '_000180.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.034, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000180.KS', 'Model': '_000180.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000180.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.189, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000180.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.231, ('FINALIZE_TRAINING', {'Signals': ['000180.KS'], 'Transformations': [('000180.KS', [('000180.KS', 'None', 'CumSum_', 'T+S+R'), ('000180.KS', 'None', 'Diff_', 'T+S+R'), ('000180.KS', 'None', 'RelDiff_', 'T+S+R'), ('000180.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='000180.KS' Length=1292  Min=3110.0 Max=45576.201  Mean=20555.526684984525 StdDev=8470.118517876048
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_000180.KS' Min=0.0 Max=1.0  Mean=0.4108096856835506 StdDev=0.19945552741758193
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_000180.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_000180.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_000180.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_000180.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0172 MAPE_Forecast=0.0576 MAPE_Test=0.0103
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0173 SMAPE_Forecast=0.0298 SMAPE_Test=0.0103
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0007 MASE_Test=0.9592
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1554.6079760557034 CRPS_Forecast=3812.650269456809 CRPS_Test=13.928571428571429
INFO:pyaf.std:MODEL_L1 L1_Fit=367.8896799610895 L1_Forecast=666.0960972762648 L1_Test=33.57142857142857
INFO:pyaf.std:MODEL_L2 L2_Fit=634.48461247093 L2_Forecast=2356.095863634267 L2_Test=46.17513245398282
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7001721624947972 LnQ_Forecast=5.61122154086337 LnQ_Test=0.0014003130852460444
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=196.89999999999782 MedAE_Forecast=235.0 MedAE_Test=25.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2570797420753507
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _000180.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _000180.KS             T+S+R  ...   0.0172       0.0576    0.0103
1    None   CumSum_000180.KS             T+S+R  ...   0.0179       0.0576    0.0103
2    None   CumSum_000180.KS             T+S+R  ...   0.0179       0.0576    0.0103
3    None     Diff_000180.KS             T+S+R  ...   0.0172       0.0576    0.0103
4    None     Diff_000180.KS             T+S+R  ...   0.0172       0.0576    0.0103
..    ...                ...               ...  ...      ...          ...       ...
211  None   CumSum_000180.KS             T+S+R  ...  22.4657      46.8481  122.9110
212  None  RelDiff_000180.KS             T+S+R  ...   0.2627      48.1584  308.4232
213  None  RelDiff_000180.KS             T+S+R  ...   0.1950      51.8870  354.7324
214  None  RelDiff_000180.KS             T+S+R  ...   0.2945      54.2913  325.4355
215  None  RelDiff_000180.KS             T+S+R  ...   0.2945      54.2913  325.4355

[216 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _000180.KS             T+S+R  ...  0.0172       0.0576   0.0103
1  None  CumSum_000180.KS             T+S+R  ...  0.0179       0.0576   0.0103
2  None  CumSum_000180.KS             T+S+R  ...  0.0179       0.0576   0.0103
3  None    Diff_000180.KS             T+S+R  ...  0.0172       0.0576   0.0103
4  None    Diff_000180.KS             T+S+R  ...  0.0172       0.0576   0.0103

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['000180.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.168, ('FORECASTING', {'Signals': ['000180.KS'], 'Horizon': 7}))
7 0    3225.0
1    3300.0
2    3240.0
3    3240.0
4    3240.0
5    3305.0
6    3265.0
Name: 000180.KS, dtype: float64
7 0    3225.0
1    3225.0
2    3225.0
3    3225.0
4    3225.0
5    3225.0
6    3225.0
Name: 000180.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_000180.KS 000180.KS [3225.0, 3300.0, 3240.0, 3240.0, 3240.0, 3305.0, 3265.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_000180.KS 000180.KS [3225.0, 3225.0, 3225.0, 3225.0, 3225.0, 3225.0, 3225.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_000180.KS 000180.KS 1292 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_000180.KS 000180.KS 12.385505199432373
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_000180.KS 000180.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_000180.KS 000180.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_000180.KS 000180.KS 0.0104 0.0105 0.8571
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_000180.KS 000180.KS 34.285714285714285 45.1979771987325 -1.35529411764702
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_000180.KS_7'
