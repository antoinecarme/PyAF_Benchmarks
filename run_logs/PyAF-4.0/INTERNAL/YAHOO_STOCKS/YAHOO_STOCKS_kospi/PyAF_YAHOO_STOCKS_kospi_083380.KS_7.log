BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1277 H= 7 HEAD= ['2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000' '2011-08-04T00:00:00.000000000'
 '2011-08-05T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  083380.KS N= 1277 H= 7 HEAD= [4790. 4870. 4890. 4895. 4885.] TAIL= [4010. 4070. 4355. 4295. 4280.]
   083380.KS       Date
0     4790.0 2011-08-01
1     4870.0 2011-08-02
2     4890.0 2011-08-03
3     4895.0 2011-08-04
4     4885.0 2011-08-05
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1277 entries, 0 to 1276
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   083380.KS  1277 non-null   float64       
 1   Date       1277 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.9 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['083380.KS'], 'Transformations': [('083380.KS', 'None', '_', 'T+S+R'), ('083380.KS', 'None', 'Diff_', 'T+S+R'), ('083380.KS', 'None', 'RelDiff_', 'T+S+R'), ('083380.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083380.KS', 'Transformation': '_083380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.815, ('TRAINING', {'Signal': '083380.KS', 'Transformation': '_083380.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083380.KS', 'Transformation': 'Diff_083380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.848, ('TRAINING', {'Signal': '083380.KS', 'Transformation': 'Diff_083380.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083380.KS', 'Transformation': 'RelDiff_083380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.66, ('TRAINING', {'Signal': '083380.KS', 'Transformation': 'RelDiff_083380.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083380.KS', 'Transformation': 'CumSum_083380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.48, ('TRAINING', {'Signal': '083380.KS', 'Transformation': 'CumSum_083380.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 8.804, ('SIGNAL_TRAINING', {'Signals': ['083380.KS'], 'Transformations': [('083380.KS', 'None', '_', 'T+S+R'), ('083380.KS', 'None', 'Diff_', 'T+S+R'), ('083380.KS', 'None', 'RelDiff_', 'T+S+R'), ('083380.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['083380.KS'], 'Transformations': [('083380.KS', [('083380.KS', 'None', 'CumSum_', 'T+S+R'), ('083380.KS', 'None', 'Diff_', 'T+S+R'), ('083380.KS', 'None', 'RelDiff_', 'T+S+R'), ('083380.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '083380.KS', 'Transformations': [('083380.KS', 'None', 'CumSum_', 'T+S+R'), ('083380.KS', 'None', 'Diff_', 'T+S+R'), ('083380.KS', 'None', 'RelDiff_', 'T+S+R'), ('083380.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': '083380.KS', 'Transformations': [('083380.KS', 'None', 'CumSum_', 'T+S+R'), ('083380.KS', 'None', 'Diff_', 'T+S+R'), ('083380.KS', 'None', 'RelDiff_', 'T+S+R'), ('083380.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '083380.KS', 'Model': '_083380.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '083380.KS', 'Model': '_083380.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '083380.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.195, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '083380.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.229, ('FINALIZE_TRAINING', {'Signals': ['083380.KS'], 'Transformations': [('083380.KS', [('083380.KS', 'None', 'CumSum_', 'T+S+R'), ('083380.KS', 'None', 'Diff_', 'T+S+R'), ('083380.KS', 'None', 'RelDiff_', 'T+S+R'), ('083380.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-08-01T00:00:00.000000 TimeMax=2015-07-20T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='083380.KS' Length=1277  Min=2680.0 Max=5340.0  Mean=4587.607674236492 StdDev=487.86958477653985
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_083380.KS' Min=0.0 Max=1.0  Mean=0.7171457421941713 StdDev=0.18340961833704503
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_083380.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_083380.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_083380.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_083380.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0077 MAPE_Forecast=0.0152 MAPE_Test=0.0191
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0077 SMAPE_Forecast=0.0152 SMAPE_Test=0.0193
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0003 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=72.8580605055947 CRPS_Forecast=221.62524872626213 CRPS_Test=40.714285714285715
INFO:pyaf.std:MODEL_L1 L1_Fit=35.81692913385827 L1_Forecast=55.925196850393704 L1_Test=80.71428571428571
INFO:pyaf.std:MODEL_L2 L2_Fit=73.72906082033609 L2_Forecast=108.4214763570072 L2_Test=125.17131118134516
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.26641332190265776 LnQ_Forecast=0.23079690632697164 LnQ_Test=0.006267831366468985
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=5.0 MedAE_Forecast=20.0 MedAE_Test=60.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.793233082706767
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _083380.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE   TestMAPE
0    None         _083380.KS  ...       0.0152     0.0191
1    None   CumSum_083380.KS  ...       0.0152     0.0191
2    None   CumSum_083380.KS  ...       0.0152     0.0191
3    None     Diff_083380.KS  ...       0.0152     0.0191
4    None         _083380.KS  ...       0.0152     0.0191
..    ...                ...  ...          ...        ...
139  None  RelDiff_083380.KS  ...       1.7343     0.1495
140  None   CumSum_083380.KS  ...       2.8240     2.1514
141  None  RelDiff_083380.KS  ...     354.5838  1831.5887
142  None  RelDiff_083380.KS  ...     354.5838  1831.5887
143  None  RelDiff_083380.KS  ...     354.5838  1831.5887

[144 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _083380.KS             T+S+R  ...  0.0077       0.0152   0.0191
1  None  CumSum_083380.KS             T+S+R  ...  0.0082       0.0152   0.0191
2  None  CumSum_083380.KS             T+S+R  ...  0.0082       0.0152   0.0191
3  None    Diff_083380.KS             T+S+R  ...  0.0077       0.0152   0.0191
4  None        _083380.KS             T+S+R  ...  0.0077       0.0152   0.0191

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['083380.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['083380.KS'], 'Horizon': 7}))
7 0    4515.0
1    4500.0
2    4500.0
3    4480.0
4    4480.0
5    4300.0
6    4240.0
Name: 083380.KS, dtype: float64
7 0    4280.0
1    4280.0
2    4280.0
3    4280.0
4    4280.0
5    4280.0
6    4280.0
Name: 083380.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_083380.KS 083380.KS [4515.0, 4500.0, 4500.0, 4480.0, 4480.0, 4300.0, 4240.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_083380.KS 083380.KS [4280.0, 4280.0, 4280.0, 4280.0, 4280.0, 4280.0, 4280.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_083380.KS 083380.KS 1277 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_083380.KS 083380.KS 9.285220861434937
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_083380.KS 083380.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_083380.KS 083380.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_083380.KS 083380.KS 0.0362 0.037 3.5377
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_083380.KS 083380.KS 162.14285714285714 182.84458662247252 -2.119442064172137
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_083380.KS_7'
