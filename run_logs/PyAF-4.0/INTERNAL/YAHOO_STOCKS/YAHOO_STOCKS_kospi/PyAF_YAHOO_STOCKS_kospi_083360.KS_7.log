BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1235 H= 7 HEAD= ['2011-08-01T00:00:00.000000000' '2011-08-08T00:00:00.000000000'
 '2011-08-11T00:00:00.000000000' '2011-08-19T00:00:00.000000000'
 '2011-08-22T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  083360.KS N= 1235 H= 7 HEAD= [4650. 4620. 4600. 4720. 4770.] TAIL= [4090. 4005. 4295. 4295. 4295.]
   083360.KS       Date
0     4650.0 2011-08-01
1     4620.0 2011-08-08
2     4600.0 2011-08-11
3     4720.0 2011-08-19
4     4770.0 2011-08-22
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1235 entries, 0 to 1234
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   083360.KS  1235 non-null   float64       
 1   Date       1235 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 28.9 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['083360.KS'], 'Transformations': [('083360.KS', 'None', '_', 'T+S+R'), ('083360.KS', 'None', 'Diff_', 'T+S+R'), ('083360.KS', 'None', 'RelDiff_', 'T+S+R'), ('083360.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083360.KS', 'Transformation': '_083360.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.602, ('TRAINING', {'Signal': '083360.KS', 'Transformation': '_083360.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083360.KS', 'Transformation': 'Diff_083360.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.47, ('TRAINING', {'Signal': '083360.KS', 'Transformation': 'Diff_083360.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083360.KS', 'Transformation': 'RelDiff_083360.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.613, ('TRAINING', {'Signal': '083360.KS', 'Transformation': 'RelDiff_083360.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '083360.KS', 'Transformation': 'CumSum_083360.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.484, ('TRAINING', {'Signal': '083360.KS', 'Transformation': 'CumSum_083360.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.171, ('SIGNAL_TRAINING', {'Signals': ['083360.KS'], 'Transformations': [('083360.KS', 'None', '_', 'T+S+R'), ('083360.KS', 'None', 'Diff_', 'T+S+R'), ('083360.KS', 'None', 'RelDiff_', 'T+S+R'), ('083360.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['083360.KS'], 'Transformations': [('083360.KS', [('083360.KS', 'None', 'CumSum_', 'T+S+R'), ('083360.KS', 'None', 'Diff_', 'T+S+R'), ('083360.KS', 'None', 'RelDiff_', 'T+S+R'), ('083360.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '083360.KS', 'Transformations': [('083360.KS', 'None', 'CumSum_', 'T+S+R'), ('083360.KS', 'None', 'Diff_', 'T+S+R'), ('083360.KS', 'None', 'RelDiff_', 'T+S+R'), ('083360.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '083360.KS', 'Transformations': [('083360.KS', 'None', 'CumSum_', 'T+S+R'), ('083360.KS', 'None', 'Diff_', 'T+S+R'), ('083360.KS', 'None', 'RelDiff_', 'T+S+R'), ('083360.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '083360.KS', 'Model': '_083360.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '083360.KS', 'Model': '_083360.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '083360.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '083360.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['083360.KS'], 'Transformations': [('083360.KS', [('083360.KS', 'None', 'CumSum_', 'T+S+R'), ('083360.KS', 'None', 'Diff_', 'T+S+R'), ('083360.KS', 'None', 'RelDiff_', 'T+S+R'), ('083360.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-08-01T00:00:00.000000 TimeMax=2015-07-30T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='083360.KS' Length=1235  Min=2655.0 Max=5150.0  Mean=4552.740890688259 StdDev=487.95673887775274
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_083360.KS' Min=0.0 Max=1.0  Mean=0.7606175914582198 StdDev=0.1955738432375759
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_083360.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_083360.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_083360.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_083360.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0059 MAPE_Forecast=0.0161 MAPE_Test=0.013
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0059 SMAPE_Forecast=0.0161 SMAPE_Test=0.0133
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9959 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=76.46483009968912 CRPS_Forecast=214.1845193687231 CRPS_Test=35.714285714285715
INFO:pyaf.std:MODEL_L1 L1_Fit=26.751527494908352 L1_Forecast=61.17886178861789 L1_Test=55.0
INFO:pyaf.std:MODEL_L2 L2_Fit=65.1506166611171 L2_Forecast=122.95646661695687 L2_Test=114.25222723680895
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.20869933745264502 LnQ_Forecast=0.2594087890203652 LnQ_Test=0.005331165011254875
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=15.0 MedAE_Test=5.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7995991983967936
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _083360.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _083360.KS             T+S+R  ...  0.0059       0.0161   0.0130
1    None   CumSum_083360.KS             T+S+R  ...  0.0063       0.0161   0.0130
2    None   CumSum_083360.KS             T+S+R  ...  0.0063       0.0161   0.0130
3    None     Diff_083360.KS             T+S+R  ...  0.0059       0.0161   0.0130
4    None         _083360.KS             T+S+R  ...  0.0059       0.0161   0.0130
..    ...                ...               ...  ...     ...          ...      ...
147  None  RelDiff_083360.KS             T+S+R  ...  0.2020       1.1522   0.1213
148  None   CumSum_083360.KS             T+S+R  ...  1.7439       1.7709   1.7761
149  None  RelDiff_083360.KS             T+S+R  ...  0.1340       5.6716  40.1295
150  None  RelDiff_083360.KS             T+S+R  ...  0.1340       5.6716  40.1295
151  None  RelDiff_083360.KS             T+S+R  ...  0.1340       5.6716  40.1295

[152 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _083360.KS             T+S+R  ...  0.0059       0.0161    0.013
1  None  CumSum_083360.KS             T+S+R  ...  0.0063       0.0161    0.013
2  None  CumSum_083360.KS             T+S+R  ...  0.0063       0.0161    0.013
3  None    Diff_083360.KS             T+S+R  ...  0.0059       0.0161    0.013
4  None        _083360.KS             T+S+R  ...  0.0059       0.0161    0.013

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['083360.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['083360.KS'], 'Horizon': 7}))
7 0    4295.0
1    4300.0
2    4290.0
3    4300.0
4    4300.0
5    4300.0
6    4300.0
Name: 083360.KS, dtype: float64
7 0    4295.0
1    4295.0
2    4295.0
3    4295.0
4    4295.0
5    4295.0
6    4295.0
Name: 083360.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_083360.KS 083360.KS [4295.0, 4300.0, 4290.0, 4300.0, 4300.0, 4300.0, 4300.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_083360.KS 083360.KS [4295.0, 4295.0, 4295.0, 4295.0, 4295.0, 4295.0, 4295.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_083360.KS 083360.KS 1235 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_083360.KS 083360.KS 9.647007703781128
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_083360.KS 083360.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_083360.KS 083360.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_083360.KS 083360.KS 0.001 0.001 1.0286
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_083360.KS 083360.KS 4.285714285714286 4.6291004988627575 -0.6153846153828759
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_083360.KS_7'
