BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  002210.KS N= 1293 H= 7 HEAD= [1300. 1390. 1435. 1435. 1380.] TAIL= [6180. 6090. 5990. 6010. 5930.]
   002210.KS       Date
0     1300.0 2011-07-28
1     1390.0 2011-07-29
2     1435.0 2011-08-01
3     1435.0 2011-08-02
4     1380.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   002210.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['002210.KS'], 'Transformations': [('002210.KS', 'None', '_', 'T+S+R'), ('002210.KS', 'None', 'Diff_', 'T+S+R'), ('002210.KS', 'None', 'RelDiff_', 'T+S+R'), ('002210.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002210.KS', 'Transformation': '_002210.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.991, ('TRAINING', {'Signal': '002210.KS', 'Transformation': '_002210.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002210.KS', 'Transformation': 'Diff_002210.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.887, ('TRAINING', {'Signal': '002210.KS', 'Transformation': 'Diff_002210.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002210.KS', 'Transformation': 'RelDiff_002210.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.207, ('TRAINING', {'Signal': '002210.KS', 'Transformation': 'RelDiff_002210.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002210.KS', 'Transformation': 'CumSum_002210.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.84, ('TRAINING', {'Signal': '002210.KS', 'Transformation': 'CumSum_002210.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.928, ('SIGNAL_TRAINING', {'Signals': ['002210.KS'], 'Transformations': [('002210.KS', 'None', '_', 'T+S+R'), ('002210.KS', 'None', 'Diff_', 'T+S+R'), ('002210.KS', 'None', 'RelDiff_', 'T+S+R'), ('002210.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['002210.KS'], 'Transformations': [('002210.KS', [('002210.KS', 'None', 'CumSum_', 'T+S+R'), ('002210.KS', 'None', 'Diff_', 'T+S+R'), ('002210.KS', 'None', 'RelDiff_', 'T+S+R'), ('002210.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '002210.KS', 'Transformations': [('002210.KS', 'None', 'CumSum_', 'T+S+R'), ('002210.KS', 'None', 'Diff_', 'T+S+R'), ('002210.KS', 'None', 'RelDiff_', 'T+S+R'), ('002210.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': '002210.KS', 'Transformations': [('002210.KS', 'None', 'CumSum_', 'T+S+R'), ('002210.KS', 'None', 'Diff_', 'T+S+R'), ('002210.KS', 'None', 'RelDiff_', 'T+S+R'), ('002210.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '002210.KS', 'Model': '_002210.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '002210.KS', 'Model': '_002210.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '002210.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '002210.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['002210.KS'], 'Transformations': [('002210.KS', [('002210.KS', 'None', 'CumSum_', 'T+S+R'), ('002210.KS', 'None', 'Diff_', 'T+S+R'), ('002210.KS', 'None', 'RelDiff_', 'T+S+R'), ('002210.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='002210.KS' Length=1293  Min=1005.0 Max=8510.0  Mean=4376.740139211137 StdDev=1520.0086840551505
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_002210.KS' Min=0.0 Max=1.0  Mean=0.4492658413339298 StdDev=0.20253280267223886
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_002210.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_002210.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_002210.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_002210.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0255 MAPE_Forecast=0.0202 MAPE_Test=0.0113
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0256 SMAPE_Forecast=0.0202 SMAPE_Test=0.0113
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9975 MASE_Test=0.9568
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=449.8115297972559 CRPS_Forecast=150.70702143182854 CRPS_Test=32.857142857142854
INFO:pyaf.std:MODEL_L1 L1_Fit=105.71011673151752 L1_Forecast=111.51162790697674 L1_Test=68.57142857142857
INFO:pyaf.std:MODEL_L2 L2_Fit=173.45664637368677 L2_Forecast=152.67892033014346 L2_Test=81.94074514114278
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.4534612659489003 LnQ_Forecast=0.1983631769047311 LnQ_Test=0.0012741858649132313
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=65.0 MedAE_Forecast=80.0 MedAE_Test=80.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.03930712858094604
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _002210.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE   TestMAPE
0    None         _002210.KS  ...       0.0202     0.0113
1    None   CumSum_002210.KS  ...       0.0202     0.0113
2    None     Diff_002210.KS  ...       0.0202     0.0113
3    None     Diff_002210.KS  ...       0.0202     0.0113
4    None  RelDiff_002210.KS  ...       0.0202     0.0113
..    ...                ...  ...          ...        ...
203  None  RelDiff_002210.KS  ...     280.8324  1721.5816
204  None  RelDiff_002210.KS  ...     298.6210  2294.9313
205  None  RelDiff_002210.KS  ...     299.8775  2150.7756
206  None  RelDiff_002210.KS  ...     746.6093  6413.9032
207  None  RelDiff_002210.KS  ...     829.0387  7278.8017

[208 rows x 10 columns]
  Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _002210.KS             T+S+R  ...  0.0255       0.0202   0.0113
1  None   CumSum_002210.KS             T+S+R  ...  0.0257       0.0202   0.0113
2  None     Diff_002210.KS             T+S+R  ...  0.0255       0.0202   0.0113
3  None     Diff_002210.KS             T+S+R  ...  0.0255       0.0202   0.0113
4  None  RelDiff_002210.KS             T+S+R  ...  0.0289       0.0202   0.0113

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['002210.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['002210.KS'], 'Horizon': 7}))
7 0    5910.0
1    5820.0
2    5710.0
3    5670.0
4    5700.0
5    5690.0
6    5740.0
Name: 002210.KS, dtype: float64
7 0    5930.0
1    5930.0
2    5930.0
3    5930.0
4    5930.0
5    5930.0
6    5930.0
Name: 002210.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_002210.KS 002210.KS [5910.0, 5820.0, 5710.0, 5670.0, 5700.0, 5690.0, 5740.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_002210.KS 002210.KS [5930.0, 5930.0, 5930.0, 5930.0, 5930.0, 5930.0, 5930.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_002210.KS 002210.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_002210.KS 002210.KS 12.405714750289917
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_002210.KS 002210.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_002210.KS 002210.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_002210.KS 002210.KS 0.0318 0.0312 3.2987
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_002210.KS 002210.KS 181.42857142857142 198.2422760159901 -5.156329923273644
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_002210.KS_7'
