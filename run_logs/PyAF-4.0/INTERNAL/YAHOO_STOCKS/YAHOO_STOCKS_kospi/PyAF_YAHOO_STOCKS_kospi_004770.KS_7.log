BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  004770.KS N= 1293 H= 7 HEAD= [536.087 540.782 550.17  548.292 534.21 ] TAIL= [4240. 4225. 4235. 4225. 4245.]
   004770.KS       Date
0    536.087 2011-07-28
1    540.782 2011-07-29
2    550.170 2011-08-01
3    548.292 2011-08-02
4    534.210 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   004770.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['004770.KS'], 'Transformations': [('004770.KS', 'None', '_', 'T+S+R'), ('004770.KS', 'None', 'Diff_', 'T+S+R'), ('004770.KS', 'None', 'RelDiff_', 'T+S+R'), ('004770.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004770.KS', 'Transformation': '_004770.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.281, ('TRAINING', {'Signal': '004770.KS', 'Transformation': '_004770.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004770.KS', 'Transformation': 'Diff_004770.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.899, ('TRAINING', {'Signal': '004770.KS', 'Transformation': 'Diff_004770.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004770.KS', 'Transformation': 'RelDiff_004770.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.267, ('TRAINING', {'Signal': '004770.KS', 'Transformation': 'RelDiff_004770.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004770.KS', 'Transformation': 'CumSum_004770.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.291, ('TRAINING', {'Signal': '004770.KS', 'Transformation': 'CumSum_004770.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.742, ('SIGNAL_TRAINING', {'Signals': ['004770.KS'], 'Transformations': [('004770.KS', 'None', '_', 'T+S+R'), ('004770.KS', 'None', 'Diff_', 'T+S+R'), ('004770.KS', 'None', 'RelDiff_', 'T+S+R'), ('004770.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['004770.KS'], 'Transformations': [('004770.KS', [('004770.KS', 'None', 'CumSum_', 'T+S+R'), ('004770.KS', 'None', 'Diff_', 'T+S+R'), ('004770.KS', 'None', 'RelDiff_', 'T+S+R'), ('004770.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '004770.KS', 'Transformations': [('004770.KS', 'None', 'CumSum_', 'T+S+R'), ('004770.KS', 'None', 'Diff_', 'T+S+R'), ('004770.KS', 'None', 'RelDiff_', 'T+S+R'), ('004770.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '004770.KS', 'Transformations': [('004770.KS', 'None', 'CumSum_', 'T+S+R'), ('004770.KS', 'None', 'Diff_', 'T+S+R'), ('004770.KS', 'None', 'RelDiff_', 'T+S+R'), ('004770.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004770.KS', 'Model': '_004770.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004770.KS', 'Model': '_004770.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004770.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.194, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004770.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.229, ('FINALIZE_TRAINING', {'Signals': ['004770.KS'], 'Transformations': [('004770.KS', [('004770.KS', 'None', 'CumSum_', 'T+S+R'), ('004770.KS', 'None', 'Diff_', 'T+S+R'), ('004770.KS', 'None', 'RelDiff_', 'T+S+R'), ('004770.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='004770.KS' Length=1293  Min=305.129 Max=9904.94  Mean=3070.6598259860816 StdDev=1688.8651567452825
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_004770.KS' Min=0.0 Max=1.0  Mean=0.2880817993173072 StdDev=0.17592691738881971
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_004770.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_004770.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_004770.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_004770.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0367 MAPE_Forecast=0.0257 MAPE_Test=0.0035
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0368 SMAPE_Forecast=0.026 SMAPE_Test=0.0035
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0006 MASE_Test=0.9474
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=476.86291462779036 CRPS_Forecast=417.04882808937526 CRPS_Test=5.3571428571429225
INFO:pyaf.std:MODEL_L1 L1_Fit=114.05361575875486 L1_Forecast=109.20542635658914 L1_Test=15.00000000000013
INFO:pyaf.std:MODEL_L2 L2_Fit=206.55141294634922 L2_Forecast=205.95847967208633 L2_Test=17.62708954179013
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.2798829093810147 LnQ_Forecast=0.5047889840727234 LnQ_Test=0.0001216025217142318
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=45.0 MedAE_Forecast=55.0 MedAE_Test=10.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.02405859865366099
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _004770.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
1    None         _004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
2    None   CumSum_004770.KS             T+S+R  ...  0.0371       0.0257   0.0035
3    None     Diff_004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
4    None     Diff_004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
..    ...                ...               ...  ...     ...          ...      ...
187  None  RelDiff_004770.KS             T+S+R  ...  2.2844       9.8490  14.7493
188  None  RelDiff_004770.KS             T+S+R  ...  2.3543      10.0434  14.6402
189  None  RelDiff_004770.KS             T+S+R  ...  2.2931      10.2732  15.7563
190  None  RelDiff_004770.KS             T+S+R  ...  1.9821      12.7158  20.0634
191  None  RelDiff_004770.KS             T+S+R  ...  1.9821      12.7158  20.0634

[192 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
1  None        _004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
2  None  CumSum_004770.KS             T+S+R  ...  0.0371       0.0257   0.0035
3  None    Diff_004770.KS             T+S+R  ...  0.0367       0.0257   0.0035
4  None    Diff_004770.KS             T+S+R  ...  0.0367       0.0257   0.0035

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['004770.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['004770.KS'], 'Horizon': 7}))
7 0    4205.0
1    4190.0
2    4280.0
3    4420.0
4    4445.0
5    4420.0
6    4445.0
Name: 004770.KS, dtype: float64
7 0    4245.0
1    4245.0
2    4245.0
3    4245.0
4    4245.0
5    4245.0
6    4245.0
Name: 004770.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_004770.KS 004770.KS [4205.0, 4190.0, 4280.0, 4420.0, 4445.0, 4420.0, 4445.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_004770.KS 004770.KS [4245.000000000001, 4245.000000000001, 4245.000000000001, 4245.000000000001, 4245.000000000001, 4245.000000000001, 4245.000000000001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_004770.KS 004770.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_004770.KS 004770.KS 12.223685026168823
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_004770.KS 004770.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_004770.KS 004770.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_004770.KS 004770.KS 0.0286 0.0291 2.3571
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_004770.KS 004770.KS 125.71428571428532 144.96304947911912 -0.8600072254335076
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_004770.KS_7'
