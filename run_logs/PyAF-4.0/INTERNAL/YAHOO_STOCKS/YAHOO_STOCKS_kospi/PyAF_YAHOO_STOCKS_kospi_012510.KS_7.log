BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  012510.KS N= 1293 H= 7 HEAD= [11800. 10850. 11000. 10600. 10800.] TAIL= [23550. 23400. 23050. 22850. 23200.]
   012510.KS       Date
0    11800.0 2011-07-28
1    10850.0 2011-07-29
2    11000.0 2011-08-01
3    10600.0 2011-08-02
4    10800.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   012510.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['012510.KS'], 'Transformations': [('012510.KS', 'None', '_', 'T+S+R'), ('012510.KS', 'None', 'Diff_', 'T+S+R'), ('012510.KS', 'None', 'RelDiff_', 'T+S+R'), ('012510.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012510.KS', 'Transformation': '_012510.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.202, ('TRAINING', {'Signal': '012510.KS', 'Transformation': '_012510.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012510.KS', 'Transformation': 'Diff_012510.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.475, ('TRAINING', {'Signal': '012510.KS', 'Transformation': 'Diff_012510.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012510.KS', 'Transformation': 'RelDiff_012510.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.164, ('TRAINING', {'Signal': '012510.KS', 'Transformation': 'RelDiff_012510.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012510.KS', 'Transformation': 'CumSum_012510.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.723, ('TRAINING', {'Signal': '012510.KS', 'Transformation': 'CumSum_012510.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.565, ('SIGNAL_TRAINING', {'Signals': ['012510.KS'], 'Transformations': [('012510.KS', 'None', '_', 'T+S+R'), ('012510.KS', 'None', 'Diff_', 'T+S+R'), ('012510.KS', 'None', 'RelDiff_', 'T+S+R'), ('012510.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['012510.KS'], 'Transformations': [('012510.KS', [('012510.KS', 'None', 'CumSum_', 'T+S+R'), ('012510.KS', 'None', 'Diff_', 'T+S+R'), ('012510.KS', 'None', 'RelDiff_', 'T+S+R'), ('012510.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '012510.KS', 'Transformations': [('012510.KS', 'None', 'CumSum_', 'T+S+R'), ('012510.KS', 'None', 'Diff_', 'T+S+R'), ('012510.KS', 'None', 'RelDiff_', 'T+S+R'), ('012510.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': '012510.KS', 'Transformations': [('012510.KS', 'None', 'CumSum_', 'T+S+R'), ('012510.KS', 'None', 'Diff_', 'T+S+R'), ('012510.KS', 'None', 'RelDiff_', 'T+S+R'), ('012510.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '012510.KS', 'Model': '_012510.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '012510.KS', 'Model': '_012510.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '012510.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '012510.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['012510.KS'], 'Transformations': [('012510.KS', [('012510.KS', 'None', 'CumSum_', 'T+S+R'), ('012510.KS', 'None', 'Diff_', 'T+S+R'), ('012510.KS', 'None', 'RelDiff_', 'T+S+R'), ('012510.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='012510.KS' Length=1293  Min=5540.0 Max=26000.0  Mean=12673.031709203404 StdDev=5129.770404708867
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_012510.KS' Min=0.0 Max=1.0  Mean=0.3486330258652695 StdDev=0.2507219161636788
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_012510.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_012510.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_012510.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_012510.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0214 MAPE_Forecast=0.0222 MAPE_Test=0.0131
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0214 SMAPE_Forecast=0.0223 SMAPE_Test=0.0131
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9969 MASE_Test=1.1169
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=641.2948238787629 CRPS_Forecast=576.0320930232559 CRPS_Test=192.85714285714286
INFO:pyaf.std:MODEL_L1 L1_Fit=217.82101167315176 L1_Forecast=473.06201550387595 L1_Test=307.14285714285717
INFO:pyaf.std:MODEL_L2 L2_Fit=322.19154705874723 L2_Forecast=650.7821769689649 L2_Test=341.7392489687339
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.9703777191225316 LnQ_Forecast=0.2546970058443955 LnQ_Test=0.001471264709648916
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=150.0 MedAE_Forecast=350.0 MedAE_Test=350.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.30596285434995113
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _012510.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE      TestMAPE
0    None         _012510.KS  ...       0.0222  1.310000e-02
1    None   CumSum_012510.KS  ...       0.0222  1.310000e-02
2    None     Diff_012510.KS  ...       0.0222  1.310000e-02
3    None     Diff_012510.KS  ...       0.0222  1.310000e-02
4    None  RelDiff_012510.KS  ...       0.0222  1.310000e-02
..    ...                ...  ...          ...           ...
147  None  RelDiff_012510.KS  ...   93987.9473  1.238825e+06
148  None  RelDiff_012510.KS  ...   93987.9473  1.238825e+06
149  None  RelDiff_012510.KS  ...  109300.0983  1.773949e+06
150  None  RelDiff_012510.KS  ...  126110.4726  2.063884e+06
151  None  RelDiff_012510.KS  ...  130212.7632  2.875378e+06

[152 rows x 10 columns]
  Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _012510.KS             T+S+R  ...  0.0214       0.0222   0.0131
1  None   CumSum_012510.KS             T+S+R  ...  0.0218       0.0222   0.0131
2  None     Diff_012510.KS             T+S+R  ...  0.0214       0.0222   0.0131
3  None     Diff_012510.KS             T+S+R  ...  0.0214       0.0222   0.0131
4  None  RelDiff_012510.KS             T+S+R  ...  0.2320       0.0222   0.0131

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['012510.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('FORECASTING', {'Signals': ['012510.KS'], 'Horizon': 7}))
7 0    23450.0
1    23400.0
2    23850.0
3    24400.0
4    24200.0
5    23600.0
6    23200.0
Name: 012510.KS, dtype: float64
7 0    23200.0
1    23200.0
2    23200.0
3    23200.0
4    23200.0
5    23200.0
6    23200.0
Name: 012510.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_012510.KS 012510.KS [23450.0, 23400.0, 23850.0, 24400.0, 24200.0, 23600.0, 23200.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_012510.KS 012510.KS [23200.0, 23200.0, 23200.0, 23200.0, 23200.0, 23200.0, 23200.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_012510.KS 012510.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_012510.KS 012510.KS 10.066468477249146
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_012510.KS 012510.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_012510.KS 012510.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_012510.KS 012510.KS 0.022 0.0224 1.4095
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_012510.KS 012510.KS 528.5714285714286 668.153104781061 -1.6725717776420286
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_012510.KS_7'
