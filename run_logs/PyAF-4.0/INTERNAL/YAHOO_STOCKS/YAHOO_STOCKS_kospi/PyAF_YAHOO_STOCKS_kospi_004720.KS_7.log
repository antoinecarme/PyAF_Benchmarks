BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  004720.KS N= 1293 H= 7 HEAD= [598.41 601.24 620.08 605.   580.5 ] TAIL= [15300. 15100. 14800. 15200. 14900.]
   004720.KS       Date
0     598.41 2011-07-28
1     601.24 2011-07-29
2     620.08 2011-08-01
3     605.00 2011-08-02
4     580.50 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   004720.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['004720.KS'], 'Transformations': [('004720.KS', 'None', '_', 'T+S+R'), ('004720.KS', 'None', 'Diff_', 'T+S+R'), ('004720.KS', 'None', 'RelDiff_', 'T+S+R'), ('004720.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004720.KS', 'Transformation': '_004720.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.636, ('TRAINING', {'Signal': '004720.KS', 'Transformation': '_004720.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004720.KS', 'Transformation': 'Diff_004720.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.729, ('TRAINING', {'Signal': '004720.KS', 'Transformation': 'Diff_004720.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004720.KS', 'Transformation': 'RelDiff_004720.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.295, ('TRAINING', {'Signal': '004720.KS', 'Transformation': 'RelDiff_004720.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004720.KS', 'Transformation': 'CumSum_004720.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.019, ('TRAINING', {'Signal': '004720.KS', 'Transformation': 'CumSum_004720.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.682, ('SIGNAL_TRAINING', {'Signals': ['004720.KS'], 'Transformations': [('004720.KS', 'None', '_', 'T+S+R'), ('004720.KS', 'None', 'Diff_', 'T+S+R'), ('004720.KS', 'None', 'RelDiff_', 'T+S+R'), ('004720.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['004720.KS'], 'Transformations': [('004720.KS', [('004720.KS', 'None', 'CumSum_', 'T+S+R'), ('004720.KS', 'None', 'Diff_', 'T+S+R'), ('004720.KS', 'None', 'RelDiff_', 'T+S+R'), ('004720.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '004720.KS', 'Transformations': [('004720.KS', 'None', 'CumSum_', 'T+S+R'), ('004720.KS', 'None', 'Diff_', 'T+S+R'), ('004720.KS', 'None', 'RelDiff_', 'T+S+R'), ('004720.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '004720.KS', 'Transformations': [('004720.KS', 'None', 'CumSum_', 'T+S+R'), ('004720.KS', 'None', 'Diff_', 'T+S+R'), ('004720.KS', 'None', 'RelDiff_', 'T+S+R'), ('004720.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004720.KS', 'Model': '_004720.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004720.KS', 'Model': '_004720.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004720.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004720.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['004720.KS'], 'Transformations': [('004720.KS', [('004720.KS', 'None', 'CumSum_', 'T+S+R'), ('004720.KS', 'None', 'Diff_', 'T+S+R'), ('004720.KS', 'None', 'RelDiff_', 'T+S+R'), ('004720.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='004720.KS' Length=1293  Min=306.0 Max=16700.0  Mean=3212.519257540603 StdDev=3418.6855950089857
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_004720.KS' Min=0.0 Max=1.0  Mean=0.17729164679398587 StdDev=0.20853273118268817
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_004720.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_004720.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_004720.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_004720.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0348 MAPE_Forecast=0.024 MAPE_Test=0.0156
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0355 SMAPE_Forecast=0.0242 SMAPE_Test=0.0155
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0002 MASE_Test=1.1314
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=558.3008789524882 CRPS_Forecast=557.7949968080256 CRPS_Test=100.0
INFO:pyaf.std:MODEL_L1 L1_Fit=74.70333657587548 L1_Forecast=210.6201550387597 L1_Test=235.71428571428572
INFO:pyaf.std:MODEL_L2 L2_Fit=178.22615264509625 L2_Forecast=346.99485061970177 L2_Test=278.3882181415011
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=8.343453016030876 LnQ_Forecast=0.3270271343100679 LnQ_Test=0.0023568254884621265
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=15.0 MedAE_Forecast=130.0 MedAE_Test=300.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.01783640356227888
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _004720.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ...  ForecastMAPE      TestMAPE
0    None         _004720.KS  ...  2.400000e-02  1.560000e-02
1    None         _004720.KS  ...  2.400000e-02  1.560000e-02
2    None   CumSum_004720.KS  ...  2.400000e-02  1.560000e-02
3    None     Diff_004720.KS  ...  2.400000e-02  1.560000e-02
4    None     Diff_004720.KS  ...  2.400000e-02  1.560000e-02
..    ...                ...  ...           ...           ...
187  None  RelDiff_004720.KS  ...  3.932368e+06  1.932252e+06
188  None  RelDiff_004720.KS  ...  3.932368e+06  1.932252e+06
189  None  RelDiff_004720.KS  ...  3.932368e+06  1.932252e+06
190  None  RelDiff_004720.KS  ...  3.932368e+06  1.932252e+06
191  None  RelDiff_004720.KS  ...  3.932368e+06  1.932252e+06

[192 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _004720.KS             T+S+R  ...  0.0348        0.024   0.0156
1  None        _004720.KS             T+S+R  ...  0.0348        0.024   0.0156
2  None  CumSum_004720.KS             T+S+R  ...  0.0353        0.024   0.0156
3  None    Diff_004720.KS             T+S+R  ...  0.0348        0.024   0.0156
4  None    Diff_004720.KS             T+S+R  ...  0.0348        0.024   0.0156

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['004720.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['004720.KS'], 'Horizon': 7}))
7 0    15600.0
1    15600.0
2    16200.0
3    16400.0
4    16200.0
5    16300.0
6    16500.0
Name: 004720.KS, dtype: float64
7 0    14900.0
1    14900.0
2    14900.0
3    14900.0
4    14900.0
5    14900.0
6    14900.0
Name: 004720.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_004720.KS 004720.KS [15600.0, 15600.0, 16200.0, 16400.0, 16200.0, 16300.0, 16500.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_004720.KS 004720.KS [14900.0, 14900.0, 14900.0, 14900.0, 14900.0, 14900.0, 14900.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_004720.KS 004720.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_004720.KS 004720.KS 12.151232957839966
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_004720.KS 004720.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_004720.KS 004720.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_004720.KS 004720.KS 0.0749 0.0781 5.6044
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_004720.KS 004720.KS 1214.2857142857142 1260.9520212918492 -12.765017667844521
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_004720.KS_7'
