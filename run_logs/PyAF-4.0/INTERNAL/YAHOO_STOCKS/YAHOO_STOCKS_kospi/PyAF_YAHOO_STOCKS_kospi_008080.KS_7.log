BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 535 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2013-09-04T00:00:00.000000000' '2013-09-05T00:00:00.000000000'
 '2013-09-06T00:00:00.000000000' '2013-09-09T00:00:00.000000000'
 '2013-09-10T00:00:00.000000000']
SIGNAL :  008080.KS N= 535 H= 7 HEAD= [980. 985. 992. 987. 951.] TAIL= [488182. 488182. 488182. 488182. 488182.]
   008080.KS       Date
0      980.0 2011-07-28
1      985.0 2011-07-29
2      992.0 2011-08-01
3      987.0 2011-08-02
4      951.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 535 entries, 0 to 534
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   008080.KS  535 non-null    float64       
 1   Date       535 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 12.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['008080.KS'], 'Transformations': [('008080.KS', 'None', '_', 'T+S+R'), ('008080.KS', 'None', 'Diff_', 'T+S+R'), ('008080.KS', 'None', 'RelDiff_', 'T+S+R'), ('008080.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008080.KS', 'Transformation': '_008080.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.858, ('TRAINING', {'Signal': '008080.KS', 'Transformation': '_008080.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008080.KS', 'Transformation': 'Diff_008080.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.289, ('TRAINING', {'Signal': '008080.KS', 'Transformation': 'Diff_008080.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008080.KS', 'Transformation': 'RelDiff_008080.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.928, ('TRAINING', {'Signal': '008080.KS', 'Transformation': 'RelDiff_008080.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008080.KS', 'Transformation': 'CumSum_008080.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.092, ('TRAINING', {'Signal': '008080.KS', 'Transformation': 'CumSum_008080.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 6.169, ('SIGNAL_TRAINING', {'Signals': ['008080.KS'], 'Transformations': [('008080.KS', 'None', '_', 'T+S+R'), ('008080.KS', 'None', 'Diff_', 'T+S+R'), ('008080.KS', 'None', 'RelDiff_', 'T+S+R'), ('008080.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['008080.KS'], 'Transformations': [('008080.KS', [('008080.KS', 'None', 'CumSum_', 'T+S+R'), ('008080.KS', 'None', 'Diff_', 'T+S+R'), ('008080.KS', 'None', 'RelDiff_', 'T+S+R'), ('008080.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '008080.KS', 'Transformations': [('008080.KS', 'None', 'CumSum_', 'T+S+R'), ('008080.KS', 'None', 'Diff_', 'T+S+R'), ('008080.KS', 'None', 'RelDiff_', 'T+S+R'), ('008080.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': '008080.KS', 'Transformations': [('008080.KS', 'None', 'CumSum_', 'T+S+R'), ('008080.KS', 'None', 'Diff_', 'T+S+R'), ('008080.KS', 'None', 'RelDiff_', 'T+S+R'), ('008080.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '008080.KS', 'Model': '_008080.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '008080.KS', 'Model': '_008080.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '008080.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.17, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '008080.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.201, ('FINALIZE_TRAINING', {'Signals': ['008080.KS'], 'Transformations': [('008080.KS', [('008080.KS', 'None', 'CumSum_', 'T+S+R'), ('008080.KS', 'None', 'Diff_', 'T+S+R'), ('008080.KS', 'None', 'RelDiff_', 'T+S+R'), ('008080.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2013-04-04T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='008080.KS' Length=535  Min=491.0 Max=488182.0  Mean=29082.644766355137 StdDev=113860.464930369
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_008080.KS' Min=0.0 Max=1.0  Mean=0.05862655814102606 StdDev=0.23346845631838395
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_008080.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_008080.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_008080.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_008080.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0217 MAPE_Forecast=0.013 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0216 SMAPE_Forecast=0.0224 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9976 MASE_Forecast=0.9906 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=50.341654402594166 CRPS_Forecast=45647.750104821804 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=20.210710900473934 L1_Forecast=4602.273584905661 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=36.11571059985808 L2_Forecast=47364.26967234204 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5505407345577524 LnQ_Forecast=46.41832244492061 LnQ_Test=0.0
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=10.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0010026840765976818
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _008080.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None        _008080.KS             T+S+R  ...  0.0217       0.0130   0.0000
1    None  CumSum_008080.KS             T+S+R  ...  0.0229       0.0130   0.0000
2    None  CumSum_008080.KS             T+S+R  ...  0.0229       0.0130   0.0000
3    None    Diff_008080.KS             T+S+R  ...  0.0217       0.0130   0.0000
4    None    Diff_008080.KS             T+S+R  ...  0.0217       0.0130   0.0000
..    ...               ...               ...  ...     ...          ...      ...
103  None  CumSum_008080.KS             T+S+R  ...  0.7967       1.3540   0.9981
104  None  CumSum_008080.KS             T+S+R  ...  1.1169       1.5201   0.3262
105  None  CumSum_008080.KS             T+S+R  ...  1.6094       1.6590   0.9986
106  None  CumSum_008080.KS             T+S+R  ...  1.4256       1.8795   0.4807
107  None  CumSum_008080.KS             T+S+R  ...  1.4563       2.0092   0.9977

[108 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _008080.KS             T+S+R  ...  0.0217        0.013      0.0
1  None  CumSum_008080.KS             T+S+R  ...  0.0229        0.013      0.0
2  None  CumSum_008080.KS             T+S+R  ...  0.0229        0.013      0.0
3  None    Diff_008080.KS             T+S+R  ...  0.0217        0.013      0.0
4  None    Diff_008080.KS             T+S+R  ...  0.0217        0.013      0.0

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['008080.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.132, ('FORECASTING', {'Signals': ['008080.KS'], 'Horizon': 7}))
7 0    67000.0
1    36550.0
2    32100.0
3    43850.0
4    36500.0
5    36500.0
6    22000.0
Name: 008080.KS, dtype: float64
7 0    488182.0
1    488182.0
2    488182.0
3    488182.0
4    488182.0
5    488182.0
6    488182.0
Name: 008080.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_008080.KS 008080.KS [67000.0, 36550.0, 32100.0, 43850.0, 36500.0, 36500.0, 22000.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_008080.KS 008080.KS [488182.0, 488182.0, 488182.0, 488182.0, 488182.0, 488182.0, 488182.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_008080.KS 008080.KS 535 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_008080.KS 008080.KS 6.599907636642456
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_008080.KS 008080.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_008080.KS 008080.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_008080.KS 008080.KS 12.7034 1.7047 39.3256
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_008080.KS 008080.KS 448967.71428571426 449152.5946344484 -1213.9616141299464
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_008080.KS_7'
