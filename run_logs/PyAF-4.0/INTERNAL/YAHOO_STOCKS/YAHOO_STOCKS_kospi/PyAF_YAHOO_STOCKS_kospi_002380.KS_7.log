BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  002380.KS N= 1293 H= 7 HEAD= [360500. 350000. 355500. 342500. 325500.] TAIL= [379000. 373500. 374000. 376500. 373500.]
   002380.KS       Date
0   360500.0 2011-07-28
1   350000.0 2011-07-29
2   355500.0 2011-08-01
3   342500.0 2011-08-02
4   325500.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   002380.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['002380.KS'], 'Transformations': [('002380.KS', 'None', '_', 'T+S+R'), ('002380.KS', 'None', 'Diff_', 'T+S+R'), ('002380.KS', 'None', 'RelDiff_', 'T+S+R'), ('002380.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002380.KS', 'Transformation': '_002380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.523, ('TRAINING', {'Signal': '002380.KS', 'Transformation': '_002380.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002380.KS', 'Transformation': 'Diff_002380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.455, ('TRAINING', {'Signal': '002380.KS', 'Transformation': 'Diff_002380.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002380.KS', 'Transformation': 'RelDiff_002380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.141, ('TRAINING', {'Signal': '002380.KS', 'Transformation': 'RelDiff_002380.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002380.KS', 'Transformation': 'CumSum_002380.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.794, ('TRAINING', {'Signal': '002380.KS', 'Transformation': 'CumSum_002380.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.915, ('SIGNAL_TRAINING', {'Signals': ['002380.KS'], 'Transformations': [('002380.KS', 'None', '_', 'T+S+R'), ('002380.KS', 'None', 'Diff_', 'T+S+R'), ('002380.KS', 'None', 'RelDiff_', 'T+S+R'), ('002380.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['002380.KS'], 'Transformations': [('002380.KS', [('002380.KS', 'None', 'CumSum_', 'T+S+R'), ('002380.KS', 'None', 'Diff_', 'T+S+R'), ('002380.KS', 'None', 'RelDiff_', 'T+S+R'), ('002380.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '002380.KS', 'Transformations': [('002380.KS', 'None', 'CumSum_', 'T+S+R'), ('002380.KS', 'None', 'Diff_', 'T+S+R'), ('002380.KS', 'None', 'RelDiff_', 'T+S+R'), ('002380.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '002380.KS', 'Transformations': [('002380.KS', 'None', 'CumSum_', 'T+S+R'), ('002380.KS', 'None', 'Diff_', 'T+S+R'), ('002380.KS', 'None', 'RelDiff_', 'T+S+R'), ('002380.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '002380.KS', 'Model': '_002380.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '002380.KS', 'Model': '_002380.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '002380.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '002380.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['002380.KS'], 'Transformations': [('002380.KS', [('002380.KS', 'None', 'CumSum_', 'T+S+R'), ('002380.KS', 'None', 'Diff_', 'T+S+R'), ('002380.KS', 'None', 'RelDiff_', 'T+S+R'), ('002380.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='002380.KS' Length=1293  Min=205500.0 Max=729000.0  Mean=415428.0742459397 StdDev=119665.74131696188
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_002380.KS' Min=0.0 Max=1.0  Mean=0.40100873781459345 StdDev=0.22858785351855174
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_002380.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_002380.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_002380.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_002380.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0168 MAPE_Forecast=0.014 MAPE_Test=0.0078
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0168 SMAPE_Forecast=0.014 SMAPE_Test=0.0078
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0066 MASE_Test=1.0041
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=39082.494624206425 CRPS_Forecast=8820.466757865936 CRPS_Test=1178.5714285714287
INFO:pyaf.std:MODEL_L1 L1_Fit=6825.389105058366 L1_Forecast=5968.992248062015 L1_Test=2928.5714285714284
INFO:pyaf.std:MODEL_L2 L2_Fit=9732.54948383274 L2_Forecast=9526.38115889219 L2_Test=3322.0045583524243
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5514038993716777 LnQ_Forecast=0.12317964368195436 LnQ_Test=0.000548617953325063
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=5000.0 MedAE_Forecast=4000.0 MedAE_Test=3000.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.29608404966571156
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _002380.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _002380.KS             T+S+R  ...   0.0168       0.0140    0.0078
1    None         _002380.KS             T+S+R  ...   0.0168       0.0140    0.0078
2    None   CumSum_002380.KS             T+S+R  ...   0.0172       0.0140    0.0078
3    None     Diff_002380.KS             T+S+R  ...   0.0168       0.0140    0.0078
4    None     Diff_002380.KS             T+S+R  ...   0.0168       0.0140    0.0078
..    ...                ...               ...  ...      ...          ...       ...
211  None  RelDiff_002380.KS             T+S+R  ...  12.2003     172.7502  359.1579
212  None  RelDiff_002380.KS             T+S+R  ...  70.2420     237.0899  467.0902
213  None  RelDiff_002380.KS             T+S+R  ...  70.2420     237.0899  467.0902
214  None  RelDiff_002380.KS             T+S+R  ...  20.9098     386.3412  844.6476
215  None  RelDiff_002380.KS             T+S+R  ...  20.9098     386.3412  844.6476

[216 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _002380.KS             T+S+R  ...  0.0168        0.014   0.0078
1  None        _002380.KS             T+S+R  ...  0.0168        0.014   0.0078
2  None  CumSum_002380.KS             T+S+R  ...  0.0172        0.014   0.0078
3  None    Diff_002380.KS             T+S+R  ...  0.0168        0.014   0.0078
4  None    Diff_002380.KS             T+S+R  ...  0.0168        0.014   0.0078

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['002380.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.152, ('FORECASTING', {'Signals': ['002380.KS'], 'Horizon': 7}))
7 0    376500.0
1    382500.0
2    387500.0
3    388500.0
4    384500.0
5    394000.0
6    403500.0
Name: 002380.KS, dtype: float64
7 0    373500.0
1    373500.0
2    373500.0
3    373500.0
4    373500.0
5    373500.0
6    373500.0
Name: 002380.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_002380.KS 002380.KS [376500.0, 382500.0, 387500.0, 388500.0, 384500.0, 394000.0, 403500.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_002380.KS 002380.KS [373500.0, 373500.0, 373500.0, 373500.0, 373500.0, 373500.0, 373500.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_002380.KS 002380.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_002380.KS 002380.KS 12.384623050689697
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_002380.KS 002380.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_002380.KS 002380.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_002380.KS 002380.KS 0.0373 0.0382 2.5102
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_002380.KS 002380.KS 14642.857142857143 16700.085542980225 -3.3252888115208092
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_002380.KS_7'
