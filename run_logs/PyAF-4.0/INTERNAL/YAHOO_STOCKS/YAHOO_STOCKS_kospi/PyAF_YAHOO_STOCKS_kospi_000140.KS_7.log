BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1292 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  000140.KS N= 1292 H= 7 HEAD= [17400. 17200. 17450. 17100. 16350.] TAIL= [14000. 13850. 13700. 13900. 14050.]
   000140.KS       Date
0    17400.0 2011-07-28
1    17200.0 2011-07-29
2    17450.0 2011-08-01
3    17100.0 2011-08-02
4    16350.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1292 entries, 0 to 1291
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   000140.KS  1292 non-null   float64       
 1   Date       1292 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['000140.KS'], 'Transformations': [('000140.KS', 'None', '_', 'T+S+R'), ('000140.KS', 'None', 'Diff_', 'T+S+R'), ('000140.KS', 'None', 'RelDiff_', 'T+S+R'), ('000140.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000140.KS', 'Transformation': '_000140.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.52, ('TRAINING', {'Signal': '000140.KS', 'Transformation': '_000140.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000140.KS', 'Transformation': 'Diff_000140.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.686, ('TRAINING', {'Signal': '000140.KS', 'Transformation': 'Diff_000140.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000140.KS', 'Transformation': 'RelDiff_000140.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.329, ('TRAINING', {'Signal': '000140.KS', 'Transformation': 'RelDiff_000140.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000140.KS', 'Transformation': 'CumSum_000140.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.573, ('TRAINING', {'Signal': '000140.KS', 'Transformation': 'CumSum_000140.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.11, ('SIGNAL_TRAINING', {'Signals': ['000140.KS'], 'Transformations': [('000140.KS', 'None', '_', 'T+S+R'), ('000140.KS', 'None', 'Diff_', 'T+S+R'), ('000140.KS', 'None', 'RelDiff_', 'T+S+R'), ('000140.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['000140.KS'], 'Transformations': [('000140.KS', [('000140.KS', 'None', 'CumSum_', 'T+S+R'), ('000140.KS', 'None', 'Diff_', 'T+S+R'), ('000140.KS', 'None', 'RelDiff_', 'T+S+R'), ('000140.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '000140.KS', 'Transformations': [('000140.KS', 'None', 'CumSum_', 'T+S+R'), ('000140.KS', 'None', 'Diff_', 'T+S+R'), ('000140.KS', 'None', 'RelDiff_', 'T+S+R'), ('000140.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '000140.KS', 'Transformations': [('000140.KS', 'None', 'CumSum_', 'T+S+R'), ('000140.KS', 'None', 'Diff_', 'T+S+R'), ('000140.KS', 'None', 'RelDiff_', 'T+S+R'), ('000140.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000140.KS', 'Model': '_000140.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000140.KS', 'Model': '_000140.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000140.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.207, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000140.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.243, ('FINALIZE_TRAINING', {'Signals': ['000140.KS'], 'Transformations': [('000140.KS', [('000140.KS', 'None', 'CumSum_', 'T+S+R'), ('000140.KS', 'None', 'Diff_', 'T+S+R'), ('000140.KS', 'None', 'RelDiff_', 'T+S+R'), ('000140.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='000140.KS' Length=1292  Min=8750.0 Max=19100.0  Mean=13102.739938080495 StdDev=2083.049811576074
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_000140.KS' Min=0.0 Max=1.0  Mean=0.42055458338941976 StdDev=0.2012608513600066
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_000140.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_000140.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_000140.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_000140.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0154 MAPE_Forecast=0.015 MAPE_Test=0.0098
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0154 SMAPE_Forecast=0.015 SMAPE_Test=0.0098
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0402 MASE_Test=0.958
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=577.7910403440508 CRPS_Forecast=354.6842755779355 CRPS_Test=35.714285714285715
INFO:pyaf.std:MODEL_L1 L1_Fit=198.784046692607 L1_Forecast=229.3774319066148 L1_Test=135.71428571428572
INFO:pyaf.std:MODEL_L2 L2_Fit=293.72804992913956 L2_Forecast=338.2404688767922 L2_Test=142.67845968170127
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4984580886123873 LnQ_Forecast=0.11855289260814526 LnQ_Test=0.0007416822722003983
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=150.0 MedAE_Forecast=150.0 MedAE_Test=150.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8357487922705314
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _000140.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE   TestMAPE
0    None         _000140.KS  ...       0.0150     0.0098
1    None   CumSum_000140.KS  ...       0.0150     0.0098
2    None     Diff_000140.KS  ...       0.0150     0.0098
3    None     Diff_000140.KS  ...       0.0150     0.0098
4    None         _000140.KS  ...       0.0150     0.0098
..    ...                ...  ...          ...        ...
179  None  RelDiff_000140.KS  ...    1348.2442  1716.8886
180  None  RelDiff_000140.KS  ...    2871.8812  8890.0425
181  None  RelDiff_000140.KS  ...    2871.8812  8890.0425
182  None  RelDiff_000140.KS  ...    3012.4481  7264.6285
183  None  RelDiff_000140.KS  ...    3012.4481  7264.6285

[184 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _000140.KS             T+S+R  ...  0.0154        0.015   0.0098
1  None  CumSum_000140.KS             T+S+R  ...  0.0159        0.015   0.0098
2  None    Diff_000140.KS             T+S+R  ...  0.0154        0.015   0.0098
3  None    Diff_000140.KS             T+S+R  ...  0.0154        0.015   0.0098
4  None        _000140.KS             T+S+R  ...  0.0154        0.015   0.0098

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['000140.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.171, ('FORECASTING', {'Signals': ['000140.KS'], 'Horizon': 7}))
7 0    14050.0
1    14100.0
2    13900.0
3    14150.0
4    13900.0
5    14000.0
6    13700.0
Name: 000140.KS, dtype: float64
7 0    14050.0
1    14050.0
2    14050.0
3    14050.0
4    14050.0
5    14050.0
6    14050.0
Name: 000140.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_000140.KS 000140.KS [14050.0, 14100.0, 13900.0, 14150.0, 13900.0, 14000.0, 13700.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_000140.KS 000140.KS [14050.0, 14050.0, 14050.0, 14050.0, 14050.0, 14050.0, 14050.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_000140.KS 000140.KS 1292 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_000140.KS 000140.KS 11.632851839065552
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_000140.KS 000140.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_000140.KS 000140.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_000140.KS 000140.KS 0.0088 0.0087 0.6335
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_000140.KS 000140.KS 121.42857142857143 161.46649364939023 -0.3102564102564094
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_000140.KS_7'
