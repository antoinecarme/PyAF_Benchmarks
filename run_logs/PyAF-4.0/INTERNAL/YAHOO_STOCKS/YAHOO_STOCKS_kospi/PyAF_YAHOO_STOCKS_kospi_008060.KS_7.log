BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  008060.KS N= 1293 H= 7 HEAD= [8890. 8910. 8980. 8500. 8140.] TAIL= [7640. 7680. 7670. 7740. 7700.]
   008060.KS       Date
0     8890.0 2011-07-28
1     8910.0 2011-07-29
2     8980.0 2011-08-01
3     8500.0 2011-08-02
4     8140.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   008060.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['008060.KS'], 'Transformations': [('008060.KS', 'None', '_', 'T+S+R'), ('008060.KS', 'None', 'Diff_', 'T+S+R'), ('008060.KS', 'None', 'RelDiff_', 'T+S+R'), ('008060.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008060.KS', 'Transformation': '_008060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.269, ('TRAINING', {'Signal': '008060.KS', 'Transformation': '_008060.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008060.KS', 'Transformation': 'Diff_008060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.806, ('TRAINING', {'Signal': '008060.KS', 'Transformation': 'Diff_008060.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008060.KS', 'Transformation': 'RelDiff_008060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.146, ('TRAINING', {'Signal': '008060.KS', 'Transformation': 'RelDiff_008060.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '008060.KS', 'Transformation': 'CumSum_008060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.456, ('TRAINING', {'Signal': '008060.KS', 'Transformation': 'CumSum_008060.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.68, ('SIGNAL_TRAINING', {'Signals': ['008060.KS'], 'Transformations': [('008060.KS', 'None', '_', 'T+S+R'), ('008060.KS', 'None', 'Diff_', 'T+S+R'), ('008060.KS', 'None', 'RelDiff_', 'T+S+R'), ('008060.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['008060.KS'], 'Transformations': [('008060.KS', [('008060.KS', 'None', 'CumSum_', 'T+S+R'), ('008060.KS', 'None', 'Diff_', 'T+S+R'), ('008060.KS', 'None', 'RelDiff_', 'T+S+R'), ('008060.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '008060.KS', 'Transformations': [('008060.KS', 'None', 'CumSum_', 'T+S+R'), ('008060.KS', 'None', 'Diff_', 'T+S+R'), ('008060.KS', 'None', 'RelDiff_', 'T+S+R'), ('008060.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': '008060.KS', 'Transformations': [('008060.KS', 'None', 'CumSum_', 'T+S+R'), ('008060.KS', 'None', 'Diff_', 'T+S+R'), ('008060.KS', 'None', 'RelDiff_', 'T+S+R'), ('008060.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '008060.KS', 'Model': '_008060.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '008060.KS', 'Model': '_008060.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '008060.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '008060.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['008060.KS'], 'Transformations': [('008060.KS', [('008060.KS', 'None', 'CumSum_', 'T+S+R'), ('008060.KS', 'None', 'Diff_', 'T+S+R'), ('008060.KS', 'None', 'RelDiff_', 'T+S+R'), ('008060.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='008060.KS' Length=1293  Min=6100.0 Max=12550.0  Mean=9167.648878576952 StdDev=1512.4619360363795
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_008060.KS' Min=0.0 Max=1.0  Mean=0.47560447729875305 StdDev=0.23449022264129973
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_008060.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_008060.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_008060.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_008060.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0147 MAPE_Forecast=0.0103 MAPE_Test=0.0054
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0148 SMAPE_Forecast=0.0104 SMAPE_Test=0.0054
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9991 MASE_Test=1.1837
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=433.1951413065739 CRPS_Forecast=102.21940355677155 CRPS_Test=20.0
INFO:pyaf.std:MODEL_L1 L1_Fit=143.79377431906616 L1_Forecast=78.91472868217055 L1_Test=41.42857142857143
INFO:pyaf.std:MODEL_L2 L2_Fit=207.66489393059732 L2_Forecast=106.81433576810463 L2_Test=47.659506621749365
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.44563473790703323 LnQ_Forecast=0.050376334335787115 LnQ_Test=0.00027117578396109284
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=100.0 MedAE_Forecast=60.0 MedAE_Test=40.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4325581395348837
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _008060.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE   TestMAPE
0    None         _008060.KS  ...       0.0103     0.0054
1    None         _008060.KS  ...       0.0103     0.0054
2    None   CumSum_008060.KS  ...       0.0103     0.0054
3    None   CumSum_008060.KS  ...       0.0103     0.0054
4    None     Diff_008060.KS  ...       0.0103     0.0054
..    ...                ...  ...          ...        ...
203  None  RelDiff_008060.KS  ...     302.5475  1084.5501
204  None  RelDiff_008060.KS  ...     396.3418   786.5240
205  None  RelDiff_008060.KS  ...     396.3418   786.5240
206  None  RelDiff_008060.KS  ...     500.2470  1953.5637
207  None  RelDiff_008060.KS  ...     500.2470  1953.5637

[208 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _008060.KS             T+S+R  ...  0.0147       0.0103   0.0054
1  None        _008060.KS             T+S+R  ...  0.0147       0.0103   0.0054
2  None  CumSum_008060.KS             T+S+R  ...  0.0150       0.0103   0.0054
3  None  CumSum_008060.KS             T+S+R  ...  0.0150       0.0103   0.0054
4  None    Diff_008060.KS             T+S+R  ...  0.0147       0.0103   0.0054

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['008060.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['008060.KS'], 'Horizon': 7}))
7 0    7800.0
1    7860.0
2    7890.0
3    7800.0
4    7830.0
5    7800.0
6    7780.0
Name: 008060.KS, dtype: float64
7 0    7700.0
1    7700.0
2    7700.0
3    7700.0
4    7700.0
5    7700.0
6    7700.0
Name: 008060.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_008060.KS 008060.KS [7800.0, 7860.0, 7890.0, 7800.0, 7830.0, 7800.0, 7780.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_008060.KS 008060.KS [7700.0, 7700.0, 7700.0, 7700.0, 7700.0, 7700.0, 7700.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_008060.KS 008060.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_008060.KS 008060.KS 12.156062841415405
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_008060.KS 008060.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_008060.KS 008060.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_008060.KS 008060.KS 0.0157 0.0158 2.8352
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_008060.KS 008060.KS 122.85714285714286 128.17398889233115 -11.308868501528918
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_008060.KS_7'
