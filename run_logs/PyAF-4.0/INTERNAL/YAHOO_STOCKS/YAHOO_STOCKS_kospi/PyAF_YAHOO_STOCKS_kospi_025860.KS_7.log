BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  025860.KS N= 1293 H= 7 HEAD= [14700. 14200. 14300. 13800. 13150.] TAIL= [8970. 8920. 8880. 8840. 8740.]
   025860.KS       Date
0    14700.0 2011-07-28
1    14200.0 2011-07-29
2    14300.0 2011-08-01
3    13800.0 2011-08-02
4    13150.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   025860.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['025860.KS'], 'Transformations': [('025860.KS', 'None', '_', 'T+S+R'), ('025860.KS', 'None', 'Diff_', 'T+S+R'), ('025860.KS', 'None', 'RelDiff_', 'T+S+R'), ('025860.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025860.KS', 'Transformation': '_025860.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.519, ('TRAINING', {'Signal': '025860.KS', 'Transformation': '_025860.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025860.KS', 'Transformation': 'Diff_025860.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.855, ('TRAINING', {'Signal': '025860.KS', 'Transformation': 'Diff_025860.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025860.KS', 'Transformation': 'RelDiff_025860.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.201, ('TRAINING', {'Signal': '025860.KS', 'Transformation': 'RelDiff_025860.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025860.KS', 'Transformation': 'CumSum_025860.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.51, ('TRAINING', {'Signal': '025860.KS', 'Transformation': 'CumSum_025860.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.087, ('SIGNAL_TRAINING', {'Signals': ['025860.KS'], 'Transformations': [('025860.KS', 'None', '_', 'T+S+R'), ('025860.KS', 'None', 'Diff_', 'T+S+R'), ('025860.KS', 'None', 'RelDiff_', 'T+S+R'), ('025860.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['025860.KS'], 'Transformations': [('025860.KS', [('025860.KS', 'None', 'CumSum_', 'T+S+R'), ('025860.KS', 'None', 'Diff_', 'T+S+R'), ('025860.KS', 'None', 'RelDiff_', 'T+S+R'), ('025860.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '025860.KS', 'Transformations': [('025860.KS', 'None', 'CumSum_', 'T+S+R'), ('025860.KS', 'None', 'Diff_', 'T+S+R'), ('025860.KS', 'None', 'RelDiff_', 'T+S+R'), ('025860.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '025860.KS', 'Transformations': [('025860.KS', 'None', 'CumSum_', 'T+S+R'), ('025860.KS', 'None', 'Diff_', 'T+S+R'), ('025860.KS', 'None', 'RelDiff_', 'T+S+R'), ('025860.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '025860.KS', 'Model': '_025860.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.031, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '025860.KS', 'Model': '_025860.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '025860.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.189, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '025860.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.228, ('FINALIZE_TRAINING', {'Signals': ['025860.KS'], 'Transformations': [('025860.KS', [('025860.KS', 'None', 'CumSum_', 'T+S+R'), ('025860.KS', 'None', 'Diff_', 'T+S+R'), ('025860.KS', 'None', 'RelDiff_', 'T+S+R'), ('025860.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='025860.KS' Length=1293  Min=6570.0 Max=14700.0  Mean=9179.141531322506 StdDev=1374.6348026867895
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_025860.KS' Min=0.0 Max=1.0  Mean=0.3209276176288445 StdDev=0.1690817715481905
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_025860.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_025860.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_025860.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_025860.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0155 MAPE_Forecast=0.0144 MAPE_Test=0.0048
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0155 SMAPE_Forecast=0.0144 SMAPE_Test=0.0048
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9988 MASE_Test=0.9184
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=424.9873233667827 CRPS_Forecast=219.7409648882809 CRPS_Test=14.285714285714286
INFO:pyaf.std:MODEL_L1 L1_Fit=144.4455252918288 L1_Forecast=143.91472868217053 L1_Test=42.857142857142854
INFO:pyaf.std:MODEL_L2 L2_Fit=225.09423016008623 L2_Forecast=208.22338183831818 L2_Test=50.426750270636546
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5600356077335198 LnQ_Forecast=0.10931080242361962 LnQ_Test=0.00022752438022993648
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=100.0 MedAE_Forecast=100.0 MedAE_Test=40.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 1.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _025860.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ...  ForecastMAPE      TestMAPE
0    None         _025860.KS  ...  1.440000e-02  4.800000e-03
1    None         _025860.KS  ...  1.440000e-02  4.800000e-03
2    None   CumSum_025860.KS  ...  1.440000e-02  4.800000e-03
3    None     Diff_025860.KS  ...  1.440000e-02  4.800000e-03
4    None     Diff_025860.KS  ...  1.440000e-02  4.800000e-03
..    ...                ...  ...           ...           ...
187  None  RelDiff_025860.KS  ...  1.859447e+05  9.576383e+05
188  None  RelDiff_025860.KS  ...  2.318125e+05  7.469131e+05
189  None  RelDiff_025860.KS  ...  2.318125e+05  7.469131e+05
190  None  RelDiff_025860.KS  ...  1.258050e+06  7.558310e+06
191  None  RelDiff_025860.KS  ...  1.258050e+06  7.558310e+06

[192 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _025860.KS             T+S+R  ...  0.0155       0.0144   0.0048
1  None        _025860.KS             T+S+R  ...  0.0155       0.0144   0.0048
2  None  CumSum_025860.KS             T+S+R  ...  0.0160       0.0144   0.0048
3  None    Diff_025860.KS             T+S+R  ...  0.0155       0.0144   0.0048
4  None    Diff_025860.KS             T+S+R  ...  0.0155       0.0144   0.0048

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['025860.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.159, ('FORECASTING', {'Signals': ['025860.KS'], 'Horizon': 7}))
7 0    8640.0
1    8740.0
2    8780.0
3    8800.0
4    8910.0
5    8860.0
6    8770.0
Name: 025860.KS, dtype: float64
7 0    8740.0
1    8740.0
2    8740.0
3    8740.0
4    8740.0
5    8740.0
6    8740.0
Name: 025860.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_025860.KS 025860.KS [8640.0, 8740.0, 8780.0, 8800.0, 8910.0, 8860.0, 8770.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_025860.KS 025860.KS [8740.0, 8740.0, 8740.0, 8740.0, 8740.0, 8740.0, 8740.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_025860.KS 025860.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_025860.KS 025860.KS 11.57441759109497
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_025860.KS 025860.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_025860.KS 025860.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_025860.KS 025860.KS 0.0084 0.0085 1.0871
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_025860.KS 025860.KS 74.28571428571429 92.11793682944862 -0.3267389917038894
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_025860.KS_7'
