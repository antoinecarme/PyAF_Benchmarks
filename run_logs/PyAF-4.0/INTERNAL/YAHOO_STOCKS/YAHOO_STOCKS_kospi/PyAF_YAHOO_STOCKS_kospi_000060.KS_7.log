BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1292 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  000060.KS N= 1292 H= 7 HEAD= [12200. 12250. 12100. 11900. 11850.] TAIL= [14950. 15100. 15150. 15250. 15200.]
   000060.KS       Date
0    12200.0 2011-07-28
1    12250.0 2011-07-29
2    12100.0 2011-08-01
3    11900.0 2011-08-02
4    11850.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1292 entries, 0 to 1291
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   000060.KS  1292 non-null   float64       
 1   Date       1292 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['000060.KS'], 'Transformations': [('000060.KS', 'None', '_', 'T+S+R'), ('000060.KS', 'None', 'Diff_', 'T+S+R'), ('000060.KS', 'None', 'RelDiff_', 'T+S+R'), ('000060.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000060.KS', 'Transformation': '_000060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.521, ('TRAINING', {'Signal': '000060.KS', 'Transformation': '_000060.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000060.KS', 'Transformation': 'Diff_000060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.555, ('TRAINING', {'Signal': '000060.KS', 'Transformation': 'Diff_000060.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000060.KS', 'Transformation': 'RelDiff_000060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.201, ('TRAINING', {'Signal': '000060.KS', 'Transformation': 'RelDiff_000060.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000060.KS', 'Transformation': 'CumSum_000060.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.887, ('TRAINING', {'Signal': '000060.KS', 'Transformation': 'CumSum_000060.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.168, ('SIGNAL_TRAINING', {'Signals': ['000060.KS'], 'Transformations': [('000060.KS', 'None', '_', 'T+S+R'), ('000060.KS', 'None', 'Diff_', 'T+S+R'), ('000060.KS', 'None', 'RelDiff_', 'T+S+R'), ('000060.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['000060.KS'], 'Transformations': [('000060.KS', [('000060.KS', 'None', 'CumSum_', 'T+S+R'), ('000060.KS', 'None', 'Diff_', 'T+S+R'), ('000060.KS', 'None', 'RelDiff_', 'T+S+R'), ('000060.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '000060.KS', 'Transformations': [('000060.KS', 'None', 'CumSum_', 'T+S+R'), ('000060.KS', 'None', 'Diff_', 'T+S+R'), ('000060.KS', 'None', 'RelDiff_', 'T+S+R'), ('000060.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '000060.KS', 'Transformations': [('000060.KS', 'None', 'CumSum_', 'T+S+R'), ('000060.KS', 'None', 'Diff_', 'T+S+R'), ('000060.KS', 'None', 'RelDiff_', 'T+S+R'), ('000060.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000060.KS', 'Model': '_000060.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000060.KS', 'Model': '_000060.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000060.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000060.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.218, ('FINALIZE_TRAINING', {'Signals': ['000060.KS'], 'Transformations': [('000060.KS', [('000060.KS', 'None', 'CumSum_', 'T+S+R'), ('000060.KS', 'None', 'Diff_', 'T+S+R'), ('000060.KS', 'None', 'RelDiff_', 'T+S+R'), ('000060.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='000060.KS' Length=1292  Min=9610.0 Max=17000.0  Mean=13402.530959752323 StdDev=1680.3745675063042
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_000060.KS' Min=0.0 Max=1.0  Mean=0.5131976941478124 StdDev=0.2273849211781191
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_000060.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_000060.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_000060.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_000060.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0135 MAPE_Forecast=0.0118 MAPE_Test=0.0047
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0136 SMAPE_Forecast=0.0118 SMAPE_Test=0.0047
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0046 MASE_Test=0.9524
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=404.07815379889416 CRPS_Forecast=155.17970244907303 CRPS_Test=78.57142857142857
INFO:pyaf.std:MODEL_L1 L1_Fit=171.90661478599222 L1_Forecast=183.65758754863813 L1_Test=71.42857142857143
INFO:pyaf.std:MODEL_L2 L2_Fit=243.48675049244395 L2_Forecast=249.04486805293126 L2_Test=80.17837257372732
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.38081545176172293 LnQ_Forecast=0.06634335503862188 LnQ_Test=0.0001985621407213388
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=100.0 MedAE_Forecast=150.0 MedAE_Test=50.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.35047361299052776
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _000060.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ...  ForecastMAPE      TestMAPE
0    None         _000060.KS  ...  1.170000e-02  4.300000e-03
1    None         _000060.KS  ...  1.180000e-02  4.700000e-03
2    None   CumSum_000060.KS  ...  1.180000e-02  4.700000e-03
3    None     Diff_000060.KS  ...  1.180000e-02  4.700000e-03
4    None     Diff_000060.KS  ...  1.180000e-02  4.700000e-03
..    ...                ...  ...           ...           ...
187  None  RelDiff_000060.KS  ...  1.650014e+07  1.720274e+07
188  None  RelDiff_000060.KS  ...  1.657458e+07  1.720274e+07
189  None  RelDiff_000060.KS  ...  1.657458e+07  1.720274e+07
190  None  RelDiff_000060.KS  ...  1.657458e+07  1.720274e+07
191  None  RelDiff_000060.KS  ...  1.657458e+07  1.720274e+07

[192 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _000060.KS             T+S+R  ...  0.0131       0.0117   0.0043
1  None        _000060.KS             T+S+R  ...  0.0135       0.0118   0.0047
2  None  CumSum_000060.KS             T+S+R  ...  0.0138       0.0118   0.0047
3  None    Diff_000060.KS             T+S+R  ...  0.0135       0.0118   0.0047
4  None    Diff_000060.KS             T+S+R  ...  0.0135       0.0118   0.0047

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['000060.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['000060.KS'], 'Horizon': 7}))
7 0    15100.0
1    15000.0
2    15000.0
3    15050.0
4    15200.0
5    15000.0
6    15050.0
Name: 000060.KS, dtype: float64
7 0    15200.0
1    15200.0
2    15200.0
3    15200.0
4    15200.0
5    15200.0
6    15200.0
Name: 000060.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_000060.KS 000060.KS [15100.0, 15000.0, 15000.0, 15050.0, 15200.0, 15000.0, 15050.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_000060.KS 000060.KS [15200.0, 15200.0, 15200.0, 15200.0, 15200.0, 15200.0, 15200.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_000060.KS 000060.KS 1292 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_000060.KS 000060.KS 11.649417161941528
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_000060.KS 000060.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_000060.KS 000060.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_000060.KS 000060.KS 0.0095 0.0095 1.5584
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_000060.KS 000060.KS 142.85714285714286 158.11388300841898 -4.444444444444428
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_000060.KS_7'
