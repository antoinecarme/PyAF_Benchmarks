BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  007690.KS N= 1293 H= 7 HEAD= [71400. 70200. 71200. 70400. 67600.] TAIL= [60500. 60500. 62500. 61600. 61100.]
   007690.KS       Date
0    71400.0 2011-07-28
1    70200.0 2011-07-29
2    71200.0 2011-08-01
3    70400.0 2011-08-02
4    67600.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   007690.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['007690.KS'], 'Transformations': [('007690.KS', 'None', '_', 'T+S+R'), ('007690.KS', 'None', 'Diff_', 'T+S+R'), ('007690.KS', 'None', 'RelDiff_', 'T+S+R'), ('007690.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007690.KS', 'Transformation': '_007690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.159, ('TRAINING', {'Signal': '007690.KS', 'Transformation': '_007690.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007690.KS', 'Transformation': 'Diff_007690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.844, ('TRAINING', {'Signal': '007690.KS', 'Transformation': 'Diff_007690.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007690.KS', 'Transformation': 'RelDiff_007690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.198, ('TRAINING', {'Signal': '007690.KS', 'Transformation': 'RelDiff_007690.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007690.KS', 'Transformation': 'CumSum_007690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.825, ('TRAINING', {'Signal': '007690.KS', 'Transformation': 'CumSum_007690.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.027, ('SIGNAL_TRAINING', {'Signals': ['007690.KS'], 'Transformations': [('007690.KS', 'None', '_', 'T+S+R'), ('007690.KS', 'None', 'Diff_', 'T+S+R'), ('007690.KS', 'None', 'RelDiff_', 'T+S+R'), ('007690.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['007690.KS'], 'Transformations': [('007690.KS', [('007690.KS', 'None', 'CumSum_', 'T+S+R'), ('007690.KS', 'None', 'Diff_', 'T+S+R'), ('007690.KS', 'None', 'RelDiff_', 'T+S+R'), ('007690.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '007690.KS', 'Transformations': [('007690.KS', 'None', 'CumSum_', 'T+S+R'), ('007690.KS', 'None', 'Diff_', 'T+S+R'), ('007690.KS', 'None', 'RelDiff_', 'T+S+R'), ('007690.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '007690.KS', 'Transformations': [('007690.KS', 'None', 'CumSum_', 'T+S+R'), ('007690.KS', 'None', 'Diff_', 'T+S+R'), ('007690.KS', 'None', 'RelDiff_', 'T+S+R'), ('007690.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '007690.KS', 'Model': '_007690.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '007690.KS', 'Model': '_007690.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '007690.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '007690.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['007690.KS'], 'Transformations': [('007690.KS', [('007690.KS', 'None', 'CumSum_', 'T+S+R'), ('007690.KS', 'None', 'Diff_', 'T+S+R'), ('007690.KS', 'None', 'RelDiff_', 'T+S+R'), ('007690.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='007690.KS' Length=1293  Min=34050.0 Max=84000.0  Mean=52529.50502706883 StdDev=9007.52851241376
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_007690.KS' Min=0.0 Max=1.0  Mean=0.36996006060197884 StdDev=0.18033090114942493
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_007690.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_007690.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_007690.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_007690.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0153 MAPE_Forecast=0.0164 MAPE_Test=0.0132
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0153 SMAPE_Forecast=0.0164 SMAPE_Test=0.0133
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0033 MASE_Test=0.8724
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1907.835731107925 CRPS_Forecast=1879.1947651618784 CRPS_Test=457.14285714285717
INFO:pyaf.std:MODEL_L1 L1_Fit=764.4941634241245 L1_Forecast=1080.2325581395348 L1_Test=814.2857142857143
INFO:pyaf.std:MODEL_L2 L2_Fit=1108.5645536683037 L2_Forecast=1534.1967572389406 L2_Test=1068.3766056164704
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4944085667619424 LnQ_Forecast=0.13388844560623903 LnQ_Test=0.0021389188265885446
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=550.0 MedAE_Forecast=800.0 MedAE_Test=600.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7477477477477478
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _007690.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE    TestMAPE
0    None         _007690.KS  ...       0.0164      0.0132
1    None         _007690.KS  ...       0.0164      0.0132
2    None   CumSum_007690.KS  ...       0.0164      0.0132
3    None     Diff_007690.KS  ...       0.0164      0.0132
4    None     Diff_007690.KS  ...       0.0164      0.0132
..    ...                ...  ...          ...         ...
211  None  RelDiff_007690.KS  ...    6298.3476  61187.4355
212  None  RelDiff_007690.KS  ...    6457.5019  64439.6066
213  None  RelDiff_007690.KS  ...    8099.1769  81253.4652
214  None  RelDiff_007690.KS  ...    9280.0107  81472.9008
215  None  RelDiff_007690.KS  ...    9280.0107  81472.9008

[216 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _007690.KS             T+S+R  ...  0.0153       0.0164   0.0132
1  None        _007690.KS             T+S+R  ...  0.0153       0.0164   0.0132
2  None  CumSum_007690.KS             T+S+R  ...  0.0158       0.0164   0.0132
3  None    Diff_007690.KS             T+S+R  ...  0.0153       0.0164   0.0132
4  None    Diff_007690.KS             T+S+R  ...  0.0153       0.0164   0.0132

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['007690.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['007690.KS'], 'Horizon': 7}))
7 0    60400.0
1    61000.0
2    61000.0
3    60200.0
4    60300.0
5    59700.0
6    56900.0
Name: 007690.KS, dtype: float64
7 0    61100.0
1    61100.0
2    61100.0
3    61100.0
4    61100.0
5    61100.0
6    61100.0
Name: 007690.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_007690.KS 007690.KS [60400.0, 61000.0, 61000.0, 60200.0, 60300.0, 59700.0, 56900.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_007690.KS 007690.KS [61100.0, 61100.0, 61100.0, 61100.0, 61100.0, 61100.0, 61100.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_007690.KS 007690.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_007690.KS 007690.KS 12.510618925094604
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_007690.KS 007690.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_007690.KS 007690.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_007690.KS 007690.KS 0.02 0.0196 1.4344
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_007690.KS 007690.KS 1171.4285714285713 1754.9928774784244 -0.8035372848948377
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_007690.KS_7'
