BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  007810.KS N= 1293 H= 7 HEAD= [5710.01 5738.05 6027.76 5934.3  5831.5 ] TAIL= [9180. 9250. 9080. 9370. 9620.]
   007810.KS       Date
0    5710.01 2011-07-28
1    5738.05 2011-07-29
2    6027.76 2011-08-01
3    5934.30 2011-08-02
4    5831.50 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   007810.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['007810.KS'], 'Transformations': [('007810.KS', 'None', '_', 'T+S+R'), ('007810.KS', 'None', 'Diff_', 'T+S+R'), ('007810.KS', 'None', 'RelDiff_', 'T+S+R'), ('007810.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007810.KS', 'Transformation': '_007810.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.283, ('TRAINING', {'Signal': '007810.KS', 'Transformation': '_007810.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007810.KS', 'Transformation': 'Diff_007810.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.839, ('TRAINING', {'Signal': '007810.KS', 'Transformation': 'Diff_007810.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007810.KS', 'Transformation': 'RelDiff_007810.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.244, ('TRAINING', {'Signal': '007810.KS', 'Transformation': 'RelDiff_007810.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '007810.KS', 'Transformation': 'CumSum_007810.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.858, ('TRAINING', {'Signal': '007810.KS', 'Transformation': 'CumSum_007810.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.228, ('SIGNAL_TRAINING', {'Signals': ['007810.KS'], 'Transformations': [('007810.KS', 'None', '_', 'T+S+R'), ('007810.KS', 'None', 'Diff_', 'T+S+R'), ('007810.KS', 'None', 'RelDiff_', 'T+S+R'), ('007810.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['007810.KS'], 'Transformations': [('007810.KS', [('007810.KS', 'None', 'CumSum_', 'T+S+R'), ('007810.KS', 'None', 'Diff_', 'T+S+R'), ('007810.KS', 'None', 'RelDiff_', 'T+S+R'), ('007810.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '007810.KS', 'Transformations': [('007810.KS', 'None', 'CumSum_', 'T+S+R'), ('007810.KS', 'None', 'Diff_', 'T+S+R'), ('007810.KS', 'None', 'RelDiff_', 'T+S+R'), ('007810.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': '007810.KS', 'Transformations': [('007810.KS', 'None', 'CumSum_', 'T+S+R'), ('007810.KS', 'None', 'Diff_', 'T+S+R'), ('007810.KS', 'None', 'RelDiff_', 'T+S+R'), ('007810.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '007810.KS', 'Model': '_007810.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '007810.KS', 'Model': '_007810.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '007810.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.198, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '007810.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.234, ('FINALIZE_TRAINING', {'Signals': ['007810.KS'], 'Transformations': [('007810.KS', [('007810.KS', 'None', 'CumSum_', 'T+S+R'), ('007810.KS', 'None', 'Diff_', 'T+S+R'), ('007810.KS', 'None', 'RelDiff_', 'T+S+R'), ('007810.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='007810.KS' Length=1293  Min=3130.69 Max=22475.6  Mean=11863.770688321736 StdDev=4099.1634699559945
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_007810.KS' Min=0.0 Max=1.0  Mean=0.4514407504776053 StdDev=0.2118988131739048
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_007810.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_007810.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_007810.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_007810.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0222 MAPE_Forecast=0.0174 MAPE_Test=0.0177
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0222 SMAPE_Forecast=0.0174 SMAPE_Test=0.0178
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0003 MASE_Test=0.9127
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1341.2538659174686 CRPS_Forecast=272.88577838577294 CRPS_Test=70.0
INFO:pyaf.std:MODEL_L1 L1_Fit=263.9664299610895 L1_Forecast=175.89147286821705 L1_Test=164.28571428571428
INFO:pyaf.std:MODEL_L2 L2_Fit=393.3185443990541 L2_Forecast=237.79021436239043 L2_Test=186.35603405463272
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.083935032171006 LnQ_Forecast=0.14519304663835952 LnQ_Test=0.002848734728063511
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=186.89999999999782 MedAE_Forecast=140.0 MedAE_Test=170.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.13333326440908747
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _007810.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _007810.KS             T+S+R  ...  0.0222       0.0174    0.0177
1    None         _007810.KS             T+S+R  ...  0.0222       0.0174    0.0177
2    None   CumSum_007810.KS             T+S+R  ...  0.0226       0.0174    0.0177
3    None     Diff_007810.KS             T+S+R  ...  0.0222       0.0174    0.0177
4    None     Diff_007810.KS             T+S+R  ...  0.0222       0.0174    0.0177
..    ...                ...               ...  ...     ...          ...       ...
187  None  RelDiff_007810.KS             T+S+R  ...  6.1338      23.2404   88.4381
188  None  RelDiff_007810.KS             T+S+R  ...  6.1620      23.3754   89.7033
189  None  RelDiff_007810.KS             T+S+R  ...  6.5437      25.4751   93.5348
190  None  RelDiff_007810.KS             T+S+R  ...  9.3201      42.3347  181.7790
191  None  RelDiff_007810.KS             T+S+R  ...  9.3201      42.3347  181.7790

[192 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _007810.KS             T+S+R  ...  0.0222       0.0174   0.0177
1  None        _007810.KS             T+S+R  ...  0.0222       0.0174   0.0177
2  None  CumSum_007810.KS             T+S+R  ...  0.0226       0.0174   0.0177
3  None    Diff_007810.KS             T+S+R  ...  0.0222       0.0174   0.0177
4  None    Diff_007810.KS             T+S+R  ...  0.0222       0.0174   0.0177

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['007810.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('FORECASTING', {'Signals': ['007810.KS'], 'Horizon': 7}))
7 0    10700.0
1    10600.0
2    10350.0
3    10300.0
4    10450.0
5    10000.0
6    10100.0
Name: 007810.KS, dtype: float64
7 0    9620.0
1    9620.0
2    9620.0
3    9620.0
4    9620.0
5    9620.0
6    9620.0
Name: 007810.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_007810.KS 007810.KS [10700.0, 10600.0, 10350.0, 10300.0, 10450.0, 10000.0, 10100.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_007810.KS 007810.KS [9620.0, 9620.0, 9620.0, 9620.0, 9620.0, 9620.0, 9620.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_007810.KS 007810.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_007810.KS 007810.KS 11.731918573379517
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_007810.KS 007810.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_007810.KS 007810.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_007810.KS 007810.KS 0.0707 0.0735 4.0208
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_007810.KS 007810.KS 737.1428571428571 773.2861233537225 -9.9534953271028
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_007810.KS_7'
