BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1292 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  000220.KS N= 1292 H= 7 HEAD= [6910. 7270. 7490. 7090. 6820.] TAIL= [14650. 14550. 14300. 14650. 14450.]
   000220.KS       Date
0     6910.0 2011-07-28
1     7270.0 2011-07-29
2     7490.0 2011-08-01
3     7090.0 2011-08-02
4     6820.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1292 entries, 0 to 1291
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   000220.KS  1292 non-null   float64       
 1   Date       1292 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['000220.KS'], 'Transformations': [('000220.KS', 'None', '_', 'T+S+R'), ('000220.KS', 'None', 'Diff_', 'T+S+R'), ('000220.KS', 'None', 'RelDiff_', 'T+S+R'), ('000220.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000220.KS', 'Transformation': '_000220.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.395, ('TRAINING', {'Signal': '000220.KS', 'Transformation': '_000220.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000220.KS', 'Transformation': 'Diff_000220.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.566, ('TRAINING', {'Signal': '000220.KS', 'Transformation': 'Diff_000220.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000220.KS', 'Transformation': 'RelDiff_000220.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.243, ('TRAINING', {'Signal': '000220.KS', 'Transformation': 'RelDiff_000220.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000220.KS', 'Transformation': 'CumSum_000220.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.902, ('TRAINING', {'Signal': '000220.KS', 'Transformation': 'CumSum_000220.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.108, ('SIGNAL_TRAINING', {'Signals': ['000220.KS'], 'Transformations': [('000220.KS', 'None', '_', 'T+S+R'), ('000220.KS', 'None', 'Diff_', 'T+S+R'), ('000220.KS', 'None', 'RelDiff_', 'T+S+R'), ('000220.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['000220.KS'], 'Transformations': [('000220.KS', [('000220.KS', 'None', 'CumSum_', 'T+S+R'), ('000220.KS', 'None', 'Diff_', 'T+S+R'), ('000220.KS', 'None', 'RelDiff_', 'T+S+R'), ('000220.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '000220.KS', 'Transformations': [('000220.KS', 'None', 'CumSum_', 'T+S+R'), ('000220.KS', 'None', 'Diff_', 'T+S+R'), ('000220.KS', 'None', 'RelDiff_', 'T+S+R'), ('000220.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '000220.KS', 'Transformations': [('000220.KS', 'None', 'CumSum_', 'T+S+R'), ('000220.KS', 'None', 'Diff_', 'T+S+R'), ('000220.KS', 'None', 'RelDiff_', 'T+S+R'), ('000220.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000220.KS', 'Model': '_000220.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000220.KS', 'Model': '_000220.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000220.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000220.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['000220.KS'], 'Transformations': [('000220.KS', [('000220.KS', 'None', 'CumSum_', 'T+S+R'), ('000220.KS', 'None', 'Diff_', 'T+S+R'), ('000220.KS', 'None', 'RelDiff_', 'T+S+R'), ('000220.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='000220.KS' Length=1292  Min=4670.0 Max=21700.0  Mean=8775.901702786377 StdDev=3461.6187363632903
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_000220.KS' Min=0.0 Max=1.0  Mean=0.24109816223055644 StdDev=0.20326592697376908
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_000220.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_000220.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_000220.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_000220.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0184 MAPE_Forecast=0.0268 MAPE_Test=0.0103
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0185 SMAPE_Forecast=0.0266 SMAPE_Test=0.0103
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9971 MASE_Test=0.9
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=548.0731517509729 CRPS_Forecast=418.0827740901808 CRPS_Test=50.0
INFO:pyaf.std:MODEL_L1 L1_Fit=153.41439688715954 L1_Forecast=391.4396887159533 L1_Test=150.0
INFO:pyaf.std:MODEL_L2 L2_Fit=323.9619759596862 L2_Forecast=596.5856157226384 L2_Test=188.0349511584026
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.9987741423649314 LnQ_Forecast=0.3813105117329786 LnQ_Test=0.0011786836962613698
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=70.0 MedAE_Forecast=250.0 MedAE_Test=100.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1315325895478567
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _000220.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ...  ForecastMAPE      TestMAPE
0    None         _000220.KS  ...  2.680000e-02  1.030000e-02
1    None   CumSum_000220.KS  ...  2.680000e-02  1.030000e-02
2    None     Diff_000220.KS  ...  2.680000e-02  1.030000e-02
3    None     Diff_000220.KS  ...  2.680000e-02  1.030000e-02
4    None  RelDiff_000220.KS  ...  2.680000e-02  1.030000e-02
..    ...                ...  ...           ...           ...
211  None  RelDiff_000220.KS  ...  5.658073e+05  8.175976e+06
212  None  RelDiff_000220.KS  ...  5.684970e+05  8.204769e+06
213  None  RelDiff_000220.KS  ...  5.684970e+05  8.204769e+06
214  None  RelDiff_000220.KS  ...  1.150698e+06  1.511921e+07
215  None  RelDiff_000220.KS  ...  1.973653e+06  1.537400e+07

[216 rows x 10 columns]
  Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _000220.KS             T+S+R  ...  0.0184       0.0268   0.0103
1  None   CumSum_000220.KS             T+S+R  ...  0.0187       0.0268   0.0103
2  None     Diff_000220.KS             T+S+R  ...  0.0184       0.0268   0.0103
3  None     Diff_000220.KS             T+S+R  ...  0.0184       0.0268   0.0103
4  None  RelDiff_000220.KS             T+S+R  ...  0.0987       0.0268   0.0103

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['000220.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.165, ('FORECASTING', {'Signals': ['000220.KS'], 'Horizon': 7}))
7 0    14500.0
1    14900.0
2    14650.0
3    14800.0
4    14650.0
5    14300.0
6    14050.0
Name: 000220.KS, dtype: float64
7 0    14450.0
1    14450.0
2    14450.0
3    14450.0
4    14450.0
5    14450.0
6    14450.0
Name: 000220.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_000220.KS 000220.KS [14500.0, 14900.0, 14650.0, 14800.0, 14650.0, 14300.0, 14050.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_000220.KS 000220.KS [14450.0, 14450.0, 14450.0, 14450.0, 14450.0, 14450.0, 14450.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_000220.KS 000220.KS 1292 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_000220.KS 000220.KS 12.605888366699219
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_000220.KS 000220.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_000220.KS 000220.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_000220.KS 000220.KS 0.0177 0.0177 0.9954
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_000220.KS 000220.KS 257.14285714285717 290.3200204700225 -0.13461538461538436
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_000220.KS_7'
