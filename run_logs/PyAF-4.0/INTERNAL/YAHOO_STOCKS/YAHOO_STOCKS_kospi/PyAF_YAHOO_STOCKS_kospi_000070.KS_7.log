BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1258 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  000070.KS N= 1258 H= 7 HEAD= [70099.91 69503.5  68907.08 68907.08 65923.86] TAIL= [135500. 133500. 134000. 132000. 132500.]
   000070.KS       Date
0   70099.91 2011-07-28
1   69503.50 2011-07-29
2   68907.08 2011-08-01
3   68907.08 2011-08-02
4   65923.86 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1258 entries, 0 to 1257
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   000070.KS  1258 non-null   float64       
 1   Date       1258 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['000070.KS'], 'Transformations': [('000070.KS', 'None', '_', 'T+S+R'), ('000070.KS', 'None', 'Diff_', 'T+S+R'), ('000070.KS', 'None', 'RelDiff_', 'T+S+R'), ('000070.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000070.KS', 'Transformation': '_000070.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.547, ('TRAINING', {'Signal': '000070.KS', 'Transformation': '_000070.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000070.KS', 'Transformation': 'Diff_000070.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.51, ('TRAINING', {'Signal': '000070.KS', 'Transformation': 'Diff_000070.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000070.KS', 'Transformation': 'RelDiff_000070.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.184, ('TRAINING', {'Signal': '000070.KS', 'Transformation': 'RelDiff_000070.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '000070.KS', 'Transformation': 'CumSum_000070.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.75, ('TRAINING', {'Signal': '000070.KS', 'Transformation': 'CumSum_000070.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.994, ('SIGNAL_TRAINING', {'Signals': ['000070.KS'], 'Transformations': [('000070.KS', 'None', '_', 'T+S+R'), ('000070.KS', 'None', 'Diff_', 'T+S+R'), ('000070.KS', 'None', 'RelDiff_', 'T+S+R'), ('000070.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['000070.KS'], 'Transformations': [('000070.KS', [('000070.KS', 'None', 'CumSum_', 'T+S+R'), ('000070.KS', 'None', 'Diff_', 'T+S+R'), ('000070.KS', 'None', 'RelDiff_', 'T+S+R'), ('000070.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '000070.KS', 'Transformations': [('000070.KS', 'None', 'CumSum_', 'T+S+R'), ('000070.KS', 'None', 'Diff_', 'T+S+R'), ('000070.KS', 'None', 'RelDiff_', 'T+S+R'), ('000070.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '000070.KS', 'Transformations': [('000070.KS', 'None', 'CumSum_', 'T+S+R'), ('000070.KS', 'None', 'Diff_', 'T+S+R'), ('000070.KS', 'None', 'RelDiff_', 'T+S+R'), ('000070.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000070.KS', 'Model': '_000070.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '000070.KS', 'Model': '_000070.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000070.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '000070.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['000070.KS'], 'Transformations': [('000070.KS', [('000070.KS', 'None', 'CumSum_', 'T+S+R'), ('000070.KS', 'None', 'Diff_', 'T+S+R'), ('000070.KS', 'None', 'RelDiff_', 'T+S+R'), ('000070.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-22T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='000070.KS' Length=1258  Min=43611.26 Max=300000.0  Mean=97670.15299682035 StdDev=43314.298176695345
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_000070.KS' Min=0.0 Max=1.0  Mean=0.21084737573428664 StdDev=0.1689399393151795
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_000070.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_000070.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_000070.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_000070.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0168 MAPE_Forecast=0.0249 MAPE_Test=0.0121
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0169 SMAPE_Forecast=0.0247 SMAPE_Test=0.012
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0042 MASE_Test=0.9857
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5918.8895415789475 CRPS_Forecast=5122.802906022967 CRPS_Test=1607.142857142857
INFO:pyaf.std:MODEL_L1 L1_Fit=1458.18927 L1_Forecast=4155.378486055777 L1_Test=1642.857142857143
INFO:pyaf.std:MODEL_L2 L2_Fit=3129.2243247602273 L2_Forecast=6857.252536592014 L2_Test=1822.4786888818676
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.9299672867243562 LnQ_Forecast=0.3678089822956556 LnQ_Test=0.0012448758750140496
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=800.0 MedAE_Forecast=2500.0 MedAE_Test=2000.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.10331440452494131
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _000070.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ...  ForecastMAPE      TestMAPE
0    None         _000070.KS  ...  2.490000e-02  1.210000e-02
1    None         _000070.KS  ...  2.490000e-02  1.210000e-02
2    None   CumSum_000070.KS  ...  2.490000e-02  1.210000e-02
3    None     Diff_000070.KS  ...  2.490000e-02  1.210000e-02
4    None     Diff_000070.KS  ...  2.490000e-02  1.210000e-02
..    ...                ...  ...           ...           ...
211  None  RelDiff_000070.KS  ...  3.628055e+06  1.960922e+07
212  None  RelDiff_000070.KS  ...  3.653977e+06  1.960922e+07
213  None  RelDiff_000070.KS  ...  3.908764e+06  1.960922e+07
214  None  RelDiff_000070.KS  ...  4.868436e+06  1.960922e+07
215  None  RelDiff_000070.KS  ...  4.868436e+06  1.960922e+07

[216 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _000070.KS             T+S+R  ...  0.0168       0.0249   0.0121
1  None        _000070.KS             T+S+R  ...  0.0168       0.0249   0.0121
2  None  CumSum_000070.KS             T+S+R  ...  0.0171       0.0249   0.0121
3  None    Diff_000070.KS             T+S+R  ...  0.0168       0.0249   0.0121
4  None    Diff_000070.KS             T+S+R  ...  0.0168       0.0249   0.0121

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['000070.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['000070.KS'], 'Horizon': 7}))
7 0    130000.0
1    131000.0
2    133000.0
3    133000.0
4    133000.0
5    132000.0
6    128000.0
Name: 000070.KS, dtype: float64
7 0    132500.0
1    132500.0
2    132500.0
3    132500.0
4    132500.0
5    132500.0
6    132500.0
Name: 000070.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_000070.KS 000070.KS [130000.0, 131000.0, 133000.0, 133000.0, 133000.0, 132000.0, 128000.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_000070.KS 000070.KS [132500.0, 132500.0, 132500.0, 132500.0, 132500.0, 132500.0, 132500.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_000070.KS 000070.KS 1258 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_000070.KS 000070.KS 12.474293231964111
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_000070.KS 000070.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_000070.KS 000070.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_000070.KS 000070.KS 0.0116 0.0114 1.125
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_000070.KS 000070.KS 1500.0 2061.5528128088304 -0.37006578947368407
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_000070.KS_7'
