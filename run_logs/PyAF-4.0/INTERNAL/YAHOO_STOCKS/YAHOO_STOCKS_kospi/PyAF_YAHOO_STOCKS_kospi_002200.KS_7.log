BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  002200.KS N= 1293 H= 7 HEAD= [11400. 11100. 11250. 11300. 11050.] TAIL= [20900. 21300. 21450. 21200. 21250.]
   002200.KS       Date
0    11400.0 2011-07-28
1    11100.0 2011-07-29
2    11250.0 2011-08-01
3    11300.0 2011-08-02
4    11050.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   002200.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['002200.KS'], 'Transformations': [('002200.KS', 'None', '_', 'T+S+R'), ('002200.KS', 'None', 'Diff_', 'T+S+R'), ('002200.KS', 'None', 'RelDiff_', 'T+S+R'), ('002200.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002200.KS', 'Transformation': '_002200.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.647, ('TRAINING', {'Signal': '002200.KS', 'Transformation': '_002200.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002200.KS', 'Transformation': 'Diff_002200.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.513, ('TRAINING', {'Signal': '002200.KS', 'Transformation': 'Diff_002200.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002200.KS', 'Transformation': 'RelDiff_002200.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.214, ('TRAINING', {'Signal': '002200.KS', 'Transformation': 'RelDiff_002200.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '002200.KS', 'Transformation': 'CumSum_002200.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.844, ('TRAINING', {'Signal': '002200.KS', 'Transformation': 'CumSum_002200.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.221, ('SIGNAL_TRAINING', {'Signals': ['002200.KS'], 'Transformations': [('002200.KS', 'None', '_', 'T+S+R'), ('002200.KS', 'None', 'Diff_', 'T+S+R'), ('002200.KS', 'None', 'RelDiff_', 'T+S+R'), ('002200.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['002200.KS'], 'Transformations': [('002200.KS', [('002200.KS', 'None', 'CumSum_', 'T+S+R'), ('002200.KS', 'None', 'Diff_', 'T+S+R'), ('002200.KS', 'None', 'RelDiff_', 'T+S+R'), ('002200.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '002200.KS', 'Transformations': [('002200.KS', 'None', 'CumSum_', 'T+S+R'), ('002200.KS', 'None', 'Diff_', 'T+S+R'), ('002200.KS', 'None', 'RelDiff_', 'T+S+R'), ('002200.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '002200.KS', 'Transformations': [('002200.KS', 'None', 'CumSum_', 'T+S+R'), ('002200.KS', 'None', 'Diff_', 'T+S+R'), ('002200.KS', 'None', 'RelDiff_', 'T+S+R'), ('002200.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '002200.KS', 'Model': '_002200.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '002200.KS', 'Model': '_002200.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '002200.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '002200.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['002200.KS'], 'Transformations': [('002200.KS', [('002200.KS', 'None', 'CumSum_', 'T+S+R'), ('002200.KS', 'None', 'Diff_', 'T+S+R'), ('002200.KS', 'None', 'RelDiff_', 'T+S+R'), ('002200.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='002200.KS' Length=1293  Min=9350.0 Max=28300.0  Mean=19830.587780355763 StdDev=4718.4760141187135
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_002200.KS' Min=0.0 Max=1.0  Mean=0.5530653182245783 StdDev=0.24899609573185758
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_002200.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_002200.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_002200.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_002200.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0114 MAPE_Forecast=0.0086 MAPE_Test=0.0116
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0114 SMAPE_Forecast=0.0086 SMAPE_Test=0.0117
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0106 MASE_Test=1.3878
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1537.670591849273 CRPS_Forecast=381.2406931144551 CRPS_Test=185.71428571428572
INFO:pyaf.std:MODEL_L1 L1_Fit=222.40272373540856 L1_Forecast=176.35658914728683 L1_Test=242.85714285714286
INFO:pyaf.std:MODEL_L2 L2_Fit=335.3972904071399 L2_Forecast=267.416581211743 L2_Test=318.4785258515422
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.29205731795486306 LnQ_Forecast=0.043063351549212515 LnQ_Test=0.0016619949421686623
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=150.0 MedAE_Forecast=100.0 MedAE_Test=200.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.10817941952506596
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _002200.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _002200.KS             T+S+R  ...   0.0114       0.0086    0.0116
1    None   CumSum_002200.KS             T+S+R  ...   0.0115       0.0086    0.0116
2    None     Diff_002200.KS             T+S+R  ...   0.0114       0.0086    0.0116
3    None     Diff_002200.KS             T+S+R  ...   0.0114       0.0086    0.0116
4    None  RelDiff_002200.KS             T+S+R  ...   0.0158       0.0086    0.0116
..    ...                ...               ...  ...      ...          ...       ...
211  None  RelDiff_002200.KS             T+S+R  ...   6.5844      38.1700  141.2497
212  None  RelDiff_002200.KS             T+S+R  ...   2.8538      41.9309   74.1194
213  None  RelDiff_002200.KS             T+S+R  ...   2.8538      41.9309   74.1194
214  None  RelDiff_002200.KS             T+S+R  ...  12.0725      48.7393  141.5030
215  None  RelDiff_002200.KS             T+S+R  ...  12.0725      48.7393  141.5030

[216 rows x 10 columns]
  Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _002200.KS             T+S+R  ...  0.0114       0.0086   0.0116
1  None   CumSum_002200.KS             T+S+R  ...  0.0115       0.0086   0.0116
2  None     Diff_002200.KS             T+S+R  ...  0.0114       0.0086   0.0116
3  None     Diff_002200.KS             T+S+R  ...  0.0114       0.0086   0.0116
4  None  RelDiff_002200.KS             T+S+R  ...  0.0158       0.0086   0.0116

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['002200.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['002200.KS'], 'Horizon': 7}))
7 0    21250.0
1    21350.0
2    21500.0
3    21550.0
4    21300.0
5    21350.0
6    21100.0
Name: 002200.KS, dtype: float64
7 0    21250.0
1    21250.0
2    21250.0
3    21250.0
4    21250.0
5    21250.0
6    21250.0
Name: 002200.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_002200.KS 002200.KS [21250.0, 21350.0, 21500.0, 21550.0, 21300.0, 21350.0, 21100.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_002200.KS 002200.KS [21250.0, 21250.0, 21250.0, 21250.0, 21250.0, 21250.0, 21250.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_002200.KS 002200.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_002200.KS 002200.KS 12.701320886611938
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_002200.KS 002200.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_002200.KS 002200.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_002200.KS 002200.KS 0.0063 0.0064 0.958
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_002200.KS 002200.KS 135.71428571428572 167.9710859472121 -0.44010416666666585
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_002200.KS_7'
