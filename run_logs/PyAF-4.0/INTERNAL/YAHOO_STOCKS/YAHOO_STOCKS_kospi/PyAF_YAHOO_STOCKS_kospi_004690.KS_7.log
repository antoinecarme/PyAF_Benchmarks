BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  004690.KS N= 1293 H= 7 HEAD= [103000. 103000. 104000. 101500. 100000.] TAIL= [104500. 105000. 105500. 106500. 104500.]
   004690.KS       Date
0   103000.0 2011-07-28
1   103000.0 2011-07-29
2   104000.0 2011-08-01
3   101500.0 2011-08-02
4   100000.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   004690.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['004690.KS'], 'Transformations': [('004690.KS', 'None', '_', 'T+S+R'), ('004690.KS', 'None', 'Diff_', 'T+S+R'), ('004690.KS', 'None', 'RelDiff_', 'T+S+R'), ('004690.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004690.KS', 'Transformation': '_004690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.687, ('TRAINING', {'Signal': '004690.KS', 'Transformation': '_004690.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004690.KS', 'Transformation': 'Diff_004690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.523, ('TRAINING', {'Signal': '004690.KS', 'Transformation': 'Diff_004690.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004690.KS', 'Transformation': 'RelDiff_004690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.823, ('TRAINING', {'Signal': '004690.KS', 'Transformation': 'RelDiff_004690.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '004690.KS', 'Transformation': 'CumSum_004690.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.882, ('TRAINING', {'Signal': '004690.KS', 'Transformation': 'CumSum_004690.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.918, ('SIGNAL_TRAINING', {'Signals': ['004690.KS'], 'Transformations': [('004690.KS', 'None', '_', 'T+S+R'), ('004690.KS', 'None', 'Diff_', 'T+S+R'), ('004690.KS', 'None', 'RelDiff_', 'T+S+R'), ('004690.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['004690.KS'], 'Transformations': [('004690.KS', [('004690.KS', 'None', 'CumSum_', 'T+S+R'), ('004690.KS', 'None', 'Diff_', 'T+S+R'), ('004690.KS', 'None', 'RelDiff_', 'T+S+R'), ('004690.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '004690.KS', 'Transformations': [('004690.KS', 'None', 'CumSum_', 'T+S+R'), ('004690.KS', 'None', 'Diff_', 'T+S+R'), ('004690.KS', 'None', 'RelDiff_', 'T+S+R'), ('004690.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '004690.KS', 'Transformations': [('004690.KS', 'None', 'CumSum_', 'T+S+R'), ('004690.KS', 'None', 'Diff_', 'T+S+R'), ('004690.KS', 'None', 'RelDiff_', 'T+S+R'), ('004690.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004690.KS', 'Model': '_004690.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '004690.KS', 'Model': '_004690.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004690.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '004690.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.227, ('FINALIZE_TRAINING', {'Signals': ['004690.KS'], 'Transformations': [('004690.KS', [('004690.KS', 'None', 'CumSum_', 'T+S+R'), ('004690.KS', 'None', 'Diff_', 'T+S+R'), ('004690.KS', 'None', 'RelDiff_', 'T+S+R'), ('004690.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='004690.KS' Length=1293  Min=86200.0 Max=174500.0  Mean=118594.89559164734 StdDev=20776.64311012922
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_004690.KS' Min=0.0 Max=1.0  Mean=0.3668731097581801 StdDev=0.23529607146239198
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_004690.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_004690.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_004690.KS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_004690.KS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0121 MAPE_Forecast=0.0114 MAPE_Test=0.0082
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0121 SMAPE_Forecast=0.0114 SMAPE_Test=0.0081
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0041 MASE_Test=0.9351
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6551.076080278517 CRPS_Forecast=2458.063584131327 CRPS_Test=285.7142857142857
INFO:pyaf.std:MODEL_L1 L1_Fit=1526.4591439688716 L1_Forecast=1217.4418604651162 L1_Test=857.1428571428571
INFO:pyaf.std:MODEL_L2 L2_Fit=2256.8098416744374 L2_Forecast=1641.857994595941 L2_Test=1000.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3176498206809384 LnQ_Forecast=0.06060857970545207 LnQ_Test=0.0006309017620504849
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1000.0 MedAE_Forecast=1000.0 MedAE_Test=500.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.19026047565118911
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _004690.KS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ... ForecastMAPE   TestMAPE
0    None         _004690.KS  ...       0.0114     0.0082
1    None   CumSum_004690.KS  ...       0.0114     0.0082
2    None   CumSum_004690.KS  ...       0.0114     0.0082
3    None     Diff_004690.KS  ...       0.0114     0.0082
4    None     Diff_004690.KS  ...       0.0114     0.0082
..    ...                ...  ...          ...        ...
203  None  RelDiff_004690.KS  ...     156.5470    77.5852
204  None  RelDiff_004690.KS  ...     214.0296   375.8237
205  None  RelDiff_004690.KS  ...     214.0296   375.8237
206  None  RelDiff_004690.KS  ...     214.0296   375.8237
207  None  RelDiff_004690.KS  ...     702.9293  1579.2954

[208 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _004690.KS             T+S+R  ...  0.0121       0.0114   0.0082
1  None  CumSum_004690.KS             T+S+R  ...  0.0123       0.0114   0.0082
2  None  CumSum_004690.KS             T+S+R  ...  0.0123       0.0114   0.0082
3  None    Diff_004690.KS             T+S+R  ...  0.0121       0.0114   0.0082
4  None    Diff_004690.KS             T+S+R  ...  0.0121       0.0114   0.0082

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['004690.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['004690.KS'], 'Horizon': 7}))
7 0    106000.0
1    105500.0
2    105500.0
3    106000.0
4    107500.0
5    107500.0
6    107000.0
Name: 004690.KS, dtype: float64
7 0    104500.0
1    104500.0
2    104500.0
3    104500.0
4    104500.0
5    104500.0
6    104500.0
Name: 004690.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_004690.KS 004690.KS [106000.0, 105500.0, 105500.0, 106000.0, 107500.0, 107500.0, 107000.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_004690.KS 004690.KS [104500.0, 104500.0, 104500.0, 104500.0, 104500.0, 104500.0, 104500.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_004690.KS 004690.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_004690.KS 004690.KS 12.405022382736206
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_004690.KS 004690.KS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_004690.KS 004690.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_004690.KS 004690.KS 0.0181 0.0183 3.8571
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_004690.KS 004690.KS 1928.5714285714287 2095.9143930173154 -5.5227272727272725
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_004690.KS_7'
