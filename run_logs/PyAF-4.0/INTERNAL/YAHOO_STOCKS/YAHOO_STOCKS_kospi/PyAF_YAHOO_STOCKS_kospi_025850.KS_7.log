BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1195 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-02-26T00:00:00.000000000' '2016-02-29T00:00:00.000000000'
 '2016-03-01T00:00:00.000000000' '2016-03-02T00:00:00.000000000'
 '2016-03-03T00:00:00.000000000']
SIGNAL :  025850.KS N= 1195 H= 7 HEAD= [31990.  31288.3 31453.4 30792.9 29761. ] TAIL= [9110. 9110. 9110. 9110. 9110.]
   025850.KS       Date
0    31990.0 2011-07-28
1    31288.3 2011-07-29
2    31453.4 2011-08-01
3    30792.9 2011-08-02
4    29761.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1195 entries, 0 to 1194
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   025850.KS  1195 non-null   float64       
 1   Date       1195 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 28.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['025850.KS'], 'Transformations': [('025850.KS', 'None', '_', 'T+S+R'), ('025850.KS', 'None', 'Diff_', 'T+S+R'), ('025850.KS', 'None', 'RelDiff_', 'T+S+R'), ('025850.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025850.KS', 'Transformation': '_025850.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.318, ('TRAINING', {'Signal': '025850.KS', 'Transformation': '_025850.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025850.KS', 'Transformation': 'Diff_025850.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.496, ('TRAINING', {'Signal': '025850.KS', 'Transformation': 'Diff_025850.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025850.KS', 'Transformation': 'RelDiff_025850.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.794, ('TRAINING', {'Signal': '025850.KS', 'Transformation': 'RelDiff_025850.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '025850.KS', 'Transformation': 'CumSum_025850.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.493, ('TRAINING', {'Signal': '025850.KS', 'Transformation': 'CumSum_025850.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.104, ('SIGNAL_TRAINING', {'Signals': ['025850.KS'], 'Transformations': [('025850.KS', 'None', '_', 'T+S+R'), ('025850.KS', 'None', 'Diff_', 'T+S+R'), ('025850.KS', 'None', 'RelDiff_', 'T+S+R'), ('025850.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['025850.KS'], 'Transformations': [('025850.KS', [('025850.KS', 'None', 'CumSum_', 'T+S+R'), ('025850.KS', 'None', 'Diff_', 'T+S+R'), ('025850.KS', 'None', 'RelDiff_', 'T+S+R'), ('025850.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '025850.KS', 'Transformations': [('025850.KS', 'None', 'CumSum_', 'T+S+R'), ('025850.KS', 'None', 'Diff_', 'T+S+R'), ('025850.KS', 'None', 'RelDiff_', 'T+S+R'), ('025850.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '025850.KS', 'Transformations': [('025850.KS', 'None', 'CumSum_', 'T+S+R'), ('025850.KS', 'None', 'Diff_', 'T+S+R'), ('025850.KS', 'None', 'RelDiff_', 'T+S+R'), ('025850.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '025850.KS', 'Model': '_025850.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.035, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '025850.KS', 'Model': '_025850.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '025850.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.2, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '025850.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.243, ('FINALIZE_TRAINING', {'Signals': ['025850.KS'], 'Transformations': [('025850.KS', [('025850.KS', 'None', 'CumSum_', 'T+S+R'), ('025850.KS', 'None', 'Diff_', 'T+S+R'), ('025850.KS', 'None', 'RelDiff_', 'T+S+R'), ('025850.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-03-26T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='025850.KS' Length=1195  Min=8750.0 Max=31990.0  Mean=17148.532217573204 StdDev=4557.62481812287
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_025850.KS' Min=0.0 Max=1.0  Mean=0.3613826255410162 StdDev=0.1961112228107949
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_025850.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_025850.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_025850.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_025850.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0184 MAPE_Forecast=0.0221 MAPE_Test=0.0111
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0184 SMAPE_Forecast=0.0221 SMAPE_Test=0.0107
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9989 MASE_Forecast=1.0031 MASE_Test=1014285714285.7142
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1229.556787396122 CRPS_Forecast=1007.491297103312 CRPS_Test=50.714285714285715
INFO:pyaf.std:MODEL_L1 L1_Fit=340.73515789473686 L1_Forecast=308.4478991596639 L1_Test=101.42857142857143
INFO:pyaf.std:MODEL_L2 L2_Fit=554.503548524548 L2_Forecast=470.43925397512515 L2_Test=268.3547758365513
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7976965271328893 LnQ_Forecast=0.23474970343717244 LnQ_Test=0.005632264007810337
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=206.39999999999964 MedAE_Forecast=206.40000000000055 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 1.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _025850.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _025850.KS             T+S+R  ...  0.0184       0.0218   0.0152
1    None         _025850.KS             T+S+R  ...  0.0184       0.0218   0.0152
2    None         _025850.KS             T+S+R  ...  0.0184       0.0218   0.0152
3    None         _025850.KS             T+S+R  ...  0.0184       0.0221   0.0111
4    None         _025850.KS             T+S+R  ...  0.0184       0.0221   0.0111
..    ...                ...               ...  ...     ...          ...      ...
195  None  RelDiff_025850.KS             T+S+R  ...  0.9052       3.4168   3.8282
196  None  RelDiff_025850.KS             T+S+R  ...  0.9055       3.4171   3.8540
197  None   CumSum_025850.KS             T+S+R  ...  2.6733       3.6391   5.9094
198  None   CumSum_025850.KS             T+S+R  ...  1.9109       3.7085  10.4817
199  None  RelDiff_025850.KS             T+S+R  ...  0.9429       3.7638   7.7097

[200 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     _025850.KS             T+S+R  ...  0.0184       0.0218   0.0152
1  None     _025850.KS             T+S+R  ...  0.0184       0.0218   0.0152
2  None     _025850.KS             T+S+R  ...  0.0184       0.0218   0.0152
3  None     _025850.KS             T+S+R  ...  0.0184       0.0221   0.0111
4  None     _025850.KS             T+S+R  ...  0.0184       0.0221   0.0111

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['025850.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['025850.KS'], 'Horizon': 7}))
7 0    9110.0
1    9110.0
2    9110.0
3    9110.0
4    9110.0
5    9110.0
6    9110.0
Name: 025850.KS, dtype: float64
7 0    9110.0
1    9110.0
2    9110.0
3    9110.0
4    9110.0
5    9110.0
6    9110.0
Name: 025850.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_025850.KS 025850.KS [9110.0, 9110.0, 9110.0, 9110.0, 9110.0, 9110.0, 9110.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_025850.KS 025850.KS [9110.0, 9110.0, 9110.0, 9110.0, 9110.0, 9110.0, 9110.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_025850.KS 025850.KS 1195 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_025850.KS 025850.KS 11.598659753799438
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_025850.KS 025850.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_025850.KS 025850.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_025850.KS 025850.KS 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_025850.KS 025850.KS 0.0 0.0 1.0
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_025850.KS_7'
