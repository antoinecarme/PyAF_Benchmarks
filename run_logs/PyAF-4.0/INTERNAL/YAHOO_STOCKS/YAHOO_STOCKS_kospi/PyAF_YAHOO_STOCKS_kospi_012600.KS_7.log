BENCH_DATA YAHOO_STOCKS_kospi
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  012600.KS N= 1293 H= 7 HEAD= [6430. 6460. 6530. 6430. 6350.] TAIL= [6550. 6610. 6630. 6640. 6670.]
   012600.KS       Date
0     6430.0 2011-07-28
1     6460.0 2011-07-29
2     6530.0 2011-08-01
3     6430.0 2011-08-02
4     6350.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   012600.KS  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['012600.KS'], 'Transformations': [('012600.KS', 'None', '_', 'T+S+R'), ('012600.KS', 'None', 'Diff_', 'T+S+R'), ('012600.KS', 'None', 'RelDiff_', 'T+S+R'), ('012600.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012600.KS', 'Transformation': '_012600.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.499, ('TRAINING', {'Signal': '012600.KS', 'Transformation': '_012600.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012600.KS', 'Transformation': 'Diff_012600.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.823, ('TRAINING', {'Signal': '012600.KS', 'Transformation': 'Diff_012600.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012600.KS', 'Transformation': 'RelDiff_012600.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.157, ('TRAINING', {'Signal': '012600.KS', 'Transformation': 'RelDiff_012600.KS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '012600.KS', 'Transformation': 'CumSum_012600.KS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.49, ('TRAINING', {'Signal': '012600.KS', 'Transformation': 'CumSum_012600.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.971, ('SIGNAL_TRAINING', {'Signals': ['012600.KS'], 'Transformations': [('012600.KS', 'None', '_', 'T+S+R'), ('012600.KS', 'None', 'Diff_', 'T+S+R'), ('012600.KS', 'None', 'RelDiff_', 'T+S+R'), ('012600.KS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['012600.KS'], 'Transformations': [('012600.KS', [('012600.KS', 'None', 'CumSum_', 'T+S+R'), ('012600.KS', 'None', 'Diff_', 'T+S+R'), ('012600.KS', 'None', 'RelDiff_', 'T+S+R'), ('012600.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '012600.KS', 'Transformations': [('012600.KS', 'None', 'CumSum_', 'T+S+R'), ('012600.KS', 'None', 'Diff_', 'T+S+R'), ('012600.KS', 'None', 'RelDiff_', 'T+S+R'), ('012600.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': '012600.KS', 'Transformations': [('012600.KS', 'None', 'CumSum_', 'T+S+R'), ('012600.KS', 'None', 'Diff_', 'T+S+R'), ('012600.KS', 'None', 'RelDiff_', 'T+S+R'), ('012600.KS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '012600.KS', 'Model': '_012600.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '012600.KS', 'Model': '_012600.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '012600.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.309, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '012600.KS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.345, ('FINALIZE_TRAINING', {'Signals': ['012600.KS'], 'Transformations': [('012600.KS', [('012600.KS', 'None', 'CumSum_', 'T+S+R'), ('012600.KS', 'None', 'Diff_', 'T+S+R'), ('012600.KS', 'None', 'RelDiff_', 'T+S+R'), ('012600.KS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='012600.KS' Length=1293  Min=2885.0 Max=9050.0  Mean=4978.081979891725 StdDev=1536.7308420239492
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_012600.KS' Min=0.0 Max=1.0  Mean=0.33951045902542165 StdDev=0.24926696545400626
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_012600.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_012600.KS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_012600.KS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_012600.KS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0185 MAPE_Forecast=0.0128 MAPE_Test=0.0105
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0185 SMAPE_Forecast=0.0128 SMAPE_Test=0.0106
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0125 MASE_Test=1.3714
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=317.7776162195372 CRPS_Forecast=230.1440018239854 CRPS_Test=57.857142857142854
INFO:pyaf.std:MODEL_L1 L1_Fit=84.17315175097276 L1_Forecast=90.96899224806202 L1_Test=68.57142857142857
INFO:pyaf.std:MODEL_L2 L2_Fit=146.9538295369134 L2_Forecast=156.99824716347345 L2_Test=91.49551120917666
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.9426874705846997 LnQ_Forecast=0.12206316295424825 LnQ_Test=0.001421481468157156
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=50.0 MedAE_Forecast=50.0 MedAE_Test=40.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5750202757502028
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _012600.KS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation  ...  ForecastMAPE      TestMAPE
0    None         _012600.KS  ...  1.280000e-02  1.050000e-02
1    None         _012600.KS  ...  1.280000e-02  1.050000e-02
2    None   CumSum_012600.KS  ...  1.280000e-02  1.050000e-02
3    None     Diff_012600.KS  ...  1.280000e-02  1.050000e-02
4    None     Diff_012600.KS  ...  1.280000e-02  1.050000e-02
..    ...                ...  ...           ...           ...
187  None  RelDiff_012600.KS  ...  9.100435e+06  5.400350e+07
188  None  RelDiff_012600.KS  ...  9.650947e+06  5.400350e+07
189  None  RelDiff_012600.KS  ...  1.059652e+07  5.400350e+07
190  None  RelDiff_012600.KS  ...  1.110396e+07  5.400350e+07
191  None  RelDiff_012600.KS  ...  1.110396e+07  5.400350e+07

[192 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _012600.KS             T+S+R  ...  0.0185       0.0128   0.0105
1  None        _012600.KS             T+S+R  ...  0.0185       0.0128   0.0105
2  None  CumSum_012600.KS             T+S+R  ...  0.0190       0.0128   0.0105
3  None    Diff_012600.KS             T+S+R  ...  0.0185       0.0128   0.0105
4  None    Diff_012600.KS             T+S+R  ...  0.0185       0.0128   0.0105

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['012600.KS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['012600.KS'], 'Horizon': 7}))
7 0    6650.0
1    6600.0
2    6610.0
3    6370.0
4    6440.0
5    6430.0
6    6390.0
Name: 012600.KS, dtype: float64
7 0    6670.0
1    6670.0
2    6670.0
3    6670.0
4    6670.0
5    6670.0
6    6670.0
Name: 012600.KS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_012600.KS 012600.KS [6650.0, 6600.0, 6610.0, 6370.0, 6440.0, 6430.0, 6390.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_012600.KS 012600.KS [6670.0, 6670.0, 6670.0, 6670.0, 6670.0, 6670.0, 6670.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_012600.KS 012600.KS 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_012600.KS 012600.KS 11.596072435379028
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_012600.KS 012600.KS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_012600.KS 012600.KS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_012600.KS 012600.KS 0.0267 0.0262 2.449
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_012600.KS 012600.KS 171.42857142857142 202.76657938202172 -2.5060911938739947
BENCHMARK_SUCCESS 'YAHOO_STOCKS_kospi_012600.KS_7'
