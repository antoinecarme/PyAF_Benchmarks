BENCH_DATA YAHOO_STOCKS_gdaxi
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ADS.DE N= 1298 H= 7 HEAD= [53.42  51.79  51.19  49.52  48.835] TAIL= [130.95 131.25 129.8  131.55 131.15]
   ADS.DE       Date
0  53.420 2011-07-28
1  51.790 2011-07-29
2  51.190 2011-08-01
3  49.520 2011-08-02
4  48.835 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ADS.DE  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ADS.DE'], 'Transformations': [('ADS.DE', 'None', '_', 'T+S+R'), ('ADS.DE', 'None', 'Diff_', 'T+S+R'), ('ADS.DE', 'None', 'RelDiff_', 'T+S+R'), ('ADS.DE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': '_ADS.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.514, ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': '_ADS.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': 'Diff_ADS.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.521, ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': 'Diff_ADS.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': 'RelDiff_ADS.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.774, ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': 'RelDiff_ADS.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': 'CumSum_ADS.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.089, ('TRAINING', {'Signal': 'ADS.DE', 'Transformation': 'CumSum_ADS.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.9, ('SIGNAL_TRAINING', {'Signals': ['ADS.DE'], 'Transformations': [('ADS.DE', 'None', '_', 'T+S+R'), ('ADS.DE', 'None', 'Diff_', 'T+S+R'), ('ADS.DE', 'None', 'RelDiff_', 'T+S+R'), ('ADS.DE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ADS.DE'], 'Transformations': [('ADS.DE', [('ADS.DE', 'None', 'CumSum_', 'T+S+R'), ('ADS.DE', 'None', 'Diff_', 'T+S+R'), ('ADS.DE', 'None', 'RelDiff_', 'T+S+R'), ('ADS.DE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ADS.DE', 'Transformations': [('ADS.DE', 'None', 'CumSum_', 'T+S+R'), ('ADS.DE', 'None', 'Diff_', 'T+S+R'), ('ADS.DE', 'None', 'RelDiff_', 'T+S+R'), ('ADS.DE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ADS.DE', 'Transformations': [('ADS.DE', 'None', 'CumSum_', 'T+S+R'), ('ADS.DE', 'None', 'Diff_', 'T+S+R'), ('ADS.DE', 'None', 'RelDiff_', 'T+S+R'), ('ADS.DE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ADS.DE', 'Model': '_ADS.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ADS.DE', 'Model': '_ADS.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ADS.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ADS.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['ADS.DE'], 'Transformations': [('ADS.DE', [('ADS.DE', 'None', 'CumSum_', 'T+S+R'), ('ADS.DE', 'None', 'Diff_', 'T+S+R'), ('ADS.DE', 'None', 'RelDiff_', 'T+S+R'), ('ADS.DE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ADS.DE' Length=1298  Min=43.95 Max=131.55  Mean=73.23875192604008 StdDev=16.758614085121177
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ADS.DE' Min=0.0 Max=1.0  Mean=0.33434648317397364 StdDev=0.19130837996713657
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ADS.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ADS.DE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ADS.DE_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ADS.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0114 MAPE_Forecast=0.0125 MAPE_Test=0.0091
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0114 SMAPE_Forecast=0.0125 SMAPE_Test=0.0091
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0003 MASE_Test=0.8949
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.6491251325989396 CRPS_Forecast=4.822700424256189 CRPS_Test=0.8285714285714272
INFO:pyaf.std:MODEL_L1 L1_Fit=0.7514922480620153 L1_Forecast=1.1353281853281851 L1_Test=1.1857142857142853
INFO:pyaf.std:MODEL_L2 L2_Fit=1.0587701976327766 L2_Forecast=1.5503364935533328 L2_Test=1.485645602808033
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2758720444162624 LnQ_Forecast=0.07453263124433414 LnQ_Test=0.0009241676823940207
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5750000000000028 MedAE_Forecast=0.8500000000000085 MedAE_Test=1.0999999999999943
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.10810502283105021
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ADS.DE_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE      TestMAPE
0    None         _ADS.DE  ...       0.0124  9.200000e-03
1    None         _ADS.DE  ...       0.0125  9.100000e-03
2    None         _ADS.DE  ...       0.0125  9.100000e-03
3    None   CumSum_ADS.DE  ...       0.0125  9.100000e-03
4    None     Diff_ADS.DE  ...       0.0125  9.100000e-03
..    ...             ...  ...          ...           ...
211  None  RelDiff_ADS.DE  ...   68089.0116  1.161832e+06
212  None  RelDiff_ADS.DE  ...   69451.6091  1.154575e+06
213  None  RelDiff_ADS.DE  ...   73261.3525  1.213439e+06
214  None  RelDiff_ADS.DE  ...  140719.3706  1.737292e+06
215  None  RelDiff_ADS.DE  ...  140719.3706  1.737292e+06

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ADS.DE             T+S+R  ...  0.0114       0.0124   0.0092
1  None        _ADS.DE             T+S+R  ...  0.0114       0.0125   0.0091
2  None        _ADS.DE             T+S+R  ...  0.0114       0.0125   0.0091
3  None  CumSum_ADS.DE             T+S+R  ...  0.0116       0.0125   0.0091
4  None    Diff_ADS.DE             T+S+R  ...  0.0114       0.0125   0.0091

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ADS.DE'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['ADS.DE'], 'Horizon': 7}))
7 0    132.65
1    136.60
2    138.25
3    137.00
4    139.10
5    139.30
6    140.55
Name: ADS.DE, dtype: float64
7 0    131.15
1    131.15
2    131.15
3    131.15
4    131.15
5    131.15
6    131.15
Name: ADS.DE_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ADS.DE ADS.DE [132.65, 136.6, 138.25, 137.0, 139.1, 139.3, 140.55]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ADS.DE ADS.DE [131.15, 131.15, 131.15, 131.15, 131.15, 131.15, 131.15]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ADS.DE ADS.DE 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ADS.DE ADS.DE 13.374079704284668
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ADS.DE ADS.DE Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ADS.DE ADS.DE 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ADS.DE ADS.DE 0.0468 0.0481 3.7418
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ADS.DE ADS.DE 6.485714285714282 6.913444458857991 -7.3395292525519285
BENCHMARK_SUCCESS 'YAHOO_STOCKS_gdaxi_ADS.DE_7'
