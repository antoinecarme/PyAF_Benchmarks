BENCH_DATA YAHOO_STOCKS_gdaxi
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  DPW.DE N= 1298 H= 7 HEAD= [12.435 12.32  12.015 11.97  11.705] TAIL= [25.655 25.46  25.82  25.785 25.625]
   DPW.DE       Date
0  12.435 2011-07-28
1  12.320 2011-07-29
2  12.015 2011-08-01
3  11.970 2011-08-02
4  11.705 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   DPW.DE  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DPW.DE'], 'Transformations': [('DPW.DE', 'None', '_', 'T+S+R'), ('DPW.DE', 'None', 'Diff_', 'T+S+R'), ('DPW.DE', 'None', 'RelDiff_', 'T+S+R'), ('DPW.DE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': '_DPW.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.08, ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': '_DPW.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': 'Diff_DPW.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.853, ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': 'Diff_DPW.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': 'RelDiff_DPW.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.736, ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': 'RelDiff_DPW.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': 'CumSum_DPW.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.001, ('TRAINING', {'Signal': 'DPW.DE', 'Transformation': 'CumSum_DPW.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 13.671, ('SIGNAL_TRAINING', {'Signals': ['DPW.DE'], 'Transformations': [('DPW.DE', 'None', '_', 'T+S+R'), ('DPW.DE', 'None', 'Diff_', 'T+S+R'), ('DPW.DE', 'None', 'RelDiff_', 'T+S+R'), ('DPW.DE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DPW.DE'], 'Transformations': [('DPW.DE', [('DPW.DE', 'None', 'CumSum_', 'T+S+R'), ('DPW.DE', 'None', 'Diff_', 'T+S+R'), ('DPW.DE', 'None', 'RelDiff_', 'T+S+R'), ('DPW.DE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DPW.DE', 'Transformations': [('DPW.DE', 'None', 'CumSum_', 'T+S+R'), ('DPW.DE', 'None', 'Diff_', 'T+S+R'), ('DPW.DE', 'None', 'RelDiff_', 'T+S+R'), ('DPW.DE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'DPW.DE', 'Transformations': [('DPW.DE', 'None', 'CumSum_', 'T+S+R'), ('DPW.DE', 'None', 'Diff_', 'T+S+R'), ('DPW.DE', 'None', 'RelDiff_', 'T+S+R'), ('DPW.DE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DPW.DE', 'Model': '_DPW.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DPW.DE', 'Model': '_DPW.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DPW.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.194, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DPW.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.231, ('FINALIZE_TRAINING', {'Signals': ['DPW.DE'], 'Transformations': [('DPW.DE', [('DPW.DE', 'None', 'CumSum_', 'T+S+R'), ('DPW.DE', 'None', 'Diff_', 'T+S+R'), ('DPW.DE', 'None', 'RelDiff_', 'T+S+R'), ('DPW.DE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DPW.DE' Length=1298  Min=9.13 Max=31.08  Mean=21.356768104776577 StdDev=5.935750920882783
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DPW.DE' Min=0.0 Max=1.0  Mean=0.5570281596709152 StdDev=0.2704214542543411
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DPW.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DPW.DE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_DPW.DE_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_DPW.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0115 MAPE_Forecast=0.0133 MAPE_Test=0.011
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0115 SMAPE_Forecast=0.0132 SMAPE_Test=0.0111
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9994 MASE_Test=1.0275
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.8698221006731948 CRPS_Forecast=0.5180714167612992 CRPS_Test=0.20250000000000032
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2259195736434108 L1_Forecast=0.32723938223938226 L1_Test=0.28000000000000064
INFO:pyaf.std:MODEL_L2 L2_Fit=0.3132641370690928 L2_Forecast=0.4309591305457773 L2_Test=0.32612442848879486
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2487202413729347 LnQ_Forecast=0.08002836035195286 LnQ_Test=0.0011731268788006865
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.16500000000000004 MedAE_Forecast=0.26499999999999346 MedAE_Test=0.28000000000000114
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.15056947608200458
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _DPW.DE_Lag1Trend_residue_bestCycle_byMAPE None 0.0004555808656035998 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _DPW.DE             T+S+R  ...   0.0115       0.0132    0.0110
1    None         _DPW.DE             T+S+R  ...   0.0112       0.0132    0.0116
2    None         _DPW.DE             T+S+R  ...   0.0112       0.0132    0.0117
3    None         _DPW.DE             T+S+R  ...   0.0115       0.0133    0.0110
4    None         _DPW.DE             T+S+R  ...   0.0115       0.0133    0.0110
..    ...             ...               ...  ...      ...          ...       ...
211  None  RelDiff_DPW.DE             T+S+R  ...  14.9983      45.6451  134.1457
212  None  RelDiff_DPW.DE             T+S+R  ...   6.9262     103.2258  195.9117
213  None  RelDiff_DPW.DE             T+S+R  ...   6.9262     103.2258  195.9117
214  None  RelDiff_DPW.DE             T+S+R  ...  26.6546     132.0232  440.9560
215  None  RelDiff_DPW.DE             T+S+R  ...  26.6546     132.0232  440.9560

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _DPW.DE             T+S+R  ...  0.0115       0.0132   0.0110
1  None        _DPW.DE             T+S+R  ...  0.0112       0.0132   0.0116
2  None        _DPW.DE             T+S+R  ...  0.0112       0.0132   0.0117
3  None        _DPW.DE             T+S+R  ...  0.0115       0.0133   0.0110
4  None        _DPW.DE             T+S+R  ...  0.0115       0.0133   0.0110

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DPW.DE'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.163, ('FORECASTING', {'Signals': ['DPW.DE'], 'Horizon': 7}))
7 0    25.500
1    25.830
2    25.935
3    25.855
4    26.100
5    26.100
6    26.430
Name: DPW.DE, dtype: float64
7 0    25.625
1    25.625
2    25.625
3    25.625
4    25.625
5    25.625
6    25.625
Name: DPW.DE_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DPW.DE DPW.DE [25.5, 25.83, 25.935, 25.855, 26.1, 26.1, 26.43]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DPW.DE DPW.DE [25.625, 25.625, 25.625, 25.625, 25.625, 25.625, 25.625]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DPW.DE DPW.DE 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DPW.DE DPW.DE 14.167765855789185
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DPW.DE DPW.DE Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DPW.DE DPW.DE 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DPW.DE DPW.DE 0.0144 0.0145 2.0642
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DPW.DE DPW.DE 0.375 0.4319267464347565 -1.6112158470577547
BENCHMARK_SUCCESS 'YAHOO_STOCKS_gdaxi_DPW.DE_7'
