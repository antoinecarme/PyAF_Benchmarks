BENCH_DATA YAHOO_STOCKS_nasdaqbio
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ALXN N= 1251 H= 7 HEAD= [56.490002 56.799999 56.009998 54.509998 54.900002] TAIL= [125.349998 123.470001 125.150002 125.580002 125.459999]
        ALXN       Date
0  56.490002 2011-07-28
1  56.799999 2011-07-29
2  56.009998 2011-08-01
3  54.509998 2011-08-02
4  54.900002 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ALXN    1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ALXN'], 'Transformations': [('ALXN', 'None', '_', 'T+S+R'), ('ALXN', 'None', 'Diff_', 'T+S+R'), ('ALXN', 'None', 'RelDiff_', 'T+S+R'), ('ALXN', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALXN', 'Transformation': '_ALXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.43, ('TRAINING', {'Signal': 'ALXN', 'Transformation': '_ALXN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALXN', 'Transformation': 'Diff_ALXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.02, ('TRAINING', {'Signal': 'ALXN', 'Transformation': 'Diff_ALXN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALXN', 'Transformation': 'RelDiff_ALXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.272, ('TRAINING', {'Signal': 'ALXN', 'Transformation': 'RelDiff_ALXN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALXN', 'Transformation': 'CumSum_ALXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.793, ('TRAINING', {'Signal': 'ALXN', 'Transformation': 'CumSum_ALXN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.517, ('SIGNAL_TRAINING', {'Signals': ['ALXN'], 'Transformations': [('ALXN', 'None', '_', 'T+S+R'), ('ALXN', 'None', 'Diff_', 'T+S+R'), ('ALXN', 'None', 'RelDiff_', 'T+S+R'), ('ALXN', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ALXN'], 'Transformations': [('ALXN', [('ALXN', 'None', 'CumSum_', 'T+S+R'), ('ALXN', 'None', 'Diff_', 'T+S+R'), ('ALXN', 'None', 'RelDiff_', 'T+S+R'), ('ALXN', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ALXN', 'Transformations': [('ALXN', 'None', 'CumSum_', 'T+S+R'), ('ALXN', 'None', 'Diff_', 'T+S+R'), ('ALXN', 'None', 'RelDiff_', 'T+S+R'), ('ALXN', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'ALXN', 'Transformations': [('ALXN', 'None', 'CumSum_', 'T+S+R'), ('ALXN', 'None', 'Diff_', 'T+S+R'), ('ALXN', 'None', 'RelDiff_', 'T+S+R'), ('ALXN', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ALXN', 'Model': '_ALXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ALXN', 'Model': '_ALXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ALXN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ALXN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.23, ('FINALIZE_TRAINING', {'Signals': ['ALXN'], 'Transformations': [('ALXN', [('ALXN', 'None', 'CumSum_', 'T+S+R'), ('ALXN', 'None', 'Diff_', 'T+S+R'), ('ALXN', 'None', 'RelDiff_', 'T+S+R'), ('ALXN', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALXN' Length=1251  Min=48.049999 Max=207.839996  Mean=130.31191856354928 StdDev=40.991234277596334
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ALXN' Min=0.0 Max=1.0  Mean=0.5148126985918217 StdDev=0.25653191718625745
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ALXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ALXN_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ALXN_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ALXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0165 MAPE_Forecast=0.0196 MAPE_Test=0.007
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0165 SMAPE_Forecast=0.0195 SMAPE_Test=0.007
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0037 MASE_Test=1.0408
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=12.324698166744248 CRPS_Forecast=6.207820257513822 CRPS_Test=0.3678577857142855
INFO:pyaf.std:MODEL_L1 L1_Fit=2.0172462944723617 L1_Forecast=3.072891682730924 L1_Test=0.8742861428571425
INFO:pyaf.std:MODEL_L2 L2_Fit=2.9367067566087557 L2_Forecast=4.021513096771389 L2_Test=1.1019077884724051
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.510930885575972 LnQ_Forecast=0.16468534312549174 LnQ_Test=0.000549528849730587
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=1.4100040000000007 MedAE_Forecast=2.429992999999996 MedAE_Test=0.880004999999997
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.052819345130846934
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ALXN_Lag1Trend_residue_bestCycle_byMAPE None 0.0003755241324648606 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None          _ALXN             T+S+R  ...  0.0162       0.0194    0.0084
1    None          _ALXN             T+S+R  ...  0.0165       0.0196    0.0070
2    None          _ALXN             T+S+R  ...  0.0165       0.0196    0.0070
3    None    CumSum_ALXN             T+S+R  ...  0.0166       0.0196    0.0070
4    None      Diff_ALXN             T+S+R  ...  0.0165       0.0196    0.0070
..    ...            ...               ...  ...     ...          ...       ...
219  None   RelDiff_ALXN             T+S+R  ...  3.5009      39.2871  198.1245
220  None   RelDiff_ALXN             T+S+R  ...  3.1460      39.8807  202.3104
221  None   RelDiff_ALXN             T+S+R  ...  3.7889      41.1464  216.6279
222  None   RelDiff_ALXN             T+S+R  ...  3.6557      41.7622  219.1463
223  None   RelDiff_ALXN             T+S+R  ...  3.6557      41.7622  219.1463

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None          _ALXN             T+S+R  ...  0.0162       0.0194   0.0084
1  None          _ALXN             T+S+R  ...  0.0165       0.0196   0.0070
2  None          _ALXN             T+S+R  ...  0.0165       0.0196   0.0070
3  None    CumSum_ALXN             T+S+R  ...  0.0166       0.0196   0.0070
4  None      Diff_ALXN             T+S+R  ...  0.0165       0.0196   0.0070

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ALXN'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('FORECASTING', {'Signals': ['ALXN'], 'Horizon': 7}))
7 0    124.160004
1    126.930000
2    127.300003
3    125.800003
4    127.459999
5    126.650002
6    129.779999
Name: ALXN, dtype: float64
7 0    125.459999
1    125.459999
2    125.459999
3    125.459999
4    125.459999
5    125.459999
6    125.459999
Name: ALXN_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ALXN ALXN [124.160004, 126.93, 127.300003, 125.800003, 127.459999, 126.650002, 129.779999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ALXN ALXN [125.459999, 125.459999, 125.459999, 125.459999, 125.459999, 125.459999, 125.459999]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ALXN ALXN 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ALXN ALXN 13.021071672439575
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ALXN ALXN Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ALXN ALXN 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ALXN ALXN 0.0139 0.0141 1.043
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ALXN ALXN 1.7800010000000046 2.118982724936902 -0.7917296052670793
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nasdaqbio_ALXN_7'
