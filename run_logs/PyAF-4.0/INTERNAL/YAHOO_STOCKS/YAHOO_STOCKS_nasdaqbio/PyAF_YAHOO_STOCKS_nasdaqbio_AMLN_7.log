BENCH_DATA YAHOO_STOCKS_nasdaqbio
TIME :  Date N= 262 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2012-07-24T00:00:00.000000000' '2012-07-25T00:00:00.000000000'
 '2012-07-26T00:00:00.000000000' '2012-07-27T00:00:00.000000000'
 '2012-07-30T00:00:00.000000000']
SIGNAL :  AMLN N= 262 H= 7 HEAD= [11.81 11.91 11.58 11.15 10.97] TAIL= [30.83  30.795 30.795 30.8   30.81 ]
    AMLN       Date
0  11.81 2011-07-28
1  11.91 2011-07-29
2  11.58 2011-08-01
3  11.15 2011-08-02
4  10.97 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 262 entries, 0 to 261
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AMLN    262 non-null    float64       
 1   Date    262 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AMLN'], 'Transformations': [('AMLN', 'None', '_', 'T+S+R'), ('AMLN', 'None', 'Diff_', 'T+S+R'), ('AMLN', 'None', 'RelDiff_', 'T+S+R'), ('AMLN', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMLN', 'Transformation': '_AMLN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.777, ('TRAINING', {'Signal': 'AMLN', 'Transformation': '_AMLN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMLN', 'Transformation': 'Diff_AMLN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.182, ('TRAINING', {'Signal': 'AMLN', 'Transformation': 'Diff_AMLN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMLN', 'Transformation': 'RelDiff_AMLN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.311, ('TRAINING', {'Signal': 'AMLN', 'Transformation': 'RelDiff_AMLN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AMLN', 'Transformation': 'CumSum_AMLN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.165, ('TRAINING', {'Signal': 'AMLN', 'Transformation': 'CumSum_AMLN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.437, ('SIGNAL_TRAINING', {'Signals': ['AMLN'], 'Transformations': [('AMLN', 'None', '_', 'T+S+R'), ('AMLN', 'None', 'Diff_', 'T+S+R'), ('AMLN', 'None', 'RelDiff_', 'T+S+R'), ('AMLN', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AMLN'], 'Transformations': [('AMLN', [('AMLN', 'None', 'CumSum_', 'T+S+R'), ('AMLN', 'None', 'Diff_', 'T+S+R'), ('AMLN', 'None', 'RelDiff_', 'T+S+R'), ('AMLN', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AMLN', 'Transformations': [('AMLN', 'None', 'CumSum_', 'T+S+R'), ('AMLN', 'None', 'Diff_', 'T+S+R'), ('AMLN', 'None', 'RelDiff_', 'T+S+R'), ('AMLN', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'AMLN', 'Transformations': [('AMLN', 'None', 'CumSum_', 'T+S+R'), ('AMLN', 'None', 'Diff_', 'T+S+R'), ('AMLN', 'None', 'RelDiff_', 'T+S+R'), ('AMLN', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMLN', 'Model': '_AMLN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AMLN', 'Model': '_AMLN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMLN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AMLN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('FINALIZE_TRAINING', {'Signals': ['AMLN'], 'Transformations': [('AMLN', [('AMLN', 'None', 'CumSum_', 'T+S+R'), ('AMLN', 'None', 'Diff_', 'T+S+R'), ('AMLN', 'None', 'RelDiff_', 'T+S+R'), ('AMLN', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2012-05-09T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AMLN' Length=262  Min=8.26 Max=30.83  Mean=17.19971374045803 StdDev=7.562387013484537
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AMLN' Min=0.0 Max=1.0  Mean=0.3960883358643337 StdDev=0.3350636691840736
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AMLN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AMLN_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AMLN_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AMLN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.027 MAPE_Forecast=0.0121 MAPE_Test=0.0006
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0275 SMAPE_Forecast=0.0123 SMAPE_Test=0.0006
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9951 MASE_Forecast=0.9844 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.2087803516339868 CRPS_Forecast=0.47162240896358554 CRPS_Test=0.0060714285714291395
INFO:pyaf.std:MODEL_L1 L1_Fit=0.38058823529411756 L1_Forecast=0.33598039215686326 L1_Test=0.017857142857142856
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7740948224330447 L2_Forecast=0.6057587204910724 L2_Test=0.027189809015248884
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4564252216269822 LnQ_Forecast=0.024486713574755733 LnQ_Test=5.45445008790743e-06
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.2549999999999999 MedAE_Forecast=0.18999999999999773 MedAE_Test=0.010000000000001563
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1572884359769606
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AMLN_Lag1Trend_residue_bestCycle_byMAPE None 0.0008861320336729928 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None          _AMLN             T+S+R  ...  0.0235       0.0120    0.0029
1    None          _AMLN             T+S+R  ...  0.0270       0.0121    0.0006
2    None          _AMLN             T+S+R  ...  0.0270       0.0121    0.0006
3    None    CumSum_AMLN             T+S+R  ...  0.0285       0.0121    0.0006
4    None      Diff_AMLN             T+S+R  ...  0.0270       0.0121    0.0006
..    ...            ...               ...  ...     ...          ...       ...
121  None   RelDiff_AMLN             T+S+R  ...  4.5606      37.9804   86.5231
122  None   RelDiff_AMLN             T+S+R  ...  7.5092      56.0414  103.7793
123  None   RelDiff_AMLN             T+S+R  ...  7.5092      56.0414  103.7793
124  None   RelDiff_AMLN             T+S+R  ...  7.4448      56.6452  105.9301
125  None   RelDiff_AMLN             T+S+R  ...  7.4448      56.6452  105.9301

[126 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None          _AMLN             T+S+R  ...  0.0235       0.0120   0.0029
1  None          _AMLN             T+S+R  ...  0.0270       0.0121   0.0006
2  None          _AMLN             T+S+R  ...  0.0270       0.0121   0.0006
3  None    CumSum_AMLN             T+S+R  ...  0.0285       0.0121   0.0006
4  None      Diff_AMLN             T+S+R  ...  0.0270       0.0121   0.0006

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AMLN'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.123, ('FORECASTING', {'Signals': ['AMLN'], 'Horizon': 7}))
7 0    30.79
1    30.96
2    30.96
3    30.95
4    30.94
5    31.00
6    30.98
Name: AMLN, dtype: float64
7 0    30.81
1    30.81
2    30.81
3    30.81
4    30.81
5    30.81
6    30.81
Name: AMLN_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AMLN AMLN [30.79, 30.96, 30.96, 30.95, 30.94, 31.0, 30.98]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AMLN AMLN [30.809999999999995, 30.809999999999995, 30.809999999999995, 30.809999999999995, 30.809999999999995, 30.809999999999995, 30.809999999999995]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AMLN AMLN 262 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AMLN AMLN 5.842604398727417
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AMLN AMLN Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AMLN AMLN 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AMLN AMLN 0.0044 0.0044 3.0159
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AMLN AMLN 0.13571428571428967 0.14486446867923017 -4.136363618404597
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nasdaqbio_AMLN_7'
