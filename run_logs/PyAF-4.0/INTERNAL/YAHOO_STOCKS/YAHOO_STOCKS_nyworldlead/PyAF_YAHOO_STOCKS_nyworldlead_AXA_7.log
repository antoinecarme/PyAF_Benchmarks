BENCH_DATA YAHOO_STOCKS_nyworldlead
TIME :  Date N= 1230 H= 7 HEAD= ['2011-08-08T00:00:00.000000000' '2011-08-10T00:00:00.000000000'
 '2011-08-11T00:00:00.000000000' '2011-08-16T00:00:00.000000000'
 '2011-08-18T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AXA N= 1230 H= 7 HEAD= [0.04 0.04 0.04 0.07 0.07] TAIL= [0.85 0.82 0.78 0.77 0.77]
    AXA       Date
0  0.04 2011-08-08
1  0.04 2011-08-10
2  0.04 2011-08-11
3  0.07 2011-08-16
4  0.07 2011-08-18
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1230 entries, 0 to 1229
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AXA     1230 non-null   float64       
 1   Date    1230 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 28.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AXA'], 'Transformations': [('AXA', 'None', '_', 'T+S+R'), ('AXA', 'None', 'Diff_', 'T+S+R'), ('AXA', 'None', 'RelDiff_', 'T+S+R'), ('AXA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AXA', 'Transformation': '_AXA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.957, ('TRAINING', {'Signal': 'AXA', 'Transformation': '_AXA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AXA', 'Transformation': 'Diff_AXA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.909, ('TRAINING', {'Signal': 'AXA', 'Transformation': 'Diff_AXA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AXA', 'Transformation': 'RelDiff_AXA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.508, ('TRAINING', {'Signal': 'AXA', 'Transformation': 'RelDiff_AXA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AXA', 'Transformation': 'CumSum_AXA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.129, ('TRAINING', {'Signal': 'AXA', 'Transformation': 'CumSum_AXA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.506, ('SIGNAL_TRAINING', {'Signals': ['AXA'], 'Transformations': [('AXA', 'None', '_', 'T+S+R'), ('AXA', 'None', 'Diff_', 'T+S+R'), ('AXA', 'None', 'RelDiff_', 'T+S+R'), ('AXA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AXA'], 'Transformations': [('AXA', [('AXA', 'None', 'CumSum_', 'T+S+R'), ('AXA', 'None', 'Diff_', 'T+S+R'), ('AXA', 'None', 'RelDiff_', 'T+S+R'), ('AXA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AXA', 'Transformations': [('AXA', 'None', 'CumSum_', 'T+S+R'), ('AXA', 'None', 'Diff_', 'T+S+R'), ('AXA', 'None', 'RelDiff_', 'T+S+R'), ('AXA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'AXA', 'Transformations': [('AXA', 'None', 'CumSum_', 'T+S+R'), ('AXA', 'None', 'Diff_', 'T+S+R'), ('AXA', 'None', 'RelDiff_', 'T+S+R'), ('AXA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AXA', 'Model': '_AXA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AXA', 'Model': '_AXA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AXA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AXA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.229, ('FINALIZE_TRAINING', {'Signals': ['AXA'], 'Transformations': [('AXA', [('AXA', 'None', 'CumSum_', 'T+S+R'), ('AXA', 'None', 'Diff_', 'T+S+R'), ('AXA', 'None', 'RelDiff_', 'T+S+R'), ('AXA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-08-08T00:00:00.000000 TimeMax=2015-07-30T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AXA' Length=1230  Min=0.02 Max=1.19  Mean=0.27552032520325254 StdDev=0.2962653954585918
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AXA' Min=0.0 Max=1.0  Mean=0.21839344034466093 StdDev=0.2532182867167453
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AXA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AXA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AXA_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_AXA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0677 MAPE_Forecast=0.0389 MAPE_Test=0.03
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0626 SMAPE_Forecast=0.0417 SMAPE_Test=0.0301
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9975 MASE_Test=0.9107
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.03565341997632118 CRPS_Forecast=0.0910087587034814 CRPS_Test=0.011428571428571423
INFO:pyaf.std:MODEL_L1 L1_Fit=0.01030674846625767 L1_Forecast=0.02538775510204083 L1_Test=0.024285714285714275
INFO:pyaf.std:MODEL_L2 L2_Fit=0.025645052381627956 L2_Forecast=0.0651904587985646 L2_Test=0.029032002047002233
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=26.50619175839749 LnQ_Forecast=6.219051004954014 LnQ_Test=0.009013377459273551
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.009999999999999981 MedAE_Test=0.030000000000000027
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.017094017094017096
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _AXA_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _AXA  ...  3.890000e-02  3.000000e-02
1    None     CumSum_AXA  ...  3.890000e-02  3.000000e-02
2    None       Diff_AXA  ...  3.890000e-02  3.000000e-02
3    None    RelDiff_AXA  ...  3.890000e-02  3.000000e-02
4    None           _AXA  ...  3.890000e-02  3.000000e-02
..    ...            ...  ...           ...           ...
147  None    RelDiff_AXA  ...  7.556108e+06  2.516772e+06
148  None    RelDiff_AXA  ...  7.556108e+06  2.516772e+06
149  None    RelDiff_AXA  ...  7.556108e+06  2.516772e+06
150  None    RelDiff_AXA  ...  7.556108e+06  2.516772e+06
151  None    RelDiff_AXA  ...  7.556108e+06  2.516772e+06

[152 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _AXA             T+S+R  ...  0.0677       0.0389     0.03
1  None     CumSum_AXA             T+S+R  ...  0.0682       0.0389     0.03
2  None       Diff_AXA             T+S+R  ...  0.0677       0.0389     0.03
3  None    RelDiff_AXA             T+S+R  ...  0.0834       0.0389     0.03
4  None           _AXA             T+S+R  ...  0.0677       0.0389     0.03

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AXA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.164, ('FORECASTING', {'Signals': ['AXA'], 'Horizon': 7}))
7 0    0.80
1    0.78
2    0.78
3    0.76
4    0.80
5    0.80
6    0.82
Name: AXA, dtype: float64
7 0    0.77
1    0.77
2    0.77
3    0.77
4    0.77
5    0.77
6    0.77
Name: AXA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AXA AXA [0.8, 0.78, 0.78, 0.76, 0.8, 0.8, 0.82]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AXA AXA [0.77, 0.77, 0.77, 0.77, 0.77, 0.77, 0.77]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AXA AXA 1230 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AXA AXA 10.01017951965332
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AXA AXA Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AXA AXA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AXA AXA 0.0303 0.0309 1.4571
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AXA AXA 0.024285714285714292 0.0280305955290694 -1.4062498947265691
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nyworldlead_AXA_7'
