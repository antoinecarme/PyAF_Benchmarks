BENCH_DATA YAHOO_STOCKS_nyworldlead
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ADM N= 1251 H= 7 HEAD= [30.809999 30.379999 30.48     28.6      29.639999] TAIL= [43.290001 43.099998 43.48     43.950001 44.25    ]
         ADM       Date
0  30.809999 2011-07-28
1  30.379999 2011-07-29
2  30.480000 2011-08-01
3  28.600000 2011-08-02
4  29.639999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ADM     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ADM'], 'Transformations': [('ADM', 'None', '_', 'T+S+R'), ('ADM', 'None', 'Diff_', 'T+S+R'), ('ADM', 'None', 'RelDiff_', 'T+S+R'), ('ADM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADM', 'Transformation': '_ADM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.748, ('TRAINING', {'Signal': 'ADM', 'Transformation': '_ADM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADM', 'Transformation': 'Diff_ADM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.792, ('TRAINING', {'Signal': 'ADM', 'Transformation': 'Diff_ADM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADM', 'Transformation': 'RelDiff_ADM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.139, ('TRAINING', {'Signal': 'ADM', 'Transformation': 'RelDiff_ADM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ADM', 'Transformation': 'CumSum_ADM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.779, ('TRAINING', {'Signal': 'ADM', 'Transformation': 'CumSum_ADM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.459, ('SIGNAL_TRAINING', {'Signals': ['ADM'], 'Transformations': [('ADM', 'None', '_', 'T+S+R'), ('ADM', 'None', 'Diff_', 'T+S+R'), ('ADM', 'None', 'RelDiff_', 'T+S+R'), ('ADM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ADM'], 'Transformations': [('ADM', [('ADM', 'None', 'CumSum_', 'T+S+R'), ('ADM', 'None', 'Diff_', 'T+S+R'), ('ADM', 'None', 'RelDiff_', 'T+S+R'), ('ADM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ADM', 'Transformations': [('ADM', 'None', 'CumSum_', 'T+S+R'), ('ADM', 'None', 'Diff_', 'T+S+R'), ('ADM', 'None', 'RelDiff_', 'T+S+R'), ('ADM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'ADM', 'Transformations': [('ADM', 'None', 'CumSum_', 'T+S+R'), ('ADM', 'None', 'Diff_', 'T+S+R'), ('ADM', 'None', 'RelDiff_', 'T+S+R'), ('ADM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ADM', 'Model': '_ADM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ADM', 'Model': '_ADM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ADM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ADM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['ADM'], 'Transformations': [('ADM', [('ADM', 'None', 'CumSum_', 'T+S+R'), ('ADM', 'None', 'Diff_', 'T+S+R'), ('ADM', 'None', 'RelDiff_', 'T+S+R'), ('ADM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ADM' Length=1251  Min=24.16 Max=53.709999  Mean=38.00980815267784 StdDev=8.103091326785721
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ADM' Min=0.0 Max=1.0  Mean=0.46869064708522906 StdDev=0.2742162978342476
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ADM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ADM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ADM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ADM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0108 MAPE_Forecast=0.0142 MAPE_Test=0.0103
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0108 SMAPE_Forecast=0.0142 SMAPE_Test=0.0104
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9981 MASE_Test=1.5084
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.602742995419201 CRPS_Forecast=1.323535877359603 CRPS_Test=0.19428592857142846
INFO:pyaf.std:MODEL_L1 L1_Fit=0.3899396291457286 L1_Forecast=0.5535743975903615 L1_Test=0.4500009999999993
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5362511015952879 L2_Forecast=0.7368548426923941 L2_Test=0.592850978627488
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.224028166777483 LnQ_Forecast=0.09092351849762927 LnQ_Test=0.0013317562977350564
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.2899989999999981 MedAE_Forecast=0.44000299999999726 MedAE_Test=0.3200000000000003
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.22504227495912946
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ADM_Lag1Trend_residue_bestCycle_byMAPE None 0.0010151946198035389 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0    None           _ADM             T+S+R  ...   0.0107       0.0141     0.0100
1    None           _ADM             T+S+R  ...   0.0105       0.0141     0.0093
2    None           _ADM             T+S+R  ...   0.0108       0.0142     0.0103
3    None           _ADM             T+S+R  ...   0.0108       0.0142     0.0103
4    None     CumSum_ADM             T+S+R  ...   0.0110       0.0142     0.0103
..    ...            ...               ...  ...      ...          ...        ...
219  None    RelDiff_ADM             T+S+R  ...  19.8869     636.6640  1187.5907
220  None    RelDiff_ADM             T+S+R  ...  19.6232     768.2431  1500.4983
221  None    RelDiff_ADM             T+S+R  ...  20.5132     791.4802  1800.4286
222  None    RelDiff_ADM             T+S+R  ...  48.1155    1495.1915  3152.9768
223  None    RelDiff_ADM             T+S+R  ...  48.1155    1495.1915  3152.9768

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _ADM             T+S+R  ...  0.0107       0.0141   0.0100
1  None           _ADM             T+S+R  ...  0.0105       0.0141   0.0093
2  None           _ADM             T+S+R  ...  0.0108       0.0142   0.0103
3  None           _ADM             T+S+R  ...  0.0108       0.0142   0.0103
4  None     CumSum_ADM             T+S+R  ...  0.0110       0.0142   0.0103

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ADM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['ADM'], 'Horizon': 7}))
7 0    43.480000
1    43.389999
2    43.389999
3    43.720001
4    43.599998
5    43.869999
6    43.900002
Name: ADM, dtype: float64
7 0    44.25
1    44.25
2    44.25
3    44.25
4    44.25
5    44.25
6    44.25
Name: ADM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ADM ADM [43.48, 43.389999, 43.389999, 43.720001, 43.599998, 43.869999, 43.900002]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ADM ADM [44.25, 44.25, 44.25, 44.25, 44.25, 44.25, 44.25]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ADM ADM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ADM ADM 12.94444227218628
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ADM ADM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ADM ADM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ADM ADM 0.0144 0.0143 4.4897
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ADM ADM 0.6285717142857133 0.6592641287301201 -9.995812600693018
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nyworldlead_ADM_7'
