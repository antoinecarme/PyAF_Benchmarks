BENCH_DATA YAHOO_STOCKS_nyworldlead
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MTU N= 1251 H= 7 HEAD= [5.08 5.07 5.19 5.08 5.07] TAIL= [4.68 4.81 4.79 4.93 4.97]
    MTU       Date
0  5.08 2011-07-28
1  5.07 2011-07-29
2  5.19 2011-08-01
3  5.08 2011-08-02
4  5.07 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MTU     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MTU'], 'Transformations': [('MTU', 'None', '_', 'T+S+R'), ('MTU', 'None', 'Diff_', 'T+S+R'), ('MTU', 'None', 'RelDiff_', 'T+S+R'), ('MTU', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MTU', 'Transformation': '_MTU'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.237, ('TRAINING', {'Signal': 'MTU', 'Transformation': '_MTU'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MTU', 'Transformation': 'Diff_MTU'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.858, ('TRAINING', {'Signal': 'MTU', 'Transformation': 'Diff_MTU'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MTU', 'Transformation': 'RelDiff_MTU'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.17, ('TRAINING', {'Signal': 'MTU', 'Transformation': 'RelDiff_MTU'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MTU', 'Transformation': 'CumSum_MTU'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.755, ('TRAINING', {'Signal': 'MTU', 'Transformation': 'CumSum_MTU'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.021, ('SIGNAL_TRAINING', {'Signals': ['MTU'], 'Transformations': [('MTU', 'None', '_', 'T+S+R'), ('MTU', 'None', 'Diff_', 'T+S+R'), ('MTU', 'None', 'RelDiff_', 'T+S+R'), ('MTU', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MTU'], 'Transformations': [('MTU', [('MTU', 'None', 'CumSum_', 'T+S+R'), ('MTU', 'None', 'Diff_', 'T+S+R'), ('MTU', 'None', 'RelDiff_', 'T+S+R'), ('MTU', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MTU', 'Transformations': [('MTU', 'None', 'CumSum_', 'T+S+R'), ('MTU', 'None', 'Diff_', 'T+S+R'), ('MTU', 'None', 'RelDiff_', 'T+S+R'), ('MTU', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MTU', 'Transformations': [('MTU', 'None', 'CumSum_', 'T+S+R'), ('MTU', 'None', 'Diff_', 'T+S+R'), ('MTU', 'None', 'RelDiff_', 'T+S+R'), ('MTU', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MTU', 'Model': '_MTU_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MTU', 'Model': '_MTU_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MTU'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MTU'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['MTU'], 'Transformations': [('MTU', [('MTU', 'None', 'CumSum_', 'T+S+R'), ('MTU', 'None', 'Diff_', 'T+S+R'), ('MTU', 'None', 'RelDiff_', 'T+S+R'), ('MTU', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MTU' Length=1251  Min=3.9 Max=7.6  Mean=5.573812949640294 StdDev=0.8971618417475984
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MTU' Min=0.0 Max=1.0  Mean=0.45238187828115833 StdDev=0.24247617344529673
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MTU_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MTU_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MTU_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MTU_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.013 MAPE_Forecast=0.017 MAPE_Test=0.0222
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.013 SMAPE_Forecast=0.017 SMAPE_Test=0.0225
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.999 MASE_Test=0.9339
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.2626339063739751 CRPS_Forecast=0.27369682778171506 CRPS_Test=0.1128571428571428
INFO:pyaf.std:MODEL_L1 L1_Fit=0.07196984924623116 L1_Forecast=0.09248995983935747 L1_Test=0.10428571428571409
INFO:pyaf.std:MODEL_L2 L2_Fit=0.09791648579761619 L2_Forecast=0.1215380020560446 L2_Test=0.12518557653111845
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3001837172277326 LnQ_Forecast=0.12823306101468016 LnQ_Test=0.005147395237605746
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.05999999999999961 MedAE_Forecast=0.07000000000000028 MedAE_Test=0.10000000000000053
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.318918918918919
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MTU_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0    None           _MTU             T+S+R  ...   0.0130       0.0170     0.0222
1    None           _MTU             T+S+R  ...   0.0130       0.0170     0.0222
2    None     CumSum_MTU             T+S+R  ...   0.0132       0.0170     0.0222
3    None     CumSum_MTU             T+S+R  ...   0.0132       0.0170     0.0222
4    None       Diff_MTU             T+S+R  ...   0.0130       0.0170     0.0222
..    ...            ...               ...  ...      ...          ...        ...
211  None    RelDiff_MTU             T+S+R  ...  31.9903     154.8723    88.2381
212  None    RelDiff_MTU             T+S+R  ...  25.6640     576.2218  1344.1568
213  None    RelDiff_MTU             T+S+R  ...  25.6640     576.2218  1344.1568
214  None    RelDiff_MTU             T+S+R  ...  59.1634     988.1203  4398.3249
215  None    RelDiff_MTU             T+S+R  ...  59.1634     988.1203  4398.3249

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _MTU             T+S+R  ...  0.0130        0.017   0.0222
1  None           _MTU             T+S+R  ...  0.0130        0.017   0.0222
2  None     CumSum_MTU             T+S+R  ...  0.0132        0.017   0.0222
3  None     CumSum_MTU             T+S+R  ...  0.0132        0.017   0.0222
4  None       Diff_MTU             T+S+R  ...  0.0130        0.017   0.0222

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MTU'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['MTU'], 'Horizon': 7}))
7 0    4.88
1    4.83
2    4.80
3    4.82
4    4.78
5    4.71
6    4.72
Name: MTU, dtype: float64
7 0    4.97
1    4.97
2    4.97
3    4.97
4    4.97
5    4.97
6    4.97
Name: MTU_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MTU MTU [4.88, 4.83, 4.8, 4.82, 4.78, 4.71, 4.72]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MTU MTU [4.97, 4.97, 4.97, 4.97, 4.97, 4.97, 4.97]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MTU MTU 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MTU MTU 12.504591226577759
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MTU MTU Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MTU MTU 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MTU MTU 0.0374 0.0367 4.8701
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MTU MTU 0.17857142857142833 0.18719737482896778 -10.106726987226933
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nyworldlead_MTU_7'
