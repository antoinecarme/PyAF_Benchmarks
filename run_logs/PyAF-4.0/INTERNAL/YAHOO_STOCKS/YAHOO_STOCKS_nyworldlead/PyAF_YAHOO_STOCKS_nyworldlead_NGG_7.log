BENCH_DATA YAHOO_STOCKS_nyworldlead
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  NGG N= 1251 H= 7 HEAD= [49.400002 49.189999 48.540001 48.970001 50.330002] TAIL= [72.919998 73.629997 73.220001 72.949997 73.25    ]
         NGG       Date
0  49.400002 2011-07-28
1  49.189999 2011-07-29
2  48.540001 2011-08-01
3  48.970001 2011-08-02
4  50.330002 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NGG     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NGG'], 'Transformations': [('NGG', 'None', '_', 'T+S+R'), ('NGG', 'None', 'Diff_', 'T+S+R'), ('NGG', 'None', 'RelDiff_', 'T+S+R'), ('NGG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NGG', 'Transformation': '_NGG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.374, ('TRAINING', {'Signal': 'NGG', 'Transformation': '_NGG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NGG', 'Transformation': 'Diff_NGG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.799, ('TRAINING', {'Signal': 'NGG', 'Transformation': 'Diff_NGG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NGG', 'Transformation': 'RelDiff_NGG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.138, ('TRAINING', {'Signal': 'NGG', 'Transformation': 'RelDiff_NGG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NGG', 'Transformation': 'CumSum_NGG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.733, ('TRAINING', {'Signal': 'NGG', 'Transformation': 'CumSum_NGG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.046, ('SIGNAL_TRAINING', {'Signals': ['NGG'], 'Transformations': [('NGG', 'None', '_', 'T+S+R'), ('NGG', 'None', 'Diff_', 'T+S+R'), ('NGG', 'None', 'RelDiff_', 'T+S+R'), ('NGG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NGG'], 'Transformations': [('NGG', [('NGG', 'None', 'CumSum_', 'T+S+R'), ('NGG', 'None', 'Diff_', 'T+S+R'), ('NGG', 'None', 'RelDiff_', 'T+S+R'), ('NGG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NGG', 'Transformations': [('NGG', 'None', 'CumSum_', 'T+S+R'), ('NGG', 'None', 'Diff_', 'T+S+R'), ('NGG', 'None', 'RelDiff_', 'T+S+R'), ('NGG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'NGG', 'Transformations': [('NGG', 'None', 'CumSum_', 'T+S+R'), ('NGG', 'None', 'Diff_', 'T+S+R'), ('NGG', 'None', 'RelDiff_', 'T+S+R'), ('NGG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NGG', 'Model': '_NGG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NGG', 'Model': '_NGG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NGG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NGG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.217, ('FINALIZE_TRAINING', {'Signals': ['NGG'], 'Transformations': [('NGG', [('NGG', 'None', 'CumSum_', 'T+S+R'), ('NGG', 'None', 'Diff_', 'T+S+R'), ('NGG', 'None', 'RelDiff_', 'T+S+R'), ('NGG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NGG' Length=1251  Min=46.040001 Max=77.129997  Mean=62.593261371702575 StdDev=8.391735814848307
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NGG' Min=0.0 Max=1.0  Mean=0.5324304439184432 StdDev=0.2699175585242367
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NGG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NGG_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NGG_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_NGG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0078 MAPE_Forecast=0.0087 MAPE_Test=0.0072
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0078 SMAPE_Forecast=0.0087 SMAPE_Test=0.0072
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9996 MASE_Test=1.1216
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.5420144898042847 CRPS_Forecast=0.6562770349110324 CRPS_Test=0.1800002857142847
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4694874301507537 L1_Forecast=0.6056227349397587 L1_Test=0.5271442857142858
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6403416918783229 L2_Forecast=0.8608153581412653 L2_Test=0.5655478734410672
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.11523450903266166 LnQ_Forecast=0.037961821723184096 LnQ_Test=0.00041964242884842034
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.3500059999999934 MedAE_Forecast=0.4400019999999927 MedAE_Test=0.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.10807338154691314
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _NGG_Lag1Trend_residue_bestCycle_byMAPE None 0.0009649084547964648 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _NGG  ...  8.700000e-03  7.200000e-03
1    None           _NGG  ...  8.700000e-03  7.200000e-03
2    None     CumSum_NGG  ...  8.700000e-03  7.200000e-03
3    None       Diff_NGG  ...  8.700000e-03  7.200000e-03
4    None    RelDiff_NGG  ...  8.700000e-03  7.200000e-03
..    ...            ...  ...           ...           ...
219  None    RelDiff_NGG  ...  1.125333e+06  4.588700e+06
220  None    RelDiff_NGG  ...  1.361211e+06  4.588700e+06
221  None    RelDiff_NGG  ...  1.628224e+06  4.588700e+06
222  None    RelDiff_NGG  ...  2.280849e+06  4.588700e+06
223  None    RelDiff_NGG  ...  2.280849e+06  4.588700e+06

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _NGG             T+S+R  ...  0.0078       0.0087   0.0072
1  None           _NGG             T+S+R  ...  0.0078       0.0087   0.0072
2  None     CumSum_NGG             T+S+R  ...  0.0079       0.0087   0.0072
3  None       Diff_NGG             T+S+R  ...  0.0078       0.0087   0.0072
4  None    RelDiff_NGG             T+S+R  ...  0.0085       0.0087   0.0072

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NGG'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['NGG'], 'Horizon': 7}))
7 0    72.570000
1    73.019997
2    73.160004
3    72.959999
4    73.739998
5    73.620003
6    73.050003
Name: NGG, dtype: float64
7 0    73.25
1    73.25
2    73.25
3    73.25
4    73.25
5    73.25
6    73.25
Name: NGG_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NGG NGG [72.57, 73.019997, 73.160004, 72.959999, 73.739998, 73.620003, 73.050003]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NGG NGG [73.25, 73.25, 73.25, 73.25, 73.25, 73.25, 73.25]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NGG NGG 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NGG NGG 12.509398460388184
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NGG NGG Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NGG NGG 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NGG NGG 0.0046 0.0046 0.8913
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NGG NGG 0.3357139999999999 0.3825665768479308 -0.05858567900016265
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nyworldlead_NGG_7'
