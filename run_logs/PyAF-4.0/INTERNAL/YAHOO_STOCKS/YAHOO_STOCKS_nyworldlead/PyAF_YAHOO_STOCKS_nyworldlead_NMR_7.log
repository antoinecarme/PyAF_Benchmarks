BENCH_DATA YAHOO_STOCKS_nyworldlead
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  NMR N= 1251 H= 7 HEAD= [4.89 4.85 4.82 4.8  4.79] TAIL= [3.8  3.8  3.82 3.96 4.02]
    NMR       Date
0  4.89 2011-07-28
1  4.85 2011-07-29
2  4.82 2011-08-01
3  4.80 2011-08-02
4  4.79 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NMR     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NMR'], 'Transformations': [('NMR', 'None', '_', 'T+S+R'), ('NMR', 'None', 'Diff_', 'T+S+R'), ('NMR', 'None', 'RelDiff_', 'T+S+R'), ('NMR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMR', 'Transformation': '_NMR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.435, ('TRAINING', {'Signal': 'NMR', 'Transformation': '_NMR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMR', 'Transformation': 'Diff_NMR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.893, ('TRAINING', {'Signal': 'NMR', 'Transformation': 'Diff_NMR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMR', 'Transformation': 'RelDiff_NMR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.17, ('TRAINING', {'Signal': 'NMR', 'Transformation': 'RelDiff_NMR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NMR', 'Transformation': 'CumSum_NMR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.811, ('TRAINING', {'Signal': 'NMR', 'Transformation': 'CumSum_NMR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.311, ('SIGNAL_TRAINING', {'Signals': ['NMR'], 'Transformations': [('NMR', 'None', '_', 'T+S+R'), ('NMR', 'None', 'Diff_', 'T+S+R'), ('NMR', 'None', 'RelDiff_', 'T+S+R'), ('NMR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NMR'], 'Transformations': [('NMR', [('NMR', 'None', 'CumSum_', 'T+S+R'), ('NMR', 'None', 'Diff_', 'T+S+R'), ('NMR', 'None', 'RelDiff_', 'T+S+R'), ('NMR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NMR', 'Transformations': [('NMR', 'None', 'CumSum_', 'T+S+R'), ('NMR', 'None', 'Diff_', 'T+S+R'), ('NMR', 'None', 'RelDiff_', 'T+S+R'), ('NMR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'NMR', 'Transformations': [('NMR', 'None', 'CumSum_', 'T+S+R'), ('NMR', 'None', 'Diff_', 'T+S+R'), ('NMR', 'None', 'RelDiff_', 'T+S+R'), ('NMR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NMR', 'Model': '_NMR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NMR', 'Model': '_NMR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NMR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NMR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.228, ('FINALIZE_TRAINING', {'Signals': ['NMR'], 'Transformations': [('NMR', [('NMR', 'None', 'CumSum_', 'T+S+R'), ('NMR', 'None', 'Diff_', 'T+S+R'), ('NMR', 'None', 'RelDiff_', 'T+S+R'), ('NMR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NMR' Length=1251  Min=2.93 Max=9.56  Mean=5.5773381294964 StdDev=1.5101888003183241
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NMR' Min=0.0 Max=1.0  Mean=0.3992968521110713 StdDev=0.22778111618677538
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NMR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NMR_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NMR_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_NMR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0163 MAPE_Forecast=0.0173 MAPE_Test=0.0218
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0164 SMAPE_Forecast=0.0173 SMAPE_Test=0.0223
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0074 MASE_Test=0.938
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.47739702459666755 CRPS_Forecast=0.2983865627214741 CRPS_Test=0.0671428571428571
INFO:pyaf.std:MODEL_L1 L1_Fit=0.0897286432160804 L1_Forecast=0.08855421686746986 L1_Test=0.08285714285714281
INFO:pyaf.std:MODEL_L2 L2_Fit=0.12694635435656318 L2_Forecast=0.11987108202239972 L2_Test=0.10862780491200208
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5050717250795993 LnQ_Forecast=0.14377948545538585 LnQ_Test=0.0060688816080705045
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.060000000000001386 MedAE_Forecast=0.06999999999999984 MedAE_Test=0.05999999999999961
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2956259426847661
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _NMR_Lag1Trend_residue_bestCycle_byMAPE None -0.0015082956259425684 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None           _NMR             T+S+R  ...    0.0162       0.0172      0.0213
1    None           _NMR             T+S+R  ...    0.0162       0.0172      0.0213
2    None           _NMR             T+S+R  ...    0.0163       0.0173      0.0218
3    None           _NMR             T+S+R  ...    0.0163       0.0173      0.0218
4    None     CumSum_NMR             T+S+R  ...    0.0167       0.0173      0.0218
..    ...            ...               ...  ...       ...          ...         ...
219  None    RelDiff_NMR             T+S+R  ...  182.8519    2955.6099  13334.9867
220  None    RelDiff_NMR             T+S+R  ...  105.4813    3564.4223  10227.1408
221  None    RelDiff_NMR             T+S+R  ...  105.4813    3564.4223  10227.1408
222  None    RelDiff_NMR             T+S+R  ...   19.0274    4896.9195  19253.0377
223  None    RelDiff_NMR             T+S+R  ...   27.2277    8243.0313  33435.3005

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _NMR             T+S+R  ...  0.0162       0.0172   0.0213
1  None           _NMR             T+S+R  ...  0.0162       0.0172   0.0213
2  None           _NMR             T+S+R  ...  0.0163       0.0173   0.0218
3  None           _NMR             T+S+R  ...  0.0163       0.0173   0.0218
4  None     CumSum_NMR             T+S+R  ...  0.0167       0.0173   0.0218

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NMR'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.167, ('FORECASTING', {'Signals': ['NMR'], 'Horizon': 7}))
7 0    3.99
1    3.95
2    4.02
3    4.00
4    3.99
5    3.97
6    4.00
Name: NMR, dtype: float64
7 0    4.02
1    4.02
2    4.02
3    4.02
4    4.02
5    4.02
6    4.02
Name: NMR_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NMR NMR [3.99, 3.95, 4.02, 4.0, 3.99, 3.97, 4.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NMR NMR [4.02, 4.02, 4.02, 4.02, 4.02, 4.02, 4.02]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NMR NMR 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NMR NMR 12.824508666992188
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NMR NMR Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NMR NMR 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NMR NMR 0.0079 0.0079 0.9925
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NMR NMR 0.03142857142857095 0.037796447300922235 -2.240740635716705
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nyworldlead_NMR_7'
