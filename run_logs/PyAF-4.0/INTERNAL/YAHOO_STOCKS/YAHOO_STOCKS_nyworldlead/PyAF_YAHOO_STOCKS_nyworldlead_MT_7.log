BENCH_DATA YAHOO_STOCKS_nyworldlead
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MT N= 1251 H= 7 HEAD= [31.16     31.15     30.389999 28.629999 28.290001] TAIL= [5.62 5.6  5.71 5.64 5.78]
          MT       Date
0  31.160000 2011-07-28
1  31.150000 2011-07-29
2  30.389999 2011-08-01
3  28.629999 2011-08-02
4  28.290001 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MT      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MT'], 'Transformations': [('MT', 'None', '_', 'T+S+R'), ('MT', 'None', 'Diff_', 'T+S+R'), ('MT', 'None', 'RelDiff_', 'T+S+R'), ('MT', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT', 'Transformation': '_MT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.082, ('TRAINING', {'Signal': 'MT', 'Transformation': '_MT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT', 'Transformation': 'Diff_MT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.783, ('TRAINING', {'Signal': 'MT', 'Transformation': 'Diff_MT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT', 'Transformation': 'RelDiff_MT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.107, ('TRAINING', {'Signal': 'MT', 'Transformation': 'RelDiff_MT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MT', 'Transformation': 'CumSum_MT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.423, ('TRAINING', {'Signal': 'MT', 'Transformation': 'CumSum_MT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.398, ('SIGNAL_TRAINING', {'Signals': ['MT'], 'Transformations': [('MT', 'None', '_', 'T+S+R'), ('MT', 'None', 'Diff_', 'T+S+R'), ('MT', 'None', 'RelDiff_', 'T+S+R'), ('MT', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MT'], 'Transformations': [('MT', [('MT', 'None', 'CumSum_', 'T+S+R'), ('MT', 'None', 'Diff_', 'T+S+R'), ('MT', 'None', 'RelDiff_', 'T+S+R'), ('MT', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MT', 'Transformations': [('MT', 'None', 'CumSum_', 'T+S+R'), ('MT', 'None', 'Diff_', 'T+S+R'), ('MT', 'None', 'RelDiff_', 'T+S+R'), ('MT', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MT', 'Transformations': [('MT', 'None', 'CumSum_', 'T+S+R'), ('MT', 'None', 'Diff_', 'T+S+R'), ('MT', 'None', 'RelDiff_', 'T+S+R'), ('MT', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MT', 'Model': '_MT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MT', 'Model': '_MT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.182, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.217, ('FINALIZE_TRAINING', {'Signals': ['MT'], 'Transformations': [('MT', [('MT', 'None', 'CumSum_', 'T+S+R'), ('MT', 'None', 'Diff_', 'T+S+R'), ('MT', 'None', 'RelDiff_', 'T+S+R'), ('MT', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MT' Length=1251  Min=3.02 Max=31.16  Mean=13.11283774740208 StdDev=4.890855805536203
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MT' Min=0.0 Max=1.0  Mean=0.35866516515288105 StdDev=0.17380439962815225
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MT_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MT_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0191 MAPE_Forecast=0.0346 MAPE_Test=0.0344
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0191 SMAPE_Forecast=0.0345 SMAPE_Test=0.0353
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9997 MASE_Test=1.1487
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.9346177533509654 CRPS_Forecast=0.4393021724545239 CRPS_Test=0.14785714285714288
INFO:pyaf.std:MODEL_L1 L1_Fit=0.29792964623115586 L1_Forecast=0.1740562248995984 L1_Test=0.18571428571428594
INFO:pyaf.std:MODEL_L2 L2_Fit=0.4495241252214977 L2_Forecast=0.22308893898800805 L2_Test=0.22258224804071233
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6916471840825353 LnQ_Forecast=0.5089595886570109 LnQ_Test=0.012941040590452011
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.20999899999999982 MedAE_Forecast=0.15000000000000036 MedAE_Test=0.14000000000000057
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 1.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MT_Lag1Trend_residue_bestCycle_byMAPE None -0.0003553660270078085 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None            _MT             T+S+R  ...  0.0189       0.0345   0.0365
1    None            _MT             T+S+R  ...  0.0189       0.0345   0.0365
2    None            _MT             T+S+R  ...  0.0191       0.0346   0.0344
3    None            _MT             T+S+R  ...  0.0191       0.0346   0.0344
4    None      CumSum_MT             T+S+R  ...  0.0200       0.0346   0.0344
..    ...            ...               ...  ...     ...          ...      ...
203  None      CumSum_MT             T+S+R  ...  1.7726       5.4767   5.0533
204  None      CumSum_MT             T+S+R  ...  1.8627       5.4952   8.1321
205  None      CumSum_MT             T+S+R  ...  1.1741       5.6001   1.7786
206  None      CumSum_MT             T+S+R  ...  0.9511       6.6599   0.7637
207  None      CumSum_MT             T+S+R  ...  4.3981      10.8879  10.7330

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _MT             T+S+R  ...  0.0189       0.0345   0.0365
1  None            _MT             T+S+R  ...  0.0189       0.0345   0.0365
2  None            _MT             T+S+R  ...  0.0191       0.0346   0.0344
3  None            _MT             T+S+R  ...  0.0191       0.0346   0.0344
4  None      CumSum_MT             T+S+R  ...  0.0200       0.0346   0.0344

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MT'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['MT'], 'Horizon': 7}))
7 0    5.45
1    5.43
2    5.54
3    5.71
4    5.73
5    6.08
6    6.02
Name: MT, dtype: float64
7 0    5.78
1    5.78
2    5.78
3    5.78
4    5.78
5    5.78
6    5.78
Name: MT_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MT MT [5.45, 5.43, 5.54, 5.71, 5.73, 6.08, 6.02]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MT MT [5.78, 5.78, 5.78, 5.78, 5.78, 5.78, 5.78]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MT MT 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MT MT 11.865654706954956
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MT MT Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MT MT 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MT MT 0.0398 0.0394 1.8552
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MT MT 0.22571428571428573 0.25185029566901734 -0.08747375760628806
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nyworldlead_MT_7'
