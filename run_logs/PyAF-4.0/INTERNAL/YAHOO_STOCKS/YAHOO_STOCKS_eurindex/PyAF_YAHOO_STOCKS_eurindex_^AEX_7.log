BENCH_DATA YAHOO_STOCKS_eurindex
TIME :  Date N= 1272 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ^AEX N= 1272 H= 7 HEAD= [332.559998 329.220001 324.589996 320.       310.690002] TAIL= [445.440002 444.450012 448.190002 447.51001  448.320007]
         ^AEX       Date
0  332.559998 2011-07-28
1  329.220001 2011-07-29
2  324.589996 2011-08-01
3  320.000000 2011-08-02
4  310.690002 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1272 entries, 0 to 1271
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ^AEX    1272 non-null   float64       
 1   Date    1272 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['^AEX'], 'Transformations': [('^AEX', 'None', '_', 'T+S+R'), ('^AEX', 'None', 'Diff_', 'T+S+R'), ('^AEX', 'None', 'RelDiff_', 'T+S+R'), ('^AEX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^AEX', 'Transformation': '_^AEX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.576, ('TRAINING', {'Signal': '^AEX', 'Transformation': '_^AEX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^AEX', 'Transformation': 'Diff_^AEX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.863, ('TRAINING', {'Signal': '^AEX', 'Transformation': 'Diff_^AEX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^AEX', 'Transformation': 'RelDiff_^AEX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.238, ('TRAINING', {'Signal': '^AEX', 'Transformation': 'RelDiff_^AEX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^AEX', 'Transformation': 'CumSum_^AEX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.902, ('TRAINING', {'Signal': '^AEX', 'Transformation': 'CumSum_^AEX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.581, ('SIGNAL_TRAINING', {'Signals': ['^AEX'], 'Transformations': [('^AEX', 'None', '_', 'T+S+R'), ('^AEX', 'None', 'Diff_', 'T+S+R'), ('^AEX', 'None', 'RelDiff_', 'T+S+R'), ('^AEX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['^AEX'], 'Transformations': [('^AEX', [('^AEX', 'None', 'CumSum_', 'T+S+R'), ('^AEX', 'None', 'Diff_', 'T+S+R'), ('^AEX', 'None', 'RelDiff_', 'T+S+R'), ('^AEX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '^AEX', 'Transformations': [('^AEX', 'None', 'CumSum_', 'T+S+R'), ('^AEX', 'None', 'Diff_', 'T+S+R'), ('^AEX', 'None', 'RelDiff_', 'T+S+R'), ('^AEX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '^AEX', 'Transformations': [('^AEX', 'None', 'CumSum_', 'T+S+R'), ('^AEX', 'None', 'Diff_', 'T+S+R'), ('^AEX', 'None', 'RelDiff_', 'T+S+R'), ('^AEX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^AEX', 'Model': '_^AEX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^AEX', 'Model': '_^AEX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^AEX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^AEX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.222, ('FINALIZE_TRAINING', {'Signals': ['^AEX'], 'Transformations': [('^AEX', [('^AEX', 'None', 'CumSum_', 'T+S+R'), ('^AEX', 'None', 'Diff_', 'T+S+R'), ('^AEX', 'None', 'RelDiff_', 'T+S+R'), ('^AEX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='^AEX' Length=1272  Min=263.440002 Max=509.23999  Mean=385.75974817531414 StdDev=60.272759003424866
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_^AEX' Min=0.0 Max=1.0  Mean=0.49763934966227275 StdDev=0.24521058562226153
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_^AEX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_^AEX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_^AEX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_^AEX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.008 MAPE_Forecast=0.0113 MAPE_Test=0.0082
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.008 SMAPE_Forecast=0.0113 SMAPE_Test=0.0083
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9987 MASE_Test=1.2136
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=17.19997897473164 CRPS_Forecast=6.39374593428877 CRPS_Test=2.9485734285714256
INFO:pyaf.std:MODEL_L1 L1_Fit=2.889091169960473 L1_Forecast=4.920197166007905 L1_Test=3.618569142857122
INFO:pyaf.std:MODEL_L2 L2_Fit=3.896277608990986 L2_Forecast=6.5575101251624 L2_Test=4.506446045712129
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1219992726788344 LnQ_Forecast=0.0578962056945478 LnQ_Test=0.0007469279417429131
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.199996499999969 MedAE_Forecast=3.8800050000000397 MedAE_Test=3.7399899999999775
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2812042285372285
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _^AEX_Lag1Trend_residue_bestCycle_byMAPE None 0.0010170850781326124 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE     TestMAPE
0    None          _^AEX             T+S+R  ...    0.0079       0.0112       0.0079
1    None          _^AEX             T+S+R  ...    0.0079       0.0112       0.0079
2    None          _^AEX             T+S+R  ...    0.0079       0.0112       0.0080
3    None          _^AEX             T+S+R  ...    0.0079       0.0112       0.0079
4    None          _^AEX             T+S+R  ...    0.0080       0.0113       0.0082
..    ...            ...               ...  ...       ...          ...          ...
219  None   RelDiff_^AEX             T+S+R  ...  158.4388    3401.2780   25768.8783
220  None   RelDiff_^AEX             T+S+R  ...  183.6802    3978.6140   30393.9604
221  None   RelDiff_^AEX             T+S+R  ...  193.1137    4396.2649   33935.8271
222  None   RelDiff_^AEX             T+S+R  ...  332.4095   12971.1492  104108.1591
223  None   RelDiff_^AEX             T+S+R  ...  332.4095   12971.1492  104108.1591

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None          _^AEX             T+S+R  ...  0.0079       0.0112   0.0079
1  None          _^AEX             T+S+R  ...  0.0079       0.0112   0.0079
2  None          _^AEX             T+S+R  ...  0.0079       0.0112   0.0080
3  None          _^AEX             T+S+R  ...  0.0079       0.0112   0.0079
4  None          _^AEX             T+S+R  ...  0.0080       0.0113   0.0082

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['^AEX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['^AEX'], 'Horizon': 7}))
7 0    447.850006
1    452.179993
2    451.970001
3    453.350006
4    452.839996
5    454.059998
6    452.980011
Name: ^AEX, dtype: float64
7 0    448.320007
1    448.320007
2    448.320007
3    448.320007
4    448.320007
5    448.320007
6    448.320007
Name: ^AEX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_^AEX ^AEX [447.850006, 452.179993, 451.970001, 453.350006, 452.839996, 454.059998, 452.980011]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_^AEX ^AEX [448.320007, 448.320007, 448.320007, 448.320007, 448.320007, 448.320007, 448.320007]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_^AEX ^AEX 1272 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_^AEX ^AEX 13.074148416519165
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_^AEX ^AEX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_^AEX ^AEX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_^AEX ^AEX 0.0088 0.0089 2.7423
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_^AEX ^AEX 3.989994857142879 4.29014108193681 -4.200974336472294
BENCHMARK_SUCCESS 'YAHOO_STOCKS_eurindex_^AEX_7'
