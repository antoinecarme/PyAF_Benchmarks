BENCH_DATA YAHOO_STOCKS_eurindex
TIME :  Date N= 1265 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ^GDAXI N= 1265 H= 7 HEAD= [7190.060059 7158.77002  6953.97998  6796.75     6640.589844] TAIL= [ 9964.070312  9930.709961 10068.299805 10066.900391 10063.129883]
        ^GDAXI       Date
0  7190.060059 2011-07-28
1  7158.770020 2011-07-29
2  6953.979980 2011-08-01
3  6796.750000 2011-08-02
4  6640.589844 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1265 entries, 0 to 1264
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ^GDAXI  1265 non-null   float64       
 1   Date    1265 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['^GDAXI'], 'Transformations': [('^GDAXI', 'None', '_', 'T+S+R'), ('^GDAXI', 'None', 'Diff_', 'T+S+R'), ('^GDAXI', 'None', 'RelDiff_', 'T+S+R'), ('^GDAXI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^GDAXI', 'Transformation': '_^GDAXI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.984, ('TRAINING', {'Signal': '^GDAXI', 'Transformation': '_^GDAXI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^GDAXI', 'Transformation': 'Diff_^GDAXI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.756, ('TRAINING', {'Signal': '^GDAXI', 'Transformation': 'Diff_^GDAXI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^GDAXI', 'Transformation': 'RelDiff_^GDAXI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.136, ('TRAINING', {'Signal': '^GDAXI', 'Transformation': 'RelDiff_^GDAXI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^GDAXI', 'Transformation': 'CumSum_^GDAXI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.836, ('TRAINING', {'Signal': '^GDAXI', 'Transformation': 'CumSum_^GDAXI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.714, ('SIGNAL_TRAINING', {'Signals': ['^GDAXI'], 'Transformations': [('^GDAXI', 'None', '_', 'T+S+R'), ('^GDAXI', 'None', 'Diff_', 'T+S+R'), ('^GDAXI', 'None', 'RelDiff_', 'T+S+R'), ('^GDAXI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['^GDAXI'], 'Transformations': [('^GDAXI', [('^GDAXI', 'None', 'CumSum_', 'T+S+R'), ('^GDAXI', 'None', 'Diff_', 'T+S+R'), ('^GDAXI', 'None', 'RelDiff_', 'T+S+R'), ('^GDAXI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '^GDAXI', 'Transformations': [('^GDAXI', 'None', 'CumSum_', 'T+S+R'), ('^GDAXI', 'None', 'Diff_', 'T+S+R'), ('^GDAXI', 'None', 'RelDiff_', 'T+S+R'), ('^GDAXI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '^GDAXI', 'Transformations': [('^GDAXI', 'None', 'CumSum_', 'T+S+R'), ('^GDAXI', 'None', 'Diff_', 'T+S+R'), ('^GDAXI', 'None', 'RelDiff_', 'T+S+R'), ('^GDAXI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^GDAXI', 'Model': '_^GDAXI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^GDAXI', 'Model': '_^GDAXI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^GDAXI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^GDAXI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['^GDAXI'], 'Transformations': [('^GDAXI', [('^GDAXI', 'None', 'CumSum_', 'T+S+R'), ('^GDAXI', 'None', 'Diff_', 'T+S+R'), ('^GDAXI', 'None', 'RelDiff_', 'T+S+R'), ('^GDAXI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='^GDAXI' Length=1265  Min=5072.330078 Max=12374.730469  Mean=8730.486875845072 StdDev=1727.9487186174645
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_^GDAXI' Min=0.0 Max=1.0  Mean=0.5009526459756491 StdDev=0.23662749590492324
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_^GDAXI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_^GDAXI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_^GDAXI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_^GDAXI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0095 MAPE_Forecast=0.0124 MAPE_Test=0.0105
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0095 SMAPE_Forecast=0.0124 SMAPE_Test=0.0106
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0014 MASE_Test=1.2112
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=514.6292406661478 CRPS_Forecast=175.33998740471486 CRPS_Test=89.34144814285706
INFO:pyaf.std:MODEL_L1 L1_Fit=76.31687075944336 L1_Forecast=124.85598030952387 L1_Test=103.0585937142857
INFO:pyaf.std:MODEL_L2 L2_Fit=103.89087379521615 L2_Forecast=162.20248560595053 L2_Test=132.62003576326447
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1786564847687421 LnQ_Forecast=0.0655197404138481 LnQ_Test=0.001303654460219203
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=54.94018550000055 MedAE_Forecast=91.42480499999965 MedAE_Test=130.66015599999992
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2900046378736014
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _^GDAXI_Lag1Trend_residue_bestCycle_byMAPE None 0.0010886429220996752 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE     TestMAPE
0    None         _^GDAXI  ...       0.0122       0.0104
1    None         _^GDAXI  ...       0.0123       0.0106
2    None         _^GDAXI  ...       0.0123       0.0107
3    None         _^GDAXI  ...       0.0123       0.0107
4    None         _^GDAXI  ...       0.0124       0.0105
..    ...             ...  ...          ...          ...
211  None  RelDiff_^GDAXI  ...    4202.0778   33025.7927
212  None  RelDiff_^GDAXI  ...    5442.6305   43338.3122
213  None  RelDiff_^GDAXI  ...    5906.6491   46950.2895
214  None  RelDiff_^GDAXI  ...   15869.1730  131149.5349
215  None  RelDiff_^GDAXI  ...   15869.1730  131149.5349

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _^GDAXI             T+S+R  ...  0.0091       0.0122   0.0104
1  None        _^GDAXI             T+S+R  ...  0.0094       0.0123   0.0106
2  None        _^GDAXI             T+S+R  ...  0.0093       0.0123   0.0107
3  None        _^GDAXI             T+S+R  ...  0.0091       0.0123   0.0107
4  None        _^GDAXI             T+S+R  ...  0.0095       0.0124   0.0105

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['^GDAXI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('FORECASTING', {'Signals': ['^GDAXI'], 'Horizon': 7}))
7 0     9981.240234
1    10142.009766
2    10156.209961
3    10147.459961
4    10198.240234
5    10247.759766
6    10319.549805
Name: ^GDAXI, dtype: float64
7 0    10063.129883
1    10063.129883
2    10063.129883
3    10063.129883
4    10063.129883
5    10063.129883
6    10063.129883
Name: ^GDAXI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_^GDAXI ^GDAXI [9981.240234, 10142.009766, 10156.209961, 10147.459961, 10198.240234, 10247.759766, 10319.549805]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_^GDAXI ^GDAXI [10063.129883, 10063.129883, 10063.129883, 10063.129883, 10063.129883, 10063.129883, 10063.129883]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_^GDAXI ^GDAXI 1265 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_^GDAXI ^GDAXI 12.20602011680603
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_^GDAXI ^GDAXI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_^GDAXI ^GDAXI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_^GDAXI ^GDAXI 0.0128 0.0129 2.2026
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_^GDAXI ^GDAXI 130.619977714286 144.81396468466153 -1.2134643833065049
BENCHMARK_SUCCESS 'YAHOO_STOCKS_eurindex_^GDAXI_7'
