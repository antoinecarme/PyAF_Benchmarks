BENCH_DATA YAHOO_STOCKS_eurindex
TIME :  Date N= 1273 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ^BFX N= 1273 H= 7 HEAD= [2455.959961 2427.090088 2376.560059 2330.379883 2291.110107] TAIL= [3393.52002  3390.320068 3418.439941 3410.909912 3412.469971]
          ^BFX       Date
0  2455.959961 2011-07-28
1  2427.090088 2011-07-29
2  2376.560059 2011-08-01
3  2330.379883 2011-08-02
4  2291.110107 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1273 entries, 0 to 1272
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ^BFX    1273 non-null   float64       
 1   Date    1273 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['^BFX'], 'Transformations': [('^BFX', 'None', '_', 'T+S+R'), ('^BFX', 'None', 'Diff_', 'T+S+R'), ('^BFX', 'None', 'RelDiff_', 'T+S+R'), ('^BFX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^BFX', 'Transformation': '_^BFX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.674, ('TRAINING', {'Signal': '^BFX', 'Transformation': '_^BFX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^BFX', 'Transformation': 'Diff_^BFX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.798, ('TRAINING', {'Signal': '^BFX', 'Transformation': 'Diff_^BFX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^BFX', 'Transformation': 'RelDiff_^BFX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.17, ('TRAINING', {'Signal': '^BFX', 'Transformation': 'RelDiff_^BFX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': '^BFX', 'Transformation': 'CumSum_^BFX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.853, ('TRAINING', {'Signal': '^BFX', 'Transformation': 'CumSum_^BFX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.496, ('SIGNAL_TRAINING', {'Signals': ['^BFX'], 'Transformations': [('^BFX', 'None', '_', 'T+S+R'), ('^BFX', 'None', 'Diff_', 'T+S+R'), ('^BFX', 'None', 'RelDiff_', 'T+S+R'), ('^BFX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['^BFX'], 'Transformations': [('^BFX', [('^BFX', 'None', 'CumSum_', 'T+S+R'), ('^BFX', 'None', 'Diff_', 'T+S+R'), ('^BFX', 'None', 'RelDiff_', 'T+S+R'), ('^BFX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': '^BFX', 'Transformations': [('^BFX', 'None', 'CumSum_', 'T+S+R'), ('^BFX', 'None', 'Diff_', 'T+S+R'), ('^BFX', 'None', 'RelDiff_', 'T+S+R'), ('^BFX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': '^BFX', 'Transformations': [('^BFX', 'None', 'CumSum_', 'T+S+R'), ('^BFX', 'None', 'Diff_', 'T+S+R'), ('^BFX', 'None', 'RelDiff_', 'T+S+R'), ('^BFX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^BFX', 'Model': '_^BFX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': '^BFX', 'Model': '_^BFX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^BFX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.182, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': '^BFX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.216, ('FINALIZE_TRAINING', {'Signals': ['^BFX'], 'Transformations': [('^BFX', [('^BFX', 'None', 'CumSum_', 'T+S+R'), ('^BFX', 'None', 'Diff_', 'T+S+R'), ('^BFX', 'None', 'RelDiff_', 'T+S+R'), ('^BFX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='^BFX' Length=1273  Min=1916.26001 Max=3905.709961  Mean=2907.553608609585 StdDev=538.6680894451861
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_^BFX' Min=0.0 Max=1.0  Mean=0.4982752132624942 StdDev=0.27076232260802724
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_^BFX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_^BFX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_^BFX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_^BFX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0082 MAPE_Forecast=0.0099 MAPE_Test=0.0075
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0082 SMAPE_Forecast=0.0099 SMAPE_Test=0.0075
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9969 MASE_Test=1.3211
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=149.63675362550083 CRPS_Forecast=42.73877146470977 CRPS_Test=20.53499928571429
INFO:pyaf.std:MODEL_L1 L1_Fit=21.736529810276682 L1_Forecast=34.200877783464556 L1_Test=25.165701857142853
INFO:pyaf.std:MODEL_L2 L2_Fit=29.126093069621085 L2_Forecast=46.33456155894354 L2_Test=32.64365045576976
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1279943510340991 LnQ_Forecast=0.04672640902578508 LnQ_Test=0.0006744571847140981
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=16.294922000000042 MedAE_Forecast=25.91503899999998 MedAE_Test=28.119873000000098
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.27128098936528616
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _^BFX_Lag1Trend_residue_bestCycle_byMAPE None 0.0006434089982290947 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None          _^BFX             T+S+R  ...    0.0082       0.0099     0.0075
1    None          _^BFX             T+S+R  ...    0.0082       0.0099     0.0075
2    None    CumSum_^BFX             T+S+R  ...    0.0084       0.0099     0.0075
3    None      Diff_^BFX             T+S+R  ...    0.0082       0.0099     0.0075
4    None      Diff_^BFX             T+S+R  ...    0.0082       0.0099     0.0075
..    ...            ...               ...  ...       ...          ...        ...
219  None   RelDiff_^BFX             T+S+R  ...   23.2708     363.3242  2129.4590
220  None   RelDiff_^BFX             T+S+R  ...   40.0415     904.3960  2105.3686
221  None   RelDiff_^BFX             T+S+R  ...   40.0415     904.3960  2105.3686
222  None   RelDiff_^BFX             T+S+R  ...  139.3535    1409.5811  6520.1896
223  None   RelDiff_^BFX             T+S+R  ...  139.3535    1409.5811  6520.1896

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None          _^BFX             T+S+R  ...  0.0082       0.0099   0.0075
1  None          _^BFX             T+S+R  ...  0.0082       0.0099   0.0075
2  None    CumSum_^BFX             T+S+R  ...  0.0084       0.0099   0.0075
3  None      Diff_^BFX             T+S+R  ...  0.0082       0.0099   0.0075
4  None      Diff_^BFX             T+S+R  ...  0.0082       0.0099   0.0075

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['^BFX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.15, ('FORECASTING', {'Signals': ['^BFX'], 'Horizon': 7}))
7 0    3410.239990
1    3431.320068
2    3428.899902
3    3450.270020
4    3451.080078
5    3456.959961
6    3453.659912
Name: ^BFX, dtype: float64
7 0    3412.469971
1    3412.469971
2    3412.469971
3    3412.469971
4    3412.469971
5    3412.469971
6    3412.469971
Name: ^BFX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_^BFX ^BFX [3410.23999, 3431.320068, 3428.899902, 3450.27002, 3451.080078, 3456.959961, 3453.659912]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_^BFX ^BFX [3412.469971, 3412.469971, 3412.469971, 3412.469971, 3412.469971, 3412.469971, 3412.469971]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_^BFX ^BFX 1273 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_^BFX ^BFX 12.969235181808472
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_^BFX ^BFX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_^BFX ^BFX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_^BFX ^BFX 0.0083 0.0083 3.1186
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_^BFX ^BFX 28.514299428571444 32.12875019038238 -3.0461541963483834
BENCHMARK_SUCCESS 'YAHOO_STOCKS_eurindex_^BFX_7'
