BENCH_DATA YAHOO_STOCKS_mib30
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MS.MI N= 1297 H= 7 HEAD= [3.076 2.992 2.864 2.764 2.678] TAIL= [3.428 3.364 3.324 3.292 3.29 ]
   MS.MI       Date
0  3.076 2011-07-28
1  2.992 2011-07-29
2  2.864 2011-08-01
3  2.764 2011-08-02
4  2.678 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MS.MI   1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MS.MI'], 'Transformations': [('MS.MI', 'None', '_', 'T+S+R'), ('MS.MI', 'None', 'Diff_', 'T+S+R'), ('MS.MI', 'None', 'RelDiff_', 'T+S+R'), ('MS.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MS.MI', 'Transformation': '_MS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.066, ('TRAINING', {'Signal': 'MS.MI', 'Transformation': '_MS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MS.MI', 'Transformation': 'Diff_MS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.839, ('TRAINING', {'Signal': 'MS.MI', 'Transformation': 'Diff_MS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MS.MI', 'Transformation': 'RelDiff_MS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.205, ('TRAINING', {'Signal': 'MS.MI', 'Transformation': 'RelDiff_MS.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MS.MI', 'Transformation': 'CumSum_MS.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.834, ('TRAINING', {'Signal': 'MS.MI', 'Transformation': 'CumSum_MS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.946, ('SIGNAL_TRAINING', {'Signals': ['MS.MI'], 'Transformations': [('MS.MI', 'None', '_', 'T+S+R'), ('MS.MI', 'None', 'Diff_', 'T+S+R'), ('MS.MI', 'None', 'RelDiff_', 'T+S+R'), ('MS.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MS.MI'], 'Transformations': [('MS.MI', [('MS.MI', 'None', 'CumSum_', 'T+S+R'), ('MS.MI', 'None', 'Diff_', 'T+S+R'), ('MS.MI', 'None', 'RelDiff_', 'T+S+R'), ('MS.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MS.MI', 'Transformations': [('MS.MI', 'None', 'CumSum_', 'T+S+R'), ('MS.MI', 'None', 'Diff_', 'T+S+R'), ('MS.MI', 'None', 'RelDiff_', 'T+S+R'), ('MS.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MS.MI', 'Transformations': [('MS.MI', 'None', 'CumSum_', 'T+S+R'), ('MS.MI', 'None', 'Diff_', 'T+S+R'), ('MS.MI', 'None', 'RelDiff_', 'T+S+R'), ('MS.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MS.MI', 'Model': '_MS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MS.MI', 'Model': '_MS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.202, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MS.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.237, ('FINALIZE_TRAINING', {'Signals': ['MS.MI'], 'Transformations': [('MS.MI', [('MS.MI', 'None', 'CumSum_', 'T+S+R'), ('MS.MI', 'None', 'Diff_', 'T+S+R'), ('MS.MI', 'None', 'RelDiff_', 'T+S+R'), ('MS.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MS.MI' Length=1297  Min=1.166 Max=4.886  Mean=3.0175057825751774 StdDev=1.0204736923745505
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MS.MI' Min=0.0 Max=1.0  Mean=0.4977166082191329 StdDev=0.2743208850469228
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MS.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MS.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MS.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0217 MAPE_Forecast=0.0212 MAPE_Test=0.0192
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0217 SMAPE_Forecast=0.0211 SMAPE_Test=0.0193
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9969 MASE_Test=1.0738
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.29978943237454103 CRPS_Forecast=0.1445915119015048 CRPS_Test=0.03528571428571427
INFO:pyaf.std:MODEL_L1 L1_Fit=0.05700193798449612 L1_Forecast=0.08015503875968992 L1_Test=0.06371428571428568
INFO:pyaf.std:MODEL_L2 L2_Fit=0.07819568972438869 L2_Forecast=0.10960888890565301 L2_Test=0.07426208415373986
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.877713558165074 LnQ_Forecast=0.22228691496569236 LnQ_Test=0.0035637397304472108
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.040999999999999925 MedAE_Forecast=0.06400000000000006 MedAE_Test=0.06400000000000006
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5134408602150538
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MS.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...    FitMAPE ForecastMAPE    TestMAPE
0    None  RelDiff_MS.MI             T+S+R  ...     0.3657       0.0205      0.0192
1    None  RelDiff_MS.MI             T+S+R  ...     0.3657       0.0205      0.0192
2    None         _MS.MI             T+S+R  ...     0.0217       0.0212      0.0192
3    None         _MS.MI             T+S+R  ...     0.0217       0.0212      0.0192
4    None   CumSum_MS.MI             T+S+R  ...     0.0223       0.0212      0.0192
..    ...            ...               ...  ...        ...          ...         ...
211  None  RelDiff_MS.MI             T+S+R  ...    63.3812    2553.1871   7463.3413
212  None  RelDiff_MS.MI             T+S+R  ...  1403.5773    7639.7945   9068.7654
213  None  RelDiff_MS.MI             T+S+R  ...  1403.5773    7639.7945   9068.7654
214  None  RelDiff_MS.MI             T+S+R  ...   670.4899   27348.3242  81874.9885
215  None  RelDiff_MS.MI             T+S+R  ...   670.4899   27348.3242  81874.9885

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  RelDiff_MS.MI             T+S+R  ...  0.3657       0.0205   0.0192
1  None  RelDiff_MS.MI             T+S+R  ...  0.3657       0.0205   0.0192
2  None         _MS.MI             T+S+R  ...  0.0217       0.0212   0.0192
3  None         _MS.MI             T+S+R  ...  0.0217       0.0212   0.0192
4  None   CumSum_MS.MI             T+S+R  ...  0.0223       0.0212   0.0192

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MS.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['MS.MI'], 'Horizon': 7}))
7 0    3.230
1    3.264
2    3.250
3    3.216
4    3.230
5    3.006
6    3.040
Name: MS.MI, dtype: float64
7 0    3.29
1    3.29
2    3.29
3    3.29
4    3.29
5    3.29
6    3.29
Name: MS.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MS.MI MS.MI [3.23, 3.264, 3.25, 3.216, 3.23, 3.006, 3.04]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MS.MI MS.MI [3.29, 3.29, 3.29, 3.29, 3.29, 3.29, 3.29]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MS.MI MS.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MS.MI MS.MI 12.440411806106567
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MS.MI MS.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MS.MI MS.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MS.MI MS.MI 0.0367 0.0356 1.9225
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MS.MI MS.MI 0.1134285714285715 0.15028924493408422 -1.32355558946404
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mib30_MS.MI_7'
