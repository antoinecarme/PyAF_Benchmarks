BENCH_DATA YAHOO_STOCKS_mib30
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  G.MI N= 1297 H= 7 HEAD= [13.41 13.26 12.78 12.41 12.39] TAIL= [11.22 11.11 11.4  11.29 11.35]
    G.MI       Date
0  13.41 2011-07-28
1  13.26 2011-07-29
2  12.78 2011-08-01
3  12.41 2011-08-02
4  12.39 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   G.MI    1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['G.MI'], 'Transformations': [('G.MI', 'None', '_', 'T+S+R'), ('G.MI', 'None', 'Diff_', 'T+S+R'), ('G.MI', 'None', 'RelDiff_', 'T+S+R'), ('G.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'G.MI', 'Transformation': '_G.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.649, ('TRAINING', {'Signal': 'G.MI', 'Transformation': '_G.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'G.MI', 'Transformation': 'Diff_G.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.826, ('TRAINING', {'Signal': 'G.MI', 'Transformation': 'Diff_G.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'G.MI', 'Transformation': 'RelDiff_G.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.169, ('TRAINING', {'Signal': 'G.MI', 'Transformation': 'RelDiff_G.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'G.MI', 'Transformation': 'CumSum_G.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.782, ('TRAINING', {'Signal': 'G.MI', 'Transformation': 'CumSum_G.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.428, ('SIGNAL_TRAINING', {'Signals': ['G.MI'], 'Transformations': [('G.MI', 'None', '_', 'T+S+R'), ('G.MI', 'None', 'Diff_', 'T+S+R'), ('G.MI', 'None', 'RelDiff_', 'T+S+R'), ('G.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['G.MI'], 'Transformations': [('G.MI', [('G.MI', 'None', 'CumSum_', 'T+S+R'), ('G.MI', 'None', 'Diff_', 'T+S+R'), ('G.MI', 'None', 'RelDiff_', 'T+S+R'), ('G.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'G.MI', 'Transformations': [('G.MI', 'None', 'CumSum_', 'T+S+R'), ('G.MI', 'None', 'Diff_', 'T+S+R'), ('G.MI', 'None', 'RelDiff_', 'T+S+R'), ('G.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'G.MI', 'Transformations': [('G.MI', 'None', 'CumSum_', 'T+S+R'), ('G.MI', 'None', 'Diff_', 'T+S+R'), ('G.MI', 'None', 'RelDiff_', 'T+S+R'), ('G.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'G.MI', 'Model': '_G.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'G.MI', 'Model': '_G.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'G.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'G.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['G.MI'], 'Transformations': [('G.MI', [('G.MI', 'None', 'CumSum_', 'T+S+R'), ('G.MI', 'None', 'Diff_', 'T+S+R'), ('G.MI', 'None', 'RelDiff_', 'T+S+R'), ('G.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='G.MI' Length=1297  Min=8.215 Max=19.07  Mean=14.427864302235923 StdDev=2.510105225936061
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_G.MI' Min=0.0 Max=1.0  Mean=0.5723504654293812 StdDev=0.2312395417720925
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_G.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_G.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_G.MI_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_G.MI_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0133 MAPE_Forecast=0.016 MAPE_Test=0.0255
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0133 SMAPE_Forecast=0.0158 SMAPE_Test=0.026
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9972 MASE_Test=1.4082
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.7628132955936353 CRPS_Forecast=0.626211713634291 CRPS_Test=0.20750000000000007
INFO:pyaf.std:MODEL_L1 L1_Fit=0.18135658914728683 L1_Forecast=0.2252131782945736 L1_Test=0.2792857142857148
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2414033582934356 L2_Forecast=0.31551099810066935 L2_Test=0.3770420590407843
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.35152832217568464 LnQ_Forecast=0.1428938107259181 LnQ_Test=0.008983636784115998
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1399999999999988 MedAE_Forecast=0.17000000000000082 MedAE_Test=0.11000000000000121
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.4785812989405804
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _G.MI_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None    CumSum_G.MI             T+S+R  ...   0.0142       0.0158    0.0260
1    None          _G.MI             T+S+R  ...   0.0131       0.0158    0.0267
2    None          _G.MI             T+S+R  ...   0.0129       0.0158    0.0268
3    None          _G.MI             T+S+R  ...   0.0133       0.0159    0.0257
4    None    CumSum_G.MI             T+S+R  ...   0.0143       0.0159    0.0258
..    ...            ...               ...  ...      ...          ...       ...
219  None   RelDiff_G.MI             T+S+R  ...  68.1264      80.3371   46.9908
220  None   RelDiff_G.MI             T+S+R  ...  56.5656     104.0002   84.0915
221  None   RelDiff_G.MI             T+S+R  ...  56.5656     104.0002   84.0915
222  None   RelDiff_G.MI             T+S+R  ...  20.7096     360.0002  877.5127
223  None   RelDiff_G.MI             T+S+R  ...  20.7096     360.0002  877.5127

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    CumSum_G.MI             T+S+R  ...  0.0142       0.0158   0.0260
1  None          _G.MI             T+S+R  ...  0.0131       0.0158   0.0267
2  None          _G.MI             T+S+R  ...  0.0129       0.0158   0.0268
3  None          _G.MI             T+S+R  ...  0.0133       0.0159   0.0257
4  None    CumSum_G.MI             T+S+R  ...  0.0143       0.0159   0.0258

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['G.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['G.MI'], 'Horizon': 7}))
7 0    11.21
1    11.36
2    11.29
3    11.24
4    11.17
5    11.09
6    11.30
Name: G.MI, dtype: float64
7 0    11.35
1    11.35
2    11.35
3    11.35
4    11.35
5    11.35
6    11.35
Name: G.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_G.MI G.MI [11.21, 11.36, 11.29, 11.24, 11.17, 11.09, 11.3]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_G.MI G.MI [11.35, 11.35, 11.35, 11.35, 11.35, 11.35, 11.35]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_G.MI G.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_G.MI G.MI 12.911450147628784
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_G.MI G.MI Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_G.MI G.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_G.MI G.MI 0.0104 0.0103 1.102
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_G.MI G.MI 0.11571428571428528 0.14035668847618163 -1.8291324678183027
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mib30_G.MI_7'
