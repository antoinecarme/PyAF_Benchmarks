BENCH_DATA YAHOO_STOCKS_mib30
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MB.MI N= 1297 H= 7 HEAD= [6.4   6.425 6.095 5.815 5.785] TAIL= [5.7   5.745 5.92  5.835 5.935]
   MB.MI       Date
0  6.400 2011-07-28
1  6.425 2011-07-29
2  6.095 2011-08-01
3  5.815 2011-08-02
4  5.785 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MB.MI   1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MB.MI'], 'Transformations': [('MB.MI', 'None', '_', 'T+S+R'), ('MB.MI', 'None', 'Diff_', 'T+S+R'), ('MB.MI', 'None', 'RelDiff_', 'T+S+R'), ('MB.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MB.MI', 'Transformation': '_MB.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.543, ('TRAINING', {'Signal': 'MB.MI', 'Transformation': '_MB.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MB.MI', 'Transformation': 'Diff_MB.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.926, ('TRAINING', {'Signal': 'MB.MI', 'Transformation': 'Diff_MB.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MB.MI', 'Transformation': 'RelDiff_MB.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.262, ('TRAINING', {'Signal': 'MB.MI', 'Transformation': 'RelDiff_MB.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MB.MI', 'Transformation': 'CumSum_MB.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.844, ('TRAINING', {'Signal': 'MB.MI', 'Transformation': 'CumSum_MB.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.576, ('SIGNAL_TRAINING', {'Signals': ['MB.MI'], 'Transformations': [('MB.MI', 'None', '_', 'T+S+R'), ('MB.MI', 'None', 'Diff_', 'T+S+R'), ('MB.MI', 'None', 'RelDiff_', 'T+S+R'), ('MB.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MB.MI'], 'Transformations': [('MB.MI', [('MB.MI', 'None', 'CumSum_', 'T+S+R'), ('MB.MI', 'None', 'Diff_', 'T+S+R'), ('MB.MI', 'None', 'RelDiff_', 'T+S+R'), ('MB.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MB.MI', 'Transformations': [('MB.MI', 'None', 'CumSum_', 'T+S+R'), ('MB.MI', 'None', 'Diff_', 'T+S+R'), ('MB.MI', 'None', 'RelDiff_', 'T+S+R'), ('MB.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MB.MI', 'Transformations': [('MB.MI', 'None', 'CumSum_', 'T+S+R'), ('MB.MI', 'None', 'Diff_', 'T+S+R'), ('MB.MI', 'None', 'RelDiff_', 'T+S+R'), ('MB.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MB.MI', 'Model': '_MB.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MB.MI', 'Model': '_MB.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MB.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MB.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.226, ('FINALIZE_TRAINING', {'Signals': ['MB.MI'], 'Transformations': [('MB.MI', [('MB.MI', 'None', 'CumSum_', 'T+S+R'), ('MB.MI', 'None', 'Diff_', 'T+S+R'), ('MB.MI', 'None', 'RelDiff_', 'T+S+R'), ('MB.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MB.MI' Length=1297  Min=2.432 Max=9.94  Mean=6.226000771010021 StdDev=1.7815805053790499
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MB.MI' Min=0.0 Max=1.0  Mean=0.5053277531979253 StdDev=0.23729095702970798
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MB.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MB.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MB.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MB.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0188 MAPE_Forecast=0.0206 MAPE_Test=0.0314
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0188 SMAPE_Forecast=0.0204 SMAPE_Test=0.0323
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9975 MASE_Test=1.2947
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4949500020399837 CRPS_Forecast=0.3792313165526675 CRPS_Test=0.14792857142857146
INFO:pyaf.std:MODEL_L1 L1_Fit=0.1043701550387597 L1_Forecast=0.14944186046511632 L1_Test=0.17585714285714285
INFO:pyaf.std:MODEL_L2 L2_Fit=0.13839529526663105 L2_Forecast=0.20764584862118587 L2_Test=0.2315879962346928
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6562202841050753 LnQ_Forecast=0.23974892918499818 LnQ_Test=0.013205700373411275
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.08499999999999996 MedAE_Forecast=0.11999999999999922 MedAE_Test=0.09999999999999964
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5285029302077785
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MB.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _MB.MI             T+S+R  ...   0.0181       0.0204    0.0299
1    None         _MB.MI             T+S+R  ...   0.0187       0.0205    0.0309
2    None         _MB.MI             T+S+R  ...   0.0188       0.0206    0.0314
3    None         _MB.MI             T+S+R  ...   0.0188       0.0206    0.0314
4    None   CumSum_MB.MI             T+S+R  ...   0.0194       0.0206    0.0314
..    ...            ...               ...  ...      ...          ...       ...
219  None  RelDiff_MB.MI             T+S+R  ...   6.6338      37.7165   55.0376
220  None  RelDiff_MB.MI             T+S+R  ...  11.5322      52.6214   88.7784
221  None  RelDiff_MB.MI             T+S+R  ...  11.5322      52.6214   88.7784
222  None  RelDiff_MB.MI             T+S+R  ...   8.9519      70.9532  149.1020
223  None  RelDiff_MB.MI             T+S+R  ...   8.9519      70.9532  149.1020

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _MB.MI             T+S+R  ...  0.0181       0.0204   0.0299
1  None         _MB.MI             T+S+R  ...  0.0187       0.0205   0.0309
2  None         _MB.MI             T+S+R  ...  0.0188       0.0206   0.0314
3  None         _MB.MI             T+S+R  ...  0.0188       0.0206   0.0314
4  None   CumSum_MB.MI             T+S+R  ...  0.0194       0.0206   0.0314

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MB.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['MB.MI'], 'Horizon': 7}))
7 0    5.880
1    5.950
2    5.995
3    5.940
4    5.990
5    5.850
6    6.055
Name: MB.MI, dtype: float64
7 0    5.935
1    5.935
2    5.935
3    5.935
4    5.935
5    5.935
6    5.935
Name: MB.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MB.MI MB.MI [5.88, 5.95, 5.995, 5.94, 5.99, 5.85, 6.055]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MB.MI MB.MI [5.935, 5.935, 5.935, 5.935, 5.935, 5.935, 5.935]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MB.MI MB.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MB.MI MB.MI 13.054552555084229
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MB.MI MB.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MB.MI MB.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MB.MI MB.MI 0.0095 0.0095 0.5992
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MB.MI MB.MI 0.05642857142857175 0.06710865390224607 -0.06375029768799911
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mib30_MB.MI_7'
