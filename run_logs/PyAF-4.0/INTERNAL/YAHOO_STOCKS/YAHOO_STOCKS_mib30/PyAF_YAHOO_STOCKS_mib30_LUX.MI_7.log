BENCH_DATA YAHOO_STOCKS_mib30
TIME :  Date N= 1297 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  LUX.MI N= 1297 H= 7 HEAD= [22.44 22.1  21.87 21.09 20.83] TAIL= [43.15 44.46 45.35 45.01 44.37]
   LUX.MI       Date
0   22.44 2011-07-28
1   22.10 2011-07-29
2   21.87 2011-08-01
3   21.09 2011-08-02
4   20.83 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1297 entries, 0 to 1296
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   LUX.MI  1297 non-null   float64       
 1   Date    1297 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['LUX.MI'], 'Transformations': [('LUX.MI', 'None', '_', 'T+S+R'), ('LUX.MI', 'None', 'Diff_', 'T+S+R'), ('LUX.MI', 'None', 'RelDiff_', 'T+S+R'), ('LUX.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': '_LUX.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.336, ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': '_LUX.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': 'Diff_LUX.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.881, ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': 'Diff_LUX.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': 'RelDiff_LUX.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.254, ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': 'RelDiff_LUX.MI'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': 'CumSum_LUX.MI'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.863, ('TRAINING', {'Signal': 'LUX.MI', 'Transformation': 'CumSum_LUX.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.335, ('SIGNAL_TRAINING', {'Signals': ['LUX.MI'], 'Transformations': [('LUX.MI', 'None', '_', 'T+S+R'), ('LUX.MI', 'None', 'Diff_', 'T+S+R'), ('LUX.MI', 'None', 'RelDiff_', 'T+S+R'), ('LUX.MI', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['LUX.MI'], 'Transformations': [('LUX.MI', [('LUX.MI', 'None', 'CumSum_', 'T+S+R'), ('LUX.MI', 'None', 'Diff_', 'T+S+R'), ('LUX.MI', 'None', 'RelDiff_', 'T+S+R'), ('LUX.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'LUX.MI', 'Transformations': [('LUX.MI', 'None', 'CumSum_', 'T+S+R'), ('LUX.MI', 'None', 'Diff_', 'T+S+R'), ('LUX.MI', 'None', 'RelDiff_', 'T+S+R'), ('LUX.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'LUX.MI', 'Transformations': [('LUX.MI', 'None', 'CumSum_', 'T+S+R'), ('LUX.MI', 'None', 'Diff_', 'T+S+R'), ('LUX.MI', 'None', 'RelDiff_', 'T+S+R'), ('LUX.MI', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'LUX.MI', 'Model': '_LUX.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'LUX.MI', 'Model': '_LUX.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'LUX.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.195, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'LUX.MI'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.23, ('FINALIZE_TRAINING', {'Signals': ['LUX.MI'], 'Transformations': [('LUX.MI', [('LUX.MI', 'None', 'CumSum_', 'T+S+R'), ('LUX.MI', 'None', 'Diff_', 'T+S+R'), ('LUX.MI', 'None', 'RelDiff_', 'T+S+R'), ('LUX.MI', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='LUX.MI' Length=1297  Min=18.73 Max=67.45  Mean=40.572713955281465 StdDev=12.584755652141798
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_LUX.MI' Min=0.0 Max=1.0  Mean=0.4483315672266295 StdDev=0.25830779253164643
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_LUX.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_LUX.MI_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_LUX.MI_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_LUX.MI_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0114 MAPE_Forecast=0.0157 MAPE_Test=0.013
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0114 SMAPE_Forecast=0.0157 SMAPE_Test=0.0131
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9992 MASE_Test=1.0033
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.0791121991024073 CRPS_Forecast=1.9208022872777022 CRPS_Test=0.5049999999999996
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4133720930232559 L1_Forecast=0.8796124031007753 L1_Test=0.5785714285714282
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5719253827299963 L2_Forecast=1.1778034344628807 L2_Test=0.6995610868864229
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2423819809130715 LnQ_Forecast=0.11115610099544534 LnQ_Test=0.0017614366486699185
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.2949999999999964 MedAE_Forecast=0.6550000000000011 MedAE_Test=0.5900000000000034
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.07614942528735634
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _LUX.MI_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ... ForecastMAPE     TestMAPE
0    None         _LUX.MI  ...       0.0157       0.0130
1    None         _LUX.MI  ...       0.0157       0.0130
2    None   CumSum_LUX.MI  ...       0.0157       0.0130
3    None     Diff_LUX.MI  ...       0.0157       0.0130
4    None     Diff_LUX.MI  ...       0.0157       0.0130
..    ...             ...  ...          ...          ...
211  None  RelDiff_LUX.MI  ...   15781.2530  169516.9406
212  None  RelDiff_LUX.MI  ...   16491.5178  260331.9062
213  None  RelDiff_LUX.MI  ...   16552.1994  261500.3410
214  None  RelDiff_LUX.MI  ...   16552.1994  261500.3410
215  None  RelDiff_LUX.MI  ...   16706.4206  248544.7913

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _LUX.MI             T+S+R  ...  0.0114       0.0157    0.013
1  None        _LUX.MI             T+S+R  ...  0.0114       0.0157    0.013
2  None  CumSum_LUX.MI             T+S+R  ...  0.0115       0.0157    0.013
3  None    Diff_LUX.MI             T+S+R  ...  0.0114       0.0157    0.013
4  None    Diff_LUX.MI             T+S+R  ...  0.0114       0.0157    0.013

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['LUX.MI'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['LUX.MI'], 'Horizon': 7}))
7 0    43.74
1    44.66
2    44.59
3    44.64
4    45.14
5    43.32
6    43.19
Name: LUX.MI, dtype: float64
7 0    44.37
1    44.37
2    44.37
3    44.37
4    44.37
5    44.37
6    44.37
Name: LUX.MI_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_LUX.MI LUX.MI [43.74, 44.66, 44.59, 44.64, 45.14, 43.32, 43.19]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_LUX.MI LUX.MI [44.37, 44.37, 44.37, 44.37, 44.37, 44.37, 44.37]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_LUX.MI LUX.MI 1297 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_LUX.MI LUX.MI 12.81573748588562
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_LUX.MI LUX.MI Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_LUX.MI LUX.MI 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_LUX.MI LUX.MI 0.0144 0.0143 1.0831
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_LUX.MI LUX.MI 0.6300000000000006 0.7260558813597906 -0.07116435683155165
BENCHMARK_SUCCESS 'YAHOO_STOCKS_mib30_LUX.MI_7'
