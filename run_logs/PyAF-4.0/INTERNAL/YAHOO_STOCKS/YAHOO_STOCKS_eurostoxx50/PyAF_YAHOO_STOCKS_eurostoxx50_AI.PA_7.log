BENCH_DATA YAHOO_STOCKS_eurostoxx50
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AI.PA N= 1298 H= 7 HEAD= [94.7797 95.9496 95.0197 93.9997 93.7897] TAIL= [93.37 93.6  94.81 95.89 95.87]
     AI.PA       Date
0  94.7797 2011-07-28
1  95.9496 2011-07-29
2  95.0197 2011-08-01
3  93.9997 2011-08-02
4  93.7897 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AI.PA   1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AI.PA'], 'Transformations': [('AI.PA', 'None', '_', 'T+S+R'), ('AI.PA', 'None', 'Diff_', 'T+S+R'), ('AI.PA', 'None', 'RelDiff_', 'T+S+R'), ('AI.PA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AI.PA', 'Transformation': '_AI.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.414, ('TRAINING', {'Signal': 'AI.PA', 'Transformation': '_AI.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AI.PA', 'Transformation': 'Diff_AI.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.917, ('TRAINING', {'Signal': 'AI.PA', 'Transformation': 'Diff_AI.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AI.PA', 'Transformation': 'RelDiff_AI.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.299, ('TRAINING', {'Signal': 'AI.PA', 'Transformation': 'RelDiff_AI.PA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AI.PA', 'Transformation': 'CumSum_AI.PA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.147, ('TRAINING', {'Signal': 'AI.PA', 'Transformation': 'CumSum_AI.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.779, ('SIGNAL_TRAINING', {'Signals': ['AI.PA'], 'Transformations': [('AI.PA', 'None', '_', 'T+S+R'), ('AI.PA', 'None', 'Diff_', 'T+S+R'), ('AI.PA', 'None', 'RelDiff_', 'T+S+R'), ('AI.PA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AI.PA'], 'Transformations': [('AI.PA', [('AI.PA', 'None', 'CumSum_', 'T+S+R'), ('AI.PA', 'None', 'Diff_', 'T+S+R'), ('AI.PA', 'None', 'RelDiff_', 'T+S+R'), ('AI.PA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AI.PA', 'Transformations': [('AI.PA', 'None', 'CumSum_', 'T+S+R'), ('AI.PA', 'None', 'Diff_', 'T+S+R'), ('AI.PA', 'None', 'RelDiff_', 'T+S+R'), ('AI.PA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'AI.PA', 'Transformations': [('AI.PA', 'None', 'CumSum_', 'T+S+R'), ('AI.PA', 'None', 'Diff_', 'T+S+R'), ('AI.PA', 'None', 'RelDiff_', 'T+S+R'), ('AI.PA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AI.PA', 'Model': '_AI.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AI.PA', 'Model': '_AI.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AI.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.207, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AI.PA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.245, ('FINALIZE_TRAINING', {'Signals': ['AI.PA'], 'Transformations': [('AI.PA', [('AI.PA', 'None', 'CumSum_', 'T+S+R'), ('AI.PA', 'None', 'Diff_', 'T+S+R'), ('AI.PA', 'None', 'RelDiff_', 'T+S+R'), ('AI.PA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AI.PA' Length=1298  Min=83.8297 Max=123.65  Mean=99.56199630200317 StdDev=8.574623617167576
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AI.PA' Min=0.0 Max=1.0  Mean=0.3950823148495386 StdDev=0.2153329738140489
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AI.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AI.PA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AI.PA_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AI.PA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0093 MAPE_Forecast=0.0129 MAPE_Test=0.0094
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0093 SMAPE_Forecast=0.0128 SMAPE_Test=0.0094
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0026 MASE_Test=0.8699
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.2011508089045284 CRPS_Forecast=2.5354020858505564 CRPS_Test=0.894999999999999
INFO:pyaf.std:MODEL_L1 L1_Fit=0.9082142441860461 L1_Forecast=1.3238610038610044 L1_Test=0.875714285714283
INFO:pyaf.std:MODEL_L2 L2_Fit=1.265441754365589 L2_Forecast=1.7815493669045908 L2_Test=1.1601662442450713
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.17291539874469267 LnQ_Forecast=0.07599013515679232 LnQ_Test=0.001106299898923727
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.6850000000000023 MedAE_Forecast=1.0499999999999972 MedAE_Test=1.0799999999999983
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.27498537178273397
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AI.PA_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None         _AI.PA  ...  1.280000e-02  9.200000e-03
1    None         _AI.PA  ...  1.280000e-02  9.200000e-03
2    None         _AI.PA  ...  1.290000e-02  9.400000e-03
3    None         _AI.PA  ...  1.290000e-02  9.400000e-03
4    None   CumSum_AI.PA  ...  1.290000e-02  9.400000e-03
..    ...            ...  ...           ...           ...
219  None  RelDiff_AI.PA  ...  1.015821e+07  1.169732e+07
220  None  RelDiff_AI.PA  ...  1.065392e+07  1.169732e+07
221  None  RelDiff_AI.PA  ...  1.065392e+07  1.169732e+07
222  None  RelDiff_AI.PA  ...  1.065392e+07  1.169732e+07
223  None  RelDiff_AI.PA  ...  1.065392e+07  1.169732e+07

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _AI.PA             T+S+R  ...  0.0092       0.0128   0.0092
1  None         _AI.PA             T+S+R  ...  0.0091       0.0128   0.0092
2  None         _AI.PA             T+S+R  ...  0.0093       0.0129   0.0094
3  None         _AI.PA             T+S+R  ...  0.0093       0.0129   0.0094
4  None   CumSum_AI.PA             T+S+R  ...  0.0094       0.0129   0.0094

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AI.PA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.165, ('FORECASTING', {'Signals': ['AI.PA'], 'Horizon': 7}))
7 0    95.13
1    95.11
2    95.07
3    95.64
4    95.72
5    96.14
6    96.80
Name: AI.PA, dtype: float64
7 0    95.87
1    95.87
2    95.87
3    95.87
4    95.87
5    95.87
6    95.87
Name: AI.PA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AI.PA AI.PA [95.13, 95.11, 95.07, 95.64, 95.72, 96.14, 96.8]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AI.PA AI.PA [95.87, 95.87, 95.87, 95.87, 95.87, 95.87, 95.87]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AI.PA AI.PA 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AI.PA AI.PA 13.296949625015259
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AI.PA AI.PA Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AI.PA AI.PA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AI.PA AI.PA 0.0058 0.0058 1.8579
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AI.PA AI.PA 0.5542857142857177 0.630011337766464 -0.12691790659686242
BENCHMARK_SUCCESS 'YAHOO_STOCKS_eurostoxx50_AI.PA_7'
