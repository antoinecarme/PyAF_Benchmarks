BENCH_DATA YAHOO_STOCKS_eurostoxx50
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ALV.DE N= 1298 H= 7 HEAD= [92.46 91.06 88.82 86.59 84.9 ] TAIL= [126.95 126.8  129.05 128.   127.25]
   ALV.DE       Date
0   92.46 2011-07-28
1   91.06 2011-07-29
2   88.82 2011-08-01
3   86.59 2011-08-02
4   84.90 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ALV.DE  1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ALV.DE'], 'Transformations': [('ALV.DE', 'None', '_', 'T+S+R'), ('ALV.DE', 'None', 'Diff_', 'T+S+R'), ('ALV.DE', 'None', 'RelDiff_', 'T+S+R'), ('ALV.DE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': '_ALV.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.626, ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': '_ALV.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': 'Diff_ALV.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.451, ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': 'Diff_ALV.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': 'RelDiff_ALV.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 5.653, ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': 'RelDiff_ALV.DE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': 'CumSum_ALV.DE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 4.824, ('TRAINING', {'Signal': 'ALV.DE', 'Transformation': 'CumSum_ALV.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 18.557, ('SIGNAL_TRAINING', {'Signals': ['ALV.DE'], 'Transformations': [('ALV.DE', 'None', '_', 'T+S+R'), ('ALV.DE', 'None', 'Diff_', 'T+S+R'), ('ALV.DE', 'None', 'RelDiff_', 'T+S+R'), ('ALV.DE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ALV.DE'], 'Transformations': [('ALV.DE', [('ALV.DE', 'None', 'CumSum_', 'T+S+R'), ('ALV.DE', 'None', 'Diff_', 'T+S+R'), ('ALV.DE', 'None', 'RelDiff_', 'T+S+R'), ('ALV.DE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ALV.DE', 'Transformations': [('ALV.DE', 'None', 'CumSum_', 'T+S+R'), ('ALV.DE', 'None', 'Diff_', 'T+S+R'), ('ALV.DE', 'None', 'RelDiff_', 'T+S+R'), ('ALV.DE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'ALV.DE', 'Transformations': [('ALV.DE', 'None', 'CumSum_', 'T+S+R'), ('ALV.DE', 'None', 'Diff_', 'T+S+R'), ('ALV.DE', 'None', 'RelDiff_', 'T+S+R'), ('ALV.DE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ALV.DE', 'Model': '_ALV.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.045, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ALV.DE', 'Model': '_ALV.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ALV.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.317, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ALV.DE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.374, ('FINALIZE_TRAINING', {'Signals': ['ALV.DE'], 'Transformations': [('ALV.DE', [('ALV.DE', 'None', 'CumSum_', 'T+S+R'), ('ALV.DE', 'None', 'Diff_', 'T+S+R'), ('ALV.DE', 'None', 'RelDiff_', 'T+S+R'), ('ALV.DE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ALV.DE' Length=1298  Min=57.47 Max=169.7  Mean=118.2778890600925 StdDev=26.730596228717015
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ALV.DE' Min=0.0 Max=1.0  Mean=0.5418149252436288 StdDev=0.23817692442944857
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ALV.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ALV.DE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ALV.DE_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ALV.DE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0116 MAPE_Forecast=0.0129 MAPE_Test=0.0129
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0116 SMAPE_Forecast=0.0128 SMAPE_Test=0.013
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0022 MASE_Test=1.1182
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=7.454417747858018 CRPS_Forecast=2.839247367703838 CRPS_Test=1.1928571428571442
INFO:pyaf.std:MODEL_L1 L1_Fit=1.1870058139534883 L1_Forecast=1.8457528957528968 L1_Test=1.6214285714285768
INFO:pyaf.std:MODEL_L2 L2_Fit=1.6539177414094197 L2_Forecast=2.5755814277789195 L2_Test=1.8669111234488802
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.30595795452510766 LnQ_Forecast=0.08540227715733795 LnQ_Test=0.0015766870826417398
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.7999999999999972 MedAE_Forecast=1.299999999999983 MedAE_Test=1.75
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.3117704713534705
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ALV.DE_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None         _ALV.DE             T+S+R  ...    0.0116       0.0129      0.0129
1    None         _ALV.DE             T+S+R  ...    0.0116       0.0129      0.0129
2    None   CumSum_ALV.DE             T+S+R  ...    0.0119       0.0129      0.0129
3    None     Diff_ALV.DE             T+S+R  ...    0.0116       0.0129      0.0129
4    None     Diff_ALV.DE             T+S+R  ...    0.0116       0.0129      0.0129
..    ...             ...               ...  ...       ...          ...         ...
211  None  RelDiff_ALV.DE             T+S+R  ...   80.0710    1930.4519   5117.1992
212  None  RelDiff_ALV.DE             T+S+R  ...  233.0110    2149.2924  16614.5546
213  None  RelDiff_ALV.DE             T+S+R  ...  303.5522    3901.6706  30859.8215
214  None  RelDiff_ALV.DE             T+S+R  ...  445.5819    8616.6009  70208.5122
215  None  RelDiff_ALV.DE             T+S+R  ...  445.5819    8616.6009  70208.5122

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _ALV.DE             T+S+R  ...  0.0116       0.0129   0.0129
1  None        _ALV.DE             T+S+R  ...  0.0116       0.0129   0.0129
2  None  CumSum_ALV.DE             T+S+R  ...  0.0119       0.0129   0.0129
3  None    Diff_ALV.DE             T+S+R  ...  0.0116       0.0129   0.0129
4  None    Diff_ALV.DE             T+S+R  ...  0.0116       0.0129   0.0129

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ALV.DE'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.264, ('FORECASTING', {'Signals': ['ALV.DE'], 'Horizon': 7}))
7 0    125.60
1    126.65
2    125.40
3    125.85
4    126.00
5    126.65
6    129.10
Name: ALV.DE, dtype: float64
7 0    127.25
1    127.25
2    127.25
3    127.25
4    127.25
5    127.25
6    127.25
Name: ALV.DE_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ALV.DE ALV.DE [125.6, 126.65, 125.4, 125.85, 126.0, 126.65, 129.1]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ALV.DE ALV.DE [127.25, 127.25, 127.25, 127.25, 127.25, 127.25, 127.25]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ALV.DE ALV.DE 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ALV.DE ALV.DE 19.332127571105957
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ALV.DE ALV.DE Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ALV.DE ALV.DE 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ALV.DE ALV.DE 0.0104 0.0104 1.3143
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ALV.DE ALV.DE 1.3142857142857127 1.404584330988047 -0.4554351098913165
BENCHMARK_SUCCESS 'YAHOO_STOCKS_eurostoxx50_ALV.DE_7'
