BENCH_DATA YAHOO_STOCKS_exch
TIME :  Date N= 1293 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  BERGEN.OL N= 1293 H= 7 HEAD= [6.8  6.98 6.9  6.8  6.8 ] TAIL= [1.46 1.47 1.47 1.42 1.42]
   BERGEN.OL       Date
0       6.80 2011-07-28
1       6.98 2011-07-29
2       6.90 2011-08-01
3       6.80 2011-08-02
4       6.80 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1293 entries, 0 to 1292
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   BERGEN.OL  1293 non-null   float64       
 1   Date       1293 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['BERGEN.OL'], 'Transformations': [('BERGEN.OL', 'None', '_', 'T+S+R'), ('BERGEN.OL', 'None', 'Diff_', 'T+S+R'), ('BERGEN.OL', 'None', 'RelDiff_', 'T+S+R'), ('BERGEN.OL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': '_BERGEN.OL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.67, ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': '_BERGEN.OL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': 'Diff_BERGEN.OL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.526, ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': 'Diff_BERGEN.OL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': 'RelDiff_BERGEN.OL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.851, ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': 'RelDiff_BERGEN.OL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': 'CumSum_BERGEN.OL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.477, ('TRAINING', {'Signal': 'BERGEN.OL', 'Transformation': 'CumSum_BERGEN.OL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.525, ('SIGNAL_TRAINING', {'Signals': ['BERGEN.OL'], 'Transformations': [('BERGEN.OL', 'None', '_', 'T+S+R'), ('BERGEN.OL', 'None', 'Diff_', 'T+S+R'), ('BERGEN.OL', 'None', 'RelDiff_', 'T+S+R'), ('BERGEN.OL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['BERGEN.OL'], 'Transformations': [('BERGEN.OL', [('BERGEN.OL', 'None', 'CumSum_', 'T+S+R'), ('BERGEN.OL', 'None', 'Diff_', 'T+S+R'), ('BERGEN.OL', 'None', 'RelDiff_', 'T+S+R'), ('BERGEN.OL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'BERGEN.OL', 'Transformations': [('BERGEN.OL', 'None', 'CumSum_', 'T+S+R'), ('BERGEN.OL', 'None', 'Diff_', 'T+S+R'), ('BERGEN.OL', 'None', 'RelDiff_', 'T+S+R'), ('BERGEN.OL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'BERGEN.OL', 'Transformations': [('BERGEN.OL', 'None', 'CumSum_', 'T+S+R'), ('BERGEN.OL', 'None', 'Diff_', 'T+S+R'), ('BERGEN.OL', 'None', 'RelDiff_', 'T+S+R'), ('BERGEN.OL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BERGEN.OL', 'Model': '_BERGEN.OL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'BERGEN.OL', 'Model': '_BERGEN.OL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BERGEN.OL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'BERGEN.OL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['BERGEN.OL'], 'Transformations': [('BERGEN.OL', [('BERGEN.OL', 'None', 'CumSum_', 'T+S+R'), ('BERGEN.OL', 'None', 'Diff_', 'T+S+R'), ('BERGEN.OL', 'None', 'RelDiff_', 'T+S+R'), ('BERGEN.OL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='BERGEN.OL' Length=1293  Min=0.54 Max=9.3  Mean=3.7926063418406724 StdDev=2.233028502466792
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_BERGEN.OL' Min=0.0 Max=1.0  Mean=0.3713020938174288 StdDev=0.2549119295053415
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_BERGEN.OL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_BERGEN.OL_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_BERGEN.OL_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_BERGEN.OL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0259 MAPE_Forecast=0.0444 MAPE_Test=0.0089
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0259 SMAPE_Forecast=0.0447 SMAPE_Test=0.0088
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.002 MASE_Test=0.9643
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5947542084783943 CRPS_Forecast=0.08728495759233924 CRPS_Test=0.0064285714285714345
INFO:pyaf.std:MODEL_L1 L1_Fit=0.11223735408560313 L1_Forecast=0.04608527131782947 L1_Test=0.012857142857142869
INFO:pyaf.std:MODEL_L2 L2_Fit=0.1994802341417053 L2_Forecast=0.07403906364708049 L2_Test=0.021044171232366068
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.8225047926242994 LnQ_Forecast=1.4155412154789027 LnQ_Test=0.0014752143722780585
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.05000000000000071 MedAE_Forecast=0.039999999999999813 MedAE_Test=0.010000000000000009
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7146118721461185
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _BERGEN.OL_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None         _BERGEN.OL             T+S+R  ...  0.0259       0.0444    0.0089
1    None   CumSum_BERGEN.OL             T+S+R  ...  0.0268       0.0444    0.0089
2    None   CumSum_BERGEN.OL             T+S+R  ...  0.0268       0.0444    0.0089
3    None     Diff_BERGEN.OL             T+S+R  ...  0.0259       0.0444    0.0089
4    None         _BERGEN.OL             T+S+R  ...  0.0259       0.0444    0.0089
..    ...                ...               ...  ...     ...          ...       ...
179  None  RelDiff_BERGEN.OL             T+S+R  ...  1.0155      46.0960   91.1229
180  None  RelDiff_BERGEN.OL             T+S+R  ...  1.0354      49.0731   98.1031
181  None  RelDiff_BERGEN.OL             T+S+R  ...  1.0348      49.5690   99.2218
182  None  RelDiff_BERGEN.OL             T+S+R  ...  1.0348      49.5690   99.2218
183  None  RelDiff_BERGEN.OL             T+S+R  ...  1.1000      61.8792  121.5509

[184 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _BERGEN.OL             T+S+R  ...  0.0259       0.0444   0.0089
1  None  CumSum_BERGEN.OL             T+S+R  ...  0.0268       0.0444   0.0089
2  None  CumSum_BERGEN.OL             T+S+R  ...  0.0268       0.0444   0.0089
3  None    Diff_BERGEN.OL             T+S+R  ...  0.0259       0.0444   0.0089
4  None        _BERGEN.OL             T+S+R  ...  0.0259       0.0444   0.0089

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['BERGEN.OL'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('FORECASTING', {'Signals': ['BERGEN.OL'], 'Horizon': 7}))
7 0    1.42
1    1.43
2    1.43
3    1.43
4    1.47
5    1.47
6    1.47
Name: BERGEN.OL, dtype: float64
7 0    1.42
1    1.42
2    1.42
3    1.42
4    1.42
5    1.42
6    1.42
Name: BERGEN.OL_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_BERGEN.OL BERGEN.OL [1.42, 1.43, 1.43, 1.43, 1.47, 1.47, 1.47]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_BERGEN.OL BERGEN.OL [1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_BERGEN.OL BERGEN.OL 1293 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_BERGEN.OL BERGEN.OL 11.026071548461914
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_BERGEN.OL BERGEN.OL Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_BERGEN.OL BERGEN.OL 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_BERGEN.OL BERGEN.OL 0.0176 0.0178 3.0857
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_BERGEN.OL BERGEN.OL 0.025714285714285738 0.03338091841585124 -1.4594593819089376
BENCHMARK_SUCCESS 'YAHOO_STOCKS_exch_BERGEN.OL_7'
