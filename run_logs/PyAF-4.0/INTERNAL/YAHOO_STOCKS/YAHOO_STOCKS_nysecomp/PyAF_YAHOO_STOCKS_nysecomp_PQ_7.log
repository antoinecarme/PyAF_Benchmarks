BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  PQ N= 1251 H= 7 HEAD= [8.08 8.13 8.16 7.62 7.65] TAIL= [3.38 3.37 3.38 3.3  3.18]
     PQ       Date
0  8.08 2011-07-28
1  8.13 2011-07-29
2  8.16 2011-08-01
3  7.62 2011-08-02
4  7.65 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   PQ      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['PQ'], 'Transformations': [('PQ', 'None', '_', 'T+S+R'), ('PQ', 'None', 'Diff_', 'T+S+R'), ('PQ', 'None', 'RelDiff_', 'T+S+R'), ('PQ', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PQ', 'Transformation': '_PQ'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.926, ('TRAINING', {'Signal': 'PQ', 'Transformation': '_PQ'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PQ', 'Transformation': 'Diff_PQ'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.775, ('TRAINING', {'Signal': 'PQ', 'Transformation': 'Diff_PQ'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PQ', 'Transformation': 'RelDiff_PQ'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.319, ('TRAINING', {'Signal': 'PQ', 'Transformation': 'RelDiff_PQ'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PQ', 'Transformation': 'CumSum_PQ'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.461, ('TRAINING', {'Signal': 'PQ', 'Transformation': 'CumSum_PQ'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.482, ('SIGNAL_TRAINING', {'Signals': ['PQ'], 'Transformations': [('PQ', 'None', '_', 'T+S+R'), ('PQ', 'None', 'Diff_', 'T+S+R'), ('PQ', 'None', 'RelDiff_', 'T+S+R'), ('PQ', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['PQ'], 'Transformations': [('PQ', [('PQ', 'None', 'CumSum_', 'T+S+R'), ('PQ', 'None', 'Diff_', 'T+S+R'), ('PQ', 'None', 'RelDiff_', 'T+S+R'), ('PQ', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'PQ', 'Transformations': [('PQ', 'None', 'CumSum_', 'T+S+R'), ('PQ', 'None', 'Diff_', 'T+S+R'), ('PQ', 'None', 'RelDiff_', 'T+S+R'), ('PQ', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'PQ', 'Transformations': [('PQ', 'None', 'CumSum_', 'T+S+R'), ('PQ', 'None', 'Diff_', 'T+S+R'), ('PQ', 'None', 'RelDiff_', 'T+S+R'), ('PQ', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PQ', 'Model': '_PQ_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PQ', 'Model': '_PQ_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PQ'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PQ'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('FINALIZE_TRAINING', {'Signals': ['PQ'], 'Transformations': [('PQ', [('PQ', 'None', 'CumSum_', 'T+S+R'), ('PQ', 'None', 'Diff_', 'T+S+R'), ('PQ', 'None', 'RelDiff_', 'T+S+R'), ('PQ', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='PQ' Length=1251  Min=0.33 Max=8.16  Mean=4.225851318944835 StdDev=2.020046846799757
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_PQ' Min=0.0 Max=1.0  Mean=0.4975544468639638 StdDev=0.25798810303956077
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_PQ_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_PQ_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_PQ_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_PQ_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0266 MAPE_Forecast=0.0531 MAPE_Test=0.0205
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0265 SMAPE_Forecast=0.0542 SMAPE_Test=0.0205
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9994 MASE_Test=1.033
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4225438905051574 CRPS_Forecast=0.20471194141270965 CRPS_Test=0.037142857142857144
INFO:pyaf.std:MODEL_L1 L1_Fit=0.13078391959798993 L1_Forecast=0.059277108433734946 L1_Test=0.06714285714285705
INFO:pyaf.std:MODEL_L2 L2_Fit=0.18582344243607687 L2_Forecast=0.13540064007726602 L2_Test=0.07846746368491112
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.3379316918342579 LnQ_Forecast=2.5240639691275053 LnQ_Test=0.004037945430890817
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.09999999999999964 MedAE_Forecast=0.030000000000000027 MedAE_Test=0.08000000000000007
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9897828863346104
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _PQ_Lag1Trend_residue_bestCycle_byMAPE None -0.0012771392081736277 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None            _PQ             T+S+R  ...  0.0265       0.0520   0.0201
1    None            _PQ             T+S+R  ...  0.0266       0.0531   0.0205
2    None            _PQ             T+S+R  ...  0.0266       0.0531   0.0205
3    None      CumSum_PQ             T+S+R  ...  0.0275       0.0531   0.0205
4    None      CumSum_PQ             T+S+R  ...  0.0275       0.0531   0.0205
..    ...            ...               ...  ...     ...          ...      ...
203  None        Diff_PQ             T+S+R  ...  1.3706      14.3166   3.8560
204  None        Diff_PQ             T+S+R  ...  1.3476      14.4107   3.7720
205  None      CumSum_PQ             T+S+R  ...  2.6383      15.6742   5.9411
206  None        Diff_PQ             T+S+R  ...  1.4926      16.4901   4.3756
207  None      CumSum_PQ             T+S+R  ...  6.1835      30.5937   8.2839

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _PQ             T+S+R  ...  0.0265       0.0520   0.0201
1  None            _PQ             T+S+R  ...  0.0266       0.0531   0.0205
2  None            _PQ             T+S+R  ...  0.0266       0.0531   0.0205
3  None      CumSum_PQ             T+S+R  ...  0.0275       0.0531   0.0205
4  None      CumSum_PQ             T+S+R  ...  0.0275       0.0531   0.0205

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['PQ'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['PQ'], 'Horizon': 7}))
7 0    3.19
1    3.18
2    3.04
3    3.01
4    3.00
5    3.03
6    3.00
Name: PQ, dtype: float64
7 0    3.18
1    3.18
2    3.18
3    3.18
4    3.18
5    3.18
6    3.18
Name: PQ_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_PQ PQ [3.19, 3.18, 3.04, 3.01, 3.0, 3.03, 3.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_PQ PQ [3.18, 3.18, 3.18, 3.18, 3.18, 3.18, 3.18]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_PQ PQ 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_PQ PQ 11.959864377975464
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_PQ PQ Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_PQ PQ 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_PQ PQ 0.0393 0.0383 2.8457
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_PQ PQ 0.1185714285714287 0.13933515606007613 -2.2225609679681857
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_PQ_7'
