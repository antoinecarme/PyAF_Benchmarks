BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SWM N= 1251 H= 7 HEAD= [56.689999 56.110001 55.990002 55.060001 55.299999] TAIL= [37.060001 37.689999 38.029999 38.25     37.919998]
         SWM       Date
0  56.689999 2011-07-28
1  56.110001 2011-07-29
2  55.990002 2011-08-01
3  55.060001 2011-08-02
4  55.299999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   SWM     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SWM'], 'Transformations': [('SWM', 'None', '_', 'T+S+R'), ('SWM', 'None', 'Diff_', 'T+S+R'), ('SWM', 'None', 'RelDiff_', 'T+S+R'), ('SWM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWM', 'Transformation': '_SWM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.107, ('TRAINING', {'Signal': 'SWM', 'Transformation': '_SWM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWM', 'Transformation': 'Diff_SWM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.824, ('TRAINING', {'Signal': 'SWM', 'Transformation': 'Diff_SWM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWM', 'Transformation': 'RelDiff_SWM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.196, ('TRAINING', {'Signal': 'SWM', 'Transformation': 'RelDiff_SWM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWM', 'Transformation': 'CumSum_SWM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.47, ('TRAINING', {'Signal': 'SWM', 'Transformation': 'CumSum_SWM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.598, ('SIGNAL_TRAINING', {'Signals': ['SWM'], 'Transformations': [('SWM', 'None', '_', 'T+S+R'), ('SWM', 'None', 'Diff_', 'T+S+R'), ('SWM', 'None', 'RelDiff_', 'T+S+R'), ('SWM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SWM'], 'Transformations': [('SWM', [('SWM', 'None', 'CumSum_', 'T+S+R'), ('SWM', 'None', 'Diff_', 'T+S+R'), ('SWM', 'None', 'RelDiff_', 'T+S+R'), ('SWM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SWM', 'Transformations': [('SWM', 'None', 'CumSum_', 'T+S+R'), ('SWM', 'None', 'Diff_', 'T+S+R'), ('SWM', 'None', 'RelDiff_', 'T+S+R'), ('SWM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'SWM', 'Transformations': [('SWM', 'None', 'CumSum_', 'T+S+R'), ('SWM', 'None', 'Diff_', 'T+S+R'), ('SWM', 'None', 'RelDiff_', 'T+S+R'), ('SWM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SWM', 'Model': '_SWM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SWM', 'Model': '_SWM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SWM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SWM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['SWM'], 'Transformations': [('SWM', [('SWM', 'None', 'CumSum_', 'T+S+R'), ('SWM', 'None', 'Diff_', 'T+S+R'), ('SWM', 'None', 'RelDiff_', 'T+S+R'), ('SWM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SWM' Length=1251  Min=29.26 Max=73.900002  Mean=47.176283007993625 StdDev=11.859179700137393
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SWM' Min=0.0 Max=1.0  Mean=0.4013504078246585 StdDev=0.2656626157888038
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SWM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SWM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SWM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SWM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0129 MAPE_Forecast=0.013 MAPE_Test=0.0158
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0125 SMAPE_Forecast=0.0129 SMAPE_Test=0.016
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9979 MASE_Test=1.0316
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.420376639916689 CRPS_Forecast=1.056161369428396 CRPS_Test=0.6257139285714283
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6421607959798994 L1_Forecast=0.46779108835341365 L1_Test=0.5828574285714286
INFO:pyaf.std:MODEL_L2 L2_Fit=1.4310311533413762 L2_Forecast=0.6853052854160288 L2_Test=0.6431620324637152
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.8159304938644882 LnQ_Forecast=0.08874490103655475 LnQ_Test=0.0022077922928275978
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4100000000000037 MedAE_Forecast=0.35000300000000095 MedAE_Test=0.6299980000000005
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6144712762333658
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SWM_Lag1Trend_residue_bestCycle_byMAPE None 0.0006720205792103418 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None           _SWM             T+S+R  ...  0.0129       0.0130   0.0158
1    None           _SWM             T+S+R  ...  0.0129       0.0130   0.0158
2    None     CumSum_SWM             T+S+R  ...  0.0134       0.0130   0.0158
3    None     CumSum_SWM             T+S+R  ...  0.0134       0.0130   0.0158
4    None       Diff_SWM             T+S+R  ...  0.0129       0.0130   0.0158
..    ...            ...               ...  ...     ...          ...      ...
203  None    RelDiff_SWM             T+S+R  ...  1.8425       8.7555  39.3846
204  None    RelDiff_SWM             T+S+R  ...  1.9144       9.1551  11.6177
205  None    RelDiff_SWM             T+S+R  ...  1.7463       9.3103  41.3323
206  None    RelDiff_SWM             T+S+R  ...  1.7463       9.3103  41.3323
207  None     CumSum_SWM             T+S+R  ...  9.0154      12.6157  12.1020

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _SWM             T+S+R  ...  0.0129        0.013   0.0158
1  None           _SWM             T+S+R  ...  0.0129        0.013   0.0158
2  None     CumSum_SWM             T+S+R  ...  0.0134        0.013   0.0158
3  None     CumSum_SWM             T+S+R  ...  0.0134        0.013   0.0158
4  None       Diff_SWM             T+S+R  ...  0.0129        0.013   0.0158

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SWM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.159, ('FORECASTING', {'Signals': ['SWM'], 'Horizon': 7}))
7 0    37.919998
1    37.799999
2    37.560001
3    37.720001
4    37.889999
5    38.040001
6    38.490002
Name: SWM, dtype: float64
7 0    37.919998
1    37.919998
2    37.919998
3    37.919998
4    37.919998
5    37.919998
6    37.919998
Name: SWM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SWM SWM [37.919998, 37.799999, 37.560001, 37.720001, 37.889999, 38.040001, 38.490002]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SWM SWM [37.919998, 37.919998, 37.919998, 37.919998, 37.919998, 37.919998, 37.919998]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SWM SWM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SWM SWM 12.089477777481079
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SWM SWM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SWM SWM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SWM SWM 0.0053 0.0053 0.9302
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SWM SWM 0.19999985714285526 0.27365296585404203 -0.00010885751571398927
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_SWM_7'
