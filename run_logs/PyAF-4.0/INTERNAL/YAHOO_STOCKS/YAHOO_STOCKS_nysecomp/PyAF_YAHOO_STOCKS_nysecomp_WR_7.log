BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  WR N= 1251 H= 7 HEAD= [26.02     25.809999 25.860001 25.690001 25.530001] TAIL= [55.959999 56.009998 56.330002 56.220001 56.360001]
          WR       Date
0  26.020000 2011-07-28
1  25.809999 2011-07-29
2  25.860001 2011-08-01
3  25.690001 2011-08-02
4  25.530001 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   WR      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['WR'], 'Transformations': [('WR', 'None', '_', 'T+S+R'), ('WR', 'None', 'Diff_', 'T+S+R'), ('WR', 'None', 'RelDiff_', 'T+S+R'), ('WR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WR', 'Transformation': '_WR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.327, ('TRAINING', {'Signal': 'WR', 'Transformation': '_WR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WR', 'Transformation': 'Diff_WR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.943, ('TRAINING', {'Signal': 'WR', 'Transformation': 'Diff_WR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WR', 'Transformation': 'RelDiff_WR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.223, ('TRAINING', {'Signal': 'WR', 'Transformation': 'RelDiff_WR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WR', 'Transformation': 'CumSum_WR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.784, ('TRAINING', {'Signal': 'WR', 'Transformation': 'CumSum_WR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.28, ('SIGNAL_TRAINING', {'Signals': ['WR'], 'Transformations': [('WR', 'None', '_', 'T+S+R'), ('WR', 'None', 'Diff_', 'T+S+R'), ('WR', 'None', 'RelDiff_', 'T+S+R'), ('WR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['WR'], 'Transformations': [('WR', [('WR', 'None', 'CumSum_', 'T+S+R'), ('WR', 'None', 'Diff_', 'T+S+R'), ('WR', 'None', 'RelDiff_', 'T+S+R'), ('WR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'WR', 'Transformations': [('WR', 'None', 'CumSum_', 'T+S+R'), ('WR', 'None', 'Diff_', 'T+S+R'), ('WR', 'None', 'RelDiff_', 'T+S+R'), ('WR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'WR', 'Transformations': [('WR', 'None', 'CumSum_', 'T+S+R'), ('WR', 'None', 'Diff_', 'T+S+R'), ('WR', 'None', 'RelDiff_', 'T+S+R'), ('WR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'WR', 'Model': '_WR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'WR', 'Model': '_WR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'WR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'WR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['WR'], 'Transformations': [('WR', [('WR', 'None', 'CumSum_', 'T+S+R'), ('WR', 'None', 'Diff_', 'T+S+R'), ('WR', 'None', 'RelDiff_', 'T+S+R'), ('WR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='WR' Length=1251  Min=22.76 Max=56.470001  Mean=34.8934052765788 StdDev=6.8552526276979915
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_WR' Min=0.0 Max=1.0  Mean=0.3599348833178242 StdDev=0.20335960914679274
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_WR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_WR_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_WR_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_WR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0077 MAPE_Forecast=0.01 MAPE_Test=0.003
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0077 SMAPE_Forecast=0.01 SMAPE_Test=0.003
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9982 MASE_Test=0.9365
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.2503695605421843 CRPS_Forecast=1.7452629031589892 CRPS_Test=0.06857164285714136
INFO:pyaf.std:MODEL_L1 L1_Fit=0.24803014472361803 L1_Forecast=0.4298394779116463 L1_Test=0.16857157142856696
INFO:pyaf.std:MODEL_L2 L2_Fit=0.32812954244515424 L2_Forecast=0.5996763230049718 L2_Test=0.2179128987275776
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.10255310733645207 LnQ_Forecast=0.04729534119155158 LnQ_Test=0.00010528497476493018
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.1999980000000008 MedAE_Forecast=0.3400000000000034 MedAE_Test=0.11000100000000401
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0967072056746601
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _WR_Lag1Trend_residue_bestCycle_byMAPE None 0.0002967071997416748 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None            _WR             T+S+R  ...   0.0076       0.0099    0.0030
1    None            _WR             T+S+R  ...   0.0077       0.0100    0.0030
2    None            _WR             T+S+R  ...   0.0077       0.0100    0.0030
3    None      CumSum_WR             T+S+R  ...   0.0078       0.0100    0.0030
4    None        Diff_WR             T+S+R  ...   0.0077       0.0100    0.0030
..    ...            ...               ...  ...      ...          ...       ...
219  None     RelDiff_WR             T+S+R  ...   8.1921      31.1998  168.9764
220  None     RelDiff_WR             T+S+R  ...   3.3464      32.4239   49.0637
221  None     RelDiff_WR             T+S+R  ...   3.3464      32.4239   49.0637
222  None     RelDiff_WR             T+S+R  ...  14.1903      56.1199  193.6547
223  None     RelDiff_WR             T+S+R  ...  14.1903      56.1199  193.6547

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _WR             T+S+R  ...  0.0076       0.0099    0.003
1  None            _WR             T+S+R  ...  0.0077       0.0100    0.003
2  None            _WR             T+S+R  ...  0.0077       0.0100    0.003
3  None      CumSum_WR             T+S+R  ...  0.0078       0.0100    0.003
4  None        Diff_WR             T+S+R  ...  0.0077       0.0100    0.003

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['WR'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['WR'], 'Horizon': 7}))
7 0    56.340000
1    56.220001
2    56.250000
3    56.230000
4    56.130001
5    55.500000
6    55.500000
Name: WR, dtype: float64
7 0    56.360001
1    56.360001
2    56.360001
3    56.360001
4    56.360001
5    56.360001
6    56.360001
Name: WR_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_WR WR [56.34, 56.220001, 56.25, 56.23, 56.130001, 55.5, 55.5]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_WR WR [56.360001, 56.360001, 56.360001, 56.360001, 56.360001, 56.360001, 56.360001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_WR WR 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_WR WR 12.767399549484253
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_WR WR Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_WR WR 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_WR WR 0.006 0.006 2.2381
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_WR WR 0.3357149999999964 0.47525992287002955 -0.9959098492170171
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_WR_7'
