BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ARW N= 1251 H= 7 HEAD= [34.689999 34.75     34.169998 32.84     33.150002] TAIL= [64.32     64.010002 64.540001 65.07     65.169998]
         ARW       Date
0  34.689999 2011-07-28
1  34.750000 2011-07-29
2  34.169998 2011-08-01
3  32.840000 2011-08-02
4  33.150002 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ARW     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ARW'], 'Transformations': [('ARW', 'None', '_', 'T+S+R'), ('ARW', 'None', 'Diff_', 'T+S+R'), ('ARW', 'None', 'RelDiff_', 'T+S+R'), ('ARW', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARW', 'Transformation': '_ARW'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.355, ('TRAINING', {'Signal': 'ARW', 'Transformation': '_ARW'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARW', 'Transformation': 'Diff_ARW'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.786, ('TRAINING', {'Signal': 'ARW', 'Transformation': 'Diff_ARW'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARW', 'Transformation': 'RelDiff_ARW'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.126, ('TRAINING', {'Signal': 'ARW', 'Transformation': 'RelDiff_ARW'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARW', 'Transformation': 'CumSum_ARW'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.802, ('TRAINING', {'Signal': 'ARW', 'Transformation': 'CumSum_ARW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.07, ('SIGNAL_TRAINING', {'Signals': ['ARW'], 'Transformations': [('ARW', 'None', '_', 'T+S+R'), ('ARW', 'None', 'Diff_', 'T+S+R'), ('ARW', 'None', 'RelDiff_', 'T+S+R'), ('ARW', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ARW'], 'Transformations': [('ARW', [('ARW', 'None', 'CumSum_', 'T+S+R'), ('ARW', 'None', 'Diff_', 'T+S+R'), ('ARW', 'None', 'RelDiff_', 'T+S+R'), ('ARW', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ARW', 'Transformations': [('ARW', 'None', 'CumSum_', 'T+S+R'), ('ARW', 'None', 'Diff_', 'T+S+R'), ('ARW', 'None', 'RelDiff_', 'T+S+R'), ('ARW', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.129, ('MODEL_SELECTION', {'Signal': 'ARW', 'Transformations': [('ARW', 'None', 'CumSum_', 'T+S+R'), ('ARW', 'None', 'Diff_', 'T+S+R'), ('ARW', 'None', 'RelDiff_', 'T+S+R'), ('ARW', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ARW', 'Model': '_ARW_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ARW', 'Model': '_ARW_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ARW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ARW'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.344, ('FINALIZE_TRAINING', {'Signals': ['ARW'], 'Transformations': [('ARW', [('ARW', 'None', 'CumSum_', 'T+S+R'), ('ARW', 'None', 'Diff_', 'T+S+R'), ('ARW', 'None', 'RelDiff_', 'T+S+R'), ('ARW', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ARW' Length=1251  Min=25.98 Max=67.989998  Mean=48.86944841646682 StdDev=10.716868187374393
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ARW' Min=0.0 Max=1.0  Mean=0.544857165107859 StdDev=0.25510280165627225
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ARW_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ARW_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ARW_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ARW_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0134 MAPE_Forecast=0.014 MAPE_Test=0.011
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0134 SMAPE_Forecast=0.014 SMAPE_Test=0.0111
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9988 MASE_Test=1.5479
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.150848451496959 CRPS_Forecast=1.2818562677794476 CRPS_Test=0.4792857142857118
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5819195708542713 L1_Forecast=0.7979919357429717 L1_Test=0.7042848571428542
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7861733129358702 L2_Forecast=1.0769788582174475 L2_Test=0.9886851195996134
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3494367507443613 LnQ_Forecast=0.0905442379275872 LnQ_Test=0.001741173561436274
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4500009999999932 MedAE_Forecast=0.5899999999999892 MedAE_Test=0.5299989999999895
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.20733157378393594
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ARW_Lag1Trend_residue_bestCycle_byMAPE None 0.0007140919168814319 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None           _ARW             T+S+R  ...    0.0133       0.0139     0.0106
1    None           _ARW             T+S+R  ...    0.0134       0.0140     0.0110
2    None           _ARW             T+S+R  ...    0.0134       0.0140     0.0110
3    None     CumSum_ARW             T+S+R  ...    0.0136       0.0140     0.0110
4    None       Diff_ARW             T+S+R  ...    0.0134       0.0140     0.0110
..    ...            ...               ...  ...       ...          ...        ...
219  None    RelDiff_ARW             T+S+R  ...   46.3777     166.6155   629.0219
220  None    RelDiff_ARW             T+S+R  ...   22.8515     427.4608   852.8341
221  None    RelDiff_ARW             T+S+R  ...   22.8515     427.4608   852.8341
222  None    RelDiff_ARW             T+S+R  ...  118.2771     458.8668  1517.6837
223  None    RelDiff_ARW             T+S+R  ...  118.2771     458.8668  1517.6837

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _ARW             T+S+R  ...  0.0133       0.0139   0.0106
1  None           _ARW             T+S+R  ...  0.0134       0.0140   0.0110
2  None           _ARW             T+S+R  ...  0.0134       0.0140   0.0110
3  None     CumSum_ARW             T+S+R  ...  0.0136       0.0140   0.0110
4  None       Diff_ARW             T+S+R  ...  0.0134       0.0140   0.0110

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ARW'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['ARW'], 'Horizon': 7}))
7 0    65.430000
1    66.120003
2    65.959999
3    65.809998
4    65.750000
5    66.160004
6    66.080002
Name: ARW, dtype: float64
7 0    65.169998
1    65.169998
2    65.169998
3    65.169998
4    65.169998
5    65.169998
6    65.169998
Name: ARW_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ARW ARW [65.43, 66.120003, 65.959999, 65.809998, 65.75, 66.160004, 66.080002]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ARW ARW [65.169998, 65.169998, 65.169998, 65.169998, 65.169998, 65.169998, 65.169998]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ARW ARW 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ARW ARW 12.679013013839722
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ARW ARW Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ARW ARW 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ARW ARW 0.0111 0.0112 2.8313
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ARW ARW 0.73143142857142 0.7698268451027435 -9.281377509365488
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_ARW_7'
