BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  DAC N= 1251 H= 7 HEAD= [4.39 4.43 4.46 4.28 4.08] TAIL= [4.45 4.34 4.11 4.17 4.48]
    DAC       Date
0  4.39 2011-07-28
1  4.43 2011-07-29
2  4.46 2011-08-01
3  4.28 2011-08-02
4  4.08 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   DAC     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['DAC'], 'Transformations': [('DAC', 'None', '_', 'T+S+R'), ('DAC', 'None', 'Diff_', 'T+S+R'), ('DAC', 'None', 'RelDiff_', 'T+S+R'), ('DAC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DAC', 'Transformation': '_DAC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.472, ('TRAINING', {'Signal': 'DAC', 'Transformation': '_DAC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DAC', 'Transformation': 'Diff_DAC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.937, ('TRAINING', {'Signal': 'DAC', 'Transformation': 'Diff_DAC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DAC', 'Transformation': 'RelDiff_DAC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.153, ('TRAINING', {'Signal': 'DAC', 'Transformation': 'RelDiff_DAC'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'DAC', 'Transformation': 'CumSum_DAC'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.788, ('TRAINING', {'Signal': 'DAC', 'Transformation': 'CumSum_DAC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.352, ('SIGNAL_TRAINING', {'Signals': ['DAC'], 'Transformations': [('DAC', 'None', '_', 'T+S+R'), ('DAC', 'None', 'Diff_', 'T+S+R'), ('DAC', 'None', 'RelDiff_', 'T+S+R'), ('DAC', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['DAC'], 'Transformations': [('DAC', [('DAC', 'None', 'CumSum_', 'T+S+R'), ('DAC', 'None', 'Diff_', 'T+S+R'), ('DAC', 'None', 'RelDiff_', 'T+S+R'), ('DAC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'DAC', 'Transformations': [('DAC', 'None', 'CumSum_', 'T+S+R'), ('DAC', 'None', 'Diff_', 'T+S+R'), ('DAC', 'None', 'RelDiff_', 'T+S+R'), ('DAC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'DAC', 'Transformations': [('DAC', 'None', 'CumSum_', 'T+S+R'), ('DAC', 'None', 'Diff_', 'T+S+R'), ('DAC', 'None', 'RelDiff_', 'T+S+R'), ('DAC', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DAC', 'Model': '_DAC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'DAC', 'Model': '_DAC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DAC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.187, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'DAC'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['DAC'], 'Transformations': [('DAC', [('DAC', 'None', 'CumSum_', 'T+S+R'), ('DAC', 'None', 'Diff_', 'T+S+R'), ('DAC', 'None', 'RelDiff_', 'T+S+R'), ('DAC', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='DAC' Length=1251  Min=2.43 Max=7.63  Mean=4.718697042366105 StdDev=1.1960740388697
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_DAC' Min=0.0 Max=1.0  Mean=0.44013404660886657 StdDev=0.23001423824417333
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_DAC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_DAC_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_DAC_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_DAC_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0239 MAPE_Forecast=0.0211 MAPE_Test=0.0639
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0239 SMAPE_Forecast=0.021 SMAPE_Test=0.0671
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0018 MASE_Test=1.4388
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.35877693731816984 CRPS_Forecast=0.31213942263170324 CRPS_Test=0.12500000000000003
INFO:pyaf.std:MODEL_L1 L1_Fit=0.10577889447236181 L1_Forecast=0.097429718875502 L1_Test=0.2685714285714286
INFO:pyaf.std:MODEL_L2 L2_Fit=0.1682260384126072 L2_Forecast=0.1397760687585337 L2_Test=0.34409301068170517
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.6851534892858138 LnQ_Forecast=0.2381057000303599 LnQ_Test=0.05722190335707873
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.07000000000000028 MedAE_Forecast=0.07000000000000028 MedAE_Test=0.22999999999999954
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.37692307692307686
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _DAC_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _DAC  ...  2.110000e-02  6.390000e-02
1    None           _DAC  ...  2.110000e-02  6.390000e-02
2    None     CumSum_DAC  ...  2.110000e-02  6.390000e-02
3    None       Diff_DAC  ...  2.110000e-02  6.390000e-02
4    None       Diff_DAC  ...  2.110000e-02  6.390000e-02
..    ...            ...  ...           ...           ...
219  None    RelDiff_DAC  ...  4.178169e+07  4.599378e+07
220  None    RelDiff_DAC  ...  4.178169e+07  4.599378e+07
221  None    RelDiff_DAC  ...  4.178169e+07  4.599378e+07
222  None    RelDiff_DAC  ...  4.178169e+07  4.599378e+07
223  None    RelDiff_DAC  ...  4.178169e+07  4.599378e+07

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _DAC             T+S+R  ...  0.0239       0.0211   0.0639
1  None           _DAC             T+S+R  ...  0.0239       0.0211   0.0639
2  None     CumSum_DAC             T+S+R  ...  0.0244       0.0211   0.0639
3  None       Diff_DAC             T+S+R  ...  0.0239       0.0211   0.0639
4  None       Diff_DAC             T+S+R  ...  0.0239       0.0211   0.0639

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['DAC'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.273, ('FORECASTING', {'Signals': ['DAC'], 'Horizon': 7}))
7 0    4.49
1    4.74
2    4.58
3    4.41
4    4.36
5    4.38
6    4.39
Name: DAC, dtype: float64
7 0    4.48
1    4.48
2    4.48
3    4.48
4    4.48
5    4.48
6    4.48
Name: DAC_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_DAC DAC [4.49, 4.74, 4.58, 4.41, 4.36, 4.38, 4.39]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_DAC DAC [4.48, 4.48, 4.48, 4.48, 4.48, 4.48, 4.48]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_DAC DAC 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_DAC DAC 12.96820592880249
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_DAC DAC Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_DAC DAC 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_DAC DAC 0.0237 0.0238 0.974
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_DAC DAC 0.10714285714285728 0.1282297046041094 -0.00012413021339763297
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_DAC_7'
