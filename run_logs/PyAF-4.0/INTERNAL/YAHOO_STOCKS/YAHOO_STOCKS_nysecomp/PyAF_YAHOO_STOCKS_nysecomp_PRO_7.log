BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  PRO N= 1251 H= 7 HEAD= [16.450001 16.32     16.       15.82     15.97    ] TAIL= [17.950001 17.540001 17.18     17.27     17.35    ]
         PRO       Date
0  16.450001 2011-07-28
1  16.320000 2011-07-29
2  16.000000 2011-08-01
3  15.820000 2011-08-02
4  15.970000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   PRO     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['PRO'], 'Transformations': [('PRO', 'None', '_', 'T+S+R'), ('PRO', 'None', 'Diff_', 'T+S+R'), ('PRO', 'None', 'RelDiff_', 'T+S+R'), ('PRO', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRO', 'Transformation': '_PRO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.184, ('TRAINING', {'Signal': 'PRO', 'Transformation': '_PRO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRO', 'Transformation': 'Diff_PRO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.777, ('TRAINING', {'Signal': 'PRO', 'Transformation': 'Diff_PRO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRO', 'Transformation': 'RelDiff_PRO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.322, ('TRAINING', {'Signal': 'PRO', 'Transformation': 'RelDiff_PRO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRO', 'Transformation': 'CumSum_PRO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.751, ('TRAINING', {'Signal': 'PRO', 'Transformation': 'CumSum_PRO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.036, ('SIGNAL_TRAINING', {'Signals': ['PRO'], 'Transformations': [('PRO', 'None', '_', 'T+S+R'), ('PRO', 'None', 'Diff_', 'T+S+R'), ('PRO', 'None', 'RelDiff_', 'T+S+R'), ('PRO', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['PRO'], 'Transformations': [('PRO', [('PRO', 'None', 'CumSum_', 'T+S+R'), ('PRO', 'None', 'Diff_', 'T+S+R'), ('PRO', 'None', 'RelDiff_', 'T+S+R'), ('PRO', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'PRO', 'Transformations': [('PRO', 'None', 'CumSum_', 'T+S+R'), ('PRO', 'None', 'Diff_', 'T+S+R'), ('PRO', 'None', 'RelDiff_', 'T+S+R'), ('PRO', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'PRO', 'Transformations': [('PRO', 'None', 'CumSum_', 'T+S+R'), ('PRO', 'None', 'Diff_', 'T+S+R'), ('PRO', 'None', 'RelDiff_', 'T+S+R'), ('PRO', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PRO', 'Model': '_PRO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PRO', 'Model': '_PRO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PRO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PRO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['PRO'], 'Transformations': [('PRO', [('PRO', 'None', 'CumSum_', 'T+S+R'), ('PRO', 'None', 'Diff_', 'T+S+R'), ('PRO', 'None', 'RelDiff_', 'T+S+R'), ('PRO', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='PRO' Length=1251  Min=9.28 Max=41.060001  Mean=22.600183890487582 StdDev=7.163703878251913
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_PRO' Min=0.0 Max=1.0  Mean=0.41913730243392966 StdDev=0.22541547051090116
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_PRO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_PRO_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_PRO_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_PRO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0208 MAPE_Forecast=0.0224 MAPE_Test=0.0149
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0208 SMAPE_Forecast=0.0223 SMAPE_Test=0.0149
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9971 MASE_Test=1.012
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.1145368897487438 CRPS_Forecast=1.4299854410657216 CRPS_Test=0.1307145000000001
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4663015145728643 L1_Forecast=0.369959875502008 L1_Test=0.2614290000000002
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6834879987411357 L2_Forecast=0.5476397469598978 L2_Test=0.30535728487953256
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.9360014144501774 LnQ_Forecast=0.2953535467815683 LnQ_Test=0.0021235337637920313
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.33000000000000185 MedAE_Forecast=0.27000099999999705 MedAE_Test=0.2800009999999986
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.22561361782210143
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _PRO_Lag1Trend_residue_bestCycle_byMAPE None 0.0006293266007134646 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None           _PRO             T+S+R  ...   0.0208       0.0224   0.0149
1    None           _PRO             T+S+R  ...   0.0208       0.0224   0.0149
2    None     CumSum_PRO             T+S+R  ...   0.0212       0.0224   0.0149
3    None     CumSum_PRO             T+S+R  ...   0.0212       0.0224   0.0149
4    None       Diff_PRO             T+S+R  ...   0.0208       0.0224   0.0149
..    ...            ...               ...  ...      ...          ...      ...
219  None     CumSum_PRO             T+S+R  ...  18.0515      24.8174   7.3440
220  None     CumSum_PRO             T+S+R  ...  22.2574      32.8260  45.7173
221  None     CumSum_PRO             T+S+R  ...  20.7174      33.6088  29.1544
222  None     CumSum_PRO             T+S+R  ...  23.5753      35.0947  16.5480
223  None     CumSum_PRO             T+S+R  ...  27.5283      37.8494  34.8327

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _PRO             T+S+R  ...  0.0208       0.0224   0.0149
1  None           _PRO             T+S+R  ...  0.0208       0.0224   0.0149
2  None     CumSum_PRO             T+S+R  ...  0.0212       0.0224   0.0149
3  None     CumSum_PRO             T+S+R  ...  0.0212       0.0224   0.0149
4  None       Diff_PRO             T+S+R  ...  0.0208       0.0224   0.0149

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['PRO'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['PRO'], 'Horizon': 7}))
7 0    17.209999
1    17.870001
2    17.540001
3    17.879999
4    18.209999
5    18.360001
6    18.430000
Name: PRO, dtype: float64
7 0    17.35
1    17.35
2    17.35
3    17.35
4    17.35
5    17.35
6    17.35
Name: PRO_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_PRO PRO [17.209999, 17.870001, 17.540001, 17.879999, 18.209999, 18.360001, 18.43]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_PRO PRO [17.35, 17.35, 17.35, 17.35, 17.35, 17.35, 17.35]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_PRO PRO 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_PRO PRO 12.519511461257935
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_PRO PRO Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_PRO PRO 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_PRO PRO 0.0341 0.0348 1.9742
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_PRO PRO 0.6185717142857133 0.7104426125417458 -1.9692752053027736
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_PRO_7'
