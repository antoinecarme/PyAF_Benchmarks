BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ARL N= 1251 H= 7 HEAD= [2.09 2.24 2.11 2.11 2.1 ] TAIL= [7.04 7.1  6.78 6.75 6.83]
    ARL       Date
0  2.09 2011-07-28
1  2.24 2011-07-29
2  2.11 2011-08-01
3  2.11 2011-08-02
4  2.10 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ARL     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ARL'], 'Transformations': [('ARL', 'None', '_', 'T+S+R'), ('ARL', 'None', 'Diff_', 'T+S+R'), ('ARL', 'None', 'RelDiff_', 'T+S+R'), ('ARL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARL', 'Transformation': '_ARL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.311, ('TRAINING', {'Signal': 'ARL', 'Transformation': '_ARL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARL', 'Transformation': 'Diff_ARL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.434, ('TRAINING', {'Signal': 'ARL', 'Transformation': 'Diff_ARL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARL', 'Transformation': 'RelDiff_ARL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.098, ('TRAINING', {'Signal': 'ARL', 'Transformation': 'RelDiff_ARL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARL', 'Transformation': 'CumSum_ARL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.716, ('TRAINING', {'Signal': 'ARL', 'Transformation': 'CumSum_ARL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.563, ('SIGNAL_TRAINING', {'Signals': ['ARL'], 'Transformations': [('ARL', 'None', '_', 'T+S+R'), ('ARL', 'None', 'Diff_', 'T+S+R'), ('ARL', 'None', 'RelDiff_', 'T+S+R'), ('ARL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ARL'], 'Transformations': [('ARL', [('ARL', 'None', 'CumSum_', 'T+S+R'), ('ARL', 'None', 'Diff_', 'T+S+R'), ('ARL', 'None', 'RelDiff_', 'T+S+R'), ('ARL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ARL', 'Transformations': [('ARL', 'None', 'CumSum_', 'T+S+R'), ('ARL', 'None', 'Diff_', 'T+S+R'), ('ARL', 'None', 'RelDiff_', 'T+S+R'), ('ARL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'ARL', 'Transformations': [('ARL', 'None', 'CumSum_', 'T+S+R'), ('ARL', 'None', 'Diff_', 'T+S+R'), ('ARL', 'None', 'RelDiff_', 'T+S+R'), ('ARL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ARL', 'Model': '_ARL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ARL', 'Model': '_ARL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ARL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ARL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.219, ('FINALIZE_TRAINING', {'Signals': ['ARL'], 'Transformations': [('ARL', [('ARL', 'None', 'CumSum_', 'T+S+R'), ('ARL', 'None', 'Diff_', 'T+S+R'), ('ARL', 'None', 'RelDiff_', 'T+S+R'), ('ARL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ARL' Length=1251  Min=1.23 Max=10.48  Mean=4.503501199040765 StdDev=1.9413121278085324
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ARL' Min=0.0 Max=1.0  Mean=0.3538920215179208 StdDev=0.20987158138470652
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ARL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ARL_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ARL_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_ARL_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0309 MAPE_Forecast=0.0248 MAPE_Test=0.0204
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0311 SMAPE_Forecast=0.0248 SMAPE_Test=0.0204
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9969 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5932620206294632 CRPS_Forecast=0.2679819399952753 CRPS_Test=0.08428571428571427
INFO:pyaf.std:MODEL_L1 L1_Fit=0.1184522613065327 L1_Forecast=0.1319678714859439 L1_Test=0.14000000000000018
INFO:pyaf.std:MODEL_L2 L2_Fit=0.1936312612328732 L2_Forecast=0.204159556469914 L2_Test=0.18415831698374532
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.653871440525212 LnQ_Forecast=0.3631788814693222 LnQ_Test=0.005064820819254252
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.07000000000000028 MedAE_Forecast=0.08999999999999986 MedAE_Test=0.08000000000000185
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.09297297297297295
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _ARL_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _ARL  ...  2.480000e-02  2.040000e-02
1    None     CumSum_ARL  ...  2.480000e-02  2.040000e-02
2    None       Diff_ARL  ...  2.480000e-02  2.040000e-02
3    None    RelDiff_ARL  ...  2.480000e-02  2.040000e-02
4    None           _ARL  ...  2.480000e-02  2.060000e-02
..    ...            ...  ...           ...           ...
211  None    RelDiff_ARL  ...  2.138641e+06  3.064343e+03
212  None    RelDiff_ARL  ...  1.630395e+07  1.257829e+07
213  None    RelDiff_ARL  ...  1.630395e+07  1.257829e+07
214  None    RelDiff_ARL  ...  1.640442e+07  1.257829e+07
215  None    RelDiff_ARL  ...  1.640442e+07  1.257829e+07

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _ARL             T+S+R  ...  0.0309       0.0248   0.0204
1  None     CumSum_ARL             T+S+R  ...  0.0313       0.0248   0.0204
2  None       Diff_ARL             T+S+R  ...  0.0309       0.0248   0.0204
3  None    RelDiff_ARL             T+S+R  ...  0.0656       0.0248   0.0204
4  None           _ARL             T+S+R  ...  0.0309       0.0248   0.0206

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ARL'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.259, ('FORECASTING', {'Signals': ['ARL'], 'Horizon': 7}))
7 0    6.65
1    6.86
2    6.58
3    6.16
4    6.45
5    6.44
6    6.35
Name: ARL, dtype: float64
7 0    6.83
1    6.83
2    6.83
3    6.83
4    6.83
5    6.83
6    6.83
Name: ARL_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ARL ARL [6.65, 6.86, 6.58, 6.16, 6.45, 6.44, 6.35]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ARL ARL [6.83, 6.83, 6.83, 6.83, 6.83, 6.83, 6.83]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ARL ARL 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ARL ARL 12.154737949371338
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ARL ARL Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ARL ARL 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ARL ARL 0.0533 0.0515 1.5692
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ARL ARL 0.33999999999999997 0.3912616953979961 -2.5403058323210197
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_ARL_7'
