BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AAP N= 1251 H= 7 HEAD= [54.779999 54.970001 54.200001 53.240002 54.349998] TAIL= [163.550003 162.910004 164.960007 164.589996 164.399994]
         AAP       Date
0  54.779999 2011-07-28
1  54.970001 2011-07-29
2  54.200001 2011-08-01
3  53.240002 2011-08-02
4  54.349998 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AAP     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AAP'], 'Transformations': [('AAP', 'None', '_', 'T+S+R'), ('AAP', 'None', 'Diff_', 'T+S+R'), ('AAP', 'None', 'RelDiff_', 'T+S+R'), ('AAP', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AAP', 'Transformation': '_AAP'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.323, ('TRAINING', {'Signal': 'AAP', 'Transformation': '_AAP'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AAP', 'Transformation': 'Diff_AAP'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.796, ('TRAINING', {'Signal': 'AAP', 'Transformation': 'Diff_AAP'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AAP', 'Transformation': 'RelDiff_AAP'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.153, ('TRAINING', {'Signal': 'AAP', 'Transformation': 'RelDiff_AAP'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AAP', 'Transformation': 'CumSum_AAP'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.817, ('TRAINING', {'Signal': 'AAP', 'Transformation': 'CumSum_AAP'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.091, ('SIGNAL_TRAINING', {'Signals': ['AAP'], 'Transformations': [('AAP', 'None', '_', 'T+S+R'), ('AAP', 'None', 'Diff_', 'T+S+R'), ('AAP', 'None', 'RelDiff_', 'T+S+R'), ('AAP', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AAP'], 'Transformations': [('AAP', [('AAP', 'None', 'CumSum_', 'T+S+R'), ('AAP', 'None', 'Diff_', 'T+S+R'), ('AAP', 'None', 'RelDiff_', 'T+S+R'), ('AAP', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AAP', 'Transformations': [('AAP', 'None', 'CumSum_', 'T+S+R'), ('AAP', 'None', 'Diff_', 'T+S+R'), ('AAP', 'None', 'RelDiff_', 'T+S+R'), ('AAP', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'AAP', 'Transformations': [('AAP', 'None', 'CumSum_', 'T+S+R'), ('AAP', 'None', 'Diff_', 'T+S+R'), ('AAP', 'None', 'RelDiff_', 'T+S+R'), ('AAP', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AAP', 'Model': '_AAP_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.044, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AAP', 'Model': '_AAP_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AAP'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.183, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AAP'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.239, ('FINALIZE_TRAINING', {'Signals': ['AAP'], 'Transformations': [('AAP', [('AAP', 'None', 'CumSum_', 'T+S+R'), ('AAP', 'None', 'Diff_', 'T+S+R'), ('AAP', 'None', 'RelDiff_', 'T+S+R'), ('AAP', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AAP' Length=1251  Min=50.040001 Max=200.380005  Mean=113.82838536930447 StdDev=38.96087296165794
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AAP' Min=0.0 Max=1.0  Mean=0.42429415107175666 StdDev=0.2591517355663897
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AAP_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AAP_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AAP_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AAP_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0109 MAPE_Forecast=0.012 MAPE_Test=0.0072
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0109 SMAPE_Forecast=0.012 SMAPE_Test=0.0072
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0003 MASE_Test=1.5579
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=9.576568104549063 CRPS_Forecast=4.183349100128325 CRPS_Test=0.5371420714285701
INFO:pyaf.std:MODEL_L1 L1_Fit=1.0739195809045226 L1_Forecast=1.951164493975904 L1_Test=1.1814312857142844
INFO:pyaf.std:MODEL_L2 L2_Fit=1.6763814294542363 L2_Forecast=3.37554184872359 L2_Test=1.6898324667659013
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2913789774079668 LnQ_Forecast=0.09999199608131602 LnQ_Test=0.0007496834516614801
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.7599950000000035 MedAE_Forecast=1.2299959999999999 MedAE_Test=0.6399990000000173
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.03152852117790285
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AAP_Lag1Trend_residue_bestCycle_byMAPE None 0.0005986164534091676 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE  TestMAPE
0    None           _AAP             T+S+R  ...  0.0109       0.0120    0.0072
1    None           _AAP             T+S+R  ...  0.0109       0.0120    0.0072
2    None     CumSum_AAP             T+S+R  ...  0.0110       0.0120    0.0072
3    None       Diff_AAP             T+S+R  ...  0.0109       0.0120    0.0072
4    None       Diff_AAP             T+S+R  ...  0.0109       0.0120    0.0072
..    ...            ...               ...  ...     ...          ...       ...
219  None    RelDiff_AAP             T+S+R  ...  3.1943      34.2474  153.8168
220  None    RelDiff_AAP             T+S+R  ...  3.1943      34.2474  153.8168
221  None    RelDiff_AAP             T+S+R  ...  3.2336      35.0518  158.0228
222  None    RelDiff_AAP             T+S+R  ...  3.4109      37.1033  162.9901
223  None    RelDiff_AAP             T+S+R  ...  3.3605      37.6267  167.7000

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _AAP             T+S+R  ...  0.0109        0.012   0.0072
1  None           _AAP             T+S+R  ...  0.0109        0.012   0.0072
2  None     CumSum_AAP             T+S+R  ...  0.0110        0.012   0.0072
3  None       Diff_AAP             T+S+R  ...  0.0109        0.012   0.0072
4  None       Diff_AAP             T+S+R  ...  0.0109        0.012   0.0072

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AAP'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['AAP'], 'Horizon': 7}))
7 0    163.699997
1    163.750000
2    164.089996
3    166.029999
4    166.669998
5    166.229996
6    164.729996
Name: AAP, dtype: float64
7 0    164.399994
1    164.399994
2    164.399994
3    164.399994
4    164.399994
5    164.399994
6    164.399994
Name: AAP_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AAP AAP [163.699997, 163.75, 164.089996, 166.029999, 166.669998, 166.229996, 164.729996]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AAP AAP [164.399994, 164.399994, 164.399994, 164.399994, 164.399994, 164.399994, 164.399994]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AAP AAP 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AAP AAP 12.589528322219849
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AAP AAP Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AAP AAP 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AAP AAP 0.0067 0.0067 1.3477
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AAP AAP 1.1028574285714277 1.3242911775252257 -0.2908100207230948
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_AAP_7'
