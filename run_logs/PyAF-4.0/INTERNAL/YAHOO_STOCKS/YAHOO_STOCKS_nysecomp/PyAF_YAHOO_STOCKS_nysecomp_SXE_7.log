BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 932 H= 7 HEAD= ['2012-11-02T00:00:00.000000000' '2012-11-05T00:00:00.000000000'
 '2012-11-06T00:00:00.000000000' '2012-11-07T00:00:00.000000000'
 '2012-11-08T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SXE N= 932 H= 7 HEAD= [22.35     23.139999 23.09     23.129999 23.01    ] TAIL= [2.06 2.01 2.04 2.06 2.07]
         SXE       Date
0  22.350000 2012-11-02
1  23.139999 2012-11-05
2  23.090000 2012-11-06
3  23.129999 2012-11-07
4  23.010000 2012-11-08
<class 'pandas.core.frame.DataFrame'>
Int64Index: 932 entries, 0 to 931
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   SXE     932 non-null    float64       
 1   Date    932 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 21.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SXE'], 'Transformations': [('SXE', 'None', '_', 'T+S+R'), ('SXE', 'None', 'Diff_', 'T+S+R'), ('SXE', 'None', 'RelDiff_', 'T+S+R'), ('SXE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXE', 'Transformation': '_SXE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.261, ('TRAINING', {'Signal': 'SXE', 'Transformation': '_SXE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXE', 'Transformation': 'Diff_SXE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.59, ('TRAINING', {'Signal': 'SXE', 'Transformation': 'Diff_SXE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXE', 'Transformation': 'RelDiff_SXE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.603, ('TRAINING', {'Signal': 'SXE', 'Transformation': 'RelDiff_SXE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXE', 'Transformation': 'CumSum_SXE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.26, ('TRAINING', {'Signal': 'SXE', 'Transformation': 'CumSum_SXE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.716, ('SIGNAL_TRAINING', {'Signals': ['SXE'], 'Transformations': [('SXE', 'None', '_', 'T+S+R'), ('SXE', 'None', 'Diff_', 'T+S+R'), ('SXE', 'None', 'RelDiff_', 'T+S+R'), ('SXE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SXE'], 'Transformations': [('SXE', [('SXE', 'None', 'CumSum_', 'T+S+R'), ('SXE', 'None', 'Diff_', 'T+S+R'), ('SXE', 'None', 'RelDiff_', 'T+S+R'), ('SXE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SXE', 'Transformations': [('SXE', 'None', 'CumSum_', 'T+S+R'), ('SXE', 'None', 'Diff_', 'T+S+R'), ('SXE', 'None', 'RelDiff_', 'T+S+R'), ('SXE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'SXE', 'Transformations': [('SXE', 'None', 'CumSum_', 'T+S+R'), ('SXE', 'None', 'Diff_', 'T+S+R'), ('SXE', 'None', 'RelDiff_', 'T+S+R'), ('SXE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SXE', 'Model': '_SXE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SXE', 'Model': '_SXE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SXE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.174, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SXE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.207, ('FINALIZE_TRAINING', {'Signals': ['SXE'], 'Transformations': [('SXE', [('SXE', 'None', 'CumSum_', 'T+S+R'), ('SXE', 'None', 'Diff_', 'T+S+R'), ('SXE', 'None', 'RelDiff_', 'T+S+R'), ('SXE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2012-11-02T00:00:00.000000 TimeMax=2015-10-12T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SXE' Length=932  Min=0.39 Max=26.25  Mean=14.810096565450657 StdDev=7.678457876192939
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SXE' Min=0.0 Max=1.0  Mean=0.5576216769315795 StdDev=0.29692412514280503
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SXE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SXE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SXE_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SXE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0178 MAPE_Forecast=0.0756 MAPE_Test=0.0133
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0177 SMAPE_Forecast=0.0739 SMAPE_Test=0.0134
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9986 MASE_Forecast=0.9946 MASE_Test=0.9048
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.4058672028733998 CRPS_Forecast=0.4368336648648648 CRPS_Test=0.013571428571428663
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2826892378378378 L1_Forecast=0.14627027027027026 L1_Test=0.027142857142857295
INFO:pyaf.std:MODEL_L2 L2_Fit=0.45595418179084257 L2_Forecast=0.24470390270692458 L2_Test=0.03139608710833729
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6199039041979719 LnQ_Forecast=2.7980281479782825 LnQ_Test=0.0016707416782035145
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.19000000000000128 MedAE_Forecast=0.07999999999999996 MedAE_Test=0.020000000000000018
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8491879350348028
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SXE_Lag1Trend_residue_bestCycle_byMAPE None -0.0003866976024748947 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None           _SXE             T+S+R  ...  0.0177       0.0750   0.0161
1    None           _SXE             T+S+R  ...  0.0178       0.0756   0.0133
2    None           _SXE             T+S+R  ...  0.0178       0.0756   0.0133
3    None     CumSum_SXE             T+S+R  ...  0.0190       0.0756   0.0133
4    None     CumSum_SXE             T+S+R  ...  0.0190       0.0756   0.0133
..    ...            ...               ...  ...     ...          ...      ...
203  None     CumSum_SXE             T+S+R  ...  1.1833      20.2698   6.8893
204  None     CumSum_SXE             T+S+R  ...  1.5381      20.2980  22.0471
205  None     CumSum_SXE             T+S+R  ...  1.7369      23.5780  24.3161
206  None     CumSum_SXE             T+S+R  ...  2.0434      27.2235  34.8929
207  None     CumSum_SXE             T+S+R  ...  5.3630      59.4270  46.2238

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _SXE             T+S+R  ...  0.0177       0.0750   0.0161
1  None           _SXE             T+S+R  ...  0.0178       0.0756   0.0133
2  None           _SXE             T+S+R  ...  0.0178       0.0756   0.0133
3  None     CumSum_SXE             T+S+R  ...  0.0190       0.0756   0.0133
4  None     CumSum_SXE             T+S+R  ...  0.0190       0.0756   0.0133

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SXE'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.142, ('FORECASTING', {'Signals': ['SXE'], 'Horizon': 7}))
7 0    2.04
1    1.96
2    1.89
3    1.95
4    1.92
5    1.92
6    1.90
Name: SXE, dtype: float64
7 0    2.07
1    2.07
2    2.07
3    2.07
4    2.07
5    2.07
6    2.07
Name: SXE_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SXE SXE [2.04, 1.96, 1.89, 1.95, 1.92, 1.92, 1.9]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SXE SXE [2.07, 2.07, 2.07, 2.07, 2.07, 2.07, 2.07]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SXE SXE 932 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SXE SXE 11.169342756271362
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SXE SXE Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SXE SXE 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SXE SXE 0.0676 0.0651 3.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SXE SXE 0.1299999999999999 0.13820274961085247 -7.681818125442716
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_SXE_7'
