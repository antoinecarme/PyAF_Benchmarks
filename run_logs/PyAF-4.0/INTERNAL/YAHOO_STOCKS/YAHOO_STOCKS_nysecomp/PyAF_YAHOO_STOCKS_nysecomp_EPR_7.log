BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  EPR N= 1251 H= 7 HEAD= [47.619999 46.490002 45.220001 43.740002 43.189999] TAIL= [80.690002 81.610001 80.860001 81.019997 81.150002]
         EPR       Date
0  47.619999 2011-07-28
1  46.490002 2011-07-29
2  45.220001 2011-08-01
3  43.740002 2011-08-02
4  43.189999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   EPR     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['EPR'], 'Transformations': [('EPR', 'None', '_', 'T+S+R'), ('EPR', 'None', 'Diff_', 'T+S+R'), ('EPR', 'None', 'RelDiff_', 'T+S+R'), ('EPR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EPR', 'Transformation': '_EPR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.863, ('TRAINING', {'Signal': 'EPR', 'Transformation': '_EPR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EPR', 'Transformation': 'Diff_EPR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.94, ('TRAINING', {'Signal': 'EPR', 'Transformation': 'Diff_EPR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EPR', 'Transformation': 'RelDiff_EPR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.128, ('TRAINING', {'Signal': 'EPR', 'Transformation': 'RelDiff_EPR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EPR', 'Transformation': 'CumSum_EPR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.787, ('TRAINING', {'Signal': 'EPR', 'Transformation': 'CumSum_EPR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.719, ('SIGNAL_TRAINING', {'Signals': ['EPR'], 'Transformations': [('EPR', 'None', '_', 'T+S+R'), ('EPR', 'None', 'Diff_', 'T+S+R'), ('EPR', 'None', 'RelDiff_', 'T+S+R'), ('EPR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['EPR'], 'Transformations': [('EPR', [('EPR', 'None', 'CumSum_', 'T+S+R'), ('EPR', 'None', 'Diff_', 'T+S+R'), ('EPR', 'None', 'RelDiff_', 'T+S+R'), ('EPR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'EPR', 'Transformations': [('EPR', 'None', 'CumSum_', 'T+S+R'), ('EPR', 'None', 'Diff_', 'T+S+R'), ('EPR', 'None', 'RelDiff_', 'T+S+R'), ('EPR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'EPR', 'Transformations': [('EPR', 'None', 'CumSum_', 'T+S+R'), ('EPR', 'None', 'Diff_', 'T+S+R'), ('EPR', 'None', 'RelDiff_', 'T+S+R'), ('EPR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EPR', 'Model': '_EPR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EPR', 'Model': '_EPR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EPR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EPR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['EPR'], 'Transformations': [('EPR', [('EPR', 'None', 'CumSum_', 'T+S+R'), ('EPR', 'None', 'Diff_', 'T+S+R'), ('EPR', 'None', 'RelDiff_', 'T+S+R'), ('EPR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='EPR' Length=1251  Min=35.91 Max=81.610001  Mean=52.533333372502035 StdDev=7.90514271363711
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_EPR' Min=0.0 Max=1.0  Mean=0.36374908115433097 StdDev=0.172979049029717
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_EPR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_EPR_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_EPR_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_EPR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0098 MAPE_Forecast=0.0096 MAPE_Test=0.0067
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0098 SMAPE_Forecast=0.0095 SMAPE_Test=0.0068
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9996 MASE_Test=1.0771
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.825952256502248 CRPS_Forecast=1.9945772285826602 CRPS_Test=0.23785628571428571
INFO:pyaf.std:MODEL_L1 L1_Fit=0.48110556582914576 L1_Forecast=0.5744979477911644 L1_Test=0.5457134285714277
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6928611509351815 L2_Forecast=0.769092303622159 L2_Test=0.6236976854736123
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.2096509021713219 LnQ_Forecast=0.04114044335211271 LnQ_Test=0.00041739923159982584
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.3400010000000009 MedAE_Forecast=0.42000199999999666 MedAE_Test=0.7399979999999999
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2562362963624443
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _EPR_Lag1Trend_residue_bestCycle_byMAPE None 0.0006564113641924219 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ... ForecastMAPE      TestMAPE
0    None           _EPR  ...       0.0095  6.400000e-03
1    None           _EPR  ...       0.0095  6.500000e-03
2    None           _EPR  ...       0.0095  6.900000e-03
3    None           _EPR  ...       0.0095  6.700000e-03
4    None           _EPR  ...       0.0095  6.800000e-03
..    ...            ...  ...          ...           ...
211  None    RelDiff_EPR  ...  126200.0282  2.301862e+06
212  None    RelDiff_EPR  ...  137515.5432  2.552395e+06
213  None    RelDiff_EPR  ...  143084.2763  2.693770e+06
214  None    RelDiff_EPR  ...  353088.5318  3.800766e+06
215  None    RelDiff_EPR  ...  353088.5318  3.800766e+06

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _EPR             T+S+R  ...  0.0098       0.0095   0.0064
1  None           _EPR             T+S+R  ...  0.0098       0.0095   0.0065
2  None           _EPR             T+S+R  ...  0.0096       0.0095   0.0069
3  None           _EPR             T+S+R  ...  0.0097       0.0095   0.0067
4  None           _EPR             T+S+R  ...  0.0097       0.0095   0.0068

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['EPR'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['EPR'], 'Horizon': 7}))
7 0    81.239998
1    81.540001
2    81.949997
3    83.080002
4    82.910004
5    82.870003
6    82.139999
Name: EPR, dtype: float64
7 0    81.150002
1    81.150002
2    81.150002
3    81.150002
4    81.150002
5    81.150002
6    81.150002
Name: EPR_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_EPR EPR [81.239998, 81.540001, 81.949997, 83.080002, 82.910004, 82.870003, 82.139999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_EPR EPR [81.150002, 81.150002, 81.150002, 81.150002, 81.150002, 81.150002, 81.150002]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_EPR EPR 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_EPR EPR 12.19956636428833
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_EPR EPR Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_EPR EPR 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_EPR EPR 0.0133 0.0134 2.3679
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_EPR EPR 1.0971414285714272 1.2851456304390432 -2.6875934974764926
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_EPR_7'
