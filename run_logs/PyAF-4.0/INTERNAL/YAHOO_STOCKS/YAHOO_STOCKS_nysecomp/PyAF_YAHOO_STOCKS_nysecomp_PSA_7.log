BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  PSA N= 1251 H= 7 HEAD= [119.360001 119.629997 118.800003 116.400002 117.080002] TAIL= [255.800003 256.450012 254.070007 251.619995 251.25    ]
          PSA       Date
0  119.360001 2011-07-28
1  119.629997 2011-07-29
2  118.800003 2011-08-01
3  116.400002 2011-08-02
4  117.080002 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   PSA     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['PSA'], 'Transformations': [('PSA', 'None', '_', 'T+S+R'), ('PSA', 'None', 'Diff_', 'T+S+R'), ('PSA', 'None', 'RelDiff_', 'T+S+R'), ('PSA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSA', 'Transformation': '_PSA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.226, ('TRAINING', {'Signal': 'PSA', 'Transformation': '_PSA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSA', 'Transformation': 'Diff_PSA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.782, ('TRAINING', {'Signal': 'PSA', 'Transformation': 'Diff_PSA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSA', 'Transformation': 'RelDiff_PSA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.352, ('TRAINING', {'Signal': 'PSA', 'Transformation': 'RelDiff_PSA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSA', 'Transformation': 'CumSum_PSA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.79, ('TRAINING', {'Signal': 'PSA', 'Transformation': 'CumSum_PSA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.152, ('SIGNAL_TRAINING', {'Signals': ['PSA'], 'Transformations': [('PSA', 'None', '_', 'T+S+R'), ('PSA', 'None', 'Diff_', 'T+S+R'), ('PSA', 'None', 'RelDiff_', 'T+S+R'), ('PSA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['PSA'], 'Transformations': [('PSA', [('PSA', 'None', 'CumSum_', 'T+S+R'), ('PSA', 'None', 'Diff_', 'T+S+R'), ('PSA', 'None', 'RelDiff_', 'T+S+R'), ('PSA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'PSA', 'Transformations': [('PSA', 'None', 'CumSum_', 'T+S+R'), ('PSA', 'None', 'Diff_', 'T+S+R'), ('PSA', 'None', 'RelDiff_', 'T+S+R'), ('PSA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'PSA', 'Transformations': [('PSA', 'None', 'CumSum_', 'T+S+R'), ('PSA', 'None', 'Diff_', 'T+S+R'), ('PSA', 'None', 'RelDiff_', 'T+S+R'), ('PSA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PSA', 'Model': '_PSA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PSA', 'Model': '_PSA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PSA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.195, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PSA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.231, ('FINALIZE_TRAINING', {'Signals': ['PSA'], 'Transformations': [('PSA', [('PSA', 'None', 'CumSum_', 'T+S+R'), ('PSA', 'None', 'Diff_', 'T+S+R'), ('PSA', 'None', 'RelDiff_', 'T+S+R'), ('PSA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='PSA' Length=1251  Min=102.07 Max=276.269989  Mean=174.11350112869704 StdDev=39.58496418588789
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_PSA' Min=0.0 Max=1.0  Mean=0.4135677708263062 StdDev=0.2272386147273975
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_PSA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_PSA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_PSA_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_PSA_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0084 MAPE_Forecast=0.0104 MAPE_Test=0.0061
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0084 SMAPE_Forecast=0.0104 SMAPE_Test=0.0061
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9976 MASE_Test=1.2701
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=6.681957647217666 CRPS_Forecast=6.115309550047341 CRPS_Test=0.7771432142857151
INFO:pyaf.std:MODEL_L1 L1_Fit=1.28289464522613 L1_Forecast=2.478715301204819 L1_Test=1.5642872857142842
INFO:pyaf.std:MODEL_L2 L2_Fit=1.7489775579658078 L2_Forecast=3.2512768685613995 L2_Test=1.9304314292152036
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.145182040362141 LnQ_Forecast=0.04570764501837902 LnQ_Test=0.0004015068831472326
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9700009999999963 MedAE_Forecast=1.8600010000000111 MedAE_Test=0.7799979999999778
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.09925374335126969
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _PSA_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE     TestMAPE
0    None           _PSA             T+S+R  ...    0.0082       0.0102       0.0064
1    None           _PSA             T+S+R  ...    0.0081       0.0102       0.0066
2    None       Diff_PSA             T+S+R  ...    0.0131       0.0102       0.0068
3    None           _PSA             T+S+R  ...    0.0081       0.0102       0.0067
4    None           _PSA             T+S+R  ...    0.0083       0.0103       0.0063
..    ...            ...               ...  ...       ...          ...          ...
219  None    RelDiff_PSA             T+S+R  ...   27.4121    9457.6938  200845.5599
220  None    RelDiff_PSA             T+S+R  ...   27.4121    9457.6938  200845.5599
221  None    RelDiff_PSA             T+S+R  ...   23.9560   10102.9655  230707.1384
222  None    RelDiff_PSA             T+S+R  ...  328.1170   15483.5890  167884.7831
223  None    RelDiff_PSA             T+S+R  ...  328.1170   15483.5890  167884.7831

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _PSA             T+S+R  ...  0.0082       0.0102   0.0064
1  None           _PSA             T+S+R  ...  0.0081       0.0102   0.0066
2  None       Diff_PSA             T+S+R  ...  0.0131       0.0102   0.0068
3  None           _PSA             T+S+R  ...  0.0081       0.0102   0.0067
4  None           _PSA             T+S+R  ...  0.0083       0.0103   0.0063

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['PSA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['PSA'], 'Horizon': 7}))
7 0    252.139999
1    251.919998
2    251.649994
3    253.740005
4    251.960007
5    250.429993
6    248.179993
Name: PSA, dtype: float64
7 0    251.25
1    251.25
2    251.25
3    251.25
4    251.25
5    251.25
6    251.25
Name: PSA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_PSA PSA [252.139999, 251.919998, 251.649994, 253.740005, 251.960007, 250.429993, 248.179993]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_PSA PSA [251.25, 251.25, 251.25, 251.25, 251.25, 251.25, 251.25]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_PSA PSA 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_PSA PSA 12.65966248512268
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_PSA PSA Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_PSA PSA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_PSA PSA 0.0052 0.0051 0.953
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_PSA PSA 1.292859571428567 1.6125658365391724 -0.012820393834425126
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_PSA_7'
