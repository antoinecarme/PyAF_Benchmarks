BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  AA N= 1251 H= 7 HEAD= [14.83 14.73 14.75 14.16 14.26] TAIL= [10.69 10.71 10.71 10.92 10.92]
      AA       Date
0  14.83 2011-07-28
1  14.73 2011-07-29
2  14.75 2011-08-01
3  14.16 2011-08-02
4  14.26 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   AA      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['AA'], 'Transformations': [('AA', 'None', '_', 'T+S+R'), ('AA', 'None', 'Diff_', 'T+S+R'), ('AA', 'None', 'RelDiff_', 'T+S+R'), ('AA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AA', 'Transformation': '_AA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.129, ('TRAINING', {'Signal': 'AA', 'Transformation': '_AA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AA', 'Transformation': 'Diff_AA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.791, ('TRAINING', {'Signal': 'AA', 'Transformation': 'Diff_AA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AA', 'Transformation': 'RelDiff_AA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.786, ('TRAINING', {'Signal': 'AA', 'Transformation': 'RelDiff_AA'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'AA', 'Transformation': 'CumSum_AA'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.75, ('TRAINING', {'Signal': 'AA', 'Transformation': 'CumSum_AA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.458, ('SIGNAL_TRAINING', {'Signals': ['AA'], 'Transformations': [('AA', 'None', '_', 'T+S+R'), ('AA', 'None', 'Diff_', 'T+S+R'), ('AA', 'None', 'RelDiff_', 'T+S+R'), ('AA', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['AA'], 'Transformations': [('AA', [('AA', 'None', 'CumSum_', 'T+S+R'), ('AA', 'None', 'Diff_', 'T+S+R'), ('AA', 'None', 'RelDiff_', 'T+S+R'), ('AA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'AA', 'Transformations': [('AA', 'None', 'CumSum_', 'T+S+R'), ('AA', 'None', 'Diff_', 'T+S+R'), ('AA', 'None', 'RelDiff_', 'T+S+R'), ('AA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'AA', 'Transformations': [('AA', 'None', 'CumSum_', 'T+S+R'), ('AA', 'None', 'Diff_', 'T+S+R'), ('AA', 'None', 'RelDiff_', 'T+S+R'), ('AA', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AA', 'Model': '_AA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'AA', 'Model': '_AA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'AA'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['AA'], 'Transformations': [('AA', [('AA', 'None', 'CumSum_', 'T+S+R'), ('AA', 'None', 'Diff_', 'T+S+R'), ('AA', 'None', 'RelDiff_', 'T+S+R'), ('AA', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='AA' Length=1251  Min=6.74 Max=17.6  Mean=10.751630706634696 StdDev=2.684308583983836
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_AA' Min=0.0 Max=1.0  Mean=0.3693950926919597 StdDev=0.2471739027609423
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_AA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_AA_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_AA_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_AA_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0147 MAPE_Forecast=0.0238 MAPE_Test=0.0219
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0147 SMAPE_Forecast=0.0238 SMAPE_Test=0.0223
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9969 MASE_Test=1.2312
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.8301284511504893 CRPS_Forecast=0.23169303661705648 CRPS_Test=0.21857142857142872
INFO:pyaf.std:MODEL_L1 L1_Fit=0.16555780100502515 L1_Forecast=0.2172690763052209 L1_Test=0.22571428571428573
INFO:pyaf.std:MODEL_L2 L2_Fit=0.23850182296552244 L2_Forecast=0.2852660281689869 L2_Test=0.3116316506940294
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4167954375190228 LnQ_Forecast=0.24658210057168328 LnQ_Test=0.0067103697338568484
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.11999999999999922 MedAE_Forecast=0.16999999999999993 MedAE_Test=0.20999999999999908
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.7449355432780846
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _AA_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None            _AA             T+S+R  ...  0.0147       0.0238   0.0219
1    None            _AA             T+S+R  ...  0.0147       0.0238   0.0219
2    None      CumSum_AA             T+S+R  ...  0.0152       0.0238   0.0219
3    None      CumSum_AA             T+S+R  ...  0.0152       0.0238   0.0219
4    None        Diff_AA             T+S+R  ...  0.0147       0.0238   0.0219
..    ...            ...               ...  ...     ...          ...      ...
203  None     RelDiff_AA             T+S+R  ...  1.1077      15.1013  23.3186
204  None     RelDiff_AA             T+S+R  ...  1.0811      24.4852  51.8927
205  None     RelDiff_AA             T+S+R  ...  1.0919      24.5561  51.6140
206  None     RelDiff_AA             T+S+R  ...  1.0919      24.5561  51.6140
207  None     RelDiff_AA             T+S+R  ...  0.8844      24.9066  62.4514

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _AA             T+S+R  ...  0.0147       0.0238   0.0219
1  None            _AA             T+S+R  ...  0.0147       0.0238   0.0219
2  None      CumSum_AA             T+S+R  ...  0.0152       0.0238   0.0219
3  None      CumSum_AA             T+S+R  ...  0.0152       0.0238   0.0219
4  None        Diff_AA             T+S+R  ...  0.0147       0.0238   0.0219

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['AA'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['AA'], 'Horizon': 7}))
7 0    10.63
1    10.61
2    10.60
3    10.57
4    10.49
5    10.67
6    10.74
Name: AA, dtype: float64
7 0    10.92
1    10.92
2    10.92
3    10.92
4    10.92
5    10.92
6    10.92
Name: AA_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_AA AA [10.63, 10.61, 10.6, 10.57, 10.49, 10.67, 10.74]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_AA AA [10.92, 10.92, 10.92, 10.92, 10.92, 10.92, 10.92]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_AA AA 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_AA AA 11.933889389038086
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_AA AA Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_AA AA 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_AA AA 0.0287 0.0283 4.6813
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_AA AA 0.30428571428571416 0.31279842893284654 -17.625874075220985
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_AA_7'
