BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MMS N= 1251 H= 7 HEAD= [38.709999 38.630001 38.849998 38.5      38.290001] TAIL= [59.029999 59.310001 58.889999 58.299999 57.869999]
         MMS       Date
0  38.709999 2011-07-28
1  38.630001 2011-07-29
2  38.849998 2011-08-01
3  38.500000 2011-08-02
4  38.290001 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MMS     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MMS'], 'Transformations': [('MMS', 'None', '_', 'T+S+R'), ('MMS', 'None', 'Diff_', 'T+S+R'), ('MMS', 'None', 'RelDiff_', 'T+S+R'), ('MMS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMS', 'Transformation': '_MMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.381, ('TRAINING', {'Signal': 'MMS', 'Transformation': '_MMS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMS', 'Transformation': 'Diff_MMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.744, ('TRAINING', {'Signal': 'MMS', 'Transformation': 'Diff_MMS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMS', 'Transformation': 'RelDiff_MMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.105, ('TRAINING', {'Signal': 'MMS', 'Transformation': 'RelDiff_MMS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMS', 'Transformation': 'CumSum_MMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.109, ('TRAINING', {'Signal': 'MMS', 'Transformation': 'CumSum_MMS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.34, ('SIGNAL_TRAINING', {'Signals': ['MMS'], 'Transformations': [('MMS', 'None', '_', 'T+S+R'), ('MMS', 'None', 'Diff_', 'T+S+R'), ('MMS', 'None', 'RelDiff_', 'T+S+R'), ('MMS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MMS'], 'Transformations': [('MMS', [('MMS', 'None', 'CumSum_', 'T+S+R'), ('MMS', 'None', 'Diff_', 'T+S+R'), ('MMS', 'None', 'RelDiff_', 'T+S+R'), ('MMS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MMS', 'Transformations': [('MMS', 'None', 'CumSum_', 'T+S+R'), ('MMS', 'None', 'Diff_', 'T+S+R'), ('MMS', 'None', 'RelDiff_', 'T+S+R'), ('MMS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MMS', 'Transformations': [('MMS', 'None', 'CumSum_', 'T+S+R'), ('MMS', 'None', 'Diff_', 'T+S+R'), ('MMS', 'None', 'RelDiff_', 'T+S+R'), ('MMS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MMS', 'Model': '_MMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MMS', 'Model': '_MMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MMS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MMS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.218, ('FINALIZE_TRAINING', {'Signals': ['MMS'], 'Transformations': [('MMS', [('MMS', 'None', 'CumSum_', 'T+S+R'), ('MMS', 'None', 'Diff_', 'T+S+R'), ('MMS', 'None', 'RelDiff_', 'T+S+R'), ('MMS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MMS' Length=1251  Min=31.549999 Max=80.800003  Mean=52.32528377218231 StdDev=11.4336280366181
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MMS' Min=0.0 Max=1.0  Mean=0.42183315908324137 StdDev=0.23215486513702796
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MMS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MMS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0127 MAPE_Forecast=0.0156 MAPE_Test=0.011
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0124 SMAPE_Forecast=0.0154 SMAPE_Test=0.0111
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9979 MASE_Test=1.3457
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.5177301683721245 CRPS_Forecast=1.6920540378279234 CRPS_Test=0.34142878571428525
INFO:pyaf.std:MODEL_L1 L1_Fit=0.625316565829146 L1_Forecast=0.8722891967871487 L1_Test=0.6414292857142853
INFO:pyaf.std:MODEL_L2 L2_Fit=1.4455498281249697 L2_Forecast=1.4716814657494117 L2_Test=0.7654788734629729
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7508322662569282 LnQ_Forecast=0.16005185355980187 LnQ_Test=0.0012368795753512126
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4299999999999997 MedAE_Forecast=0.629997000000003 MedAE_Test=0.5100029999999975
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1453806988523291
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MMS_Lag1Trend_residue_bestCycle_byMAPE None 0.0010151471256735212 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0    None           _MMS             T+S+R  ...   0.0124       0.0155     0.0125
1    None           _MMS             T+S+R  ...   0.0124       0.0155     0.0116
2    None           _MMS             T+S+R  ...   0.0127       0.0156     0.0110
3    None           _MMS             T+S+R  ...   0.0127       0.0156     0.0110
4    None     CumSum_MMS             T+S+R  ...   0.0129       0.0156     0.0110
..    ...            ...               ...  ...      ...          ...        ...
203  None    RelDiff_MMS             T+S+R  ...  13.6452     570.3503  3093.5853
204  None    RelDiff_MMS             T+S+R  ...  13.6042     610.5541  3369.4129
205  None    RelDiff_MMS             T+S+R  ...  13.6042     610.5541  3369.4129
206  None    RelDiff_MMS             T+S+R  ...  13.7375     683.0250  3839.2088
207  None    RelDiff_MMS             T+S+R  ...  16.2297     705.0645  3413.4975

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _MMS             T+S+R  ...  0.0124       0.0155   0.0125
1  None           _MMS             T+S+R  ...  0.0124       0.0155   0.0116
2  None           _MMS             T+S+R  ...  0.0127       0.0156   0.0110
3  None           _MMS             T+S+R  ...  0.0127       0.0156   0.0110
4  None     CumSum_MMS             T+S+R  ...  0.0129       0.0156   0.0110

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MMS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['MMS'], 'Horizon': 7}))
7 0    57.930000
1    59.099998
2    58.650002
3    59.689999
4    59.459999
5    59.709999
6    59.389999
Name: MMS, dtype: float64
7 0    57.869999
1    57.869999
2    57.869999
3    57.869999
4    57.869999
5    57.869999
6    57.869999
Name: MMS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MMS MMS [57.93, 59.099998, 58.650002, 59.689999, 59.459999, 59.709999, 59.389999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MMS MMS [57.869999, 57.869999, 57.869999, 57.869999, 57.869999, 57.869999, 57.869999]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MMS MMS 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MMS MMS 11.810168504714966
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MMS MMS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MMS MMS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MMS MMS 0.0213 0.0215 2.1899
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MMS MMS 1.2628575714285728 1.3970071244327504 -4.469510580303028
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_MMS_7'
