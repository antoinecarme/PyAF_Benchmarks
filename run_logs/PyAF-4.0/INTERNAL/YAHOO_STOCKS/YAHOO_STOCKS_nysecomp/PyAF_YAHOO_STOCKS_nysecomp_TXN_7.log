BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  TXN N= 1251 H= 7 HEAD= [30.120001 29.75     29.889999 29.1      29.299999] TAIL= [64.379997 64.540001 64.809998 64.849998 65.190002]
         TXN       Date
0  30.120001 2011-07-28
1  29.750000 2011-07-29
2  29.889999 2011-08-01
3  29.100000 2011-08-02
4  29.299999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   TXN     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['TXN'], 'Transformations': [('TXN', 'None', '_', 'T+S+R'), ('TXN', 'None', 'Diff_', 'T+S+R'), ('TXN', 'None', 'RelDiff_', 'T+S+R'), ('TXN', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXN', 'Transformation': '_TXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.475, ('TRAINING', {'Signal': 'TXN', 'Transformation': '_TXN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXN', 'Transformation': 'Diff_TXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.841, ('TRAINING', {'Signal': 'TXN', 'Transformation': 'Diff_TXN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXN', 'Transformation': 'RelDiff_TXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.143, ('TRAINING', {'Signal': 'TXN', 'Transformation': 'RelDiff_TXN'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXN', 'Transformation': 'CumSum_TXN'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.783, ('TRAINING', {'Signal': 'TXN', 'Transformation': 'CumSum_TXN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.243, ('SIGNAL_TRAINING', {'Signals': ['TXN'], 'Transformations': [('TXN', 'None', '_', 'T+S+R'), ('TXN', 'None', 'Diff_', 'T+S+R'), ('TXN', 'None', 'RelDiff_', 'T+S+R'), ('TXN', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['TXN'], 'Transformations': [('TXN', [('TXN', 'None', 'CumSum_', 'T+S+R'), ('TXN', 'None', 'Diff_', 'T+S+R'), ('TXN', 'None', 'RelDiff_', 'T+S+R'), ('TXN', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'TXN', 'Transformations': [('TXN', 'None', 'CumSum_', 'T+S+R'), ('TXN', 'None', 'Diff_', 'T+S+R'), ('TXN', 'None', 'RelDiff_', 'T+S+R'), ('TXN', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.12, ('MODEL_SELECTION', {'Signal': 'TXN', 'Transformations': [('TXN', 'None', 'CumSum_', 'T+S+R'), ('TXN', 'None', 'Diff_', 'T+S+R'), ('TXN', 'None', 'RelDiff_', 'T+S+R'), ('TXN', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TXN', 'Model': '_TXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TXN', 'Model': '_TXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TXN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.199, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TXN'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.349, ('FINALIZE_TRAINING', {'Signals': ['TXN'], 'Transformations': [('TXN', [('TXN', 'None', 'CumSum_', 'T+S+R'), ('TXN', 'None', 'Diff_', 'T+S+R'), ('TXN', 'None', 'RelDiff_', 'T+S+R'), ('TXN', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='TXN' Length=1251  Min=24.82 Max=65.190002  Mean=42.67645082573935 StdDev=10.79327170294583
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_TXN' Min=0.0 Max=1.0  Mean=0.44231979046568787 StdDev=0.2673587111277781
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_TXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_TXN_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_TXN_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_TXN_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0108 MAPE_Forecast=0.012 MAPE_Test=0.0076
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0108 SMAPE_Forecast=0.012 SMAPE_Test=0.0077
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9987 MASE_Test=1.5268
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.8851931354959004 CRPS_Forecast=1.2829365280731395 CRPS_Test=0.4228570714285707
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4087336753768843 L1_Forecast=0.6444177911646591 L1_Test=0.48857171428571483
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5700745926177208 L2_Forecast=0.894952810451342 L2_Test=0.7013245733273987
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22360125702913086 LnQ_Forecast=0.07052284970020029 LnQ_Test=0.0008665024942150458
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.30000400000000127 MedAE_Forecast=0.4799990000000065 MedAE_Test=0.2699969999999894
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.13128562639159636
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _TXN_Lag1Trend_residue_bestCycle_byMAPE None 0.0007431012760416023 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None           _TXN             T+S+R  ...    0.0106       0.0118     0.0075
1    None           _TXN             T+S+R  ...    0.0107       0.0119     0.0071
2    None           _TXN             T+S+R  ...    0.0107       0.0119     0.0074
3    None           _TXN             T+S+R  ...    0.0107       0.0119     0.0077
4    None           _TXN             T+S+R  ...    0.0107       0.0119     0.0077
..    ...            ...               ...  ...       ...          ...        ...
219  None    RelDiff_TXN             T+S+R  ...  312.7519     761.9632  2279.2034
220  None    RelDiff_TXN             T+S+R  ...  566.6397    2422.7155  7370.5133
221  None    RelDiff_TXN             T+S+R  ...  566.6397    2422.7155  7370.5133
222  None    RelDiff_TXN             T+S+R  ...  103.0651    3395.9672  7829.1866
223  None    RelDiff_TXN             T+S+R  ...  103.0651    3395.9672  7829.1866

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _TXN             T+S+R  ...  0.0106       0.0118   0.0075
1  None           _TXN             T+S+R  ...  0.0107       0.0119   0.0071
2  None           _TXN             T+S+R  ...  0.0107       0.0119   0.0074
3  None           _TXN             T+S+R  ...  0.0107       0.0119   0.0077
4  None           _TXN             T+S+R  ...  0.0107       0.0119   0.0077

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['TXN'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.16, ('FORECASTING', {'Signals': ['TXN'], 'Horizon': 7}))
7 0    64.940002
1    65.449997
2    64.910004
3    65.489998
4    66.220001
5    71.419998
6    71.269997
Name: TXN, dtype: float64
7 0    65.190002
1    65.190002
2    65.190002
3    65.190002
4    65.190002
5    65.190002
6    65.190002
Name: TXN_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_TXN TXN [64.940002, 65.449997, 64.910004, 65.489998, 66.220001, 71.419998, 71.269997]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_TXN TXN [65.190002, 65.190002, 65.190002, 65.190002, 65.190002, 65.190002, 65.190002]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_TXN TXN 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_TXN TXN 12.854724645614624
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_TXN TXN Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_TXN TXN 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_TXN TXN 0.0293 0.0304 1.6042
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_TXN TXN 2.061425571428568 3.3196080056899775 -0.49487736374290425
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_TXN_7'
