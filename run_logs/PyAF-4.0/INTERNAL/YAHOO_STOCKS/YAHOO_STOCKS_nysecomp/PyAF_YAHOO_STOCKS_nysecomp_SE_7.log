BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SE N= 1251 H= 7 HEAD= [27.07     27.02     27.129999 26.450001 26.309999] TAIL= [36.779999 36.77     36.790001 37.049999 36.740002]
          SE       Date
0  27.070000 2011-07-28
1  27.020000 2011-07-29
2  27.129999 2011-08-01
3  26.450001 2011-08-02
4  26.309999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   SE      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SE'], 'Transformations': [('SE', 'None', '_', 'T+S+R'), ('SE', 'None', 'Diff_', 'T+S+R'), ('SE', 'None', 'RelDiff_', 'T+S+R'), ('SE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SE', 'Transformation': '_SE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.587, ('TRAINING', {'Signal': 'SE', 'Transformation': '_SE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SE', 'Transformation': 'Diff_SE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.08, ('TRAINING', {'Signal': 'SE', 'Transformation': 'Diff_SE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SE', 'Transformation': 'RelDiff_SE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.174, ('TRAINING', {'Signal': 'SE', 'Transformation': 'RelDiff_SE'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SE', 'Transformation': 'CumSum_SE'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.803, ('TRAINING', {'Signal': 'SE', 'Transformation': 'CumSum_SE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.646, ('SIGNAL_TRAINING', {'Signals': ['SE'], 'Transformations': [('SE', 'None', '_', 'T+S+R'), ('SE', 'None', 'Diff_', 'T+S+R'), ('SE', 'None', 'RelDiff_', 'T+S+R'), ('SE', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SE'], 'Transformations': [('SE', [('SE', 'None', 'CumSum_', 'T+S+R'), ('SE', 'None', 'Diff_', 'T+S+R'), ('SE', 'None', 'RelDiff_', 'T+S+R'), ('SE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SE', 'Transformations': [('SE', 'None', 'CumSum_', 'T+S+R'), ('SE', 'None', 'Diff_', 'T+S+R'), ('SE', 'None', 'RelDiff_', 'T+S+R'), ('SE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'SE', 'Transformations': [('SE', 'None', 'CumSum_', 'T+S+R'), ('SE', 'None', 'Diff_', 'T+S+R'), ('SE', 'None', 'RelDiff_', 'T+S+R'), ('SE', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SE', 'Model': '_SE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SE', 'Model': '_SE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SE'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.229, ('FINALIZE_TRAINING', {'Signals': ['SE'], 'Transformations': [('SE', [('SE', 'None', 'CumSum_', 'T+S+R'), ('SE', 'None', 'Diff_', 'T+S+R'), ('SE', 'None', 'RelDiff_', 'T+S+R'), ('SE', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SE' Length=1251  Min=21.969999 Max=43.0  Mean=32.27727418465222 StdDev=4.561227280180019
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SE' Min=0.0 Max=1.0  Mean=0.4901224296019905 StdDev=0.21689144380830125
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SE_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SE_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SE_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0089 MAPE_Forecast=0.016 MAPE_Test=0.0053
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0089 SMAPE_Forecast=0.016 SMAPE_Test=0.0053
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.997 MASE_Test=1.1429
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.3616815853200213 CRPS_Forecast=0.7888147050335932 CRPS_Test=0.11999978571428523
INFO:pyaf.std:MODEL_L1 L1_Fit=0.28773868944723613 L1_Forecast=0.4493573895582329 L1_Test=0.19428485714285518
INFO:pyaf.std:MODEL_L2 L2_Fit=0.39845704143790606 L2_Forecast=0.5816190183369082 L2_Test=0.22934593958223223
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.15405939446723158 LnQ_Forecast=0.1126544499425324 LnQ_Test=0.0002749081290435324
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.21000100000000188 MedAE_Forecast=0.3600009999999969 MedAE_Test=0.2199979999999968
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2425107350208875
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SE_Lag1Trend_residue_bestCycle_byMAPE None 0.0004754160496712734 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None            _SE             T+S+R  ...  0.0087       0.0159   0.0057
1    None            _SE             T+S+R  ...  0.0088       0.0159   0.0057
2    None            _SE             T+S+R  ...  0.0088       0.0159   0.0057
3    None            _SE             T+S+R  ...  0.0087       0.0159   0.0059
4    None            _SE             T+S+R  ...  0.0086       0.0159   0.0062
..    ...            ...               ...  ...     ...          ...      ...
211  None     RelDiff_SE             T+S+R  ...  0.8557      18.0549  45.3146
212  None     RelDiff_SE             T+S+R  ...  0.9490      23.3498  60.6765
213  None     RelDiff_SE             T+S+R  ...  0.9587      24.7697  63.0808
214  None     RelDiff_SE             T+S+R  ...  0.9100      25.8938  67.0169
215  None     RelDiff_SE             T+S+R  ...  0.9100      25.8938  67.0169

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _SE             T+S+R  ...  0.0087       0.0159   0.0057
1  None            _SE             T+S+R  ...  0.0088       0.0159   0.0057
2  None            _SE             T+S+R  ...  0.0088       0.0159   0.0057
3  None            _SE             T+S+R  ...  0.0087       0.0159   0.0059
4  None            _SE             T+S+R  ...  0.0086       0.0159   0.0062

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SE'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['SE'], 'Horizon': 7}))
7 0    36.849998
1    36.900002
2    36.410000
3    36.580002
4    36.509998
5    36.430000
6    36.009998
Name: SE, dtype: float64
7 0    36.740002
1    36.740002
2    36.740002
3    36.740002
4    36.740002
5    36.740002
6    36.740002
Name: SE_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SE SE [36.849998, 36.900002, 36.41, 36.580002, 36.509998, 36.43, 36.009998]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SE SE [36.740002, 36.740002, 36.740002, 36.740002, 36.740002, 36.740002, 36.740002]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SE SE 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SE SE 13.134896755218506
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SE SE Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SE SE 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SE SE 0.008 0.0079 1.3594
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SE SE 0.2900011428571411 0.34930734728193313 -0.5906819404289656
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_SE_7'
