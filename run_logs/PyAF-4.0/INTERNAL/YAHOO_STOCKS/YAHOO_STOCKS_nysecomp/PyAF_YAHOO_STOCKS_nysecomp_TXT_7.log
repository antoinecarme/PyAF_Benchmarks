BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  TXT N= 1251 H= 7 HEAD= [23.01     23.129999 22.27     21.01     20.66    ] TAIL= [38.360001 38.369999 38.57     38.75     38.990002]
         TXT       Date
0  23.010000 2011-07-28
1  23.129999 2011-07-29
2  22.270000 2011-08-01
3  21.010000 2011-08-02
4  20.660000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   TXT     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['TXT'], 'Transformations': [('TXT', 'None', '_', 'T+S+R'), ('TXT', 'None', 'Diff_', 'T+S+R'), ('TXT', 'None', 'RelDiff_', 'T+S+R'), ('TXT', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXT', 'Transformation': '_TXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.513, ('TRAINING', {'Signal': 'TXT', 'Transformation': '_TXT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXT', 'Transformation': 'Diff_TXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.835, ('TRAINING', {'Signal': 'TXT', 'Transformation': 'Diff_TXT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXT', 'Transformation': 'RelDiff_TXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.182, ('TRAINING', {'Signal': 'TXT', 'Transformation': 'RelDiff_TXT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TXT', 'Transformation': 'CumSum_TXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.788, ('TRAINING', {'Signal': 'TXT', 'Transformation': 'CumSum_TXT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.32, ('SIGNAL_TRAINING', {'Signals': ['TXT'], 'Transformations': [('TXT', 'None', '_', 'T+S+R'), ('TXT', 'None', 'Diff_', 'T+S+R'), ('TXT', 'None', 'RelDiff_', 'T+S+R'), ('TXT', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['TXT'], 'Transformations': [('TXT', [('TXT', 'None', 'CumSum_', 'T+S+R'), ('TXT', 'None', 'Diff_', 'T+S+R'), ('TXT', 'None', 'RelDiff_', 'T+S+R'), ('TXT', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'TXT', 'Transformations': [('TXT', 'None', 'CumSum_', 'T+S+R'), ('TXT', 'None', 'Diff_', 'T+S+R'), ('TXT', 'None', 'RelDiff_', 'T+S+R'), ('TXT', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.122, ('MODEL_SELECTION', {'Signal': 'TXT', 'Transformations': [('TXT', 'None', 'CumSum_', 'T+S+R'), ('TXT', 'None', 'Diff_', 'T+S+R'), ('TXT', 'None', 'RelDiff_', 'T+S+R'), ('TXT', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TXT', 'Model': '_TXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TXT', 'Model': '_TXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TXT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TXT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.341, ('FINALIZE_TRAINING', {'Signals': ['TXT'], 'Transformations': [('TXT', [('TXT', 'None', 'CumSum_', 'T+S+R'), ('TXT', 'None', 'Diff_', 'T+S+R'), ('TXT', 'None', 'RelDiff_', 'T+S+R'), ('TXT', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='TXT' Length=1251  Min=14.88 Max=46.860001  Mean=32.773317330135896 StdDev=8.22512361895968
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_TXT' Min=0.0 Max=1.0  Mean=0.5595158464859298 StdDev=0.2571958524629088
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_TXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_TXT_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_TXT_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_TXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0144 MAPE_Forecast=0.0136 MAPE_Test=0.0124
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0144 SMAPE_Forecast=0.0135 SMAPE_Test=0.0126
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9966 MASE_Test=1.4057
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.5076518924107383 CRPS_Forecast=0.8879738516184266 CRPS_Test=0.33999957142857185
INFO:pyaf.std:MODEL_L1 L1_Fit=0.41453269748743726 L1_Forecast=0.5196786064257027 L1_Test=0.4685718571428562
INFO:pyaf.std:MODEL_L2 L2_Fit=0.583044093147864 L2_Forecast=0.7432734408511356 L2_Test=0.6913143547949578
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4427428883830057 LnQ_Forecast=0.09586962337529997 LnQ_Test=0.0024414781634882698
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.3200019999999988 MedAE_Forecast=0.3899990000000031 MedAE_Test=0.20000100000000032
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2542213804183434
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _TXT_Lag1Trend_residue_bestCycle_byMAPE None 0.000312695424868753 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE     TestMAPE
0    None           _TXT             T+S+R  ...    0.0141       0.0134       0.0125
1    None           _TXT             T+S+R  ...    0.0139       0.0134       0.0129
2    None           _TXT             T+S+R  ...    0.0144       0.0136       0.0124
3    None           _TXT             T+S+R  ...    0.0144       0.0136       0.0124
4    None     CumSum_TXT             T+S+R  ...    0.0147       0.0136       0.0124
..    ...            ...               ...  ...       ...          ...          ...
219  None    RelDiff_TXT             T+S+R  ...  196.0797    6355.9065   54592.0664
220  None    RelDiff_TXT             T+S+R  ...  225.2302    6394.1469   57626.8486
221  None    RelDiff_TXT             T+S+R  ...  217.0917    6610.3524   59537.4483
222  None    RelDiff_TXT             T+S+R  ...  225.3924    6615.7081   59670.0525
223  None    RelDiff_TXT             T+S+R  ...  726.0053   20512.0789  164121.3244

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _TXT             T+S+R  ...  0.0141       0.0134   0.0125
1  None           _TXT             T+S+R  ...  0.0139       0.0134   0.0129
2  None           _TXT             T+S+R  ...  0.0144       0.0136   0.0124
3  None           _TXT             T+S+R  ...  0.0144       0.0136   0.0124
4  None     CumSum_TXT             T+S+R  ...  0.0147       0.0136   0.0124

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['TXT'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.162, ('FORECASTING', {'Signals': ['TXT'], 'Horizon': 7}))
7 0    38.709999
1    39.270000
2    39.209999
3    39.820000
4    39.150002
5    39.560001
6    39.270000
Name: TXT, dtype: float64
7 0    38.990002
1    38.990002
2    38.990002
3    38.990002
4    38.990002
5    38.990002
6    38.990002
Name: TXT_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_TXT TXT [38.709999, 39.27, 39.209999, 39.82, 39.150002, 39.560001, 39.27]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_TXT TXT [38.990002, 38.990002, 38.990002, 38.990002, 38.990002, 38.990002, 38.990002]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_TXT TXT 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_TXT TXT 12.927793741226196
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_TXT TXT Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_TXT TXT 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_TXT TXT 0.0095 0.0095 0.8637
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_TXT TXT 0.37428471428571747 0.43474026071913924 -0.8457644745722215
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_TXT_7'
