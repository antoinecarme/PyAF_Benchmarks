BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  KWR N= 1251 H= 7 HEAD= [39.990002 40.540001 40.400002 38.950001 37.43    ] TAIL= [93.690002 95.330002 95.199997 96.190002 95.889999]
         KWR       Date
0  39.990002 2011-07-28
1  40.540001 2011-07-29
2  40.400002 2011-08-01
3  38.950001 2011-08-02
4  37.430000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   KWR     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['KWR'], 'Transformations': [('KWR', 'None', '_', 'T+S+R'), ('KWR', 'None', 'Diff_', 'T+S+R'), ('KWR', 'None', 'RelDiff_', 'T+S+R'), ('KWR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KWR', 'Transformation': '_KWR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.535, ('TRAINING', {'Signal': 'KWR', 'Transformation': '_KWR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KWR', 'Transformation': 'Diff_KWR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.931, ('TRAINING', {'Signal': 'KWR', 'Transformation': 'Diff_KWR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KWR', 'Transformation': 'RelDiff_KWR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.342, ('TRAINING', {'Signal': 'KWR', 'Transformation': 'RelDiff_KWR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'KWR', 'Transformation': 'CumSum_KWR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.912, ('TRAINING', {'Signal': 'KWR', 'Transformation': 'CumSum_KWR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.722, ('SIGNAL_TRAINING', {'Signals': ['KWR'], 'Transformations': [('KWR', 'None', '_', 'T+S+R'), ('KWR', 'None', 'Diff_', 'T+S+R'), ('KWR', 'None', 'RelDiff_', 'T+S+R'), ('KWR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['KWR'], 'Transformations': [('KWR', [('KWR', 'None', 'CumSum_', 'T+S+R'), ('KWR', 'None', 'Diff_', 'T+S+R'), ('KWR', 'None', 'RelDiff_', 'T+S+R'), ('KWR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'KWR', 'Transformations': [('KWR', 'None', 'CumSum_', 'T+S+R'), ('KWR', 'None', 'Diff_', 'T+S+R'), ('KWR', 'None', 'RelDiff_', 'T+S+R'), ('KWR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.01, ('MODEL_SELECTION', {'Signal': 'KWR', 'Transformations': [('KWR', 'None', 'CumSum_', 'T+S+R'), ('KWR', 'None', 'Diff_', 'T+S+R'), ('KWR', 'None', 'RelDiff_', 'T+S+R'), ('KWR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'KWR', 'Model': '_KWR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'KWR', 'Model': '_KWR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'KWR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.182, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'KWR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['KWR'], 'Transformations': [('KWR', [('KWR', 'None', 'CumSum_', 'T+S+R'), ('KWR', 'None', 'Diff_', 'T+S+R'), ('KWR', 'None', 'RelDiff_', 'T+S+R'), ('KWR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='KWR' Length=1251  Min=24.450001 Max=96.190002  Mean=66.35085541486811 StdDev=18.059237524933593
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_KWR' Min=0.0 Max=1.0  Mean=0.5840654283635731 StdDev=0.251731771301949
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_KWR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_KWR_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_KWR_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_KWR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0155 MAPE_Forecast=0.0133 MAPE_Test=0.0153
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0156 SMAPE_Forecast=0.0133 SMAPE_Test=0.0154
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.999 MASE_Test=1.251
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.372356356479767 CRPS_Forecast=1.5680318960156863 CRPS_Test=1.435714214285714
INFO:pyaf.std:MODEL_L1 L1_Fit=0.8573467165829144 L1_Forecast=1.0799600843373496 L1_Test=1.4157170000000008
INFO:pyaf.std:MODEL_L2 L2_Fit=1.1594099171330758 L2_Forecast=1.5343649940710684 L2_Test=1.730298898212057
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5173420050237685 LnQ_Forecast=0.0865223106850575 LnQ_Test=0.002545024553696461
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.6300019999999975 MedAE_Forecast=0.8199990000000099 MedAE_Test=1.370002999999997
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.21661556709484844
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _KWR_Lag1Trend_residue_bestCycle_byMAPE None 0.0009757457349350851 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None           _KWR             T+S+R  ...    0.0152       0.0131     0.0162
1    None           _KWR             T+S+R  ...    0.0150       0.0132     0.0168
2    None           _KWR             T+S+R  ...    0.0155       0.0133     0.0153
3    None           _KWR             T+S+R  ...    0.0155       0.0133     0.0153
4    None     CumSum_KWR             T+S+R  ...    0.0159       0.0133     0.0153
..    ...            ...               ...  ...       ...          ...        ...
211  None    RelDiff_KWR             T+S+R  ...   42.3338     419.1353  2547.6011
212  None    RelDiff_KWR             T+S+R  ...   29.2708     553.0047  1053.2764
213  None    RelDiff_KWR             T+S+R  ...   29.2708     553.0047  1053.2764
214  None    RelDiff_KWR             T+S+R  ...  145.9942    1255.8397  6258.6281
215  None    RelDiff_KWR             T+S+R  ...  145.9942    1255.8397  6258.6281

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _KWR             T+S+R  ...  0.0152       0.0131   0.0162
1  None           _KWR             T+S+R  ...  0.0150       0.0132   0.0168
2  None           _KWR             T+S+R  ...  0.0155       0.0133   0.0153
3  None           _KWR             T+S+R  ...  0.0155       0.0133   0.0153
4  None     CumSum_KWR             T+S+R  ...  0.0159       0.0133   0.0153

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['KWR'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['KWR'], 'Horizon': 7}))
7 0    95.769997
1    96.339996
2    95.989998
3    97.730003
4    96.610001
5    96.919998
6    97.690002
Name: KWR, dtype: float64
7 0    95.889999
1    95.889999
2    95.889999
3    95.889999
4    95.889999
5    95.889999
6    95.889999
Name: KWR_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_KWR KWR [95.769997, 96.339996, 95.989998, 97.730003, 96.610001, 96.919998, 97.690002]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_KWR KWR [95.889999, 95.889999, 95.889999, 95.889999, 95.889999, 95.889999, 95.889999]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_KWR KWR 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_KWR KWR 13.214657545089722
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_KWR KWR Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_KWR KWR 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_KWR KWR 0.0089 0.009 1.0688
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_KWR KWR 0.865715142857141 1.09751823415012 -1.3467976049339132
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_KWR_7'
