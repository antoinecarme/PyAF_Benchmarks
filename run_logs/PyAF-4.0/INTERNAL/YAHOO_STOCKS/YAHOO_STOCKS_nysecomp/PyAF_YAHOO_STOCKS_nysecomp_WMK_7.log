BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  WMK N= 1251 H= 7 HEAD= [40.130001 40.189999 40.279999 39.57     40.450001] TAIL= [52.810001 52.630001 52.98     52.939999 52.939999]
         WMK       Date
0  40.130001 2011-07-28
1  40.189999 2011-07-29
2  40.279999 2011-08-01
3  39.570000 2011-08-02
4  40.450001 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   WMK     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['WMK'], 'Transformations': [('WMK', 'None', '_', 'T+S+R'), ('WMK', 'None', 'Diff_', 'T+S+R'), ('WMK', 'None', 'RelDiff_', 'T+S+R'), ('WMK', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WMK', 'Transformation': '_WMK'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.522, ('TRAINING', {'Signal': 'WMK', 'Transformation': '_WMK'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WMK', 'Transformation': 'Diff_WMK'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.88, ('TRAINING', {'Signal': 'WMK', 'Transformation': 'Diff_WMK'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WMK', 'Transformation': 'RelDiff_WMK'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.177, ('TRAINING', {'Signal': 'WMK', 'Transformation': 'RelDiff_WMK'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'WMK', 'Transformation': 'CumSum_WMK'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.72, ('TRAINING', {'Signal': 'WMK', 'Transformation': 'CumSum_WMK'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.301, ('SIGNAL_TRAINING', {'Signals': ['WMK'], 'Transformations': [('WMK', 'None', '_', 'T+S+R'), ('WMK', 'None', 'Diff_', 'T+S+R'), ('WMK', 'None', 'RelDiff_', 'T+S+R'), ('WMK', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['WMK'], 'Transformations': [('WMK', [('WMK', 'None', 'CumSum_', 'T+S+R'), ('WMK', 'None', 'Diff_', 'T+S+R'), ('WMK', 'None', 'RelDiff_', 'T+S+R'), ('WMK', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'WMK', 'Transformations': [('WMK', 'None', 'CumSum_', 'T+S+R'), ('WMK', 'None', 'Diff_', 'T+S+R'), ('WMK', 'None', 'RelDiff_', 'T+S+R'), ('WMK', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'WMK', 'Transformations': [('WMK', 'None', 'CumSum_', 'T+S+R'), ('WMK', 'None', 'Diff_', 'T+S+R'), ('WMK', 'None', 'RelDiff_', 'T+S+R'), ('WMK', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'WMK', 'Model': '_WMK_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'WMK', 'Model': '_WMK_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'WMK'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.182, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'WMK'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.217, ('FINALIZE_TRAINING', {'Signals': ['WMK'], 'Transformations': [('WMK', [('WMK', 'None', 'CumSum_', 'T+S+R'), ('WMK', 'None', 'Diff_', 'T+S+R'), ('WMK', 'None', 'RelDiff_', 'T+S+R'), ('WMK', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='WMK' Length=1251  Min=36.93 Max=53.529999  Mean=44.0361310391687 StdDev=3.8342623106171443
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_WMK' Min=0.0 Max=1.0  Mean=0.42808020887041415 StdDev=0.23097967118053103
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_WMK_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_WMK_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_WMK_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_WMK_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0105 MAPE_Forecast=0.0132 MAPE_Test=0.0067
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0105 SMAPE_Forecast=0.0132 SMAPE_Test=0.0067
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9971 MASE_Test=1.7426
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.165577798382703 CRPS_Forecast=0.8686490859520907 CRPS_Test=0.26071471428571413
INFO:pyaf.std:MODEL_L1 L1_Fit=0.46321603115577886 L1_Forecast=0.570722843373494 L1_Test=0.35142899999999905
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6384554290922899 L2_Forecast=0.7780582956879897 L2_Test=0.5514400912948616
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.20238000984139398 LnQ_Forecast=0.08128499957113902 LnQ_Test=0.0007929816556942745
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.3400000000000034 MedAE_Forecast=0.45000000000000284 MedAE_Test=0.17999999999999972
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.19277115619103355
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _WMK_Lag1Trend_residue_bestCycle_byMAPE None -0.0006023494338764923 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _WMK  ...  1.300000e-02  7.400000e-03
1    None           _WMK  ...  1.300000e-02  7.400000e-03
2    None           _WMK  ...  1.300000e-02  7.000000e-03
3    None           _WMK  ...  1.300000e-02  7.400000e-03
4    None           _WMK  ...  1.320000e-02  6.700000e-03
..    ...            ...  ...           ...           ...
219  None    RelDiff_WMK  ...  4.547491e+06  1.463100e+04
220  None    RelDiff_WMK  ...  7.397335e+06  6.076630e+06
221  None    RelDiff_WMK  ...  7.397335e+06  6.076630e+06
222  None    RelDiff_WMK  ...  7.397335e+06  6.076630e+06
223  None    RelDiff_WMK  ...  7.397335e+06  6.076630e+06

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _WMK             T+S+R  ...  0.0102       0.0130   0.0074
1  None           _WMK             T+S+R  ...  0.0102       0.0130   0.0074
2  None           _WMK             T+S+R  ...  0.0102       0.0130   0.0070
3  None           _WMK             T+S+R  ...  0.0100       0.0130   0.0074
4  None           _WMK             T+S+R  ...  0.0105       0.0132   0.0067

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['WMK'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.151, ('FORECASTING', {'Signals': ['WMK'], 'Horizon': 7}))
7 0    52.810001
1    52.810001
2    52.560001
3    52.610001
4    52.570000
5    52.490002
6    51.549999
Name: WMK, dtype: float64
7 0    52.939999
1    52.939999
2    52.939999
3    52.939999
4    52.939999
5    52.939999
6    52.939999
Name: WMK_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_WMK WMK [52.810001, 52.810001, 52.560001, 52.610001, 52.57, 52.490002, 51.549999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_WMK WMK [52.939999, 52.939999, 52.939999, 52.939999, 52.939999, 52.939999, 52.939999]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_WMK WMK 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_WMK WMK 12.772334098815918
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_WMK WMK Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_WMK WMK 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_WMK WMK 0.0087 0.0086 2.0042
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_WMK WMK 0.45428400000000124 0.6045769099161126 -1.2968133517669274
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_WMK_7'
