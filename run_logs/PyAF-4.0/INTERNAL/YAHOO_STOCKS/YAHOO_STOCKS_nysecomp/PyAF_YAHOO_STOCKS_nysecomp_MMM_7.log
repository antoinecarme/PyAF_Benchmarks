BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MMM N= 1251 H= 7 HEAD= [87.57     87.139999 86.769997 85.269997 86.18    ] TAIL= [179.160004 179.210007 180.899994 181.399994 181.110001]
         MMM       Date
0  87.570000 2011-07-28
1  87.139999 2011-07-29
2  86.769997 2011-08-01
3  85.269997 2011-08-02
4  86.180000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MMM     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MMM'], 'Transformations': [('MMM', 'None', '_', 'T+S+R'), ('MMM', 'None', 'Diff_', 'T+S+R'), ('MMM', 'None', 'RelDiff_', 'T+S+R'), ('MMM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMM', 'Transformation': '_MMM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.423, ('TRAINING', {'Signal': 'MMM', 'Transformation': '_MMM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMM', 'Transformation': 'Diff_MMM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.728, ('TRAINING', {'Signal': 'MMM', 'Transformation': 'Diff_MMM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMM', 'Transformation': 'RelDiff_MMM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.084, ('TRAINING', {'Signal': 'MMM', 'Transformation': 'RelDiff_MMM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMM', 'Transformation': 'CumSum_MMM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.734, ('TRAINING', {'Signal': 'MMM', 'Transformation': 'CumSum_MMM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.971, ('SIGNAL_TRAINING', {'Signals': ['MMM'], 'Transformations': [('MMM', 'None', '_', 'T+S+R'), ('MMM', 'None', 'Diff_', 'T+S+R'), ('MMM', 'None', 'RelDiff_', 'T+S+R'), ('MMM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MMM'], 'Transformations': [('MMM', [('MMM', 'None', 'CumSum_', 'T+S+R'), ('MMM', 'None', 'Diff_', 'T+S+R'), ('MMM', 'None', 'RelDiff_', 'T+S+R'), ('MMM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MMM', 'Transformations': [('MMM', 'None', 'CumSum_', 'T+S+R'), ('MMM', 'None', 'Diff_', 'T+S+R'), ('MMM', 'None', 'RelDiff_', 'T+S+R'), ('MMM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MMM', 'Transformations': [('MMM', 'None', 'CumSum_', 'T+S+R'), ('MMM', 'None', 'Diff_', 'T+S+R'), ('MMM', 'None', 'RelDiff_', 'T+S+R'), ('MMM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MMM', 'Model': '_MMM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MMM', 'Model': '_MMM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MMM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MMM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.218, ('FINALIZE_TRAINING', {'Signals': ['MMM'], 'Transformations': [('MMM', [('MMM', 'None', 'CumSum_', 'T+S+R'), ('MMM', 'None', 'Diff_', 'T+S+R'), ('MMM', 'None', 'RelDiff_', 'T+S+R'), ('MMM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MMM' Length=1251  Min=70.93 Max=181.399994  Mean=125.57557156195043 StdDev=30.768002119191912
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MMM' Min=0.0 Max=1.0  Mean=0.49466438426664966 StdDev=0.27851908925777547
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MMM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MMM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MMM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MMM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0082 MAPE_Forecast=0.0084 MAPE_Test=0.0054
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0081 SMAPE_Forecast=0.0084 SMAPE_Test=0.0055
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9969 MASE_Test=1.2792
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=8.722961887143615 CRPS_Forecast=2.893961056304087 CRPS_Test=0.8257152142857141
INFO:pyaf.std:MODEL_L1 L1_Fit=0.9110957658291455 L1_Forecast=1.2849797751004015 L1_Test=0.9742845714285693
INFO:pyaf.std:MODEL_L2 L2_Fit=1.2704350557333883 L2_Forecast=1.8100427751594346 L2_Test=1.2171261819964028
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.1363317982827001 LnQ_Forecast=0.035679017100002354 LnQ_Test=0.0003283910468963486
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.6400000000000006 MedAE_Forecast=0.9300069999999891 MedAE_Test=0.8900000000000148
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.15062913826174362
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MMM_Lag1Trend_residue_bestCycle_byMAPE None 0.0008146646590747597 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None           _MMM             T+S+R  ...   0.0081       0.0083    0.0052
1    None           _MMM             T+S+R  ...   0.0080       0.0083    0.0058
2    None           _MMM             T+S+R  ...   0.0080       0.0083    0.0055
3    None           _MMM             T+S+R  ...   0.0079       0.0083    0.0060
4    None           _MMM             T+S+R  ...   0.0082       0.0084    0.0054
..    ...            ...               ...  ...      ...          ...       ...
219  None    RelDiff_MMM             T+S+R  ...  39.0132     140.8823  426.1682
220  None    RelDiff_MMM             T+S+R  ...  11.6591     189.2389  350.6220
221  None    RelDiff_MMM             T+S+R  ...  11.6591     189.2389  350.6220
222  None    RelDiff_MMM             T+S+R  ...  47.4626     209.3424  632.1701
223  None    RelDiff_MMM             T+S+R  ...  47.4626     209.3424  632.1701

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _MMM             T+S+R  ...  0.0081       0.0083   0.0052
1  None           _MMM             T+S+R  ...  0.0080       0.0083   0.0058
2  None           _MMM             T+S+R  ...  0.0080       0.0083   0.0055
3  None           _MMM             T+S+R  ...  0.0079       0.0083   0.0060
4  None           _MMM             T+S+R  ...  0.0082       0.0084   0.0054

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MMM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.152, ('FORECASTING', {'Signals': ['MMM'], 'Horizon': 7}))
7 0    181.240005
1    181.419998
2    180.259995
3    180.440002
4    179.630005
5    177.660004
6    178.270004
Name: MMM, dtype: float64
7 0    181.110001
1    181.110001
2    181.110001
3    181.110001
4    181.110001
5    181.110001
6    181.110001
Name: MMM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MMM MMM [181.240005, 181.419998, 180.259995, 180.440002, 179.630005, 177.660004, 178.270004]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MMM MMM [181.110001, 181.110001, 181.110001, 181.110001, 181.110001, 181.110001, 181.110001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MMM MMM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MMM MMM 12.445920944213867
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MMM MMM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MMM MMM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MMM MMM 0.0078 0.0077 1.6986
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MMM MMM 1.3899994285714325 1.8300217976881452 -0.9130866300563534
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_MMM_7'
