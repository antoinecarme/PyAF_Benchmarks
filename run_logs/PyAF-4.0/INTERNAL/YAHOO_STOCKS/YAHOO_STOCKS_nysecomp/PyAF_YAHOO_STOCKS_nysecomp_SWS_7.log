BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 888 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2014-12-17T00:00:00.000000000' '2014-12-18T00:00:00.000000000'
 '2014-12-19T00:00:00.000000000' '2014-12-22T00:00:00.000000000'
 '2014-12-23T00:00:00.000000000']
SIGNAL :  SWS N= 888 H= 7 HEAD= [5.45 5.45 5.97 5.65 5.43] TAIL= [6.92 6.98 7.16 6.86 6.94]
    SWS       Date
0  5.45 2011-07-28
1  5.45 2011-07-29
2  5.97 2011-08-01
3  5.65 2011-08-02
4  5.43 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 888 entries, 0 to 887
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   SWS     888 non-null    float64       
 1   Date    888 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 20.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SWS'], 'Transformations': [('SWS', 'None', '_', 'T+S+R'), ('SWS', 'None', 'Diff_', 'T+S+R'), ('SWS', 'None', 'RelDiff_', 'T+S+R'), ('SWS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWS', 'Transformation': '_SWS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.242, ('TRAINING', {'Signal': 'SWS', 'Transformation': '_SWS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWS', 'Transformation': 'Diff_SWS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.295, ('TRAINING', {'Signal': 'SWS', 'Transformation': 'Diff_SWS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWS', 'Transformation': 'RelDiff_SWS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.947, ('TRAINING', {'Signal': 'SWS', 'Transformation': 'RelDiff_SWS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SWS', 'Transformation': 'CumSum_SWS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.599, ('TRAINING', {'Signal': 'SWS', 'Transformation': 'CumSum_SWS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.086, ('SIGNAL_TRAINING', {'Signals': ['SWS'], 'Transformations': [('SWS', 'None', '_', 'T+S+R'), ('SWS', 'None', 'Diff_', 'T+S+R'), ('SWS', 'None', 'RelDiff_', 'T+S+R'), ('SWS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SWS'], 'Transformations': [('SWS', [('SWS', 'None', 'CumSum_', 'T+S+R'), ('SWS', 'None', 'Diff_', 'T+S+R'), ('SWS', 'None', 'RelDiff_', 'T+S+R'), ('SWS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SWS', 'Transformations': [('SWS', 'None', 'CumSum_', 'T+S+R'), ('SWS', 'None', 'Diff_', 'T+S+R'), ('SWS', 'None', 'RelDiff_', 'T+S+R'), ('SWS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'SWS', 'Transformations': [('SWS', 'None', 'CumSum_', 'T+S+R'), ('SWS', 'None', 'Diff_', 'T+S+R'), ('SWS', 'None', 'RelDiff_', 'T+S+R'), ('SWS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SWS', 'Model': '_SWS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SWS', 'Model': '_SWS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SWS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.186, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SWS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['SWS'], 'Transformations': [('SWS', [('SWS', 'None', 'CumSum_', 'T+S+R'), ('SWS', 'None', 'Diff_', 'T+S+R'), ('SWS', 'None', 'RelDiff_', 'T+S+R'), ('SWS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2014-04-09T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SWS' Length=888  Min=3.75 Max=8.19  Mean=6.225551801801807 StdDev=0.9180408595694947
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SWS' Min=0.0 Max=1.0  Mean=0.5575567121175227 StdDev=0.2067659593624987
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SWS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SWS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SWS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SWS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0217 MAPE_Forecast=0.0101 MAPE_Test=0.0167
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0217 SMAPE_Forecast=0.0101 SMAPE_Test=0.0166
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9986 MASE_Forecast=1.0069 MASE_Test=0.8901
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.2372537754186603 CRPS_Forecast=0.05861880527306967 CRPS_Test=0.0571428571428572
INFO:pyaf.std:MODEL_L1 L1_Fit=0.12340909090909093 L1_Forecast=0.07276836158192093 L1_Test=0.11571428571428578
INFO:pyaf.std:MODEL_L2 L2_Fit=0.17914411415495526 L2_Forecast=0.09514188037415462 L2_Test=0.1492361503504716
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7505395668878031 LnQ_Forecast=0.030891884172366116 LnQ_Test=0.003191328961597118
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.08999999999999986 MedAE_Forecast=0.05999999999999961 MedAE_Test=0.08000000000000007
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.38288288288288297
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SWS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _SWS  ...  1.010000e-02  1.670000e-02
1    None           _SWS  ...  1.010000e-02  1.670000e-02
2    None     CumSum_SWS  ...  1.010000e-02  1.670000e-02
3    None       Diff_SWS  ...  1.010000e-02  1.670000e-02
4    None       Diff_SWS  ...  1.010000e-02  1.670000e-02
..    ...            ...  ...           ...           ...
211  None    RelDiff_SWS  ...  2.355178e+07  2.460007e+07
212  None    RelDiff_SWS  ...  2.355178e+07  2.460007e+07
213  None    RelDiff_SWS  ...  2.355178e+07  2.460007e+07
214  None    RelDiff_SWS  ...  2.355178e+07  2.460007e+07
215  None    RelDiff_SWS  ...  2.355178e+07  2.460007e+07

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _SWS             T+S+R  ...  0.0217       0.0101   0.0167
1  None           _SWS             T+S+R  ...  0.0217       0.0101   0.0167
2  None     CumSum_SWS             T+S+R  ...  0.0221       0.0101   0.0167
3  None       Diff_SWS             T+S+R  ...  0.0217       0.0101   0.0167
4  None       Diff_SWS             T+S+R  ...  0.0217       0.0101   0.0167

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SWS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.179, ('FORECASTING', {'Signals': ['SWS'], 'Horizon': 7}))
7 0    6.86
1    6.86
2    6.91
3    6.96
4    6.92
5    6.91
6    6.91
Name: SWS, dtype: float64
7 0    6.94
1    6.94
2    6.94
3    6.94
4    6.94
5    6.94
6    6.94
Name: SWS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SWS SWS [6.86, 6.86, 6.91, 6.96, 6.92, 6.91, 6.91]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SWS SWS [6.94, 6.94, 6.94, 6.94, 6.94, 6.94, 6.94]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SWS SWS 888 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SWS SWS 11.598542928695679
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SWS SWS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SWS SWS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SWS SWS 0.006 0.006 1.6571
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SWS SWS 0.04142857142857156 0.04825527358301307 -1.211240280080101
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_SWS_7'
