BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  LEG N= 1251 H= 7 HEAD= [22.1      21.700001 21.09     20.26     20.58    ] TAIL= [52.59     52.529999 52.66     52.889999 53.169998]
         LEG       Date
0  22.100000 2011-07-28
1  21.700001 2011-07-29
2  21.090000 2011-08-01
3  20.260000 2011-08-02
4  20.580000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   LEG     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['LEG'], 'Transformations': [('LEG', 'None', '_', 'T+S+R'), ('LEG', 'None', 'Diff_', 'T+S+R'), ('LEG', 'None', 'RelDiff_', 'T+S+R'), ('LEG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LEG', 'Transformation': '_LEG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.438, ('TRAINING', {'Signal': 'LEG', 'Transformation': '_LEG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LEG', 'Transformation': 'Diff_LEG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.743, ('TRAINING', {'Signal': 'LEG', 'Transformation': 'Diff_LEG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LEG', 'Transformation': 'RelDiff_LEG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.089, ('TRAINING', {'Signal': 'LEG', 'Transformation': 'RelDiff_LEG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'LEG', 'Transformation': 'CumSum_LEG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.702, ('TRAINING', {'Signal': 'LEG', 'Transformation': 'CumSum_LEG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.974, ('SIGNAL_TRAINING', {'Signals': ['LEG'], 'Transformations': [('LEG', 'None', '_', 'T+S+R'), ('LEG', 'None', 'Diff_', 'T+S+R'), ('LEG', 'None', 'RelDiff_', 'T+S+R'), ('LEG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['LEG'], 'Transformations': [('LEG', [('LEG', 'None', 'CumSum_', 'T+S+R'), ('LEG', 'None', 'Diff_', 'T+S+R'), ('LEG', 'None', 'RelDiff_', 'T+S+R'), ('LEG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'LEG', 'Transformations': [('LEG', 'None', 'CumSum_', 'T+S+R'), ('LEG', 'None', 'Diff_', 'T+S+R'), ('LEG', 'None', 'RelDiff_', 'T+S+R'), ('LEG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'LEG', 'Transformations': [('LEG', 'None', 'CumSum_', 'T+S+R'), ('LEG', 'None', 'Diff_', 'T+S+R'), ('LEG', 'None', 'RelDiff_', 'T+S+R'), ('LEG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'LEG', 'Model': '_LEG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'LEG', 'Model': '_LEG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'LEG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.182, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'LEG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.217, ('FINALIZE_TRAINING', {'Signals': ['LEG'], 'Transformations': [('LEG', [('LEG', 'None', 'CumSum_', 'T+S+R'), ('LEG', 'None', 'Diff_', 'T+S+R'), ('LEG', 'None', 'RelDiff_', 'T+S+R'), ('LEG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='LEG' Length=1251  Min=17.870001 Max=53.169998  Mean=33.976370901678685 StdDev=9.502011593416889
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_LEG' Min=0.0 Max=1.0  Mean=0.45627114080714176 StdDev=0.2691788215567521
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_LEG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_LEG_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_LEG_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_LEG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0107 MAPE_Forecast=0.0104 MAPE_Test=0.0058
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0107 SMAPE_Forecast=0.0104 SMAPE_Test=0.0059
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9964 MASE_Test=1.4558
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.3116364009865116 CRPS_Forecast=0.9390319933076308 CRPS_Test=0.19928564285714248
INFO:pyaf.std:MODEL_L1 L1_Fit=0.30841209447236173 L1_Forecast=0.47253022489959845 L1_Test=0.30571399999999876
INFO:pyaf.std:MODEL_L2 L2_Fit=0.4232941988922303 L2_Forecast=0.6152226340117222 L2_Test=0.39565397580894734
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22482175783120564 LnQ_Forecast=0.04600656974401171 LnQ_Test=0.00040715906057935483
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.24000199999999694 MedAE_Forecast=0.3899990000000031 MedAE_Test=0.2299990000000065
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.11983001018385363
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _LEG_Lag1Trend_residue_bestCycle_byMAPE None 0.0008498017719379969 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE    TestMAPE
0    None           _LEG             T+S+R  ...    0.0107       0.0104      0.0058
1    None           _LEG             T+S+R  ...    0.0107       0.0104      0.0058
2    None     CumSum_LEG             T+S+R  ...    0.0108       0.0104      0.0058
3    None       Diff_LEG             T+S+R  ...    0.0107       0.0104      0.0058
4    None       Diff_LEG             T+S+R  ...    0.0107       0.0104      0.0058
..    ...            ...               ...  ...       ...          ...         ...
219  None    RelDiff_LEG             T+S+R  ...   32.9226    4970.7725  56581.2192
220  None    RelDiff_LEG             T+S+R  ...   29.0557    5168.0075  63199.6278
221  None    RelDiff_LEG             T+S+R  ...  138.8955    5451.0758  41758.7581
222  None    RelDiff_LEG             T+S+R  ...  138.8955    5451.0758  41758.7581
223  None    RelDiff_LEG             T+S+R  ...   27.0508    6613.7289  87231.6114

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _LEG             T+S+R  ...  0.0107       0.0104   0.0058
1  None           _LEG             T+S+R  ...  0.0107       0.0104   0.0058
2  None     CumSum_LEG             T+S+R  ...  0.0108       0.0104   0.0058
3  None       Diff_LEG             T+S+R  ...  0.0107       0.0104   0.0058
4  None       Diff_LEG             T+S+R  ...  0.0107       0.0104   0.0058

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['LEG'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['LEG'], 'Horizon': 7}))
7 0    53.250000
1    53.540001
2    52.919998
3    53.470001
4    53.490002
5    53.770000
6    53.540001
Name: LEG, dtype: float64
7 0    53.169998
1    53.169998
2    53.169998
3    53.169998
4    53.169998
5    53.169998
6    53.169998
Name: LEG_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_LEG LEG [53.25, 53.540001, 52.919998, 53.470001, 53.490002, 53.77, 53.540001]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_LEG LEG [53.16999800000001, 53.16999800000001, 53.16999800000001, 53.16999800000001, 53.16999800000001, 53.16999800000001, 53.16999800000001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_LEG LEG 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_LEG LEG 12.450745344161987
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_LEG LEG Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_LEG LEG 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_LEG LEG 0.0061 0.0061 0.9864
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_LEG LEG 0.3271452857142805 0.3575934483362305 -1.0465574071987
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_LEG_7'
