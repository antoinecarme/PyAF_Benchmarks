BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 773 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2014-07-09T00:00:00.000000000' '2014-07-10T00:00:00.000000000'
 '2014-07-11T00:00:00.000000000' '2014-07-14T00:00:00.000000000'
 '2014-07-15T00:00:00.000000000']
SIGNAL :  EMS N= 773 H= 7 HEAD= [3.58 3.5  3.39 3.29 3.2 ] TAIL= [4.95 4.95 4.95 4.95 4.95]
    EMS       Date
0  3.58 2011-07-28
1  3.50 2011-07-29
2  3.39 2011-08-01
3  3.29 2011-08-02
4  3.20 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 773 entries, 0 to 772
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   EMS     773 non-null    float64       
 1   Date    773 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 18.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['EMS'], 'Transformations': [('EMS', 'None', '_', 'T+S+R'), ('EMS', 'None', 'Diff_', 'T+S+R'), ('EMS', 'None', 'RelDiff_', 'T+S+R'), ('EMS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EMS', 'Transformation': '_EMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.757, ('TRAINING', {'Signal': 'EMS', 'Transformation': '_EMS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EMS', 'Transformation': 'Diff_EMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.859, ('TRAINING', {'Signal': 'EMS', 'Transformation': 'Diff_EMS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EMS', 'Transformation': 'RelDiff_EMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.002, ('TRAINING', {'Signal': 'EMS', 'Transformation': 'RelDiff_EMS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'EMS', 'Transformation': 'CumSum_EMS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.536, ('TRAINING', {'Signal': 'EMS', 'Transformation': 'CumSum_EMS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.156, ('SIGNAL_TRAINING', {'Signals': ['EMS'], 'Transformations': [('EMS', 'None', '_', 'T+S+R'), ('EMS', 'None', 'Diff_', 'T+S+R'), ('EMS', 'None', 'RelDiff_', 'T+S+R'), ('EMS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['EMS'], 'Transformations': [('EMS', [('EMS', 'None', 'CumSum_', 'T+S+R'), ('EMS', 'None', 'Diff_', 'T+S+R'), ('EMS', 'None', 'RelDiff_', 'T+S+R'), ('EMS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'EMS', 'Transformations': [('EMS', 'None', 'CumSum_', 'T+S+R'), ('EMS', 'None', 'Diff_', 'T+S+R'), ('EMS', 'None', 'RelDiff_', 'T+S+R'), ('EMS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'EMS', 'Transformations': [('EMS', 'None', 'CumSum_', 'T+S+R'), ('EMS', 'None', 'Diff_', 'T+S+R'), ('EMS', 'None', 'RelDiff_', 'T+S+R'), ('EMS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EMS', 'Model': '_EMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'EMS', 'Model': '_EMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EMS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.172, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'EMS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.204, ('FINALIZE_TRAINING', {'Signals': ['EMS'], 'Transformations': [('EMS', [('EMS', 'None', 'CumSum_', 'T+S+R'), ('EMS', 'None', 'Diff_', 'T+S+R'), ('EMS', 'None', 'RelDiff_', 'T+S+R'), ('EMS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2013-12-02T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='EMS' Length=773  Min=0.21 Max=6.0  Mean=2.8402199223803324 StdDev=1.610712706791761
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_EMS' Min=0.0 Max=1.0  Mean=0.4542694166459996 StdDev=0.27818872310738485
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_EMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_EMS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_EMS_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_EMS_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0462 MAPE_Forecast=0.0287 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0474 SMAPE_Forecast=0.0294 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9984 MASE_Forecast=0.9935 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4771998194014449 CRPS_Forecast=0.19890457142857149 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.09854575163398697 L1_Forecast=0.11532467532467536 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2453692029404546 L2_Forecast=0.24652388519984425 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=14.644590755733446 LnQ_Forecast=0.5996410929202949 LnQ_Test=0.0
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.040000000000000036 MedAE_Forecast=0.025000000000000355 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5820379965457686
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _EMS_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _EMS  ...  2.870000e-02  0.000000e+00
1    None           _EMS  ...  2.870000e-02  0.000000e+00
2    None     CumSum_EMS  ...  2.870000e-02  0.000000e+00
3    None       Diff_EMS  ...  2.870000e-02  0.000000e+00
4    None       Diff_EMS  ...  2.870000e-02  0.000000e+00
..    ...            ...  ...           ...           ...
163  None    RelDiff_EMS  ...  8.537675e+07  6.808081e+07
164  None    RelDiff_EMS  ...  8.537675e+07  6.808081e+07
165  None    RelDiff_EMS  ...  8.537675e+07  6.808081e+07
166  None    RelDiff_EMS  ...  8.537675e+07  6.808081e+07
167  None    RelDiff_EMS  ...  8.537675e+07  6.808081e+07

[168 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _EMS             T+S+R  ...  0.0462       0.0287      0.0
1  None           _EMS             T+S+R  ...  0.0462       0.0287      0.0
2  None     CumSum_EMS             T+S+R  ...  0.0477       0.0287      0.0
3  None       Diff_EMS             T+S+R  ...  0.0462       0.0287      0.0
4  None       Diff_EMS             T+S+R  ...  0.0462       0.0287      0.0

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['EMS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.141, ('FORECASTING', {'Signals': ['EMS'], 'Horizon': 7}))
7 0    4.95
1    4.95
2    4.95
3    4.95
4    4.95
5    4.95
6    4.95
Name: EMS, dtype: float64
7 0    4.95
1    4.95
2    4.95
3    4.95
4    4.95
5    4.95
6    4.95
Name: EMS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_EMS EMS [4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_EMS EMS [4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_EMS EMS 773 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_EMS EMS 9.60386061668396
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_EMS EMS Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_EMS EMS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_EMS EMS 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_EMS EMS 0.0 0.0 1.0
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_EMS_7'
