BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SCL N= 1251 H= 7 HEAD= [79.889999 79.300003 78.309998 76.190002 76.330002] TAIL= [61.619999 61.68     61.880001 62.59     62.619999]
         SCL       Date
0  79.889999 2011-07-28
1  79.300003 2011-07-29
2  78.309998 2011-08-01
3  76.190002 2011-08-02
4  76.330002 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   SCL     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SCL'], 'Transformations': [('SCL', 'None', '_', 'T+S+R'), ('SCL', 'None', 'Diff_', 'T+S+R'), ('SCL', 'None', 'RelDiff_', 'T+S+R'), ('SCL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCL', 'Transformation': '_SCL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.362, ('TRAINING', {'Signal': 'SCL', 'Transformation': '_SCL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCL', 'Transformation': 'Diff_SCL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.806, ('TRAINING', {'Signal': 'SCL', 'Transformation': 'Diff_SCL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCL', 'Transformation': 'RelDiff_SCL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.427, ('TRAINING', {'Signal': 'SCL', 'Transformation': 'RelDiff_SCL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SCL', 'Transformation': 'CumSum_SCL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.795, ('TRAINING', {'Signal': 'SCL', 'Transformation': 'CumSum_SCL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.391, ('SIGNAL_TRAINING', {'Signals': ['SCL'], 'Transformations': [('SCL', 'None', '_', 'T+S+R'), ('SCL', 'None', 'Diff_', 'T+S+R'), ('SCL', 'None', 'RelDiff_', 'T+S+R'), ('SCL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SCL'], 'Transformations': [('SCL', [('SCL', 'None', 'CumSum_', 'T+S+R'), ('SCL', 'None', 'Diff_', 'T+S+R'), ('SCL', 'None', 'RelDiff_', 'T+S+R'), ('SCL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SCL', 'Transformations': [('SCL', 'None', 'CumSum_', 'T+S+R'), ('SCL', 'None', 'Diff_', 'T+S+R'), ('SCL', 'None', 'RelDiff_', 'T+S+R'), ('SCL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'SCL', 'Transformations': [('SCL', 'None', 'CumSum_', 'T+S+R'), ('SCL', 'None', 'Diff_', 'T+S+R'), ('SCL', 'None', 'RelDiff_', 'T+S+R'), ('SCL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SCL', 'Model': '_SCL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.032, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SCL', 'Model': '_SCL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SCL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.221, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SCL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.264, ('FINALIZE_TRAINING', {'Signals': ['SCL'], 'Transformations': [('SCL', [('SCL', 'None', 'CumSum_', 'T+S+R'), ('SCL', 'None', 'Diff_', 'T+S+R'), ('SCL', 'None', 'RelDiff_', 'T+S+R'), ('SCL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SCL' Length=1251  Min=37.02 Max=102.07  Mean=62.201718642685755 StdDev=17.02026231197756
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SCL' Min=0.0 Max=1.0  Mean=0.3871132765977838 StdDev=0.26164892101425935
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SCL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SCL_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SCL_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SCL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0131 MAPE_Forecast=0.0145 MAPE_Test=0.0109
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0128 SMAPE_Forecast=0.0145 SMAPE_Test=0.011
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0102 MASE_Test=1.2189
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.260975612714891 CRPS_Forecast=1.7183938736283486 CRPS_Test=0.6292857857142857
INFO:pyaf.std:MODEL_L1 L1_Fit=0.8590753648241206 L1_Forecast=0.7342167791164657 L1_Test=0.664285428571428
INFO:pyaf.std:MODEL_L2 L2_Fit=1.9476554149031269 L2_Forecast=1.097292651545418 L2_Test=0.8748458933711039
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7226948593116935 LnQ_Forecast=0.11679907738424256 LnQ_Test=0.0014853205983778584
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.5299989999999966 MedAE_Forecast=0.5500030000000038 MedAE_Test=0.7099990000000034
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6590314988470409
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SCL_Lag1Trend_residue_bestCycle_byMAPE None 0.0003074558032283292 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE  ForecastMAPE      TestMAPE
0    None           _SCL             T+S+R  ...  0.0129  1.440000e-02  1.200000e-02
1    None           _SCL             T+S+R  ...  0.0129  1.440000e-02  1.200000e-02
2    None           _SCL             T+S+R  ...  0.0127  1.440000e-02  1.070000e-02
3    None           _SCL             T+S+R  ...  0.0131  1.450000e-02  1.090000e-02
4    None           _SCL             T+S+R  ...  0.0131  1.450000e-02  1.090000e-02
..    ...            ...               ...  ...     ...           ...           ...
203  None    RelDiff_SCL             T+S+R  ...  1.6817  1.135994e+06  2.711740e+07
204  None    RelDiff_SCL             T+S+R  ...  1.7328  1.234009e+06  2.959847e+07
205  None    RelDiff_SCL             T+S+R  ...  1.8716  2.042295e+06  5.516581e+07
206  None    RelDiff_SCL             T+S+R  ...  5.1963  5.110672e+06  6.984229e+07
207  None    RelDiff_SCL             T+S+R  ...  5.1963  5.110672e+06  6.984229e+07

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _SCL             T+S+R  ...  0.0129       0.0144   0.0120
1  None           _SCL             T+S+R  ...  0.0129       0.0144   0.0120
2  None           _SCL             T+S+R  ...  0.0127       0.0144   0.0107
3  None           _SCL             T+S+R  ...  0.0131       0.0145   0.0109
4  None           _SCL             T+S+R  ...  0.0131       0.0145   0.0109

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SCL'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('FORECASTING', {'Signals': ['SCL'], 'Horizon': 7}))
7 0    62.580002
1    62.790001
2    65.199997
3    64.889999
4    64.089996
5    64.150002
6    64.139999
Name: SCL, dtype: float64
7 0    62.619999
1    62.619999
2    62.619999
3    62.619999
4    62.619999
5    62.619999
6    62.619999
Name: SCL_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SCL SCL [62.580002, 62.790001, 65.199997, 64.889999, 64.089996, 64.150002, 64.139999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SCL SCL [62.619999, 62.619999, 62.619999, 62.619999, 62.619999, 62.619999, 62.619999]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SCL SCL 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SCL SCL 12.969444751739502
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SCL SCL Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SCL SCL 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SCL SCL 0.0212 0.0215 2.1609
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SCL SCL 1.3685709999999998 1.6323510861871684 -2.2386846700448
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_SCL_7'
