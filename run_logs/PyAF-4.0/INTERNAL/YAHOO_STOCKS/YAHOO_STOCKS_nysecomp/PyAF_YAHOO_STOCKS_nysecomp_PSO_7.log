BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  PSO N= 1251 H= 7 HEAD= [18.43     19.049999 19.25     18.93     18.799999] TAIL= [12.84 12.79 12.78 12.76 12.76]
         PSO       Date
0  18.430000 2011-07-28
1  19.049999 2011-07-29
2  19.250000 2011-08-01
3  18.930000 2011-08-02
4  18.799999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   PSO     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['PSO'], 'Transformations': [('PSO', 'None', '_', 'T+S+R'), ('PSO', 'None', 'Diff_', 'T+S+R'), ('PSO', 'None', 'RelDiff_', 'T+S+R'), ('PSO', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSO', 'Transformation': '_PSO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.2, ('TRAINING', {'Signal': 'PSO', 'Transformation': '_PSO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSO', 'Transformation': 'Diff_PSO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.784, ('TRAINING', {'Signal': 'PSO', 'Transformation': 'Diff_PSO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSO', 'Transformation': 'RelDiff_PSO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.331, ('TRAINING', {'Signal': 'PSO', 'Transformation': 'RelDiff_PSO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PSO', 'Transformation': 'CumSum_PSO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.779, ('TRAINING', {'Signal': 'PSO', 'Transformation': 'CumSum_PSO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.096, ('SIGNAL_TRAINING', {'Signals': ['PSO'], 'Transformations': [('PSO', 'None', '_', 'T+S+R'), ('PSO', 'None', 'Diff_', 'T+S+R'), ('PSO', 'None', 'RelDiff_', 'T+S+R'), ('PSO', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['PSO'], 'Transformations': [('PSO', [('PSO', 'None', 'CumSum_', 'T+S+R'), ('PSO', 'None', 'Diff_', 'T+S+R'), ('PSO', 'None', 'RelDiff_', 'T+S+R'), ('PSO', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'PSO', 'Transformations': [('PSO', 'None', 'CumSum_', 'T+S+R'), ('PSO', 'None', 'Diff_', 'T+S+R'), ('PSO', 'None', 'RelDiff_', 'T+S+R'), ('PSO', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'PSO', 'Transformations': [('PSO', 'None', 'CumSum_', 'T+S+R'), ('PSO', 'None', 'Diff_', 'T+S+R'), ('PSO', 'None', 'RelDiff_', 'T+S+R'), ('PSO', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PSO', 'Model': '_PSO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PSO', 'Model': '_PSO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PSO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PSO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['PSO'], 'Transformations': [('PSO', [('PSO', 'None', 'CumSum_', 'T+S+R'), ('PSO', 'None', 'Diff_', 'T+S+R'), ('PSO', 'None', 'RelDiff_', 'T+S+R'), ('PSO', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='PSO' Length=1251  Min=9.41 Max=22.4  Mean=18.026434843325333 StdDev=2.8358964362001173
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_PSO' Min=0.0 Max=1.0  Mean=0.66331292096423 StdDev=0.21831381341032477
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_PSO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_PSO_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_PSO_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_PSO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0107 MAPE_Forecast=0.0165 MAPE_Test=0.0074
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0107 SMAPE_Forecast=0.0165 SMAPE_Test=0.0075
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9973 MASE_Test=0.898
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.361330396979635 CRPS_Forecast=0.760072486358044 CRPS_Test=0.09142857142857139
INFO:pyaf.std:MODEL_L1 L1_Fit=0.20292466130653258 L1_Forecast=0.2183935903614458 L1_Test=0.0942857142857143
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2745051126030187 L2_Forecast=0.345796334190097 L2_Test=0.14909249286456877
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.21157162661570805 LnQ_Forecast=0.15786909135544835 LnQ_Test=0.0009866826467641145
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.16000000000000014 MedAE_Forecast=0.15999999999999837 MedAE_Test=0.02999999999999936
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6943802925327175
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _PSO_Lag1Trend_residue_bestCycle_byMAPE None 0.0007698229407234747 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None           _PSO             T+S+R  ...   0.0105       0.0164   0.0075
1    None           _PSO             T+S+R  ...   0.0105       0.0164   0.0075
2    None           _PSO             T+S+R  ...   0.0107       0.0165   0.0074
3    None           _PSO             T+S+R  ...   0.0107       0.0165   0.0074
4    None     CumSum_PSO             T+S+R  ...   0.0112       0.0165   0.0074
..    ...            ...               ...  ...      ...          ...      ...
219  None     CumSum_PSO             T+S+R  ...   9.7339      16.5803   4.8608
220  None     CumSum_PSO             T+S+R  ...  11.6242      18.4977  28.3806
221  None     CumSum_PSO             T+S+R  ...  11.6720      19.5839  17.7847
222  None     CumSum_PSO             T+S+R  ...  14.4886      21.5181  21.6146
223  None     CumSum_PSO             T+S+R  ...  13.8709      26.3179  12.0071

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _PSO             T+S+R  ...  0.0105       0.0164   0.0075
1  None           _PSO             T+S+R  ...  0.0105       0.0164   0.0075
2  None           _PSO             T+S+R  ...  0.0107       0.0165   0.0074
3  None           _PSO             T+S+R  ...  0.0107       0.0165   0.0074
4  None     CumSum_PSO             T+S+R  ...  0.0112       0.0165   0.0074

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['PSO'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['PSO'], 'Horizon': 7}))
7 0    12.70
1    12.77
2    12.74
3    12.73
4    12.80
5    12.73
6    12.81
Name: PSO, dtype: float64
7 0    12.76
1    12.76
2    12.76
3    12.76
4    12.76
5    12.76
6    12.76
Name: PSO_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_PSO PSO [12.7, 12.77, 12.74, 12.73, 12.8, 12.73, 12.81]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_PSO PSO [12.76, 12.76, 12.76, 12.76, 12.76, 12.76, 12.76]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_PSO PSO 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_PSO PSO 12.569163799285889
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_PSO PSO Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_PSO PSO 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_PSO PSO 0.0027 0.0027 0.6234
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_PSO PSO 0.034285714285714315 0.03779644730092292 -0.023391802392185745
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_PSO_7'
