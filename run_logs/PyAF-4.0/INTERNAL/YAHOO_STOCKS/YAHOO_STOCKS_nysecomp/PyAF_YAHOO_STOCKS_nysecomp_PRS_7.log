BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1010 H= 7 HEAD= ['2012-08-31T00:00:00.000000000' '2012-09-03T00:00:00.000000000'
 '2012-09-04T00:00:00.000000000' '2012-09-05T00:00:00.000000000'
 '2012-09-06T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  PRS N= 1010 H= 7 HEAD= [3.1  2.35 2.29 2.5  2.39] TAIL= [6.39 6.39 6.39 6.39 6.5 ]
    PRS       Date
0  3.10 2012-08-31
1  2.35 2012-09-03
2  2.29 2012-09-04
3  2.50 2012-09-05
4  2.39 2012-09-06
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1010 entries, 0 to 1009
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   PRS     1010 non-null   float64       
 1   Date    1010 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 23.7 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['PRS'], 'Transformations': [('PRS', 'None', '_', 'T+S+R'), ('PRS', 'None', 'Diff_', 'T+S+R'), ('PRS', 'None', 'RelDiff_', 'T+S+R'), ('PRS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRS', 'Transformation': '_PRS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.212, ('TRAINING', {'Signal': 'PRS', 'Transformation': '_PRS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRS', 'Transformation': 'Diff_PRS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.038, ('TRAINING', {'Signal': 'PRS', 'Transformation': 'Diff_PRS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRS', 'Transformation': 'RelDiff_PRS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.145, ('TRAINING', {'Signal': 'PRS', 'Transformation': 'RelDiff_PRS'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRS', 'Transformation': 'CumSum_PRS'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.597, ('TRAINING', {'Signal': 'PRS', 'Transformation': 'CumSum_PRS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.993, ('SIGNAL_TRAINING', {'Signals': ['PRS'], 'Transformations': [('PRS', 'None', '_', 'T+S+R'), ('PRS', 'None', 'Diff_', 'T+S+R'), ('PRS', 'None', 'RelDiff_', 'T+S+R'), ('PRS', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['PRS'], 'Transformations': [('PRS', [('PRS', 'None', 'CumSum_', 'T+S+R'), ('PRS', 'None', 'Diff_', 'T+S+R'), ('PRS', 'None', 'RelDiff_', 'T+S+R'), ('PRS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'PRS', 'Transformations': [('PRS', 'None', 'CumSum_', 'T+S+R'), ('PRS', 'None', 'Diff_', 'T+S+R'), ('PRS', 'None', 'RelDiff_', 'T+S+R'), ('PRS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'PRS', 'Transformations': [('PRS', 'None', 'CumSum_', 'T+S+R'), ('PRS', 'None', 'Diff_', 'T+S+R'), ('PRS', 'None', 'RelDiff_', 'T+S+R'), ('PRS', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PRS', 'Model': '_PRS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.025, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PRS', 'Model': '_PRS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PRS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.175, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PRS'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.208, ('FINALIZE_TRAINING', {'Signals': ['PRS'], 'Transformations': [('PRS', [('PRS', 'None', 'CumSum_', 'T+S+R'), ('PRS', 'None', 'Diff_', 'T+S+R'), ('PRS', 'None', 'RelDiff_', 'T+S+R'), ('PRS', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2012-08-31T00:00:00.000000 TimeMax=2015-09-30T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='PRS' Length=1010  Min=1.59 Max=6.56  Mean=3.887554455445528 StdDev=1.446932247965647
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_PRS' Min=0.0 Max=1.0  Mean=0.46228459868119487 StdDev=0.2911332490876551
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_PRS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_PRS_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_PRS_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_PRS_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0123 MAPE_Forecast=0.0087 MAPE_Test=0.0062
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0123 SMAPE_Forecast=0.0087 SMAPE_Test=0.0062
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9988 MASE_Forecast=0.995 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.36074792295576846 CRPS_Forecast=0.12912666666666667 CRPS_Test=0.03571428571428571
INFO:pyaf.std:MODEL_L1 L1_Fit=0.040361596009975076 L1_Forecast=0.048507462686567165 L1_Test=0.040000000000000036
INFO:pyaf.std:MODEL_L2 L2_Fit=0.09051322219168424 L2_Forecast=0.09251327725068269 L2_Test=0.07348469228349545
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.669041020995192 LnQ_Forecast=0.05740417626492897 LnQ_Test=0.0009052523554942058
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=8.881784197001252e-16 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.3038229376257545
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _PRS_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...    FitMAPE ForecastMAPE    TestMAPE
0    None           _PRS             T+S+R  ...     0.0123       0.0087      0.0062
1    None     CumSum_PRS             T+S+R  ...     0.0123       0.0087      0.0062
2    None       Diff_PRS             T+S+R  ...     0.0123       0.0087      0.0062
3    None    RelDiff_PRS             T+S+R  ...     0.1797       0.0087      0.0062
4    None           _PRS             T+S+R  ...     0.0123       0.0087      0.0062
..    ...            ...               ...  ...        ...          ...         ...
203  None    RelDiff_PRS             T+S+R  ...  2291.5891     912.0728    115.3542
204  None    RelDiff_PRS             T+S+R  ...  2291.5891     912.0728    115.3542
205  None    RelDiff_PRS             T+S+R  ...   281.5926    8369.0025  19907.7217
206  None    RelDiff_PRS             T+S+R  ...   281.5926    8369.0025  19907.7217
207  None    RelDiff_PRS             T+S+R  ...  1371.8066   10159.7575  46408.2856

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _PRS             T+S+R  ...  0.0123       0.0087   0.0062
1  None     CumSum_PRS             T+S+R  ...  0.0123       0.0087   0.0062
2  None       Diff_PRS             T+S+R  ...  0.0123       0.0087   0.0062
3  None    RelDiff_PRS             T+S+R  ...  0.1797       0.0087   0.0062
4  None           _PRS             T+S+R  ...  0.0123       0.0087   0.0062

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['PRS'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.143, ('FORECASTING', {'Signals': ['PRS'], 'Horizon': 7}))
7 0    6.50
1    6.50
2    6.50
3    6.50
4    6.56
5    6.58
6    6.58
Name: PRS, dtype: float64
7 0    6.5
1    6.5
2    6.5
3    6.5
4    6.5
5    6.5
6    6.5
Name: PRS_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_PRS PRS [6.5, 6.5, 6.5, 6.5, 6.56, 6.58, 6.58]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_PRS PRS [6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_PRS PRS 1010 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_PRS PRS 11.446892023086548
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_PRS PRS Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_PRS PRS 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_PRS PRS 0.0048 0.0048 2.3571
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_PRS PRS 0.031428571428571396 0.048403069560278296 -0.7289156444240812
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_PRS_7'
