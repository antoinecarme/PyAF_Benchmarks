BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  ARG N= 1251 H= 7 HEAD= [68.75     68.699997 68.440002 66.650002 67.139999] TAIL= [142.949997 142.949997 142.949997 142.949997 142.949997]
         ARG       Date
0  68.750000 2011-07-28
1  68.699997 2011-07-29
2  68.440002 2011-08-01
3  66.650002 2011-08-02
4  67.139999 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   ARG     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['ARG'], 'Transformations': [('ARG', 'None', '_', 'T+S+R'), ('ARG', 'None', 'Diff_', 'T+S+R'), ('ARG', 'None', 'RelDiff_', 'T+S+R'), ('ARG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARG', 'Transformation': '_ARG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.679, ('TRAINING', {'Signal': 'ARG', 'Transformation': '_ARG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARG', 'Transformation': 'Diff_ARG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.762, ('TRAINING', {'Signal': 'ARG', 'Transformation': 'Diff_ARG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARG', 'Transformation': 'RelDiff_ARG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.736, ('TRAINING', {'Signal': 'ARG', 'Transformation': 'RelDiff_ARG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'ARG', 'Transformation': 'CumSum_ARG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.747, ('TRAINING', {'Signal': 'ARG', 'Transformation': 'CumSum_ARG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.925, ('SIGNAL_TRAINING', {'Signals': ['ARG'], 'Transformations': [('ARG', 'None', '_', 'T+S+R'), ('ARG', 'None', 'Diff_', 'T+S+R'), ('ARG', 'None', 'RelDiff_', 'T+S+R'), ('ARG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['ARG'], 'Transformations': [('ARG', [('ARG', 'None', 'CumSum_', 'T+S+R'), ('ARG', 'None', 'Diff_', 'T+S+R'), ('ARG', 'None', 'RelDiff_', 'T+S+R'), ('ARG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'ARG', 'Transformations': [('ARG', 'None', 'CumSum_', 'T+S+R'), ('ARG', 'None', 'Diff_', 'T+S+R'), ('ARG', 'None', 'RelDiff_', 'T+S+R'), ('ARG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'ARG', 'Transformations': [('ARG', 'None', 'CumSum_', 'T+S+R'), ('ARG', 'None', 'Diff_', 'T+S+R'), ('ARG', 'None', 'RelDiff_', 'T+S+R'), ('ARG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ARG', 'Model': '_ARG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'ARG', 'Model': '_ARG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ARG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'ARG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['ARG'], 'Transformations': [('ARG', [('ARG', 'None', 'CumSum_', 'T+S+R'), ('ARG', 'None', 'Diff_', 'T+S+R'), ('ARG', 'None', 'RelDiff_', 'T+S+R'), ('ARG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='ARG' Length=1251  Min=58.5 Max=142.979996  Mean=102.57119891686656 StdDev=19.865130173057416
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_ARG' Min=0.0 Max=1.0  Mean=0.5216761482430304 StdDev=0.23514596488685252
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_ARG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_ARG_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_ARG_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_ARG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0092 MAPE_Forecast=0.006 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0092 SMAPE_Forecast=0.0061 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0102 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.220590421637134 CRPS_Forecast=5.3888778553254895 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=0.8569948311557786 L1_Forecast=0.6517670602409654 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=1.1555104437509949 L2_Forecast=2.2141738284137973 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.16355482967980278 LnQ_Forecast=0.09192746773921594 LnQ_Test=0.0
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.6499939999999924 MedAE_Forecast=0.22999599999999987 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.12133049816905768
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _ARG_Lag1Trend_residue_bestCycle_byMAPE None 0.0011836885030155342 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE     TestMAPE
0    None           _ARG             T+S+R  ...    0.0092       0.0060       0.0000
1    None           _ARG             T+S+R  ...    0.0092       0.0060       0.0000
2    None     CumSum_ARG             T+S+R  ...    0.0094       0.0060       0.0000
3    None       Diff_ARG             T+S+R  ...    0.0092       0.0060       0.0000
4    None       Diff_ARG             T+S+R  ...    0.0092       0.0060       0.0000
..    ...            ...               ...  ...       ...          ...          ...
211  None    RelDiff_ARG             T+S+R  ...  483.0545    4374.2984   40907.8482
212  None    RelDiff_ARG             T+S+R  ...  446.9288    5015.8883   50311.1118
213  None    RelDiff_ARG             T+S+R  ...  597.1276    9021.5820   92657.6952
214  None    RelDiff_ARG             T+S+R  ...  822.0020   19437.2433  203851.1316
215  None    RelDiff_ARG             T+S+R  ...  822.0020   19437.2433  203851.1316

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _ARG             T+S+R  ...  0.0092        0.006      0.0
1  None           _ARG             T+S+R  ...  0.0092        0.006      0.0
2  None     CumSum_ARG             T+S+R  ...  0.0094        0.006      0.0
3  None       Diff_ARG             T+S+R  ...  0.0092        0.006      0.0
4  None       Diff_ARG             T+S+R  ...  0.0092        0.006      0.0

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['ARG'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.293, ('FORECASTING', {'Signals': ['ARG'], 'Horizon': 7}))
7 0    142.949997
1    142.949997
2    142.949997
3    142.949997
4    142.949997
5    142.949997
6    142.949997
Name: ARG, dtype: float64
7 0    142.949997
1    142.949997
2    142.949997
3    142.949997
4    142.949997
5    142.949997
6    142.949997
Name: ARG_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_ARG ARG [142.949997, 142.949997, 142.949997, 142.949997, 142.949997, 142.949997, 142.949997]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_ARG ARG [142.949997, 142.949997, 142.949997, 142.949997, 142.949997, 142.949997, 142.949997]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_ARG ARG 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_ARG ARG 12.568796873092651
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_ARG ARG Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_ARG ARG 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_ARG ARG 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_ARG ARG 0.0 0.0 1.0
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_ARG_7'
