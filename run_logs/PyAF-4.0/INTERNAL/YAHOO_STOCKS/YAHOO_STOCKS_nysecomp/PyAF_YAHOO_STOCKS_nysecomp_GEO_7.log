BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  GEO N= 1251 H= 7 HEAD= [20.82     20.799999 20.799999 20.450001 19.83    ] TAIL= [34.560001 34.990002 34.59     34.73     35.080002]
         GEO       Date
0  20.820000 2011-07-28
1  20.799999 2011-07-29
2  20.799999 2011-08-01
3  20.450001 2011-08-02
4  19.830000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   GEO     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['GEO'], 'Transformations': [('GEO', 'None', '_', 'T+S+R'), ('GEO', 'None', 'Diff_', 'T+S+R'), ('GEO', 'None', 'RelDiff_', 'T+S+R'), ('GEO', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO', 'Transformation': '_GEO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.501, ('TRAINING', {'Signal': 'GEO', 'Transformation': '_GEO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO', 'Transformation': 'Diff_GEO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.181, ('TRAINING', {'Signal': 'GEO', 'Transformation': 'Diff_GEO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO', 'Transformation': 'RelDiff_GEO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.202, ('TRAINING', {'Signal': 'GEO', 'Transformation': 'RelDiff_GEO'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GEO', 'Transformation': 'CumSum_GEO'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.774, ('TRAINING', {'Signal': 'GEO', 'Transformation': 'CumSum_GEO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.66, ('SIGNAL_TRAINING', {'Signals': ['GEO'], 'Transformations': [('GEO', 'None', '_', 'T+S+R'), ('GEO', 'None', 'Diff_', 'T+S+R'), ('GEO', 'None', 'RelDiff_', 'T+S+R'), ('GEO', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['GEO'], 'Transformations': [('GEO', [('GEO', 'None', 'CumSum_', 'T+S+R'), ('GEO', 'None', 'Diff_', 'T+S+R'), ('GEO', 'None', 'RelDiff_', 'T+S+R'), ('GEO', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'GEO', 'Transformations': [('GEO', 'None', 'CumSum_', 'T+S+R'), ('GEO', 'None', 'Diff_', 'T+S+R'), ('GEO', 'None', 'RelDiff_', 'T+S+R'), ('GEO', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'GEO', 'Transformations': [('GEO', 'None', 'CumSum_', 'T+S+R'), ('GEO', 'None', 'Diff_', 'T+S+R'), ('GEO', 'None', 'RelDiff_', 'T+S+R'), ('GEO', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GEO', 'Model': '_GEO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GEO', 'Model': '_GEO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GEO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.194, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GEO'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.231, ('FINALIZE_TRAINING', {'Signals': ['GEO'], 'Transformations': [('GEO', [('GEO', 'None', 'CumSum_', 'T+S+R'), ('GEO', 'None', 'Diff_', 'T+S+R'), ('GEO', 'None', 'RelDiff_', 'T+S+R'), ('GEO', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='GEO' Length=1251  Min=16.530001 Max=45.189999  Mean=30.99517188409271 StdDev=7.067805082604123
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_GEO' Min=0.0 Max=1.0  Mean=0.5047163954475046 StdDev=0.24660870815846261
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_GEO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_GEO_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_GEO_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_GEO_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0106 MAPE_Forecast=0.0148 MAPE_Test=0.0093
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0106 SMAPE_Forecast=0.0148 SMAPE_Test=0.0094
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0057 MASE_Test=0.901
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.3059112660248613 CRPS_Forecast=0.7517341129016772 CRPS_Test=0.19642857142857192
INFO:pyaf.std:MODEL_L1 L1_Fit=0.3140603366834171 L1_Forecast=0.45586347791164655 L1_Test=0.32285814285714104
INFO:pyaf.std:MODEL_L2 L2_Fit=0.4492769151813316 L2_Forecast=0.5995563308790832 L2_Test=0.35083685260388364
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22839037525314826 LnQ_Forecast=0.09559858187836337 LnQ_Test=0.0007243775012317301
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.22000199999999737 MedAE_Forecast=0.3500009999999989 MedAE_Test=0.3500020000000035
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.14968594903600488
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _GEO_Lag1Trend_residue_bestCycle_byMAPE None 0.0006978367549085318 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None           _GEO             T+S+R  ...    0.0106       0.0148     0.0093
1    None           _GEO             T+S+R  ...    0.0106       0.0148     0.0093
2    None     CumSum_GEO             T+S+R  ...    0.0108       0.0148     0.0093
3    None       Diff_GEO             T+S+R  ...    0.0106       0.0148     0.0093
4    None       Diff_GEO             T+S+R  ...    0.0106       0.0148     0.0093
..    ...            ...               ...  ...       ...          ...        ...
219  None    RelDiff_GEO             T+S+R  ...   86.1011     654.2612  2389.8912
220  None    RelDiff_GEO             T+S+R  ...  213.6277     731.0091  2003.1991
221  None    RelDiff_GEO             T+S+R  ...  213.6277     731.0091  2003.1991
222  None    RelDiff_GEO             T+S+R  ...   37.5010    1134.8197  2429.0016
223  None    RelDiff_GEO             T+S+R  ...   37.5010    1134.8197  2429.0016

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _GEO             T+S+R  ...  0.0106       0.0148   0.0093
1  None           _GEO             T+S+R  ...  0.0106       0.0148   0.0093
2  None     CumSum_GEO             T+S+R  ...  0.0108       0.0148   0.0093
3  None       Diff_GEO             T+S+R  ...  0.0106       0.0148   0.0093
4  None       Diff_GEO             T+S+R  ...  0.0106       0.0148   0.0093

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['GEO'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.161, ('FORECASTING', {'Signals': ['GEO'], 'Horizon': 7}))
7 0    34.540001
1    34.650002
2    34.459999
3    34.720001
4    34.849998
5    34.730000
6    34.340000
Name: GEO, dtype: float64
7 0    35.080002
1    35.080002
2    35.080002
3    35.080002
4    35.080002
5    35.080002
6    35.080002
Name: GEO_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_GEO GEO [34.540001, 34.650002, 34.459999, 34.720001, 34.849998, 34.73, 34.34]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_GEO GEO [35.080002, 35.080002, 35.080002, 35.080002, 35.080002, 35.080002, 35.080002]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_GEO GEO 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_GEO GEO 13.157315492630005
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_GEO GEO Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_GEO GEO 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_GEO GEO 0.0135 0.0134 2.3357
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_GEO GEO 0.4671447142857141 0.4947599302453949 -8.215280804111003
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_GEO_7'
