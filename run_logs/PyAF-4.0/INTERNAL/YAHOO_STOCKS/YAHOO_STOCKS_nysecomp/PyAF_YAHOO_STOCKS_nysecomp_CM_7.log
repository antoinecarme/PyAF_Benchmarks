BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  CM N= 1251 H= 7 HEAD= [77.220001 76.239998 76.160004 74.25     74.800003] TAIL= [75.650002 76.010002 76.010002 76.169998 76.099998]
          CM       Date
0  77.220001 2011-07-28
1  76.239998 2011-07-29
2  76.160004 2011-08-01
3  74.250000 2011-08-02
4  74.800003 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   CM      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CM'], 'Transformations': [('CM', 'None', '_', 'T+S+R'), ('CM', 'None', 'Diff_', 'T+S+R'), ('CM', 'None', 'RelDiff_', 'T+S+R'), ('CM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CM', 'Transformation': '_CM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.462, ('TRAINING', {'Signal': 'CM', 'Transformation': '_CM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CM', 'Transformation': 'Diff_CM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.785, ('TRAINING', {'Signal': 'CM', 'Transformation': 'Diff_CM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CM', 'Transformation': 'RelDiff_CM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.168, ('TRAINING', {'Signal': 'CM', 'Transformation': 'RelDiff_CM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CM', 'Transformation': 'CumSum_CM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.797, ('TRAINING', {'Signal': 'CM', 'Transformation': 'CumSum_CM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.214, ('SIGNAL_TRAINING', {'Signals': ['CM'], 'Transformations': [('CM', 'None', '_', 'T+S+R'), ('CM', 'None', 'Diff_', 'T+S+R'), ('CM', 'None', 'RelDiff_', 'T+S+R'), ('CM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CM'], 'Transformations': [('CM', [('CM', 'None', 'CumSum_', 'T+S+R'), ('CM', 'None', 'Diff_', 'T+S+R'), ('CM', 'None', 'RelDiff_', 'T+S+R'), ('CM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CM', 'Transformations': [('CM', 'None', 'CumSum_', 'T+S+R'), ('CM', 'None', 'Diff_', 'T+S+R'), ('CM', 'None', 'RelDiff_', 'T+S+R'), ('CM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'CM', 'Transformations': [('CM', 'None', 'CumSum_', 'T+S+R'), ('CM', 'None', 'Diff_', 'T+S+R'), ('CM', 'None', 'RelDiff_', 'T+S+R'), ('CM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CM', 'Model': '_CM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.032, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CM', 'Model': '_CM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.224, ('FINALIZE_TRAINING', {'Signals': ['CM'], 'Transformations': [('CM', [('CM', 'None', 'CumSum_', 'T+S+R'), ('CM', 'None', 'Diff_', 'T+S+R'), ('CM', 'None', 'RelDiff_', 'T+S+R'), ('CM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CM' Length=1251  Min=57.540001 Max=97.610001  Mean=78.14055152997587 StdDev=7.216355126486433
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CM' Min=0.0 Max=1.0  Mean=0.5141140636380331 StdDev=0.18009371416237682
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0078 MAPE_Forecast=0.0113 MAPE_Test=0.0035
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0078 SMAPE_Forecast=0.0113 SMAPE_Test=0.0035
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9967 MASE_Test=0.9373
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.0260425421026182 CRPS_Forecast=1.4992640841043232 CRPS_Test=0.35357164285714354
INFO:pyaf.std:MODEL_L1 L1_Fit=0.6102712381909549 L1_Forecast=0.7977913413654618 L1_Test=0.2671421428571453
INFO:pyaf.std:MODEL_L2 L2_Fit=0.8381026954562593 L2_Forecast=1.0445404515235457 L2_Test=0.3994829265189495
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.11962413294476998 LnQ_Forecast=0.05572509487975723 LnQ_Test=0.00019731868446367645
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.4800039999999939 MedAE_Forecast=0.630004999999997 MedAE_Test=0.1599960000000067
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.49114050411779386
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CM_Lag1Trend_residue_bestCycle_byMAPE None 0.0007486648365361281 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None            _CM             T+S+R  ...  0.0077       0.0111   0.0031
1    None            _CM             T+S+R  ...  0.0076       0.0111   0.0033
2    None            _CM             T+S+R  ...  0.0078       0.0112   0.0039
3    None            _CM             T+S+R  ...  0.0075       0.0112   0.0041
4    None            _CM             T+S+R  ...  0.0074       0.0112   0.0044
..    ...            ...               ...  ...     ...          ...      ...
219  None      CumSum_CM             T+S+R  ...  4.4943       5.6515   1.3858
220  None      CumSum_CM             T+S+R  ...  4.9546       6.0109   8.4122
221  None      CumSum_CM             T+S+R  ...  6.1146       6.9044   6.2578
222  None      CumSum_CM             T+S+R  ...  6.2574       7.5857   7.1963
223  None      CumSum_CM             T+S+R  ...  6.7014       9.1795   4.4062

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _CM             T+S+R  ...  0.0077       0.0111   0.0031
1  None            _CM             T+S+R  ...  0.0076       0.0111   0.0033
2  None            _CM             T+S+R  ...  0.0078       0.0112   0.0039
3  None            _CM             T+S+R  ...  0.0075       0.0112   0.0041
4  None            _CM             T+S+R  ...  0.0074       0.0112   0.0044

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FORECASTING', {'Signals': ['CM'], 'Horizon': 7}))
7 0    75.559998
1    75.949997
2    75.839996
3    75.930000
4    75.400002
5    75.959999
6    75.209999
Name: CM, dtype: float64
7 0    76.099998
1    76.099998
2    76.099998
3    76.099998
4    76.099998
5    76.099998
6    76.099998
Name: CM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CM CM [75.559998, 75.949997, 75.839996, 75.93, 75.400002, 75.959999, 75.209999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CM CM [76.099998, 76.099998, 76.099998, 76.099998, 76.099998, 76.099998, 76.099998]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CM CM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CM CM 12.697834730148315
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CM CM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CM CM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CM CM 0.0054 0.0054 1.0053
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CM CM 0.40714214285714384 0.4945839521437632 -2.102317681701276
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_CM_7'
