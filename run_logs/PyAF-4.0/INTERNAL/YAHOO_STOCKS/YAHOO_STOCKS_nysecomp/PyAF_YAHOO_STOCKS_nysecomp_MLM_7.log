BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MLM N= 1251 H= 7 HEAD= [75.809998 75.620003 74.410004 69.980003 70.519997] TAIL= [197.929993 196.869995 197.089996 197.570007 199.970001]
         MLM       Date
0  75.809998 2011-07-28
1  75.620003 2011-07-29
2  74.410004 2011-08-01
3  69.980003 2011-08-02
4  70.519997 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MLM     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MLM'], 'Transformations': [('MLM', 'None', '_', 'T+S+R'), ('MLM', 'None', 'Diff_', 'T+S+R'), ('MLM', 'None', 'RelDiff_', 'T+S+R'), ('MLM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MLM', 'Transformation': '_MLM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.416, ('TRAINING', {'Signal': 'MLM', 'Transformation': '_MLM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MLM', 'Transformation': 'Diff_MLM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.81, ('TRAINING', {'Signal': 'MLM', 'Transformation': 'Diff_MLM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MLM', 'Transformation': 'RelDiff_MLM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.155, ('TRAINING', {'Signal': 'MLM', 'Transformation': 'RelDiff_MLM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MLM', 'Transformation': 'CumSum_MLM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.769, ('TRAINING', {'Signal': 'MLM', 'Transformation': 'CumSum_MLM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.151, ('SIGNAL_TRAINING', {'Signals': ['MLM'], 'Transformations': [('MLM', 'None', '_', 'T+S+R'), ('MLM', 'None', 'Diff_', 'T+S+R'), ('MLM', 'None', 'RelDiff_', 'T+S+R'), ('MLM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MLM'], 'Transformations': [('MLM', [('MLM', 'None', 'CumSum_', 'T+S+R'), ('MLM', 'None', 'Diff_', 'T+S+R'), ('MLM', 'None', 'RelDiff_', 'T+S+R'), ('MLM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MLM', 'Transformations': [('MLM', 'None', 'CumSum_', 'T+S+R'), ('MLM', 'None', 'Diff_', 'T+S+R'), ('MLM', 'None', 'RelDiff_', 'T+S+R'), ('MLM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MLM', 'Transformations': [('MLM', 'None', 'CumSum_', 'T+S+R'), ('MLM', 'None', 'Diff_', 'T+S+R'), ('MLM', 'None', 'RelDiff_', 'T+S+R'), ('MLM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MLM', 'Model': '_MLM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MLM', 'Model': '_MLM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MLM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MLM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.223, ('FINALIZE_TRAINING', {'Signals': ['MLM'], 'Transformations': [('MLM', [('MLM', 'None', 'CumSum_', 'T+S+R'), ('MLM', 'None', 'Diff_', 'T+S+R'), ('MLM', 'None', 'RelDiff_', 'T+S+R'), ('MLM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MLM' Length=1251  Min=61.619999 Max=199.970001  Mean=114.47207041087123 StdDev=32.22969991566165
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MLM' Min=0.0 Max=1.0  Mean=0.38201713514157637 StdDev=0.2329577119605799
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MLM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MLM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MLM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MLM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0128 MAPE_Forecast=0.0158 MAPE_Test=0.0051
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0128 SMAPE_Forecast=0.0158 SMAPE_Test=0.0051
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9985 MASE_Test=1.0591
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=7.007519353086486 CRPS_Forecast=5.164288953284951 CRPS_Test=0.3021425000000022
INFO:pyaf.std:MODEL_L1 L1_Fit=1.2678691185929651 L1_Forecast=2.4317675461847403 L1_Test=1.0114267142857127
INFO:pyaf.std:MODEL_L2 L2_Fit=1.7992380135383506 L2_Forecast=3.237836339068053 L2_Test=1.2520689266902503
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.32157029862844316 LnQ_Forecast=0.11356784354668208 LnQ_Test=0.00028035235626188847
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.9000020000000006 MedAE_Forecast=1.929992999999996 MedAE_Test=1.0599980000000073
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.10256594719817926
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MLM_Lag1Trend_residue_bestCycle_byMAPE None 0.00036136609524584085 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ... ForecastMAPE      TestMAPE
0    None           _MLM  ...       0.0156  4.500000e-03
1    None     CumSum_MLM  ...       0.0157  4.900000e-03
2    None           _MLM  ...       0.0157  4.900000e-03
3    None           _MLM  ...       0.0157  4.600000e-03
4    None           _MLM  ...       0.0158  5.100000e-03
..    ...            ...  ...          ...           ...
219  None    RelDiff_MLM  ...   76599.0037  1.037391e+06
220  None    RelDiff_MLM  ...   76599.0037  1.037391e+06
221  None    RelDiff_MLM  ...   77715.1475  1.065079e+06
222  None    RelDiff_MLM  ...  255318.8532  2.745965e+06
223  None    RelDiff_MLM  ...  255318.8532  2.745965e+06

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _MLM             T+S+R  ...  0.0125       0.0156   0.0045
1  None     CumSum_MLM             T+S+R  ...  0.0134       0.0157   0.0049
2  None           _MLM             T+S+R  ...  0.0126       0.0157   0.0049
3  None           _MLM             T+S+R  ...  0.0124       0.0157   0.0046
4  None           _MLM             T+S+R  ...  0.0128       0.0158   0.0051

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MLM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['MLM'], 'Horizon': 7}))
7 0    198.240005
1    198.350006
2    196.080002
3    198.250000
4    198.690002
5    201.860001
6    201.520004
Name: MLM, dtype: float64
7 0    199.970001
1    199.970001
2    199.970001
3    199.970001
4    199.970001
5    199.970001
6    199.970001
Name: MLM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MLM MLM [198.240005, 198.350006, 196.080002, 198.25, 198.690002, 201.860001, 201.520004]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MLM MLM [199.970001, 199.970001, 199.970001, 199.970001, 199.970001, 199.970001, 199.970001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MLM MLM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MLM MLM 12.639656066894531
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MLM MLM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MLM MLM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MLM MLM 0.0098 0.0098 1.3795
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MLM MLM 1.9542847142857138 2.1152768261946555 -0.2672735891633031
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_MLM_7'
