BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1250 H= 7 HEAD= ['2011-07-29T00:00:00.000000000' '2011-08-01T00:00:00.000000000'
 '2011-08-02T00:00:00.000000000' '2011-08-03T00:00:00.000000000'
 '2011-08-04T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  IAG N= 1250 H= 7 HEAD= [20.   20.32 20.59 21.01 19.66] TAIL= [4.68 4.8  4.78 4.73 4.88]
     IAG       Date
0  20.00 2011-07-29
1  20.32 2011-08-01
2  20.59 2011-08-02
3  21.01 2011-08-03
4  19.66 2011-08-04
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1250 entries, 0 to 1249
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   IAG     1250 non-null   float64       
 1   Date    1250 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['IAG'], 'Transformations': [('IAG', 'None', '_', 'T+S+R'), ('IAG', 'None', 'Diff_', 'T+S+R'), ('IAG', 'None', 'RelDiff_', 'T+S+R'), ('IAG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IAG', 'Transformation': '_IAG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.284, ('TRAINING', {'Signal': 'IAG', 'Transformation': '_IAG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IAG', 'Transformation': 'Diff_IAG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.809, ('TRAINING', {'Signal': 'IAG', 'Transformation': 'Diff_IAG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IAG', 'Transformation': 'RelDiff_IAG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.223, ('TRAINING', {'Signal': 'IAG', 'Transformation': 'RelDiff_IAG'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'IAG', 'Transformation': 'CumSum_IAG'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.525, ('TRAINING', {'Signal': 'IAG', 'Transformation': 'CumSum_IAG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.842, ('SIGNAL_TRAINING', {'Signals': ['IAG'], 'Transformations': [('IAG', 'None', '_', 'T+S+R'), ('IAG', 'None', 'Diff_', 'T+S+R'), ('IAG', 'None', 'RelDiff_', 'T+S+R'), ('IAG', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['IAG'], 'Transformations': [('IAG', [('IAG', 'None', 'CumSum_', 'T+S+R'), ('IAG', 'None', 'Diff_', 'T+S+R'), ('IAG', 'None', 'RelDiff_', 'T+S+R'), ('IAG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'IAG', 'Transformations': [('IAG', 'None', 'CumSum_', 'T+S+R'), ('IAG', 'None', 'Diff_', 'T+S+R'), ('IAG', 'None', 'RelDiff_', 'T+S+R'), ('IAG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'IAG', 'Transformations': [('IAG', 'None', 'CumSum_', 'T+S+R'), ('IAG', 'None', 'Diff_', 'T+S+R'), ('IAG', 'None', 'RelDiff_', 'T+S+R'), ('IAG', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IAG', 'Model': '_IAG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'IAG', 'Model': '_IAG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IAG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.196, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'IAG'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.233, ('FINALIZE_TRAINING', {'Signals': ['IAG'], 'Transformations': [('IAG', [('IAG', 'None', 'CumSum_', 'T+S+R'), ('IAG', 'None', 'Diff_', 'T+S+R'), ('IAG', 'None', 'RelDiff_', 'T+S+R'), ('IAG', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-29T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='IAG' Length=1250  Min=1.15 Max=23.25  Mean=6.922479998400008 StdDev=5.8629200788310305
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_IAG' Min=0.0 Max=1.0  Mean=0.2611981899728507 StdDev=0.2652905013045715
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_IAG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_IAG_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_IAG_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_IAG_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0272 MAPE_Forecast=0.0428 MAPE_Test=0.0238
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0271 SMAPE_Forecast=0.043 SMAPE_Test=0.024
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9986 MASE_Test=1.2698
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.711286623665943 CRPS_Forecast=0.22712533333333332 CRPS_Test=0.037857142857142874
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2021328108651911 L1_Forecast=0.09116465863453814 L1_Test=0.1142857142857144
INFO:pyaf.std:MODEL_L2 L2_Fit=0.32083270125296703 L2_Forecast=0.11788974496482502 L2_Test=0.14152233544063433
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.3882495379875697 LnQ_Forecast=0.7023623002342917 LnQ_Test=0.006233800493183359
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.11999999999999966 MedAE_Forecast=0.07999999999999985 MedAE_Test=0.1200000000000001
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8529411764705882
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _IAG_Lag1Trend_residue_bestCycle_byMAPE None -0.0004524886877828177 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None           _IAG             T+S+R  ...   0.0272       0.0428   0.0238
1    None           _IAG             T+S+R  ...   0.0272       0.0428   0.0238
2    None     CumSum_IAG             T+S+R  ...   0.0282       0.0428   0.0238
3    None     CumSum_IAG             T+S+R  ...   0.0282       0.0428   0.0238
4    None       Diff_IAG             T+S+R  ...   0.0272       0.0428   0.0238
..    ...            ...               ...  ...      ...          ...      ...
203  None     CumSum_IAG             T+S+R  ...   7.9411      23.6983   3.9187
204  None     CumSum_IAG             T+S+R  ...   8.9634      25.0495   4.0926
205  None     CumSum_IAG             T+S+R  ...  10.7359      36.3447   5.5041
206  None     CumSum_IAG             T+S+R  ...  14.2356      38.9900  20.3469
207  None     CumSum_IAG             T+S+R  ...  15.3991      39.1545  18.1512

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _IAG             T+S+R  ...  0.0272       0.0428   0.0238
1  None           _IAG             T+S+R  ...  0.0272       0.0428   0.0238
2  None     CumSum_IAG             T+S+R  ...  0.0282       0.0428   0.0238
3  None     CumSum_IAG             T+S+R  ...  0.0282       0.0428   0.0238
4  None       Diff_IAG             T+S+R  ...  0.0272       0.0428   0.0238

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['IAG'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.155, ('FORECASTING', {'Signals': ['IAG'], 'Horizon': 7}))
7 0    4.77
1    4.45
2    4.77
3    4.62
4    4.43
5    4.63
6    5.00
Name: IAG, dtype: float64
7 0    4.88
1    4.88
2    4.88
3    4.88
4    4.88
5    4.88
6    4.88
Name: IAG_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_IAG IAG [4.77, 4.45, 4.77, 4.62, 4.43, 4.63, 5.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_IAG IAG [4.88, 4.88, 4.88, 4.88, 4.88, 4.88, 4.88]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_IAG IAG 1250 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_IAG IAG 12.3323495388031
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_IAG IAG Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_IAG IAG 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_IAG IAG 0.0541 0.0523 0.9567
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_IAG IAG 0.2471428571428572 0.28185609296741687 -1.3273346875348961
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_IAG_7'
