BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  NX N= 1251 H= 7 HEAD= [15.76 15.67 15.77 14.58 14.45] TAIL= [20.459999 20.67     20.4      20.620001 20.620001]
      NX       Date
0  15.76 2011-07-28
1  15.67 2011-07-29
2  15.77 2011-08-01
3  14.58 2011-08-02
4  14.45 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NX      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NX'], 'Transformations': [('NX', 'None', '_', 'T+S+R'), ('NX', 'None', 'Diff_', 'T+S+R'), ('NX', 'None', 'RelDiff_', 'T+S+R'), ('NX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NX', 'Transformation': '_NX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.582, ('TRAINING', {'Signal': 'NX', 'Transformation': '_NX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NX', 'Transformation': 'Diff_NX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.811, ('TRAINING', {'Signal': 'NX', 'Transformation': 'Diff_NX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NX', 'Transformation': 'RelDiff_NX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.298, ('TRAINING', {'Signal': 'NX', 'Transformation': 'RelDiff_NX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NX', 'Transformation': 'CumSum_NX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.798, ('TRAINING', {'Signal': 'NX', 'Transformation': 'CumSum_NX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.491, ('SIGNAL_TRAINING', {'Signals': ['NX'], 'Transformations': [('NX', 'None', '_', 'T+S+R'), ('NX', 'None', 'Diff_', 'T+S+R'), ('NX', 'None', 'RelDiff_', 'T+S+R'), ('NX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NX'], 'Transformations': [('NX', [('NX', 'None', 'CumSum_', 'T+S+R'), ('NX', 'None', 'Diff_', 'T+S+R'), ('NX', 'None', 'RelDiff_', 'T+S+R'), ('NX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NX', 'Transformations': [('NX', 'None', 'CumSum_', 'T+S+R'), ('NX', 'None', 'Diff_', 'T+S+R'), ('NX', 'None', 'RelDiff_', 'T+S+R'), ('NX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'NX', 'Transformations': [('NX', 'None', 'CumSum_', 'T+S+R'), ('NX', 'None', 'Diff_', 'T+S+R'), ('NX', 'None', 'RelDiff_', 'T+S+R'), ('NX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NX', 'Model': '_NX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NX', 'Model': '_NX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.197, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.237, ('FINALIZE_TRAINING', {'Signals': ['NX'], 'Transformations': [('NX', [('NX', 'None', 'CumSum_', 'T+S+R'), ('NX', 'None', 'Diff_', 'T+S+R'), ('NX', 'None', 'RelDiff_', 'T+S+R'), ('NX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NX' Length=1251  Min=10.16 Max=22.190001  Mean=18.11860915347722 StdDev=2.0308258829612322
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NX' Min=0.0 Max=1.0  Mean=0.6615634656619908 StdDev=0.16881344257255104
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_NX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0162 MAPE_Forecast=0.016 MAPE_Test=0.0128
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0162 SMAPE_Forecast=0.016 SMAPE_Test=0.0129
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9985 MASE_Test=1.4717
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.5950064824940492 CRPS_Forecast=0.33859868879262933 CRPS_Test=0.1464285
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2779899467336685 L1_Forecast=0.2969477871485945 L1_Test=0.26000014285714357
INFO:pyaf.std:MODEL_L2 L2_Fit=0.3837822920082591 L2_Forecast=0.4143073301985048 L2_Test=0.3403780629163914
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5442377217183736 LnQ_Forecast=0.12505894198995438 LnQ_Test=0.002043529868414895
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.21000000000000085 MedAE_Forecast=0.22999900000000295 MedAE_Test=0.21999999999999886
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.46550287069801577
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _NX_Lag1Trend_residue_bestCycle_byMAPE None -0.0008312551262464329 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None            _NX  ...  1.600000e-02  1.280000e-02
1    None            _NX  ...  1.600000e-02  1.280000e-02
2    None      CumSum_NX  ...  1.600000e-02  1.280000e-02
3    None        Diff_NX  ...  1.600000e-02  1.280000e-02
4    None        Diff_NX  ...  1.600000e-02  1.280000e-02
..    ...            ...  ...           ...           ...
219  None     RelDiff_NX  ...  8.859453e+06  2.737854e+07
220  None     RelDiff_NX  ...  1.475030e+07  2.737854e+07
221  None     RelDiff_NX  ...  1.475030e+07  2.737854e+07
222  None     RelDiff_NX  ...  2.083046e+07  2.737854e+07
223  None     RelDiff_NX  ...  2.083046e+07  2.737854e+07

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _NX             T+S+R  ...  0.0162        0.016   0.0128
1  None            _NX             T+S+R  ...  0.0162        0.016   0.0128
2  None      CumSum_NX             T+S+R  ...  0.0166        0.016   0.0128
3  None        Diff_NX             T+S+R  ...  0.0162        0.016   0.0128
4  None        Diff_NX             T+S+R  ...  0.0162        0.016   0.0128

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.198, ('FORECASTING', {'Signals': ['NX'], 'Horizon': 7}))
7 0    20.459999
1    20.850000
2    20.870001
3    20.600000
4    20.290001
5    20.600000
6    20.469999
Name: NX, dtype: float64
7 0    20.620001
1    20.620001
2    20.620001
3    20.620001
4    20.620001
5    20.620001
6    20.620001
Name: NX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NX NX [20.459999, 20.85, 20.870001, 20.6, 20.290001, 20.6, 20.469999]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NX NX [20.620001, 20.620001, 20.620001, 20.620001, 20.620001, 20.620001, 20.620001]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NX NX 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NX NX 13.072108745574951
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NX NX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NX NX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NX NX 0.0081 0.008 0.6953
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NX NX 0.16571499999999872 0.1975568128090892 -0.021364414943401133
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_NX_7'
