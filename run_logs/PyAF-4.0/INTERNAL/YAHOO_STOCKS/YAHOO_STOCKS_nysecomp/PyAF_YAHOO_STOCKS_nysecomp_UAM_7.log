BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  UAM N= 1251 H= 7 HEAD= [9.65 9.51 9.03 9.65 9.4 ] TAIL= [7.84 7.9  7.84 7.76 7.89]
    UAM       Date
0  9.65 2011-07-28
1  9.51 2011-07-29
2  9.03 2011-08-01
3  9.65 2011-08-02
4  9.40 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   UAM     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['UAM'], 'Transformations': [('UAM', 'None', '_', 'T+S+R'), ('UAM', 'None', 'Diff_', 'T+S+R'), ('UAM', 'None', 'RelDiff_', 'T+S+R'), ('UAM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'UAM', 'Transformation': '_UAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.08, ('TRAINING', {'Signal': 'UAM', 'Transformation': '_UAM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'UAM', 'Transformation': 'Diff_UAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.802, ('TRAINING', {'Signal': 'UAM', 'Transformation': 'Diff_UAM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'UAM', 'Transformation': 'RelDiff_UAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.176, ('TRAINING', {'Signal': 'UAM', 'Transformation': 'RelDiff_UAM'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'UAM', 'Transformation': 'CumSum_UAM'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.518, ('TRAINING', {'Signal': 'UAM', 'Transformation': 'CumSum_UAM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.577, ('SIGNAL_TRAINING', {'Signals': ['UAM'], 'Transformations': [('UAM', 'None', '_', 'T+S+R'), ('UAM', 'None', 'Diff_', 'T+S+R'), ('UAM', 'None', 'RelDiff_', 'T+S+R'), ('UAM', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['UAM'], 'Transformations': [('UAM', [('UAM', 'None', 'CumSum_', 'T+S+R'), ('UAM', 'None', 'Diff_', 'T+S+R'), ('UAM', 'None', 'RelDiff_', 'T+S+R'), ('UAM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'UAM', 'Transformations': [('UAM', 'None', 'CumSum_', 'T+S+R'), ('UAM', 'None', 'Diff_', 'T+S+R'), ('UAM', 'None', 'RelDiff_', 'T+S+R'), ('UAM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'UAM', 'Transformations': [('UAM', 'None', 'CumSum_', 'T+S+R'), ('UAM', 'None', 'Diff_', 'T+S+R'), ('UAM', 'None', 'RelDiff_', 'T+S+R'), ('UAM', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'UAM', 'Model': '_UAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'UAM', 'Model': '_UAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'UAM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.203, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'UAM'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.238, ('FINALIZE_TRAINING', {'Signals': ['UAM'], 'Transformations': [('UAM', [('UAM', 'None', 'CumSum_', 'T+S+R'), ('UAM', 'None', 'Diff_', 'T+S+R'), ('UAM', 'None', 'RelDiff_', 'T+S+R'), ('UAM', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='UAM' Length=1251  Min=5.7 Max=13.54  Mean=8.814116706634703 StdDev=1.520939457605628
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_UAM' Min=0.0 Max=1.0  Mean=0.39720876360136403 StdDev=0.1939973797966363
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_UAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_UAM_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_UAM_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_UAM_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0151 MAPE_Forecast=0.0205 MAPE_Test=0.0154
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.015 SMAPE_Forecast=0.0204 SMAPE_Test=0.0155
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9963 MASE_Test=1.2414
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.4216075641364718 CRPS_Forecast=0.2137513404205056 CRPS_Test=0.051428571428571476
INFO:pyaf.std:MODEL_L1 L1_Fit=0.1405326633165829 L1_Forecast=0.1466265060240964 L1_Test=0.12000000000000023
INFO:pyaf.std:MODEL_L2 L2_Fit=0.2182836198469032 L2_Forecast=0.2159884349127616 L2_Test=0.14030578849681974
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.501158119941918 LnQ_Forecast=0.21464019683973845 LnQ_Test=0.0023250201141731485
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.09999999999999964 MedAE_Forecast=0.10999999999999943 MedAE_Test=0.08000000000000007
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.503826530612245
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _UAM_Lag1Trend_residue_bestCycle_byMAPE None 0.0012755102040815647 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None           _UAM             T+S+R  ...  0.0151       0.0205   0.0154
1    None           _UAM             T+S+R  ...  0.0151       0.0205   0.0154
2    None     CumSum_UAM             T+S+R  ...  0.0155       0.0205   0.0154
3    None     CumSum_UAM             T+S+R  ...  0.0155       0.0205   0.0154
4    None       Diff_UAM             T+S+R  ...  0.0151       0.0205   0.0154
..    ...            ...               ...  ...     ...          ...      ...
203  None    RelDiff_UAM             T+S+R  ...  0.6378      18.8980  54.1423
204  None    RelDiff_UAM             T+S+R  ...  0.4533      19.4409  70.7218
205  None    RelDiff_UAM             T+S+R  ...  0.5142      21.9778  67.5005
206  None    RelDiff_UAM             T+S+R  ...  0.5142      21.9778  67.5005
207  None    RelDiff_UAM             T+S+R  ...  0.5140      22.2155  68.5467

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _UAM             T+S+R  ...  0.0151       0.0205   0.0154
1  None           _UAM             T+S+R  ...  0.0151       0.0205   0.0154
2  None     CumSum_UAM             T+S+R  ...  0.0155       0.0205   0.0154
3  None     CumSum_UAM             T+S+R  ...  0.0155       0.0205   0.0154
4  None       Diff_UAM             T+S+R  ...  0.0151       0.0205   0.0154

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['UAM'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['UAM'], 'Horizon': 7}))
7 0    7.85
1    7.89
2    7.92
3    7.95
4    7.90
5    7.85
6    7.76
Name: UAM, dtype: float64
7 0    7.89
1    7.89
2    7.89
3    7.89
4    7.89
5    7.89
6    7.89
Name: UAM_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_UAM UAM [7.85, 7.89, 7.92, 7.95, 7.9, 7.85, 7.76]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_UAM UAM [7.89, 7.89, 7.89, 7.89, 7.89, 7.89, 7.89]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_UAM UAM 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_UAM UAM 12.092219114303589
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_UAM UAM Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_UAM UAM 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_UAM UAM 0.0056 0.0056 0.9163
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_UAM UAM 0.044285714285714484 0.059401779675119476 -0.07524875153809352
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_UAM_7'
