BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  NVR N= 1251 H= 7 HEAD= [679.       680.090027 682.73999  663.109985 649.539978] TAIL= [1803.569946 1797.       1774.969971 1761.189941 1750.      ]
          NVR       Date
0  679.000000 2011-07-28
1  680.090027 2011-07-29
2  682.739990 2011-08-01
3  663.109985 2011-08-02
4  649.539978 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   NVR     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NVR'], 'Transformations': [('NVR', 'None', '_', 'T+S+R'), ('NVR', 'None', 'Diff_', 'T+S+R'), ('NVR', 'None', 'RelDiff_', 'T+S+R'), ('NVR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVR', 'Transformation': '_NVR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.299, ('TRAINING', {'Signal': 'NVR', 'Transformation': '_NVR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVR', 'Transformation': 'Diff_NVR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.776, ('TRAINING', {'Signal': 'NVR', 'Transformation': 'Diff_NVR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVR', 'Transformation': 'RelDiff_NVR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.18, ('TRAINING', {'Signal': 'NVR', 'Transformation': 'RelDiff_NVR'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NVR', 'Transformation': 'CumSum_NVR'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.803, ('TRAINING', {'Signal': 'NVR', 'Transformation': 'CumSum_NVR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.061, ('SIGNAL_TRAINING', {'Signals': ['NVR'], 'Transformations': [('NVR', 'None', '_', 'T+S+R'), ('NVR', 'None', 'Diff_', 'T+S+R'), ('NVR', 'None', 'RelDiff_', 'T+S+R'), ('NVR', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NVR'], 'Transformations': [('NVR', [('NVR', 'None', 'CumSum_', 'T+S+R'), ('NVR', 'None', 'Diff_', 'T+S+R'), ('NVR', 'None', 'RelDiff_', 'T+S+R'), ('NVR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NVR', 'Transformations': [('NVR', 'None', 'CumSum_', 'T+S+R'), ('NVR', 'None', 'Diff_', 'T+S+R'), ('NVR', 'None', 'RelDiff_', 'T+S+R'), ('NVR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'NVR', 'Transformations': [('NVR', 'None', 'CumSum_', 'T+S+R'), ('NVR', 'None', 'Diff_', 'T+S+R'), ('NVR', 'None', 'RelDiff_', 'T+S+R'), ('NVR', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NVR', 'Model': '_NVR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NVR', 'Model': '_NVR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NVR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NVR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.227, ('FINALIZE_TRAINING', {'Signals': ['NVR'], 'Transformations': [('NVR', [('NVR', 'None', 'CumSum_', 'T+S+R'), ('NVR', 'None', 'Diff_', 'T+S+R'), ('NVR', 'None', 'RelDiff_', 'T+S+R'), ('NVR', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NVR' Length=1251  Min=575.280029 Max=1830.0  Mean=1116.6602073197446 StdDev=327.32336821327937
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NVR' Min=0.0 Max=1.0  Mean=0.4314749034306601 StdDev=0.2608736417516376
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NVR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NVR_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_NVR_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_NVR_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0108 MAPE_Forecast=0.0098 MAPE_Test=0.0097
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0108 SMAPE_Forecast=0.0098 SMAPE_Test=0.0097
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9987 MASE_Test=1.305
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=65.79481532894208 CRPS_Forecast=25.092485553970043 CRPS_Test=9.299290214285715
INFO:pyaf.std:MODEL_L1 L1_Fit=10.117367463316583 L1_Forecast=15.811806325301204 L1_Test=17.40000699999999
INFO:pyaf.std:MODEL_L2 L2_Fit=13.764676159217329 L2_Forecast=20.721104036656616 L2_Test=20.61658318529074
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22477529188562684 LnQ_Forecast=0.04074454227930664 LnQ_Test=0.00091745758707736
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=7.9799809999999525 MedAE_Forecast=12.65002400000003 MedAE_Test=13.780029999999897
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.08266384005774305
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _NVR_Lag1Trend_residue_bestCycle_byMAPE None 0.0006774228669705062 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE   TestMAPE
0    None           _NVR             T+S+R  ...   0.0107       0.0097     0.0099
1    None           _NVR             T+S+R  ...   0.0107       0.0097     0.0099
2    None           _NVR             T+S+R  ...   0.0107       0.0097     0.0098
3    None           _NVR             T+S+R  ...   0.0105       0.0097     0.0078
4    None           _NVR             T+S+R  ...   0.0108       0.0098     0.0097
..    ...            ...               ...  ...      ...          ...        ...
219  None    RelDiff_NVR             T+S+R  ...  24.6090     561.6544  4579.8930
220  None    RelDiff_NVR             T+S+R  ...  53.9873     578.7081  3183.1634
221  None    RelDiff_NVR             T+S+R  ...  53.9873     578.7081  3183.1634
222  None    RelDiff_NVR             T+S+R  ...  22.2614     681.8885  5665.7835
223  None    RelDiff_NVR             T+S+R  ...  25.9522     715.6016  6211.5661

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _NVR             T+S+R  ...  0.0107       0.0097   0.0099
1  None           _NVR             T+S+R  ...  0.0107       0.0097   0.0099
2  None           _NVR             T+S+R  ...  0.0107       0.0097   0.0098
3  None           _NVR             T+S+R  ...  0.0105       0.0097   0.0078
4  None           _NVR             T+S+R  ...  0.0108       0.0098   0.0097

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NVR'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.154, ('FORECASTING', {'Signals': ['NVR'], 'Horizon': 7}))
7 0    1751.689941
1    1752.469971
2    1742.469971
3    1730.000000
4    1721.510010
5    1723.280029
6    1700.000000
Name: NVR, dtype: float64
7 0    1750.0
1    1750.0
2    1750.0
3    1750.0
4    1750.0
5    1750.0
6    1750.0
Name: NVR_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_NVR NVR [1751.689941, 1752.469971, 1742.469971, 1730.0, 1721.51001, 1723.280029, 1700.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_NVR NVR [1750.0, 1750.0, 1750.0, 1750.0, 1750.0, 1750.0, 1750.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_NVR NVR 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_NVR NVR 12.544434785842896
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_NVR NVR Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_NVR NVR 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_NVR NVR 0.0114 0.0113 2.0663
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_NVR NVR 19.557128857142875 25.330090447377025 -1.1091230265716319
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_NVR_7'
