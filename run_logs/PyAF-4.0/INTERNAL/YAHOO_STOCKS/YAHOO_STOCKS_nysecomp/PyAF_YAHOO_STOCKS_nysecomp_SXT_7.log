BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  SXT N= 1251 H= 7 HEAD= [37.290001 37.119999 36.889999 36.009998 36.27    ] TAIL= [69.75     69.709999 70.529999 70.650002 71.      ]
         SXT       Date
0  37.290001 2011-07-28
1  37.119999 2011-07-29
2  36.889999 2011-08-01
3  36.009998 2011-08-02
4  36.270000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   SXT     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['SXT'], 'Transformations': [('SXT', 'None', '_', 'T+S+R'), ('SXT', 'None', 'Diff_', 'T+S+R'), ('SXT', 'None', 'RelDiff_', 'T+S+R'), ('SXT', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXT', 'Transformation': '_SXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.325, ('TRAINING', {'Signal': 'SXT', 'Transformation': '_SXT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXT', 'Transformation': 'Diff_SXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.781, ('TRAINING', {'Signal': 'SXT', 'Transformation': 'Diff_SXT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXT', 'Transformation': 'RelDiff_SXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.169, ('TRAINING', {'Signal': 'SXT', 'Transformation': 'RelDiff_SXT'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'SXT', 'Transformation': 'CumSum_SXT'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.852, ('TRAINING', {'Signal': 'SXT', 'Transformation': 'CumSum_SXT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.129, ('SIGNAL_TRAINING', {'Signals': ['SXT'], 'Transformations': [('SXT', 'None', '_', 'T+S+R'), ('SXT', 'None', 'Diff_', 'T+S+R'), ('SXT', 'None', 'RelDiff_', 'T+S+R'), ('SXT', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['SXT'], 'Transformations': [('SXT', [('SXT', 'None', 'CumSum_', 'T+S+R'), ('SXT', 'None', 'Diff_', 'T+S+R'), ('SXT', 'None', 'RelDiff_', 'T+S+R'), ('SXT', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'SXT', 'Transformations': [('SXT', 'None', 'CumSum_', 'T+S+R'), ('SXT', 'None', 'Diff_', 'T+S+R'), ('SXT', 'None', 'RelDiff_', 'T+S+R'), ('SXT', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.011, ('MODEL_SELECTION', {'Signal': 'SXT', 'Transformations': [('SXT', 'None', 'CumSum_', 'T+S+R'), ('SXT', 'None', 'Diff_', 'T+S+R'), ('SXT', 'None', 'RelDiff_', 'T+S+R'), ('SXT', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SXT', 'Model': '_SXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'SXT', 'Model': '_SXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SXT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'SXT'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.233, ('FINALIZE_TRAINING', {'Signals': ['SXT'], 'Transformations': [('SXT', [('SXT', 'None', 'CumSum_', 'T+S+R'), ('SXT', 'None', 'Diff_', 'T+S+R'), ('SXT', 'None', 'RelDiff_', 'T+S+R'), ('SXT', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='SXT' Length=1251  Min=30.92 Max=72.209999  Mean=50.06906478017583 StdDev=12.159866330801167
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_SXT' Min=0.0 Max=1.0  Mean=0.46377004708030745 StdDev=0.2944990706054793
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_SXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_SXT_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_SXT_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_SXT_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0108 MAPE_Forecast=0.0109 MAPE_Test=0.0058
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0108 SMAPE_Forecast=0.0109 SMAPE_Test=0.0058
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0004 MASE_Test=1.123
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.1222346197262625 CRPS_Forecast=1.1275092125715096 CRPS_Test=0.23428621428571514
INFO:pyaf.std:MODEL_L1 L1_Fit=0.4824322050251254 L1_Forecast=0.688433574297189 L1_Test=0.40428614285714154
INFO:pyaf.std:MODEL_L2 L2_Fit=0.6669799895768038 L2_Forecast=0.9000828953832009 L2_Test=0.481411629632657
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.23244334288466828 LnQ_Forecast=0.051484252172863024 LnQ_Test=0.0003331921341352073
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.34999800000000647 MedAE_Forecast=0.5500029999999896 MedAE_Test=0.34999799999999937
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.15427467072595463
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _SXT_Lag1Trend_residue_bestCycle_byMAPE None 0.000726543974970878 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _SXT  ...  1.080000e-02  5.400000e-03
1    None           _SXT  ...  1.080000e-02  5.400000e-03
2    None           _SXT  ...  1.080000e-02  5.300000e-03
3    None           _SXT  ...  1.090000e-02  5.800000e-03
4    None           _SXT  ...  1.090000e-02  5.800000e-03
..    ...            ...  ...           ...           ...
219  None    RelDiff_SXT  ...  1.964809e+06  9.092522e+06
220  None    RelDiff_SXT  ...  2.949678e+06  9.092522e+06
221  None    RelDiff_SXT  ...  2.949678e+06  9.092522e+06
222  None    RelDiff_SXT  ...  5.590285e+06  9.092522e+06
223  None    RelDiff_SXT  ...  5.590285e+06  9.092522e+06

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _SXT             T+S+R  ...  0.0106       0.0108   0.0054
1  None           _SXT             T+S+R  ...  0.0106       0.0108   0.0054
2  None           _SXT             T+S+R  ...  0.0104       0.0108   0.0053
3  None           _SXT             T+S+R  ...  0.0108       0.0109   0.0058
4  None           _SXT             T+S+R  ...  0.0108       0.0109   0.0058

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['SXT'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.153, ('FORECASTING', {'Signals': ['SXT'], 'Horizon': 7}))
7 0    70.769997
1    71.190002
2    70.400002
3    75.589996
4    74.739998
5    74.070000
6    74.360001
Name: SXT, dtype: float64
7 0    71.0
1    71.0
2    71.0
3    71.0
4    71.0
5    71.0
6    71.0
Name: SXT_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_SXT SXT [70.769997, 71.190002, 70.400002, 75.589996, 74.739998, 74.07, 74.360001]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_SXT SXT [71.0, 71.0, 71.0, 71.0, 71.0, 71.0, 71.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_SXT SXT 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_SXT SXT 12.616201400756836
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_SXT SXT Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_SXT SXT 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_SXT SXT 0.0303 0.031 1.6475
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_SXT SXT 2.2542854285714276 2.8339562145029173 -1.0268566959509027
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_SXT_7'
