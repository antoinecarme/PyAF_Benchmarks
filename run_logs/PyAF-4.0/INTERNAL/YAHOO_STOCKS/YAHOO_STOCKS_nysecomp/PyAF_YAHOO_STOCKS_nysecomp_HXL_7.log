BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  HXL N= 1251 H= 7 HEAD= [23.559999 23.940001 23.450001 22.610001 22.5     ] TAIL= [42.209999 41.919998 42.41     42.259998 41.509998]
         HXL       Date
0  23.559999 2011-07-28
1  23.940001 2011-07-29
2  23.450001 2011-08-01
3  22.610001 2011-08-02
4  22.500000 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   HXL     1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['HXL'], 'Transformations': [('HXL', 'None', '_', 'T+S+R'), ('HXL', 'None', 'Diff_', 'T+S+R'), ('HXL', 'None', 'RelDiff_', 'T+S+R'), ('HXL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HXL', 'Transformation': '_HXL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.2, ('TRAINING', {'Signal': 'HXL', 'Transformation': '_HXL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HXL', 'Transformation': 'Diff_HXL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.731, ('TRAINING', {'Signal': 'HXL', 'Transformation': 'Diff_HXL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HXL', 'Transformation': 'RelDiff_HXL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.117, ('TRAINING', {'Signal': 'HXL', 'Transformation': 'RelDiff_HXL'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HXL', 'Transformation': 'CumSum_HXL'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.737, ('TRAINING', {'Signal': 'HXL', 'Transformation': 'CumSum_HXL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.787, ('SIGNAL_TRAINING', {'Signals': ['HXL'], 'Transformations': [('HXL', 'None', '_', 'T+S+R'), ('HXL', 'None', 'Diff_', 'T+S+R'), ('HXL', 'None', 'RelDiff_', 'T+S+R'), ('HXL', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['HXL'], 'Transformations': [('HXL', [('HXL', 'None', 'CumSum_', 'T+S+R'), ('HXL', 'None', 'Diff_', 'T+S+R'), ('HXL', 'None', 'RelDiff_', 'T+S+R'), ('HXL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'HXL', 'Transformations': [('HXL', 'None', 'CumSum_', 'T+S+R'), ('HXL', 'None', 'Diff_', 'T+S+R'), ('HXL', 'None', 'RelDiff_', 'T+S+R'), ('HXL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'HXL', 'Transformations': [('HXL', 'None', 'CumSum_', 'T+S+R'), ('HXL', 'None', 'Diff_', 'T+S+R'), ('HXL', 'None', 'RelDiff_', 'T+S+R'), ('HXL', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'HXL', 'Model': '_HXL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'HXL', 'Model': '_HXL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'HXL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.192, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'HXL'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.226, ('FINALIZE_TRAINING', {'Signals': ['HXL'], 'Transformations': [('HXL', [('HXL', 'None', 'CumSum_', 'T+S+R'), ('HXL', 'None', 'Diff_', 'T+S+R'), ('HXL', 'None', 'RelDiff_', 'T+S+R'), ('HXL', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='HXL' Length=1251  Min=18.07 Max=54.48  Mean=36.660271781774604 StdDev=9.40606017861048
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_HXL' Min=0.0 Max=1.0  Mean=0.510581482608476 StdDev=0.25833727488630825
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_HXL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_HXL_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_HXL_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_HXL_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0126 MAPE_Forecast=0.0135 MAPE_Test=0.0105
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0126 SMAPE_Forecast=0.0135 SMAPE_Test=0.0105
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.997 MASE_Test=1.3092
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.753840847167416 CRPS_Forecast=0.9079004620278762 CRPS_Test=0.16142842857142878
INFO:pyaf.std:MODEL_L1 L1_Fit=0.40094483618090454 L1_Forecast=0.6052208955823293 L1_Test=0.43857199999999963
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5352227960100617 L2_Forecast=0.8389508432755466 L2_Test=0.5460644362833276
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3180991828917637 LnQ_Forecast=0.08832930520118387 LnQ_Test=0.0012038272768663855
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.32999800000000334 MedAE_Forecast=0.45999899999999627 MedAE_Test=0.29000100000000373
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1507827245262291
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _HXL_Lag1Trend_residue_bestCycle_byMAPE None 0.0008239769294149379 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ... ForecastMAPE     TestMAPE
0    None           _HXL  ...       0.0134       0.0103
1    None           _HXL  ...       0.0135       0.0105
2    None           _HXL  ...       0.0135       0.0105
3    None     CumSum_HXL  ...       0.0135       0.0105
4    None       Diff_HXL  ...       0.0135       0.0105
..    ...            ...  ...          ...          ...
211  None    RelDiff_HXL  ...    9139.5723  141726.1183
212  None    RelDiff_HXL  ...    9659.3637   98145.5968
213  None    RelDiff_HXL  ...   11746.9127  119335.3260
214  None    RelDiff_HXL  ...   73031.8898  779381.0239
215  None    RelDiff_HXL  ...   73031.8898  779381.0239

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None           _HXL             T+S+R  ...  0.0124       0.0134   0.0103
1  None           _HXL             T+S+R  ...  0.0126       0.0135   0.0105
2  None           _HXL             T+S+R  ...  0.0126       0.0135   0.0105
3  None     CumSum_HXL             T+S+R  ...  0.0128       0.0135   0.0105
4  None       Diff_HXL             T+S+R  ...  0.0126       0.0135   0.0105

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['HXL'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['HXL'], 'Horizon': 7}))
7 0    42.099998
1    42.750000
2    44.840000
3    44.250000
4    43.939999
5    44.049999
6    43.630001
Name: HXL, dtype: float64
7 0    41.509998
1    41.509998
2    41.509998
3    41.509998
4    41.509998
5    41.509998
6    41.509998
Name: HXL_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_HXL HXL [42.099998, 42.75, 44.84, 44.25, 43.939999, 44.049999, 43.630001]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_HXL HXL [41.509998, 41.509998, 41.509998, 41.509998, 41.509998, 41.509998, 41.509998]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_HXL HXL 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_HXL HXL 12.279169082641602
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_HXL HXL Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_HXL HXL 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_HXL HXL 0.0487 0.0501 3.0812
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_HXL HXL 2.14143014285714 2.3093954651139743 -6.134054318167378
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_HXL_7'
