BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 299 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2012-09-13T00:00:00.000000000' '2012-09-14T00:00:00.000000000'
 '2012-09-17T00:00:00.000000000' '2012-09-18T00:00:00.000000000'
 '2012-09-19T00:00:00.000000000']
SIGNAL :  PRX N= 299 H= 7 HEAD= [32.7  32.39 31.1  29.86 31.12] TAIL= [49.87 49.83 49.87 49.93 49.94]
     PRX       Date
0  32.70 2011-07-28
1  32.39 2011-07-29
2  31.10 2011-08-01
3  29.86 2011-08-02
4  31.12 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 299 entries, 0 to 298
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   PRX     299 non-null    float64       
 1   Date    299 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 7.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['PRX'], 'Transformations': [('PRX', 'None', '_', 'T+S+R'), ('PRX', 'None', 'Diff_', 'T+S+R'), ('PRX', 'None', 'RelDiff_', 'T+S+R'), ('PRX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRX', 'Transformation': '_PRX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.754, ('TRAINING', {'Signal': 'PRX', 'Transformation': '_PRX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRX', 'Transformation': 'Diff_PRX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.161, ('TRAINING', {'Signal': 'PRX', 'Transformation': 'Diff_PRX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRX', 'Transformation': 'RelDiff_PRX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.217, ('TRAINING', {'Signal': 'PRX', 'Transformation': 'RelDiff_PRX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'PRX', 'Transformation': 'CumSum_PRX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.269, ('TRAINING', {'Signal': 'PRX', 'Transformation': 'CumSum_PRX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.402, ('SIGNAL_TRAINING', {'Signals': ['PRX'], 'Transformations': [('PRX', 'None', '_', 'T+S+R'), ('PRX', 'None', 'Diff_', 'T+S+R'), ('PRX', 'None', 'RelDiff_', 'T+S+R'), ('PRX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['PRX'], 'Transformations': [('PRX', [('PRX', 'None', 'CumSum_', 'T+S+R'), ('PRX', 'None', 'Diff_', 'T+S+R'), ('PRX', 'None', 'RelDiff_', 'T+S+R'), ('PRX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'PRX', 'Transformations': [('PRX', 'None', 'CumSum_', 'T+S+R'), ('PRX', 'None', 'Diff_', 'T+S+R'), ('PRX', 'None', 'RelDiff_', 'T+S+R'), ('PRX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'PRX', 'Transformations': [('PRX', 'None', 'CumSum_', 'T+S+R'), ('PRX', 'None', 'Diff_', 'T+S+R'), ('PRX', 'None', 'RelDiff_', 'T+S+R'), ('PRX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PRX', 'Model': '_PRX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'PRX', 'Model': '_PRX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PRX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'PRX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.188, ('FINALIZE_TRAINING', {'Signals': ['PRX'], 'Transformations': [('PRX', [('PRX', 'None', 'CumSum_', 'T+S+R'), ('PRX', 'None', 'Diff_', 'T+S+R'), ('PRX', 'None', 'RelDiff_', 'T+S+R'), ('PRX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2012-06-19T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='PRX' Length=299  Min=25.24 Max=50.19  Mean=36.48862876254181 StdDev=7.181587367453197
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_PRX' Min=0.0 Max=1.0  Mean=0.4508468441900524 StdDev=0.28783917304421625
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_PRX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_PRX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_PRX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_PRX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0176 MAPE_Forecast=0.0093 MAPE_Test=0.0006
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0176 SMAPE_Forecast=0.01 SMAPE_Test=0.0006
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9957 MASE_Forecast=1.0073 MASE_Test=0.9023
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.3142564059580912 CRPS_Forecast=1.72003203874092 CRPS_Test=0.016428571428571206
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5697424892703863 L1_Forecast=0.401525423728814 L1_Test=0.028571428571427963
INFO:pyaf.std:MODEL_L2 L2_Fit=0.7522986234761568 L2_Forecast=1.7745875624913958 L2_Test=0.035050983275386534
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.13129029660269365 LnQ_Forecast=0.10239670800730338 LnQ_Test=3.457735610571839e-06
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.46000000000000085 MedAE_Forecast=0.060000000000002274 MedAE_Test=0.03999999999999915
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.2989979959919842
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _PRX_Lag1Trend_residue_bestCycle_byMAPE None -0.0004008016032063244 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None    RelDiff_PRX             T+S+R  ...   0.0609       0.0090    0.0006
1    None    RelDiff_PRX             T+S+R  ...   0.0609       0.0090    0.0006
2    None           _PRX             T+S+R  ...   0.0176       0.0093    0.0006
3    None           _PRX             T+S+R  ...   0.0176       0.0093    0.0006
4    None     CumSum_PRX             T+S+R  ...   0.0185       0.0093    0.0006
..    ...            ...               ...  ...      ...          ...       ...
211  None    RelDiff_PRX             T+S+R  ...  63.7398      28.3296    1.9778
212  None    RelDiff_PRX             T+S+R  ...  63.7398      28.3296    1.9778
213  None    RelDiff_PRX             T+S+R  ...  53.1756      38.2208    9.2890
214  None    RelDiff_PRX             T+S+R  ...  53.1756      38.2208    9.2890
215  None    RelDiff_PRX             T+S+R  ...  14.1238     163.9993  329.8809

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None    RelDiff_PRX             T+S+R  ...  0.0609       0.0090   0.0006
1  None    RelDiff_PRX             T+S+R  ...  0.0609       0.0090   0.0006
2  None           _PRX             T+S+R  ...  0.0176       0.0093   0.0006
3  None           _PRX             T+S+R  ...  0.0176       0.0093   0.0006
4  None     CumSum_PRX             T+S+R  ...  0.0185       0.0093   0.0006

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['PRX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.127, ('FORECASTING', {'Signals': ['PRX'], 'Horizon': 7}))
7 0    49.94
1    49.93
2    49.91
3    49.91
4    49.93
5    49.96
6    49.98
Name: PRX, dtype: float64
7 0    49.94
1    49.94
2    49.94
3    49.94
4    49.94
5    49.94
6    49.94
Name: PRX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_PRX PRX [49.94, 49.93, 49.91, 49.91, 49.93, 49.96, 49.98]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_PRX PRX [49.94, 49.94, 49.94, 49.94, 49.94, 49.94, 49.94]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_PRX PRX 299 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_PRX PRX 9.81800889968872
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_PRX PRX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_PRX PRX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_PRX PRX 0.0004 0.0004 1.2
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_PRX PRX 0.02000000000000008 0.023904572186688212 -0.014492727893294255
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_PRX_7'
