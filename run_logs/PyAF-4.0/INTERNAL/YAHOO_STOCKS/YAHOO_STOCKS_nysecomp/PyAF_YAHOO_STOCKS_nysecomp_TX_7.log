BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1251 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  TX N= 1251 H= 7 HEAD= [28.74     28.99     28.75     28.030001 27.450001] TAIL= [20.690001 21.25     21.26     21.23     22.290001]
          TX       Date
0  28.740000 2011-07-28
1  28.990000 2011-07-29
2  28.750000 2011-08-01
3  28.030001 2011-08-02
4  27.450001 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1251 entries, 0 to 1250
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   TX      1251 non-null   float64       
 1   Date    1251 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 29.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['TX'], 'Transformations': [('TX', 'None', '_', 'T+S+R'), ('TX', 'None', 'Diff_', 'T+S+R'), ('TX', 'None', 'RelDiff_', 'T+S+R'), ('TX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TX', 'Transformation': '_TX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.315, ('TRAINING', {'Signal': 'TX', 'Transformation': '_TX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TX', 'Transformation': 'Diff_TX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.836, ('TRAINING', {'Signal': 'TX', 'Transformation': 'Diff_TX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TX', 'Transformation': 'RelDiff_TX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.158, ('TRAINING', {'Signal': 'TX', 'Transformation': 'RelDiff_TX'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'TX', 'Transformation': 'CumSum_TX'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.792, ('TRAINING', {'Signal': 'TX', 'Transformation': 'CumSum_TX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.103, ('SIGNAL_TRAINING', {'Signals': ['TX'], 'Transformations': [('TX', 'None', '_', 'T+S+R'), ('TX', 'None', 'Diff_', 'T+S+R'), ('TX', 'None', 'RelDiff_', 'T+S+R'), ('TX', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['TX'], 'Transformations': [('TX', [('TX', 'None', 'CumSum_', 'T+S+R'), ('TX', 'None', 'Diff_', 'T+S+R'), ('TX', 'None', 'RelDiff_', 'T+S+R'), ('TX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'TX', 'Transformations': [('TX', 'None', 'CumSum_', 'T+S+R'), ('TX', 'None', 'Diff_', 'T+S+R'), ('TX', 'None', 'RelDiff_', 'T+S+R'), ('TX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'TX', 'Transformations': [('TX', 'None', 'CumSum_', 'T+S+R'), ('TX', 'None', 'Diff_', 'T+S+R'), ('TX', 'None', 'RelDiff_', 'T+S+R'), ('TX', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TX', 'Model': '_TX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'TX', 'Model': '_TX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.197, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'TX'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.232, ('FINALIZE_TRAINING', {'Signals': ['TX'], 'Transformations': [('TX', [('TX', 'None', 'CumSum_', 'T+S+R'), ('TX', 'None', 'Diff_', 'T+S+R'), ('TX', 'None', 'RelDiff_', 'T+S+R'), ('TX', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-13T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='TX' Length=1251  Min=10.56 Max=32.240002  Mean=21.386538777777766 StdDev=4.7248417771169935
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_TX' Min=0.0 Max=1.0  Mean=0.49937904884777246 StdDev=0.21793548621983502
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_TX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_TX_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_TX_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_TX_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0171 MAPE_Forecast=0.022 MAPE_Test=0.0244
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0171 SMAPE_Forecast=0.0221 SMAPE_Test=0.0249
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9984 MASE_Test=1.0033
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.1570799977148905 CRPS_Forecast=0.7693303388656744 CRPS_Test=0.4385714285714289
INFO:pyaf.std:MODEL_L1 L1_Fit=0.38067340201005023 L1_Forecast=0.3344176465863454 L1_Test=0.5100000000000006
INFO:pyaf.std:MODEL_L2 L2_Fit=0.53673640259474 L2_Forecast=0.460973726350888 L2_Test=0.619112433824192
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.5885552449298991 LnQ_Forecast=0.22734783718958357 LnQ_Test=0.006283273056877446
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.2800009999999986 MedAE_Forecast=0.2699999999999996 MedAE_Test=0.5599990000000012
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8385608082508481
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _TX_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0    None            _TX             T+S+R  ...   0.0170       0.0217   0.0251
1    None            _TX             T+S+R  ...   0.0167       0.0218   0.0254
2    None            _TX             T+S+R  ...   0.0171       0.0220   0.0244
3    None            _TX             T+S+R  ...   0.0171       0.0220   0.0244
4    None      CumSum_TX             T+S+R  ...   0.0178       0.0220   0.0244
..    ...            ...               ...  ...      ...          ...      ...
211  None      CumSum_TX             T+S+R  ...  10.5867      18.1994   3.6036
212  None      CumSum_TX             T+S+R  ...  12.5188      20.7104  21.4864
213  None      CumSum_TX             T+S+R  ...  13.9404      23.0226  16.3890
214  None      CumSum_TX             T+S+R  ...  15.3472      23.7395  16.1164
215  None      CumSum_TX             T+S+R  ...  15.1754      28.0605   9.7396

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None            _TX             T+S+R  ...  0.0170       0.0217   0.0251
1  None            _TX             T+S+R  ...  0.0167       0.0218   0.0254
2  None            _TX             T+S+R  ...  0.0171       0.0220   0.0244
3  None            _TX             T+S+R  ...  0.0171       0.0220   0.0244
4  None      CumSum_TX             T+S+R  ...  0.0178       0.0220   0.0244

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['TX'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.257, ('FORECASTING', {'Signals': ['TX'], 'Horizon': 7}))
7 0    21.690001
1    21.020000
2    21.260000
3    21.320000
4    21.250000
5    21.930000
6    22.150000
Name: TX, dtype: float64
7 0    22.290001
1    22.290001
2    22.290001
3    22.290001
4    22.290001
5    22.290001
6    22.290001
Name: TX_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_TX TX [21.690001, 21.02, 21.26, 21.32, 21.25, 21.93, 22.15]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_TX TX [22.290001000000004, 22.290001000000004, 22.290001000000004, 22.290001000000004, 22.290001000000004, 22.290001000000004, 22.290001000000004]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_TX TX 1251 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_TX TX 12.698180913925171
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_TX TX Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_TX TX 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_TX TX 0.0362 0.0354 2.3903
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_TX TX 0.7728580000000039 0.8623480917990335 -4.0818022758135
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_TX_7'
