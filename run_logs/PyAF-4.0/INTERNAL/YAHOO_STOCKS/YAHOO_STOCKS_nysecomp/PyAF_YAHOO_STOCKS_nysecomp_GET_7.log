BENCH_DATA YAHOO_STOCKS_nysecomp
TIME :  Date N= 1298 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  GET N= 1298 H= 7 HEAD= [1666.93    1.93    1.95    1.93 1666.93] TAIL= [9.515 9.515 9.515 9.515 9.515]
       GET       Date
0  1666.93 2011-07-28
1     1.93 2011-07-29
2     1.95 2011-08-01
3     1.93 2011-08-02
4  1666.93 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1298 entries, 0 to 1297
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   GET     1298 non-null   float64       
 1   Date    1298 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['GET'], 'Transformations': [('GET', 'None', '_', 'T+S+R'), ('GET', 'None', 'Diff_', 'T+S+R'), ('GET', 'None', 'RelDiff_', 'T+S+R'), ('GET', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GET', 'Transformation': '_GET'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.86, ('TRAINING', {'Signal': 'GET', 'Transformation': '_GET'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GET', 'Transformation': 'Diff_GET'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.418, ('TRAINING', {'Signal': 'GET', 'Transformation': 'Diff_GET'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GET', 'Transformation': 'RelDiff_GET'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.787, ('TRAINING', {'Signal': 'GET', 'Transformation': 'RelDiff_GET'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'GET', 'Transformation': 'CumSum_GET'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.276, ('TRAINING', {'Signal': 'GET', 'Transformation': 'CumSum_GET'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.343, ('SIGNAL_TRAINING', {'Signals': ['GET'], 'Transformations': [('GET', 'None', '_', 'T+S+R'), ('GET', 'None', 'Diff_', 'T+S+R'), ('GET', 'None', 'RelDiff_', 'T+S+R'), ('GET', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['GET'], 'Transformations': [('GET', [('GET', 'None', 'CumSum_', 'T+S+R'), ('GET', 'None', 'Diff_', 'T+S+R'), ('GET', 'None', 'RelDiff_', 'T+S+R'), ('GET', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'GET', 'Transformations': [('GET', 'None', 'CumSum_', 'T+S+R'), ('GET', 'None', 'Diff_', 'T+S+R'), ('GET', 'None', 'RelDiff_', 'T+S+R'), ('GET', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.008, ('MODEL_SELECTION', {'Signal': 'GET', 'Transformations': [('GET', 'None', 'CumSum_', 'T+S+R'), ('GET', 'None', 'Diff_', 'T+S+R'), ('GET', 'None', 'RelDiff_', 'T+S+R'), ('GET', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GET', 'Model': '_GET_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'GET', 'Model': '_GET_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GET'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.193, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'GET'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.23, ('FINALIZE_TRAINING', {'Signals': ['GET'], 'Transformations': [('GET', [('GET', 'None', 'CumSum_', 'T+S+R'), ('GET', 'None', 'Diff_', 'T+S+R'), ('GET', 'None', 'RelDiff_', 'T+S+R'), ('GET', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='GET' Length=1298  Min=0.25 Max=1666.93  Mean=40.43887904468339 StdDev=241.56321300310123
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_GET' Min=0.0 Max=1.0  Mean=0.024113134521734653 StdDev=0.14493676830771457
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_GET_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_GET_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_GET_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_GET_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=24.3304 MAPE_Forecast=0.0012 MAPE_Test=0.0
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1078 SMAPE_Forecast=0.0011 SMAPE_Test=0.0
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.9961 MASE_Test=0.0
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=24.192401774785807 CRPS_Forecast=0.13667240517828735 CRPS_Test=0.0
INFO:pyaf.std:MODEL_L1 L1_Fit=66.20944767441861 L1_Forecast=0.012297297297297293 L1_Test=0.0
INFO:pyaf.std:MODEL_L2 L2_Fit=331.9523499260319 L2_Forecast=0.11197809010736276 L2_Test=0.0
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2057.5622646336415 LnQ_Forecast=0.028293279024479114 LnQ_Test=0.0
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.010000000000000009 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 1.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _GET_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation  ...  ForecastMAPE      TestMAPE
0    None           _GET  ...  1.200000e-03  0.000000e+00
1    None     CumSum_GET  ...  1.200000e-03  0.000000e+00
2    None       Diff_GET  ...  1.200000e-03  0.000000e+00
3    None           _GET  ...  1.200000e-03  0.000000e+00
4    None           _GET  ...  1.200000e-03  0.000000e+00
..    ...            ...  ...           ...           ...
155  None    RelDiff_GET  ...  1.374149e+10  1.751634e+10
156  None    RelDiff_GET  ...  1.374149e+10  1.751634e+10
157  None    RelDiff_GET  ...  1.374149e+10  1.751634e+10
158  None    RelDiff_GET  ...  1.374149e+10  1.751634e+10
159  None    RelDiff_GET  ...  1.374149e+10  1.751634e+10

[160 rows x 10 columns]
  Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0  None           _GET             T+S+R  ...  24.3304       0.0012      0.0
1  None     CumSum_GET             T+S+R  ...  23.4953       0.0012      0.0
2  None       Diff_GET             T+S+R  ...  24.3304       0.0012      0.0
3  None           _GET             T+S+R  ...  24.3304       0.0012      0.0
4  None           _GET             T+S+R  ...  24.3304       0.0012      0.0

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['GET'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.162, ('FORECASTING', {'Signals': ['GET'], 'Horizon': 7}))
7 0    9.515
1    9.515
2    9.515
3    9.515
4    9.515
5    9.515
6    9.515
Name: GET, dtype: float64
7 0    9.515
1    9.515
2    9.515
3    9.515
4    9.515
5    9.515
6    9.515
Name: GET_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_GET GET [9.515, 9.515, 9.515, 9.515, 9.515, 9.515, 9.515]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_GET GET [9.515, 9.515, 9.515, 9.515, 9.515, 9.515, 9.515]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_GET GET 1298 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_GET GET 10.841568946838379
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_GET GET Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_GET GET 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_GET GET 0.0 0.0 0.0
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_GET GET 0.0 0.0 1.0
BENCHMARK_SUCCESS 'YAHOO_STOCKS_nysecomp_GET_7'
