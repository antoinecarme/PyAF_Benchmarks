BENCH_DATA YAHOO_STOCKS_ftseall
TIME :  Date N= 1295 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  MMC.L N= 1295 H= 7 HEAD= [43.5   43.75  43.25  43.    42.125] TAIL= [17.25  16.875 16.875 16.875 17.125]
    MMC.L       Date
0  43.500 2011-07-28
1  43.750 2011-07-29
2  43.250 2011-08-01
3  43.000 2011-08-02
4  42.125 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1295 entries, 0 to 1294
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MMC.L   1295 non-null   float64       
 1   Date    1295 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MMC.L'], 'Transformations': [('MMC.L', 'None', '_', 'T+S+R'), ('MMC.L', 'None', 'Diff_', 'T+S+R'), ('MMC.L', 'None', 'RelDiff_', 'T+S+R'), ('MMC.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMC.L', 'Transformation': '_MMC.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.646, ('TRAINING', {'Signal': 'MMC.L', 'Transformation': '_MMC.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMC.L', 'Transformation': 'Diff_MMC.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.623, ('TRAINING', {'Signal': 'MMC.L', 'Transformation': 'Diff_MMC.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMC.L', 'Transformation': 'RelDiff_MMC.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.83, ('TRAINING', {'Signal': 'MMC.L', 'Transformation': 'RelDiff_MMC.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MMC.L', 'Transformation': 'CumSum_MMC.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.586, ('TRAINING', {'Signal': 'MMC.L', 'Transformation': 'CumSum_MMC.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 10.687, ('SIGNAL_TRAINING', {'Signals': ['MMC.L'], 'Transformations': [('MMC.L', 'None', '_', 'T+S+R'), ('MMC.L', 'None', 'Diff_', 'T+S+R'), ('MMC.L', 'None', 'RelDiff_', 'T+S+R'), ('MMC.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MMC.L'], 'Transformations': [('MMC.L', [('MMC.L', 'None', 'CumSum_', 'T+S+R'), ('MMC.L', 'None', 'Diff_', 'T+S+R'), ('MMC.L', 'None', 'RelDiff_', 'T+S+R'), ('MMC.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MMC.L', 'Transformations': [('MMC.L', 'None', 'CumSum_', 'T+S+R'), ('MMC.L', 'None', 'Diff_', 'T+S+R'), ('MMC.L', 'None', 'RelDiff_', 'T+S+R'), ('MMC.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MMC.L', 'Transformations': [('MMC.L', 'None', 'CumSum_', 'T+S+R'), ('MMC.L', 'None', 'Diff_', 'T+S+R'), ('MMC.L', 'None', 'RelDiff_', 'T+S+R'), ('MMC.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MMC.L', 'Model': '_MMC.L_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MMC.L', 'Model': '_MMC.L_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MMC.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.185, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MMC.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.22, ('FINALIZE_TRAINING', {'Signals': ['MMC.L'], 'Transformations': [('MMC.L', [('MMC.L', 'None', 'CumSum_', 'T+S+R'), ('MMC.L', 'None', 'Diff_', 'T+S+R'), ('MMC.L', 'None', 'RelDiff_', 'T+S+R'), ('MMC.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-09T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MMC.L' Length=1295  Min=13.375 Max=43.75  Mean=23.753185328185328 StdDev=7.287191716719999
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MMC.L' Min=0.0 Max=1.0  Mean=0.3416686527797654 StdDev=0.239907546229465
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MMC.L_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MMC.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MMC.L_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_MMC.L_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0127 MAPE_Forecast=0.0096 MAPE_Test=0.0157
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0126 SMAPE_Forecast=0.0096 SMAPE_Test=0.016
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0027 MASE_Test=0.989
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.9484304739397036 CRPS_Forecast=0.2547336525307798 CRPS_Test=0.16071428571428573
INFO:pyaf.std:MODEL_L1 L1_Fit=0.316747572815534 L1_Forecast=0.14728682170542637 L1_Test=0.26785714285714285
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5034468570406192 L2_Forecast=0.2225752202788319 L2_Test=0.4252100321353806
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.434263717919257 LnQ_Forecast=0.054814411945249546 LnQ_Test=0.004506109905089552
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.25 MedAE_Forecast=0.125 MedAE_Test=0.25
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.9917695473251029
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _MMC.L_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE  ForecastMAPE      TestMAPE
0    None         _MMC.L             T+S+R  ...  0.0127  9.600000e-03  1.570000e-02
1    None   CumSum_MMC.L             T+S+R  ...  0.0134  9.600000e-03  1.570000e-02
2    None   CumSum_MMC.L             T+S+R  ...  0.0134  9.600000e-03  1.570000e-02
3    None     Diff_MMC.L             T+S+R  ...  0.0127  9.600000e-03  1.570000e-02
4    None         _MMC.L             T+S+R  ...  0.0127  9.600000e-03  1.570000e-02
..    ...            ...               ...  ...     ...           ...           ...
179  None  RelDiff_MMC.L             T+S+R  ...  1.4103  5.165457e+06  1.694783e+08
180  None  RelDiff_MMC.L             T+S+R  ...  1.4040  5.355174e+06  1.718083e+08
181  None  RelDiff_MMC.L             T+S+R  ...  1.5875  5.421636e+06  1.695177e+08
182  None  RelDiff_MMC.L             T+S+R  ...  1.4427  6.411134e+06  1.780183e+08
183  None  RelDiff_MMC.L             T+S+R  ...  1.4561  7.170650e+06  1.780183e+08

[184 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _MMC.L             T+S+R  ...  0.0127       0.0096   0.0157
1  None   CumSum_MMC.L             T+S+R  ...  0.0134       0.0096   0.0157
2  None   CumSum_MMC.L             T+S+R  ...  0.0134       0.0096   0.0157
3  None     Diff_MMC.L             T+S+R  ...  0.0127       0.0096   0.0157
4  None         _MMC.L             T+S+R  ...  0.0127       0.0096   0.0157

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MMC.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.152, ('FORECASTING', {'Signals': ['MMC.L'], 'Horizon': 7}))
7 0    17.125
1    17.125
2    17.000
3    16.750
4    16.875
5    17.000
6    17.000
Name: MMC.L, dtype: float64
7 0    17.125
1    17.125
2    17.125
3    17.125
4    17.125
5    17.125
6    17.125
Name: MMC.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MMC.L MMC.L [17.125, 17.125, 17.0, 16.75, 16.875, 17.0, 17.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MMC.L MMC.L [17.125, 17.125, 17.125, 17.125, 17.125, 17.125, 17.125]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MMC.L MMC.L 1295 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MMC.L MMC.L 11.148897647857666
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MMC.L MMC.L Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MMC.L MMC.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MMC.L MMC.L 0.0085 0.0084 1.3714
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MMC.L MMC.L 0.14285714285714285 0.1889822365046136 -1.3333333311555555
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftseall_MMC.L_7'
