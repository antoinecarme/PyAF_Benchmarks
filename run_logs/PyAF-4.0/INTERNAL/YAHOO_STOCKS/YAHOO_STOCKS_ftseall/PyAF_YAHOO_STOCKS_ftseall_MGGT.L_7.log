BENCH_DATA YAHOO_STOCKS_ftseall
TIME :  Date N= 1295 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  MGGT.L N= 1295 H= 7 HEAD= [390.  388.3 386.6 376.3 380. ] TAIL= [410.  410.5 409.9 410.3 410.4]
   MGGT.L       Date
0   390.0 2011-07-28
1   388.3 2011-07-29
2   386.6 2011-08-01
3   376.3 2011-08-02
4   380.0 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1295 entries, 0 to 1294
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MGGT.L  1295 non-null   float64       
 1   Date    1295 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MGGT.L'], 'Transformations': [('MGGT.L', 'None', '_', 'T+S+R'), ('MGGT.L', 'None', 'Diff_', 'T+S+R'), ('MGGT.L', 'None', 'RelDiff_', 'T+S+R'), ('MGGT.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': '_MGGT.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.498, ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': '_MGGT.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': 'Diff_MGGT.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.599, ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': 'Diff_MGGT.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': 'RelDiff_MGGT.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.245, ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': 'RelDiff_MGGT.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': 'CumSum_MGGT.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.848, ('TRAINING', {'Signal': 'MGGT.L', 'Transformation': 'CumSum_MGGT.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.192, ('SIGNAL_TRAINING', {'Signals': ['MGGT.L'], 'Transformations': [('MGGT.L', 'None', '_', 'T+S+R'), ('MGGT.L', 'None', 'Diff_', 'T+S+R'), ('MGGT.L', 'None', 'RelDiff_', 'T+S+R'), ('MGGT.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MGGT.L'], 'Transformations': [('MGGT.L', [('MGGT.L', 'None', 'CumSum_', 'T+S+R'), ('MGGT.L', 'None', 'Diff_', 'T+S+R'), ('MGGT.L', 'None', 'RelDiff_', 'T+S+R'), ('MGGT.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MGGT.L', 'Transformations': [('MGGT.L', 'None', 'CumSum_', 'T+S+R'), ('MGGT.L', 'None', 'Diff_', 'T+S+R'), ('MGGT.L', 'None', 'RelDiff_', 'T+S+R'), ('MGGT.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MGGT.L', 'Transformations': [('MGGT.L', 'None', 'CumSum_', 'T+S+R'), ('MGGT.L', 'None', 'Diff_', 'T+S+R'), ('MGGT.L', 'None', 'RelDiff_', 'T+S+R'), ('MGGT.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MGGT.L', 'Model': '_MGGT.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.028, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MGGT.L', 'Model': '_MGGT.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MGGT.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.19, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MGGT.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.225, ('FINALIZE_TRAINING', {'Signals': ['MGGT.L'], 'Transformations': [('MGGT.L', [('MGGT.L', 'None', 'CumSum_', 'T+S+R'), ('MGGT.L', 'None', 'Diff_', 'T+S+R'), ('MGGT.L', 'None', 'RelDiff_', 'T+S+R'), ('MGGT.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-09T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MGGT.L' Length=1295  Min=305.0 Max=587.5  Mean=449.00979150579053 StdDev=67.15460906133298
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MGGT.L' Min=0.0 Max=1.0  Mean=0.5097691734718285 StdDev=0.23771543030560327
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MGGT.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MGGT.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MGGT.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MGGT.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0104 MAPE_Forecast=0.0142 MAPE_Test=0.0064
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0104 SMAPE_Forecast=0.0141 SMAPE_Test=0.0064
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0005 MASE_Test=2.2531
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=20.64430620848237 CRPS_Forecast=12.851196716826266 CRPS_Test=1.0642857142857127
INFO:pyaf.std:MODEL_L1 L1_Fit=4.6230097087378645 L1_Forecast=5.820542635658915 L1_Test=2.6285714285714255
INFO:pyaf.std:MODEL_L2 L2_Fit=6.573100537768432 L2_Forecast=9.859122010691694 L2_Test=4.556627825800244
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.22154393396112057 LnQ_Forecast=0.14790048129713457 LnQ_Test=0.0008647238403106091
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3.5 MedAE_Forecast=3.8000000000000114 MedAE_Test=0.6000000000000227
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.3008849557522124
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MGGT.L_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation DecompositionType  ...   FitMAPE ForecastMAPE   TestMAPE
0    None         _MGGT.L             T+S+R  ...    0.0101       0.0141     0.0069
1    None         _MGGT.L             T+S+R  ...    0.0104       0.0142     0.0064
2    None         _MGGT.L             T+S+R  ...    0.0104       0.0142     0.0064
3    None   CumSum_MGGT.L             T+S+R  ...    0.0106       0.0142     0.0064
4    None     Diff_MGGT.L             T+S+R  ...    0.0104       0.0142     0.0064
..    ...             ...               ...  ...       ...          ...        ...
211  None  RelDiff_MGGT.L             T+S+R  ...  102.1726     297.7759  1167.6833
212  None  RelDiff_MGGT.L             T+S+R  ...   27.6117     687.7006  1457.0402
213  None  RelDiff_MGGT.L             T+S+R  ...   27.6117     687.7006  1457.0402
214  None  RelDiff_MGGT.L             T+S+R  ...  178.1298     929.7285  3900.0903
215  None  RelDiff_MGGT.L             T+S+R  ...  178.1298     929.7285  3900.0903

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _MGGT.L             T+S+R  ...  0.0101       0.0141   0.0069
1  None        _MGGT.L             T+S+R  ...  0.0104       0.0142   0.0064
2  None        _MGGT.L             T+S+R  ...  0.0104       0.0142   0.0064
3  None  CumSum_MGGT.L             T+S+R  ...  0.0106       0.0142   0.0064
4  None    Diff_MGGT.L             T+S+R  ...  0.0104       0.0142   0.0064

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MGGT.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.158, ('FORECASTING', {'Signals': ['MGGT.L'], 'Horizon': 7}))
7 0    418.0
1    421.9
2    415.9
3    419.6
4    427.3
5    432.3
6    440.0
Name: MGGT.L, dtype: float64
7 0    410.4
1    410.4
2    410.4
3    410.4
4    410.4
5    410.4
6    410.4
Name: MGGT.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MGGT.L MGGT.L [418.0, 421.9, 415.9, 419.6, 427.3, 432.3, 440.0]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MGGT.L MGGT.L [410.4, 410.4, 410.4, 410.4, 410.4, 410.4, 410.4]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MGGT.L MGGT.L 1295 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MGGT.L MGGT.L 12.679981231689453
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MGGT.L MGGT.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MGGT.L MGGT.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MGGT.L MGGT.L 0.034 0.0348 2.5765
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MGGT.L MGGT.L 14.600000000000023 16.67453147767579 -3.2854500616513445
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftseall_MGGT.L_7'
