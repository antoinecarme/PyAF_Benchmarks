BENCH_DATA YAHOO_STOCKS_ftseall
TIME :  Date N= 377 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2013-01-01T00:00:00.000000000' '2013-01-02T00:00:00.000000000'
 '2013-01-03T00:00:00.000000000' '2013-01-04T00:00:00.000000000'
 '2013-01-07T00:00:00.000000000']
SIGNAL :  HMV.L N= 377 H= 7 HEAD= [7.5  7.39 7.32 6.05 6.23] TAIL= [1.945 1.75  1.805 1.83  1.745]
   HMV.L       Date
0   7.50 2011-07-28
1   7.39 2011-07-29
2   7.32 2011-08-01
3   6.05 2011-08-02
4   6.23 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 377 entries, 0 to 376
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   HMV.L   377 non-null    float64       
 1   Date    377 non-null    datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 8.8 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['HMV.L'], 'Transformations': [('HMV.L', 'None', '_', 'T+S+R'), ('HMV.L', 'None', 'Diff_', 'T+S+R'), ('HMV.L', 'None', 'RelDiff_', 'T+S+R'), ('HMV.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HMV.L', 'Transformation': '_HMV.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.944, ('TRAINING', {'Signal': 'HMV.L', 'Transformation': '_HMV.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HMV.L', 'Transformation': 'Diff_HMV.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.259, ('TRAINING', {'Signal': 'HMV.L', 'Transformation': 'Diff_HMV.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HMV.L', 'Transformation': 'RelDiff_HMV.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.6, ('TRAINING', {'Signal': 'HMV.L', 'Transformation': 'RelDiff_HMV.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'HMV.L', 'Transformation': 'CumSum_HMV.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.959, ('TRAINING', {'Signal': 'HMV.L', 'Transformation': 'CumSum_HMV.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 9.765, ('SIGNAL_TRAINING', {'Signals': ['HMV.L'], 'Transformations': [('HMV.L', 'None', '_', 'T+S+R'), ('HMV.L', 'None', 'Diff_', 'T+S+R'), ('HMV.L', 'None', 'RelDiff_', 'T+S+R'), ('HMV.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['HMV.L'], 'Transformations': [('HMV.L', [('HMV.L', 'None', 'CumSum_', 'T+S+R'), ('HMV.L', 'None', 'Diff_', 'T+S+R'), ('HMV.L', 'None', 'RelDiff_', 'T+S+R'), ('HMV.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'HMV.L', 'Transformations': [('HMV.L', 'None', 'CumSum_', 'T+S+R'), ('HMV.L', 'None', 'Diff_', 'T+S+R'), ('HMV.L', 'None', 'RelDiff_', 'T+S+R'), ('HMV.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'HMV.L', 'Transformations': [('HMV.L', 'None', 'CumSum_', 'T+S+R'), ('HMV.L', 'None', 'Diff_', 'T+S+R'), ('HMV.L', 'None', 'RelDiff_', 'T+S+R'), ('HMV.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'HMV.L', 'Model': '_HMV.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'HMV.L', 'Model': '_HMV.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'HMV.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.165, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'HMV.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.196, ('FINALIZE_TRAINING', {'Signals': ['HMV.L'], 'Transformations': [('HMV.L', [('HMV.L', 'None', 'CumSum_', 'T+S+R'), ('HMV.L', 'None', 'Diff_', 'T+S+R'), ('HMV.L', 'None', 'RelDiff_', 'T+S+R'), ('HMV.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2012-09-14T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='HMV.L' Length=377  Min=1.72 Max=7.5  Mean=3.864960212201588 StdDev=1.1640855456400634
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_HMV.L' Min=0.0 Max=1.0  Mean=0.3711003827338392 StdDev=0.20139888332873074
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_HMV.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_HMV.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_HMV.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_HMV.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0337 MAPE_Forecast=0.042 MAPE_Test=0.0464
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0345 SMAPE_Forecast=0.0399 SMAPE_Test=0.046
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9966 MASE_Forecast=0.9957 MASE_Test=1.2245
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.2985144470128023 CRPS_Forecast=0.08332784984984984 CRPS_Test=0.0367857142857143
INFO:pyaf.std:MODEL_L1 L1_Fit=0.15369932432432434 L1_Forecast=0.10959459459459461 L1_Test=0.0857142857142857
INFO:pyaf.std:MODEL_L2 L2_Fit=0.35697880643428015 L2_Forecast=0.24336048225692752 L2_Test=0.11012979355547446
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.9030352879048948 LnQ_Forecast=0.4621333215339606 LnQ_Test=0.02434111731733471
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.08000000000000007 MedAE_Forecast=0.04999999999999982 MedAE_Test=0.05999999999999983
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 1.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _HMV.L_Lag1Trend_residue_bestCycle_byMAPE None -0.0017301038062283447 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ...  FitMAPE ForecastMAPE  TestMAPE
0    None         _HMV.L             T+S+R  ...   0.0328       0.0416    0.0699
1    None         _HMV.L             T+S+R  ...   0.0326       0.0417    0.0584
2    None         _HMV.L             T+S+R  ...   0.0330       0.0418    0.0682
3    None         _HMV.L             T+S+R  ...   0.0330       0.0418    0.0682
4    None         _HMV.L             T+S+R  ...   0.0337       0.0420    0.0464
..    ...            ...               ...  ...      ...          ...       ...
203  None  RelDiff_HMV.L             T+S+R  ...  15.5064     282.2251  822.1188
204  None  RelDiff_HMV.L             T+S+R  ...  15.5064     282.2251  822.1188
205  None  RelDiff_HMV.L             T+S+R  ...  14.7303     287.7700  808.4149
206  None  RelDiff_HMV.L             T+S+R  ...  30.6516     371.1165  860.6838
207  None  RelDiff_HMV.L             T+S+R  ...  30.6516     371.1165  860.6838

[208 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _HMV.L             T+S+R  ...  0.0328       0.0416   0.0699
1  None         _HMV.L             T+S+R  ...  0.0326       0.0417   0.0584
2  None         _HMV.L             T+S+R  ...  0.0330       0.0418   0.0682
3  None         _HMV.L             T+S+R  ...  0.0330       0.0418   0.0682
4  None         _HMV.L             T+S+R  ...  0.0337       0.0420   0.0464

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['HMV.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.128, ('FORECASTING', {'Signals': ['HMV.L'], 'Horizon': 7}))
7 0    1.800
1    1.660
2    1.545
3    1.200
4    1.100
5    1.100
6    1.100
Name: HMV.L, dtype: float64
7 0    1.745
1    1.745
2    1.745
3    1.745
4    1.745
5    1.745
6    1.745
Name: HMV.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_HMV.L HMV.L [1.8, 1.66, 1.545, 1.2, 1.1, 1.1, 1.1]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_HMV.L HMV.L [1.745, 1.745, 1.745, 1.745, 1.745, 1.745, 1.745]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_HMV.L HMV.L 377 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_HMV.L HMV.L 10.192436933517456
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_HMV.L HMV.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_HMV.L HMV.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_HMV.L HMV.L 0.3464 0.2761 3.4531
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_HMV.L HMV.L 0.40285714285714297 0.4773962116074476 -1.9208547472649404
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftseall_HMV.L_7'
