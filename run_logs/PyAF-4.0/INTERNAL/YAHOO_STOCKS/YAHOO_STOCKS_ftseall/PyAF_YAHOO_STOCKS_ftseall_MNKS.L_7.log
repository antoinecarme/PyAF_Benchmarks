BENCH_DATA YAHOO_STOCKS_ftseall
TIME :  Date N= 1292 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-12T00:00:00.000000000' '2016-07-13T00:00:00.000000000'
 '2016-07-14T00:00:00.000000000' '2016-07-15T00:00:00.000000000'
 '2016-07-18T00:00:00.000000000']
SIGNAL :  MNKS.L N= 1292 H= 7 HEAD= [3.451  3.9034 3.363  3.341  3.293 ] TAIL= [5.28691 5.30199 5.27571 5.29507 5.29546]
   MNKS.L       Date
0  3.4510 2011-07-28
1  3.9034 2011-07-29
2  3.3630 2011-08-01
3  3.3410 2011-08-02
4  3.2930 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1292 entries, 0 to 1291
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MNKS.L  1292 non-null   float64       
 1   Date    1292 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.3 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MNKS.L'], 'Transformations': [('MNKS.L', 'None', '_', 'T+S+R'), ('MNKS.L', 'None', 'Diff_', 'T+S+R'), ('MNKS.L', 'None', 'RelDiff_', 'T+S+R'), ('MNKS.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': '_MNKS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.381, ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': '_MNKS.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': 'Diff_MNKS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.889, ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': 'Diff_MNKS.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': 'RelDiff_MNKS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.264, ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': 'RelDiff_MNKS.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': 'CumSum_MNKS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.834, ('TRAINING', {'Signal': 'MNKS.L', 'Transformation': 'CumSum_MNKS.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.37, ('SIGNAL_TRAINING', {'Signals': ['MNKS.L'], 'Transformations': [('MNKS.L', 'None', '_', 'T+S+R'), ('MNKS.L', 'None', 'Diff_', 'T+S+R'), ('MNKS.L', 'None', 'RelDiff_', 'T+S+R'), ('MNKS.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MNKS.L'], 'Transformations': [('MNKS.L', [('MNKS.L', 'None', 'CumSum_', 'T+S+R'), ('MNKS.L', 'None', 'Diff_', 'T+S+R'), ('MNKS.L', 'None', 'RelDiff_', 'T+S+R'), ('MNKS.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MNKS.L', 'Transformations': [('MNKS.L', 'None', 'CumSum_', 'T+S+R'), ('MNKS.L', 'None', 'Diff_', 'T+S+R'), ('MNKS.L', 'None', 'RelDiff_', 'T+S+R'), ('MNKS.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'MNKS.L', 'Transformations': [('MNKS.L', 'None', 'CumSum_', 'T+S+R'), ('MNKS.L', 'None', 'Diff_', 'T+S+R'), ('MNKS.L', 'None', 'RelDiff_', 'T+S+R'), ('MNKS.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MNKS.L', 'Model': '_MNKS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.029, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MNKS.L', 'Model': '_MNKS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MNKS.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.191, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MNKS.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.23, ('FINALIZE_TRAINING', {'Signals': ['MNKS.L'], 'Transformations': [('MNKS.L', [('MNKS.L', 'None', 'CumSum_', 'T+S+R'), ('MNKS.L', 'None', 'Diff_', 'T+S+R'), ('MNKS.L', 'None', 'RelDiff_', 'T+S+R'), ('MNKS.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-10T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MNKS.L' Length=1292  Min=2.981 Max=5.30199  Mean=3.935254729102169 StdDev=0.6161627897174226
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MNKS.L' Min=0.0 Max=1.0  Mean=0.41114124968318133 StdDev=0.26547412514376334
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MNKS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MNKS.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MNKS.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MNKS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0211 MAPE_Forecast=0.0142 MAPE_Test=0.0054
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0211 SMAPE_Forecast=0.0142 SMAPE_Test=0.0055
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=0.998 MASE_Test=1.2917
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.16717428828077 CRPS_Forecast=0.05906925101579309 CRPS_Test=0.016993571428571386
INFO:pyaf.std:MODEL_L1 L1_Fit=0.08020059338521399 L1_Forecast=0.06304595330739299 L1_Test=0.028597142857142797
INFO:pyaf.std:MODEL_L2 L2_Fit=0.18068150242399098 L2_Forecast=0.1326834358678449 L2_Test=0.03868293865332789
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.265570055445962 LnQ_Forecast=0.23840063935483657 LnQ_Test=0.00038283138948787244
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.020000000000000018 MedAE_Forecast=0.02799999999999958 MedAE_Test=0.019359999999999822
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.20249979534595158
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MNKS.L_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None         _MNKS.L  ...  1.420000e-02  5.400000e-03
1    None         _MNKS.L  ...  1.420000e-02  5.400000e-03
2    None   CumSum_MNKS.L  ...  1.420000e-02  5.400000e-03
3    None     Diff_MNKS.L  ...  1.420000e-02  5.400000e-03
4    None     Diff_MNKS.L  ...  1.420000e-02  5.400000e-03
..    ...             ...  ...           ...           ...
219  None  RelDiff_MNKS.L  ...  1.027057e+07  8.899739e+06
220  None  RelDiff_MNKS.L  ...  1.027057e+07  8.899739e+06
221  None  RelDiff_MNKS.L  ...  1.027057e+07  8.899739e+06
222  None  RelDiff_MNKS.L  ...  1.027057e+07  8.899739e+06
223  None  RelDiff_MNKS.L  ...  1.027057e+07  8.899739e+06

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _MNKS.L             T+S+R  ...  0.0211       0.0142   0.0054
1  None        _MNKS.L             T+S+R  ...  0.0211       0.0142   0.0054
2  None  CumSum_MNKS.L             T+S+R  ...  0.0212       0.0142   0.0054
3  None    Diff_MNKS.L             T+S+R  ...  0.0211       0.0142   0.0054
4  None    Diff_MNKS.L             T+S+R  ...  0.0211       0.0142   0.0054

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MNKS.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FORECASTING', {'Signals': ['MNKS.L'], 'Horizon': 7}))
7 0    5.34421
1    5.37327
2    5.36478
3    4.68100
4    5.39681
5    4.81000
6    4.75100
Name: MNKS.L, dtype: float64
7 0    5.29546
1    5.29546
2    5.29546
3    5.29546
4    5.29546
5    5.29546
6    5.29546
Name: MNKS.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MNKS.L MNKS.L [5.34421, 5.37327, 5.36478, 4.681, 5.39681, 4.81, 4.751]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MNKS.L MNKS.L [5.29546, 5.29546, 5.29546, 5.29546, 5.29546, 5.29546, 5.29546]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MNKS.L MNKS.L 1292 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MNKS.L MNKS.L 12.877461433410645
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MNKS.L MNKS.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MNKS.L MNKS.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MNKS.L MNKS.L 0.0574 0.0548 0.799
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MNKS.L MNKS.L 0.27737285714285714 0.36511783583229296 -0.38470397350848784
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftseall_MNKS.L_7'
