BENCH_DATA YAHOO_STOCKS_ftseall
TIME :  Date N= 1049 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2015-07-30T00:00:00.000000000' '2015-07-31T00:00:00.000000000'
 '2015-08-03T00:00:00.000000000' '2015-08-04T00:00:00.000000000'
 '2015-08-05T00:00:00.000000000']
SIGNAL :  CSR.L N= 1049 H= 7 HEAD= [283.3 279.2 275.1 266.4 259.4] TAIL= [898.  898.  898.  898.  898.5]
   CSR.L       Date
0  283.3 2011-07-28
1  279.2 2011-07-29
2  275.1 2011-08-01
3  266.4 2011-08-02
4  259.4 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1049 entries, 0 to 1048
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   CSR.L   1049 non-null   float64       
 1   Date    1049 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 24.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['CSR.L'], 'Transformations': [('CSR.L', 'None', '_', 'T+S+R'), ('CSR.L', 'None', 'Diff_', 'T+S+R'), ('CSR.L', 'None', 'RelDiff_', 'T+S+R'), ('CSR.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CSR.L', 'Transformation': '_CSR.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_END
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.8, ('TRAINING', {'Signal': 'CSR.L', 'Transformation': '_CSR.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CSR.L', 'Transformation': 'Diff_CSR.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.745, ('TRAINING', {'Signal': 'CSR.L', 'Transformation': 'Diff_CSR.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CSR.L', 'Transformation': 'RelDiff_CSR.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.055, ('TRAINING', {'Signal': 'CSR.L', 'Transformation': 'RelDiff_CSR.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'CSR.L', 'Transformation': 'CumSum_CSR.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.667, ('TRAINING', {'Signal': 'CSR.L', 'Transformation': 'CumSum_CSR.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 11.27, ('SIGNAL_TRAINING', {'Signals': ['CSR.L'], 'Transformations': [('CSR.L', 'None', '_', 'T+S+R'), ('CSR.L', 'None', 'Diff_', 'T+S+R'), ('CSR.L', 'None', 'RelDiff_', 'T+S+R'), ('CSR.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['CSR.L'], 'Transformations': [('CSR.L', [('CSR.L', 'None', 'CumSum_', 'T+S+R'), ('CSR.L', 'None', 'Diff_', 'T+S+R'), ('CSR.L', 'None', 'RelDiff_', 'T+S+R'), ('CSR.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'CSR.L', 'Transformations': [('CSR.L', 'None', 'CumSum_', 'T+S+R'), ('CSR.L', 'None', 'Diff_', 'T+S+R'), ('CSR.L', 'None', 'RelDiff_', 'T+S+R'), ('CSR.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'CSR.L', 'Transformations': [('CSR.L', 'None', 'CumSum_', 'T+S+R'), ('CSR.L', 'None', 'Diff_', 'T+S+R'), ('CSR.L', 'None', 'RelDiff_', 'T+S+R'), ('CSR.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CSR.L', 'Model': '_CSR.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.026, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'CSR.L', 'Model': '_CSR.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CSR.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.212, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'CSR.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.246, ('FINALIZE_TRAINING', {'Signals': ['CSR.L'], 'Transformations': [('CSR.L', [('CSR.L', 'None', 'CumSum_', 'T+S+R'), ('CSR.L', 'None', 'Diff_', 'T+S+R'), ('CSR.L', 'None', 'RelDiff_', 'T+S+R'), ('CSR.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2014-10-07T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='CSR.L' Length=1049  Min=154.1 Max=898.5  Mean=515.0966634890372 StdDev=237.1710824352142
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_CSR.L' Min=0.0 Max=1.0  Mean=0.4849498434833919 StdDev=0.318607042497601
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_CSR.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_CSR.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_CSR.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_CSR.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0164 MAPE_Forecast=0.0043 MAPE_Test=0.0002
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0166 SMAPE_Forecast=0.0044 SMAPE_Test=0.0002
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9988 MASE_Forecast=0.9999 MASE_Test=0.8571
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=53.46075301699627 CRPS_Forecast=6.5527027113237635 CRPS_Test=0.17857142857142858
INFO:pyaf.std:MODEL_L1 L1_Fit=6.780432172869148 L1_Forecast=3.550239234449761 L1_Test=0.21428571428571427
INFO:pyaf.std:MODEL_L2 L2_Fit=12.38603800959088 L2_Forecast=14.547973765093765 L2_Test=0.32732683535398854
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.6118999268715816 LnQ_Forecast=0.07818299423281827 LnQ_Test=9.30573600139065e-07
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=4.399999999999977 MedAE_Forecast=1.5 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.17356260075228375
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _CSR.L_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0    None         _CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
1    None         _CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
2    None   CumSum_CSR.L             T+S+R  ...  0.0170       0.0043   0.0002
3    None     Diff_CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
4    None     Diff_CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
..    ...            ...               ...  ...     ...          ...      ...
211  None  RelDiff_CSR.L             T+S+R  ...  2.8672      15.4449  24.5668
212  None  RelDiff_CSR.L             T+S+R  ...  2.8672      15.4449  24.5668
213  None  RelDiff_CSR.L             T+S+R  ...  2.9507      19.4782  33.4312
214  None  RelDiff_CSR.L             T+S+R  ...  4.3976      26.4475  44.1280
215  None  RelDiff_CSR.L             T+S+R  ...  4.3976      26.4475  44.1280

[216 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
1  None         _CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
2  None   CumSum_CSR.L             T+S+R  ...  0.0170       0.0043   0.0002
3  None     Diff_CSR.L             T+S+R  ...  0.0164       0.0043   0.0002
4  None     Diff_CSR.L             T+S+R  ...  0.0164       0.0043   0.0002

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['CSR.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.147, ('FORECASTING', {'Signals': ['CSR.L'], 'Horizon': 7}))
7 0    899.5
1    898.5
2    899.0
3    899.0
4    899.5
5    899.5
6    899.5
Name: CSR.L, dtype: float64
7 0    898.5
1    898.5
2    898.5
3    898.5
4    898.5
5    898.5
6    898.5
Name: CSR.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_CSR.L CSR.L [899.5, 898.5, 899.0, 899.0, 899.5, 899.5, 899.5]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_CSR.L CSR.L [898.5, 898.5, 898.5, 898.5, 898.5, 898.5, 898.5]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_CSR.L CSR.L 1049 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_CSR.L CSR.L 11.761997699737549
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_CSR.L CSR.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_CSR.L CSR.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_CSR.L CSR.L 0.0008 0.0008 2.1429
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_CSR.L CSR.L 0.7142857142857143 0.8017837257372732 -3.846153845631952
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftseall_CSR.L_7'
