BENCH_DATA YAHOO_STOCKS_ftseall
TIME :  Date N= 1295 H= 7 HEAD= ['2011-07-28T00:00:00.000000000' '2011-07-29T00:00:00.000000000'
 '2011-08-01T00:00:00.000000000' '2011-08-02T00:00:00.000000000'
 '2011-08-03T00:00:00.000000000'] TAIL= ['2016-07-13T00:00:00.000000000' '2016-07-14T00:00:00.000000000'
 '2016-07-15T00:00:00.000000000' '2016-07-18T00:00:00.000000000'
 '2016-07-19T00:00:00.000000000']
SIGNAL :  MGNS.L N= 1295 H= 7 HEAD= [666.   660.   666.75 650.   630.  ] TAIL= [587.  586.  585.5 578.  576.5]
   MGNS.L       Date
0  666.00 2011-07-28
1  660.00 2011-07-29
2  666.75 2011-08-01
3  650.00 2011-08-02
4  630.00 2011-08-03
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1295 entries, 0 to 1294
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype         
---  ------  --------------  -----         
 0   MGNS.L  1295 non-null   float64       
 1   Date    1295 non-null   datetime64[ns]
dtypes: datetime64[ns](1), float64(1)
memory usage: 30.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['MGNS.L'], 'Transformations': [('MGNS.L', 'None', '_', 'T+S+R'), ('MGNS.L', 'None', 'Diff_', 'T+S+R'), ('MGNS.L', 'None', 'RelDiff_', 'T+S+R'), ('MGNS.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': '_MGNS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.393, ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': '_MGNS.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': 'Diff_MGNS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.795, ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': 'Diff_MGNS.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': 'RelDiff_MGNS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.172, ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': 'RelDiff_MGNS.L'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': 'CumSum_MGNS.L'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.797, ('TRAINING', {'Signal': 'MGNS.L', 'Transformation': 'CumSum_MGNS.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 12.159, ('SIGNAL_TRAINING', {'Signals': ['MGNS.L'], 'Transformations': [('MGNS.L', 'None', '_', 'T+S+R'), ('MGNS.L', 'None', 'Diff_', 'T+S+R'), ('MGNS.L', 'None', 'RelDiff_', 'T+S+R'), ('MGNS.L', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['MGNS.L'], 'Transformations': [('MGNS.L', [('MGNS.L', 'None', 'CumSum_', 'T+S+R'), ('MGNS.L', 'None', 'Diff_', 'T+S+R'), ('MGNS.L', 'None', 'RelDiff_', 'T+S+R'), ('MGNS.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'MGNS.L', 'Transformations': [('MGNS.L', 'None', 'CumSum_', 'T+S+R'), ('MGNS.L', 'None', 'Diff_', 'T+S+R'), ('MGNS.L', 'None', 'RelDiff_', 'T+S+R'), ('MGNS.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'MGNS.L', 'Transformations': [('MGNS.L', 'None', 'CumSum_', 'T+S+R'), ('MGNS.L', 'None', 'Diff_', 'T+S+R'), ('MGNS.L', 'None', 'RelDiff_', 'T+S+R'), ('MGNS.L', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MGNS.L', 'Model': '_MGNS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.027, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'MGNS.L', 'Model': '_MGNS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MGNS.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.184, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'MGNS.L'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.218, ('FINALIZE_TRAINING', {'Signals': ['MGNS.L'], 'Transformations': [('MGNS.L', [('MGNS.L', 'None', 'CumSum_', 'T+S+R'), ('MGNS.L', 'None', 'Diff_', 'T+S+R'), ('MGNS.L', 'None', 'RelDiff_', 'T+S+R'), ('MGNS.L', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=2011-07-28T00:00:00.000000 TimeMax=2015-07-09T00:00:00.000000 TimeDelta=<DateOffset: days=1> Horizon=7
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='MGNS.L' Length=1295  Min=508.0 Max=870.5  Mean=697.9673745173745 StdDev=97.44172670643489
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_MGNS.L' Min=0.0 Max=1.0  Mean=0.5240479297031018 StdDev=0.2688047633280965
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_MGNS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_MGNS.L_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_MGNS.L_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_MGNS.L_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0122 MAPE_Forecast=0.011 MAPE_Test=0.0068
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0122 SMAPE_Forecast=0.0109 SMAPE_Test=0.0068
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.999 MASE_Forecast=1.0018 MASE_Test=1.0476
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=29.997015840572306 CRPS_Forecast=12.316958960328318 CRPS_Test=2.5357142857142856
INFO:pyaf.std:MODEL_L1 L1_Fit=8.209223300970875 L1_Forecast=8.199612403100776 L1_Test=3.9285714285714284
INFO:pyaf.std:MODEL_L2 L2_Fit=12.065904180347214 L2_Forecast=12.372175897315255 L2_Test=4.917171079855919
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3265175970370676 LnQ_Forecast=0.0766240688343895 LnQ_Test=0.0005039801992966946
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=5.5 MedAE_Forecast=5.5 MedAE_Test=3.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.43586206896551727
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _MGNS.L_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
    Split  Transformation  ...  ForecastMAPE      TestMAPE
0    None         _MGNS.L  ...  1.100000e-02  6.800000e-03
1    None         _MGNS.L  ...  1.100000e-02  6.800000e-03
2    None   CumSum_MGNS.L  ...  1.100000e-02  6.800000e-03
3    None     Diff_MGNS.L  ...  1.100000e-02  6.800000e-03
4    None     Diff_MGNS.L  ...  1.100000e-02  6.800000e-03
..    ...             ...  ...           ...           ...
219  None  RelDiff_MGNS.L  ...  2.076186e+07  2.716616e+07
220  None  RelDiff_MGNS.L  ...  2.076186e+07  2.716616e+07
221  None  RelDiff_MGNS.L  ...  2.076186e+07  2.716616e+07
222  None  RelDiff_MGNS.L  ...  2.076186e+07  2.716616e+07
223  None  RelDiff_MGNS.L  ...  2.076186e+07  2.716616e+07

[224 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _MGNS.L             T+S+R  ...  0.0122        0.011   0.0068
1  None        _MGNS.L             T+S+R  ...  0.0122        0.011   0.0068
2  None  CumSum_MGNS.L             T+S+R  ...  0.0124        0.011   0.0068
3  None    Diff_MGNS.L             T+S+R  ...  0.0122        0.011   0.0068
4  None    Diff_MGNS.L             T+S+R  ...  0.0122        0.011   0.0068

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['MGNS.L'], 'Horizon': 7}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.174, ('FORECASTING', {'Signals': ['MGNS.L'], 'Horizon': 7}))
7 0    578.0
1    584.5
2    560.0
3    576.0
4    571.5
5    570.0
6    573.5
Name: MGNS.L, dtype: float64
7 0    576.5
1    576.5
2    576.5
3    576.5
4    576.5
5    576.5
6    576.5
Name: MGNS.L_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL Yahoo_Stock_Price_MGNS.L MGNS.L [578.0, 584.5, 560.0, 576.0, 571.5, 570.0, 573.5]
FORECAST_DETAIL_PREDICTED Yahoo_Stock_Price_MGNS.L MGNS.L [576.5, 576.5, 576.5, 576.5, 576.5, 576.5, 576.5]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON Yahoo_Stock_Price_MGNS.L MGNS.L 1295 7
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ Yahoo_Stock_Price_MGNS.L MGNS.L 12.657328844070435
BENCHMARK_PERF_DETAIL_BEST_MODEL Yahoo_Stock_Price_MGNS.L MGNS.L Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT Yahoo_Stock_Price_MGNS.L MGNS.L 7
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE Yahoo_Stock_Price_MGNS.L MGNS.L 0.0103 0.0102 0.622
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 Yahoo_Stock_Price_MGNS.L MGNS.L 5.857142857142857 7.699721701835352 -0.19991738950812055
BENCHMARK_SUCCESS 'YAHOO_STOCKS_ftseall_MGNS.L_7'
