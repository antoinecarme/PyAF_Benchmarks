BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 156 H= 26 HEAD= [0 1 2 3 4] TAIL= [151 152 153 154 155]
SIGNAL :  B&IND0512 N= 156 H= 26 HEAD= [190. 227. 211. 225. 235.] TAIL= [71. 78. 71. 67. 63.]
   B&IND0512  Date
0      190.0     0
1      227.0     1
2      211.0     2
3      225.0     3
4      235.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 156 entries, 0 to 155
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0512  156 non-null    float64
 1   Date       156 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.7 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0512'], 'Transformations': [('B&IND0512', 'None', '_', 'T+S+R'), ('B&IND0512', 'None', 'Diff_', 'T+S+R'), ('B&IND0512', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0512', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': '_B&IND0512'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.198, ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': '_B&IND0512'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': 'Diff_B&IND0512'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.691, ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': 'Diff_B&IND0512'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': 'RelDiff_B&IND0512'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.602, ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': 'RelDiff_B&IND0512'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': 'CumSum_B&IND0512'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.502, ('TRAINING', {'Signal': 'B&IND0512', 'Transformation': 'CumSum_B&IND0512'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.996, ('SIGNAL_TRAINING', {'Signals': ['B&IND0512'], 'Transformations': [('B&IND0512', 'None', '_', 'T+S+R'), ('B&IND0512', 'None', 'Diff_', 'T+S+R'), ('B&IND0512', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0512', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0512'], 'Transformations': [('B&IND0512', [('B&IND0512', 'None', 'CumSum_', 'T+S+R'), ('B&IND0512', 'None', 'Diff_', 'T+S+R'), ('B&IND0512', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0512', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0512', 'Transformations': [('B&IND0512', 'None', 'CumSum_', 'T+S+R'), ('B&IND0512', 'None', 'Diff_', 'T+S+R'), ('B&IND0512', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0512', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'B&IND0512', 'Transformations': [('B&IND0512', 'None', 'CumSum_', 'T+S+R'), ('B&IND0512', 'None', 'Diff_', 'T+S+R'), ('B&IND0512', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0512', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0512', 'Model': '_B&IND0512_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0512', 'Model': '_B&IND0512_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0512'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.52, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0512'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.547, ('FINALIZE_TRAINING', {'Signals': ['B&IND0512'], 'Transformations': [('B&IND0512', [('B&IND0512', 'None', 'CumSum_', 'T+S+R'), ('B&IND0512', 'None', 'Diff_', 'T+S+R'), ('B&IND0512', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0512', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0512' Length=156  Min=38.0 Max=367.0  Mean=119.42948717948718 StdDev=60.118804620249946
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0512' Min=0.0 Max=1.0  Mean=0.24750604005923138 StdDev=0.18273192893692994
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0512_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0512_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0512_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0512_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2676 MAPE_Forecast=0.1313 MAPE_Test=0.2236
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2094 SMAPE_Forecast=0.1345 SMAPE_Test=0.2102
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9904 MASE_Forecast=0.9944 MASE_Test=0.9731
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=19.851495726495727 CRPS_Forecast=3.85 CRPS_Test=6.1269230769230765
INFO:pyaf.std:MODEL_L1 L1_Fit=28.48076923076923 L1_Forecast=11.653846153846153 L1_Test=19.46153846153846
INFO:pyaf.std:MODEL_L2 L2_Fit=51.12672791889099 L2_Forecast=16.29181011806475 L2_Test=33.31319904736306
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=14.396163306539755 LnQ_Forecast=1.0247412409633099 LnQ_Test=2.6713105885041846
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=14.5 MedAE_Forecast=8.0 MedAE_Test=8.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.46200607902735563
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0512_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None         _B&IND0512  ...  1.313000e-01  2.236000e-01
1   None         _B&IND0512  ...  1.313000e-01  2.236000e-01
2   None   CumSum_B&IND0512  ...  1.313000e-01  2.236000e-01
3   None     Diff_B&IND0512  ...  1.313000e-01  2.236000e-01
4   None     Diff_B&IND0512  ...  1.313000e-01  2.236000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0512  ...  5.852259e+07  2.793380e+01
60  None  RelDiff_B&IND0512  ...  1.738978e+08  2.048265e+08
61  None  RelDiff_B&IND0512  ...  1.738978e+08  2.048265e+08
62  None  RelDiff_B&IND0512  ...  1.738978e+08  2.048265e+08
63  None  RelDiff_B&IND0512  ...  1.738978e+08  2.048265e+08

[64 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _B&IND0512             T+S+R  ...  0.2676       0.1313   0.2236
1  None        _B&IND0512             T+S+R  ...  0.2676       0.1313   0.2236
2  None  CumSum_B&IND0512             T+S+R  ...  0.2741       0.1313   0.2236
3  None    Diff_B&IND0512             T+S+R  ...  0.2676       0.1313   0.2236
4  None    Diff_B&IND0512             T+S+R  ...  0.2676       0.1313   0.2236

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0512'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.392, ('FORECASTING', {'Signals': ['B&IND0512'], 'Horizon': 26}))
26 0     64.0
1     66.0
2     56.0
3     71.0
4     72.0
5     58.0
6     74.0
7     67.0
8     58.0
9     63.0
10    74.0
11    65.0
12    65.0
13    61.0
14    73.0
15    59.0
16    78.0
17    47.0
18    67.0
19    62.0
20    64.0
21    64.0
22    65.0
23    63.0
24    67.0
25    67.0
Name: B&IND0512, dtype: float64
26 0     63.0
1     63.0
2     63.0
3     63.0
4     63.0
5     63.0
6     63.0
7     63.0
8     63.0
9     63.0
10    63.0
11    63.0
12    63.0
13    63.0
14    63.0
15    63.0
16    63.0
17    63.0
18    63.0
19    63.0
20    63.0
21    63.0
22    63.0
23    63.0
24    63.0
25    63.0
Name: B&IND0512_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0512 B&IND0512 [64.0, 66.0, 56.0, 71.0, 72.0, 58.0, 74.0, 67.0, 58.0, 63.0, 74.0, 65.0, 65.0, 61.0, 73.0, 59.0, 78.0, 47.0, 67.0, 62.0, 64.0, 64.0, 65.0, 63.0, 67.0, 67.0]
FORECAST_DETAIL_PREDICTED B&IND0512 B&IND0512 [63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0, 63.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0512 B&IND0512 156 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0512 B&IND0512 4.038411855697632
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0512 B&IND0512 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0512 B&IND0512 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0512 B&IND0512 0.0785 0.079 0.5959
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0512 B&IND0512 5.076923076923077 6.72538245981366 -0.09701492537303191
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0512_26'
