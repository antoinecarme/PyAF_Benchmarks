BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0203 N= 104 H= 26 HEAD= [60727. 57990. 54010. 54480. 56400.] TAIL= [39040. 45431. 47205. 55014. 48270.]
   B&IND0203  Date
0    60727.0     0
1    57990.0     1
2    54010.0     2
3    54480.0     3
4    56400.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0203  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0203'], 'Transformations': [('B&IND0203', 'None', '_', 'T+S+R'), ('B&IND0203', 'None', 'Diff_', 'T+S+R'), ('B&IND0203', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0203', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': '_B&IND0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.963, ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': '_B&IND0203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': 'Diff_B&IND0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.761, ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': 'Diff_B&IND0203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': 'RelDiff_B&IND0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.692, ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': 'RelDiff_B&IND0203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': 'CumSum_B&IND0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.478, ('TRAINING', {'Signal': 'B&IND0203', 'Transformation': 'CumSum_B&IND0203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.897, ('SIGNAL_TRAINING', {'Signals': ['B&IND0203'], 'Transformations': [('B&IND0203', 'None', '_', 'T+S+R'), ('B&IND0203', 'None', 'Diff_', 'T+S+R'), ('B&IND0203', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0203', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0203'], 'Transformations': [('B&IND0203', [('B&IND0203', 'None', 'CumSum_', 'T+S+R'), ('B&IND0203', 'None', 'Diff_', 'T+S+R'), ('B&IND0203', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0203', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0203', 'Transformations': [('B&IND0203', 'None', 'CumSum_', 'T+S+R'), ('B&IND0203', 'None', 'Diff_', 'T+S+R'), ('B&IND0203', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0203', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'B&IND0203', 'Transformations': [('B&IND0203', 'None', 'CumSum_', 'T+S+R'), ('B&IND0203', 'None', 'Diff_', 'T+S+R'), ('B&IND0203', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0203', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0203', 'Model': '_B&IND0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0203', 'Model': '_B&IND0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.556, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.584, ('FINALIZE_TRAINING', {'Signals': ['B&IND0203'], 'Transformations': [('B&IND0203', [('B&IND0203', 'None', 'CumSum_', 'T+S+R'), ('B&IND0203', 'None', 'Diff_', 'T+S+R'), ('B&IND0203', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0203', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0203' Length=104  Min=29670.0 Max=83190.0  Mean=48650.653846153844 StdDev=12689.818048772278
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0203' Min=0.0 Max=1.0  Mean=0.35464599862021373 StdDev=0.23710422363176914
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0203_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0203_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1084 MAPE_Forecast=0.1084 MAPE_Test=0.1084
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1063 SMAPE_Forecast=0.1063 SMAPE_Test=0.1063
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9904 MASE_Forecast=0.9904 MASE_Test=0.9904
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3830.0559829059825 CRPS_Forecast=3830.0559829059825 CRPS_Test=3830.0559829059825
INFO:pyaf.std:MODEL_L1 L1_Fit=5175.336538461538 L1_Forecast=5175.336538461538 L1_Test=5175.336538461538
INFO:pyaf.std:MODEL_L2 L2_Fit=7822.163044959053 L2_Forecast=7822.163044959053 L2_Test=7822.163044959053
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.377311327332892 LnQ_Forecast=2.377311327332892 LnQ_Test=2.377311327332892
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3575.0 MedAE_Forecast=3575.0 MedAE_Test=3575.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.5802877428998505
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0203_Lag1Trend_residue_bestCycle_byMAPE None -0.0028961136023916423 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None         _B&IND0203  ...  9.860000e-02  9.860000e-02
1   None         _B&IND0203  ...  9.860000e-02  9.860000e-02
2   None         _B&IND0203  ...  9.910000e-02  9.910000e-02
3   None         _B&IND0203  ...  9.910000e-02  9.910000e-02
4   None         _B&IND0203  ...  1.000000e-01  1.000000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0203  ...  4.079229e+07  4.079229e+07
60  None  RelDiff_B&IND0203  ...  5.061144e+07  5.061144e+07
61  None  RelDiff_B&IND0203  ...  5.061144e+07  5.061144e+07
62  None  RelDiff_B&IND0203  ...  5.075478e+07  5.075478e+07
63  None  RelDiff_B&IND0203  ...  5.075478e+07  5.075478e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     _B&IND0203             T+S+R  ...  0.0986       0.0986   0.0986
1  None     _B&IND0203             T+S+R  ...  0.0986       0.0986   0.0986
2  None     _B&IND0203             T+S+R  ...  0.0991       0.0991   0.0991
3  None     _B&IND0203             T+S+R  ...  0.0991       0.0991   0.0991
4  None     _B&IND0203             T+S+R  ...  0.1000       0.1000   0.1000

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0203'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.389, ('FORECASTING', {'Signals': ['B&IND0203'], 'Horizon': 26}))
26 0     31943.0
1     35800.0
2     33530.0
3     27970.0
4     38500.0
5     36380.0
6     32830.0
7     34950.0
8     36410.0
9     35610.0
10    33680.0
11    36390.0
12    31540.0
13    35080.0
14    34073.0
15    36557.0
16    35860.0
17    33660.0
18    35120.0
19    33040.0
20    31400.0
21    34010.0
22    30500.0
23    32360.0
24    29814.0
25    33718.0
Name: B&IND0203, dtype: float64
26 0     48270.0
1     48270.0
2     48270.0
3     48270.0
4     48270.0
5     48270.0
6     48270.0
7     48270.0
8     48270.0
9     48270.0
10    48270.0
11    48270.0
12    48270.0
13    48270.0
14    48270.0
15    48270.0
16    48270.0
17    48270.0
18    48270.0
19    48270.0
20    48270.0
21    48270.0
22    48270.0
23    48270.0
24    48270.0
25    48270.0
Name: B&IND0203_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0203 B&IND0203 [31943.0, 35800.0, 33530.0, 27970.0, 38500.0, 36380.0, 32830.0, 34950.0, 36410.0, 35610.0, 33680.0, 36390.0, 31540.0, 35080.0, 34073.0, 36557.0, 35860.0, 33660.0, 35120.0, 33040.0, 31400.0, 34010.0, 30500.0, 32360.0, 29814.0, 33718.0]
FORECAST_DETAIL_PREDICTED B&IND0203 B&IND0203 [48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0, 48270.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0203 B&IND0203 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0203 B&IND0203 3.9631073474884033
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0203 B&IND0203 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0203 B&IND0203 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0203 B&IND0203 0.4322 0.3525 5.048
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0203 B&IND0203 14395.961538461539 14588.182845398162 -37.19797902128489
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0203_26'
