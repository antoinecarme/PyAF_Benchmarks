BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0009 N= 104 H= 26 HEAD= [3696. 2861. 3010. 3274. 3302.] TAIL= [2333. 2395. 2467. 3979. 3379.]
   B&IND0009  Date
0     3696.0     0
1     2861.0     1
2     3010.0     2
3     3274.0     3
4     3302.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0009  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0009'], 'Transformations': [('B&IND0009', 'None', '_', 'T+S+R'), ('B&IND0009', 'None', 'Diff_', 'T+S+R'), ('B&IND0009', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': '_B&IND0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.172, ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': '_B&IND0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': 'Diff_B&IND0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.51, ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': 'Diff_B&IND0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': 'RelDiff_B&IND0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.594, ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': 'RelDiff_B&IND0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': 'CumSum_B&IND0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.474, ('TRAINING', {'Signal': 'B&IND0009', 'Transformation': 'CumSum_B&IND0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.751, ('SIGNAL_TRAINING', {'Signals': ['B&IND0009'], 'Transformations': [('B&IND0009', 'None', '_', 'T+S+R'), ('B&IND0009', 'None', 'Diff_', 'T+S+R'), ('B&IND0009', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0009'], 'Transformations': [('B&IND0009', [('B&IND0009', 'None', 'CumSum_', 'T+S+R'), ('B&IND0009', 'None', 'Diff_', 'T+S+R'), ('B&IND0009', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0009', 'Transformations': [('B&IND0009', 'None', 'CumSum_', 'T+S+R'), ('B&IND0009', 'None', 'Diff_', 'T+S+R'), ('B&IND0009', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'B&IND0009', 'Transformations': [('B&IND0009', 'None', 'CumSum_', 'T+S+R'), ('B&IND0009', 'None', 'Diff_', 'T+S+R'), ('B&IND0009', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0009', 'Model': '_B&IND0009_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0009', 'Model': '_B&IND0009_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.549, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.577, ('FINALIZE_TRAINING', {'Signals': ['B&IND0009'], 'Transformations': [('B&IND0009', [('B&IND0009', 'None', 'CumSum_', 'T+S+R'), ('B&IND0009', 'None', 'Diff_', 'T+S+R'), ('B&IND0009', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0009' Length=104  Min=2328.0 Max=4387.0  Mean=2952.076923076923 StdDev=331.300052598956
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0009' Min=0.0 Max=1.0  Mean=0.30309709717189076 StdDev=0.16090337668720542
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0009_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0009_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0009_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0009_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0726 MAPE_Forecast=0.0726 MAPE_Test=0.0726
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0725 SMAPE_Forecast=0.0725 SMAPE_Test=0.0725
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9904 MASE_Forecast=0.9904 MASE_Test=0.9904
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=98.74752136752136 CRPS_Forecast=98.74752136752136 CRPS_Test=98.74752136752136
INFO:pyaf.std:MODEL_L1 L1_Fit=220.20192307692307 L1_Forecast=220.20192307692307 L1_Test=220.20192307692307
INFO:pyaf.std:MODEL_L2 L2_Fit=346.5417474018212 L2_Forecast=346.5417474018212 L2_Test=346.5417474018212
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.2386481336488848 LnQ_Forecast=1.2386481336488848 LnQ_Test=1.2386481336488848
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=148.5 MedAE_Forecast=148.5 MedAE_Test=148.5
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.6644001942690626
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _B&IND0009_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None         _B&IND0009  ...  6.400000e-02  6.400000e-02
1   None         _B&IND0009  ...  6.400000e-02  6.400000e-02
2   None         _B&IND0009  ...  6.510000e-02  6.510000e-02
3   None         _B&IND0009  ...  6.510000e-02  6.510000e-02
4   None         _B&IND0009  ...  6.510000e-02  6.510000e-02
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0009  ...  1.637037e+07  1.637037e+07
60  None  RelDiff_B&IND0009  ...  1.715459e+07  1.715459e+07
61  None  RelDiff_B&IND0009  ...  1.715459e+07  1.715459e+07
62  None  RelDiff_B&IND0009  ...  2.396834e+07  2.396834e+07
63  None  RelDiff_B&IND0009  ...  2.396834e+07  2.396834e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     _B&IND0009             T+S+R  ...  0.0640       0.0640   0.0640
1  None     _B&IND0009             T+S+R  ...  0.0640       0.0640   0.0640
2  None     _B&IND0009             T+S+R  ...  0.0651       0.0651   0.0651
3  None     _B&IND0009             T+S+R  ...  0.0651       0.0651   0.0651
4  None     _B&IND0009             T+S+R  ...  0.0651       0.0651   0.0651

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0009'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.408, ('FORECASTING', {'Signals': ['B&IND0009'], 'Horizon': 26}))
26 0     2846.0
1     2525.0
2     2304.0
3     2347.0
4     2568.0
5     2659.0
6     2765.0
7     2846.0
8     3082.0
9     3245.0
10    2957.0
11    3149.0
12    3259.0
13    2870.0
14    2961.0
15    3047.0
16    3101.0
17    3245.0
18    2986.0
19    3240.0
20    3104.0
21    3104.0
22    2874.0
23    3018.0
24    3130.0
25    3014.0
Name: B&IND0009, dtype: float64
26 0     3379.0
1     3379.0
2     3379.0
3     3379.0
4     3379.0
5     3379.0
6     3379.0
7     3379.0
8     3379.0
9     3379.0
10    3379.0
11    3379.0
12    3379.0
13    3379.0
14    3379.0
15    3379.0
16    3379.0
17    3379.0
18    3379.0
19    3379.0
20    3379.0
21    3379.0
22    3379.0
23    3379.0
24    3379.0
25    3379.0
Name: B&IND0009_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0009 B&IND0009 [2846.0, 2525.0, 2304.0, 2347.0, 2568.0, 2659.0, 2765.0, 2846.0, 3082.0, 3245.0, 2957.0, 3149.0, 3259.0, 2870.0, 2961.0, 3047.0, 3101.0, 3245.0, 2986.0, 3240.0, 3104.0, 3104.0, 2874.0, 3018.0, 3130.0, 3014.0]
FORECAST_DETAIL_PREDICTED B&IND0009 B&IND0009 [3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0, 3379.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0009 B&IND0009 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0009 B&IND0009 3.8229520320892334
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0009 B&IND0009 Lag1Trend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0009 B&IND0009 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0009 B&IND0009 0.1625 0.1453 2.7303
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0009 B&IND0009 446.46153846153845 517.6749054110193 -2.903140698201628
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0009_26'
