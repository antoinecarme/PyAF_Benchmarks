BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0601 N= 104 H= 26 HEAD= [1995. 2070. 2396. 3195.  357.] TAIL= [4286. 4648. 4851. 3893. 2779.]
   B&IND0601  Date
0     1995.0     0
1     2070.0     1
2     2396.0     2
3     3195.0     3
4      357.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0601  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0601'], 'Transformations': [('B&IND0601', 'None', '_', 'T+S+R'), ('B&IND0601', 'None', 'Diff_', 'T+S+R'), ('B&IND0601', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0601', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': '_B&IND0601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.32, ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': '_B&IND0601'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': 'Diff_B&IND0601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.5, ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': 'Diff_B&IND0601'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': 'RelDiff_B&IND0601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.578, ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': 'RelDiff_B&IND0601'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': 'CumSum_B&IND0601'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.46, ('TRAINING', {'Signal': 'B&IND0601', 'Transformation': 'CumSum_B&IND0601'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.859, ('SIGNAL_TRAINING', {'Signals': ['B&IND0601'], 'Transformations': [('B&IND0601', 'None', '_', 'T+S+R'), ('B&IND0601', 'None', 'Diff_', 'T+S+R'), ('B&IND0601', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0601', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0601'], 'Transformations': [('B&IND0601', [('B&IND0601', 'None', 'CumSum_', 'T+S+R'), ('B&IND0601', 'None', 'Diff_', 'T+S+R'), ('B&IND0601', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0601', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0601', 'Transformations': [('B&IND0601', 'None', 'CumSum_', 'T+S+R'), ('B&IND0601', 'None', 'Diff_', 'T+S+R'), ('B&IND0601', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0601', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'B&IND0601', 'Transformations': [('B&IND0601', 'None', 'CumSum_', 'T+S+R'), ('B&IND0601', 'None', 'Diff_', 'T+S+R'), ('B&IND0601', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0601', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0601', 'Model': '_B&IND0601_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0601', 'Model': '_B&IND0601_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0601'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.539, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0601'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.566, ('FINALIZE_TRAINING', {'Signals': ['B&IND0601'], 'Transformations': [('B&IND0601', [('B&IND0601', 'None', 'CumSum_', 'T+S+R'), ('B&IND0601', 'None', 'Diff_', 'T+S+R'), ('B&IND0601', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0601', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0601' Length=104  Min=312.0 Max=7381.0  Mean=3891.144230769231 StdDev=1541.277476006069
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0601' Min=0.0 Max=1.0  Mean=0.5063154945210397 StdDev=0.21803331107738994
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0601_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0601_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0601_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0601_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.5729 MAPE_Forecast=0.5729 MAPE_Test=0.5729
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2714 SMAPE_Forecast=0.2714 SMAPE_Test=0.2714
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9904 MASE_Forecast=0.9904 MASE_Test=0.9904
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=465.1269871794871 CRPS_Forecast=465.1269871794871 CRPS_Test=465.1269871794871
INFO:pyaf.std:MODEL_L1 L1_Fit=809.7115384615385 L1_Forecast=809.7115384615385 L1_Test=809.7115384615385
INFO:pyaf.std:MODEL_L2 L2_Fit=1491.081557641453 L2_Forecast=1491.081557641453 L2_Test=1491.081557641453
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=57.78441466771642 LnQ_Forecast=57.78441466771642 LnQ_Test=57.78441466771642
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=277.0 MedAE_Forecast=277.0 MedAE_Test=277.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.23808176545480267
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0601_Lag1Trend_residue_bestCycle_byMAPE None 0.0026877917668693962 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None         _B&IND0601  ...  5.633000e-01  5.633000e-01
1   None         _B&IND0601  ...  5.633000e-01  5.633000e-01
2   None   CumSum_B&IND0601  ...  5.709000e-01  5.709000e-01
3   None   CumSum_B&IND0601  ...  5.709000e-01  5.709000e-01
4   None         _B&IND0601  ...  5.729000e-01  5.729000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0601  ...  5.467651e+07  5.467651e+07
60  None  RelDiff_B&IND0601  ...  5.606778e+07  5.606778e+07
61  None  RelDiff_B&IND0601  ...  5.682903e+07  5.682903e+07
62  None  RelDiff_B&IND0601  ...  5.682903e+07  5.682903e+07
63  None  RelDiff_B&IND0601  ...  5.785535e+07  5.785535e+07

[64 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _B&IND0601             T+S+R  ...  0.5633       0.5633   0.5633
1  None        _B&IND0601             T+S+R  ...  0.5633       0.5633   0.5633
2  None  CumSum_B&IND0601             T+S+R  ...  0.5709       0.5709   0.5709
3  None  CumSum_B&IND0601             T+S+R  ...  0.5709       0.5709   0.5709
4  None        _B&IND0601             T+S+R  ...  0.5729       0.5729   0.5729

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0601'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.384, ('FORECASTING', {'Signals': ['B&IND0601'], 'Horizon': 26}))
26 0     5179.0
1     4890.0
2     5180.0
3     6280.0
4     5713.0
5     5795.0
6     5751.0
7     5715.0
8     5669.0
9     5728.0
10    5042.0
11    5679.0
12    5883.0
13    6046.0
14    5972.0
15    6246.0
16    6039.0
17    4937.0
18    5184.0
19    5318.0
20    6119.0
21    5889.0
22    6021.0
23    6041.0
24    6186.0
25    5903.0
Name: B&IND0601, dtype: float64
26 0     2779.0
1     2779.0
2     2779.0
3     2779.0
4     2779.0
5     2779.0
6     2779.0
7     2779.0
8     2779.0
9     2779.0
10    2779.0
11    2779.0
12    2779.0
13    2779.0
14    2779.0
15    2779.0
16    2779.0
17    2779.0
18    2779.0
19    2779.0
20    2779.0
21    2779.0
22    2779.0
23    2779.0
24    2779.0
25    2779.0
Name: B&IND0601_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0601 B&IND0601 [5179.0, 4890.0, 5180.0, 6280.0, 5713.0, 5795.0, 5751.0, 5715.0, 5669.0, 5728.0, 5042.0, 5679.0, 5883.0, 6046.0, 5972.0, 6246.0, 6039.0, 4937.0, 5184.0, 5318.0, 6119.0, 5889.0, 6021.0, 6041.0, 6186.0, 5903.0]
FORECAST_DETAIL_PREDICTED B&IND0601 B&IND0601 [2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0, 2779.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0601 B&IND0601 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0601 B&IND0601 3.9011354446411133
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0601 B&IND0601 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0601 B&IND0601 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0601 B&IND0601 0.5105 0.6871 9.3253
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0601 B&IND0601 2928.8846153846152 2957.129396768219 -51.599443330435996
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0601_26'
