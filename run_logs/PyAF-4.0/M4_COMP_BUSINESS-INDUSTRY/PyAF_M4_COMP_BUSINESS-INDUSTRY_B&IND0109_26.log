BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0109 N= 104 H= 26 HEAD= [4880. 5240. 5665. 5000. 5480.] TAIL= [8080. 8360. 8320. 8360. 7640.]
   B&IND0109  Date
0     4880.0     0
1     5240.0     1
2     5665.0     2
3     5000.0     3
4     5480.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0109  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0109'], 'Transformations': [('B&IND0109', 'None', '_', 'T+S+R'), ('B&IND0109', 'None', 'Diff_', 'T+S+R'), ('B&IND0109', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0109', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': '_B&IND0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.017, ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': '_B&IND0109'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': 'Diff_B&IND0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.511, ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': 'Diff_B&IND0109'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': 'RelDiff_B&IND0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.639, ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': 'RelDiff_B&IND0109'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': 'CumSum_B&IND0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.483, ('TRAINING', {'Signal': 'B&IND0109', 'Transformation': 'CumSum_B&IND0109'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.654, ('SIGNAL_TRAINING', {'Signals': ['B&IND0109'], 'Transformations': [('B&IND0109', 'None', '_', 'T+S+R'), ('B&IND0109', 'None', 'Diff_', 'T+S+R'), ('B&IND0109', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0109', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0109'], 'Transformations': [('B&IND0109', [('B&IND0109', 'None', 'CumSum_', 'T+S+R'), ('B&IND0109', 'None', 'Diff_', 'T+S+R'), ('B&IND0109', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0109', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0109', 'Transformations': [('B&IND0109', 'None', 'CumSum_', 'T+S+R'), ('B&IND0109', 'None', 'Diff_', 'T+S+R'), ('B&IND0109', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0109', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'B&IND0109', 'Transformations': [('B&IND0109', 'None', 'CumSum_', 'T+S+R'), ('B&IND0109', 'None', 'Diff_', 'T+S+R'), ('B&IND0109', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0109', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0109', 'Model': '_B&IND0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0109', 'Model': '_B&IND0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0109'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.589, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0109'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.621, ('FINALIZE_TRAINING', {'Signals': ['B&IND0109'], 'Transformations': [('B&IND0109', [('B&IND0109', 'None', 'CumSum_', 'T+S+R'), ('B&IND0109', 'None', 'Diff_', 'T+S+R'), ('B&IND0109', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0109', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0109' Length=104  Min=4680.0 Max=9400.0  Mean=6572.346153846154 StdDev=1065.2430362745213
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0109' Min=0.0 Max=1.0  Mean=0.4009207953063884 StdDev=0.22568708395646636
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [PolyTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0109_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0109_PolyTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0695 MAPE_Forecast=0.0695 MAPE_Test=0.0695
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0689 SMAPE_Forecast=0.0689 SMAPE_Test=0.0689
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8884 MASE_Forecast=0.8884 MASE_Test=0.8884
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=270.81504386464627 CRPS_Forecast=270.81504386464627 CRPS_Test=270.81504386464627
INFO:pyaf.std:MODEL_L1 L1_Fit=451.15412896905286 L1_Forecast=451.15412896905286 L1_Test=451.15412896905286
INFO:pyaf.std:MODEL_L2 L2_Fit=596.636689808716 L2_Forecast=596.636689808716 L2_Test=596.636689808716
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.8394220565770626 LnQ_Forecast=0.8394220565770626 LnQ_Test=0.8394220565770626
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=357.33710565404544 MedAE_Forecast=357.33710565404544 MedAE_Test=357.33710565404544
INFO:pyaf.std:MODEL_COMPLEXITY 3.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (0.14491643191570247, array([0.34226174, 0.19633645, 0.07570625]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0109_PolyTrend_residue_bestCycle_byMAPE None -0.002658391886200373 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None         _B&IND0109  ...  6.110000e-02  6.110000e-02
1   None         _B&IND0109  ...  6.110000e-02  6.110000e-02
2   None         _B&IND0109  ...  6.250000e-02  6.250000e-02
3   None         _B&IND0109  ...  6.250000e-02  6.250000e-02
4   None         _B&IND0109  ...  6.280000e-02  6.280000e-02
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0109  ...  9.448743e+05  9.448743e+05
60  None  RelDiff_B&IND0109  ...  1.550176e+06  1.550176e+06
61  None  RelDiff_B&IND0109  ...  1.550176e+06  1.550176e+06
62  None  RelDiff_B&IND0109  ...  1.570701e+06  1.570701e+06
63  None  RelDiff_B&IND0109  ...  1.570701e+06  1.570701e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     _B&IND0109             T+S+R  ...  0.0611       0.0611   0.0611
1  None     _B&IND0109             T+S+R  ...  0.0611       0.0611   0.0611
2  None     _B&IND0109             T+S+R  ...  0.0625       0.0625   0.0625
3  None     _B&IND0109             T+S+R  ...  0.0625       0.0625   0.0625
4  None     _B&IND0109             T+S+R  ...  0.0628       0.0628   0.0628

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0109'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.437, ('FORECASTING', {'Signals': ['B&IND0109'], 'Horizon': 26}))
26 0      8800.0
1      8560.0
2      8560.0
3      7960.0
4      9480.0
5      8490.0
6      9106.0
7      8758.0
8     10251.0
9     10233.0
10     9952.0
11     9766.0
12     8821.0
13    11040.0
14    10156.0
15    10159.0
16     9480.0
17     9640.0
18    10280.0
19     9480.0
20     9640.0
21     9760.0
22     9400.0
23     9120.0
24     9280.0
25     9560.0
Name: B&IND0109, dtype: float64
26 0     8307.797538
1     8352.451349
2     8397.485879
3     8442.903090
4     8488.704944
5     8534.893403
6     8581.470429
7     8628.437985
8     8675.798032
9     8723.552533
10    8771.703449
11    8820.252743
12    8869.202376
13    8918.554312
14    8968.310511
15    9018.472935
16    9069.043548
17    9120.024311
18    9171.417186
19    9223.224135
20    9275.447120
21    9328.088103
22    9381.149047
23    9434.631913
24    9488.538663
25    9542.871260
Name: B&IND0109_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0109 B&IND0109 [8800.0, 8560.0, 8560.0, 7960.0, 9480.0, 8490.0, 9106.0, 8758.0, 10251.0, 10233.0, 9952.0, 9766.0, 8821.0, 11040.0, 10156.0, 10159.0, 9480.0, 9640.0, 10280.0, 9480.0, 9640.0, 9760.0, 9400.0, 9120.0, 9280.0, 9560.0]
FORECAST_DETAIL_PREDICTED B&IND0109 B&IND0109 [8307.797538264656, 8352.451349012474, 8397.48587877572, 8442.903089618909, 8488.704943606554, 8534.893402803169, 8581.470429273271, 8628.437985081371, 8675.798032291983, 8723.552532969625, 8771.703449178807, 8820.252742984047, 8869.202376449855, 8918.55431164075, 8968.310510621244, 9018.472935455851, 9069.043548209083, 9120.02431094546, 9171.41718572949, 9223.224134625692, 9275.447119698576, 9328.088103012662, 9381.149046632458, 9434.631912622483, 9488.538663047248, 9542.871259971269]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0109 B&IND0109 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0109 B&IND0109 3.806795597076416
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0109 B&IND0109 PolyTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0109 B&IND0109 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0109 B&IND0109 0.0639 0.0673 1.1275
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0109 B&IND0109 630.61200371387 838.4914525131745 -0.48745758486351454
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0109_26'
