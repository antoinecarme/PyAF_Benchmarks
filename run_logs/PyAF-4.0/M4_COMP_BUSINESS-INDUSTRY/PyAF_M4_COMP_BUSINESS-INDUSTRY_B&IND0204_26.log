BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0204 N= 104 H= 26 HEAD= [11010. 13780. 11130. 10920. 10080.] TAIL= [ 19460.  19030.  11600. 107380.  36610.]
   B&IND0204  Date
0    11010.0     0
1    13780.0     1
2    11130.0     2
3    10920.0     3
4    10080.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0204  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0204'], 'Transformations': [('B&IND0204', 'None', '_', 'T+S+R'), ('B&IND0204', 'None', 'Diff_', 'T+S+R'), ('B&IND0204', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0204', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': '_B&IND0204'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.132, ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': '_B&IND0204'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': 'Diff_B&IND0204'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.627, ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': 'Diff_B&IND0204'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': 'RelDiff_B&IND0204'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.595, ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': 'RelDiff_B&IND0204'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': 'CumSum_B&IND0204'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.468, ('TRAINING', {'Signal': 'B&IND0204', 'Transformation': 'CumSum_B&IND0204'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.823, ('SIGNAL_TRAINING', {'Signals': ['B&IND0204'], 'Transformations': [('B&IND0204', 'None', '_', 'T+S+R'), ('B&IND0204', 'None', 'Diff_', 'T+S+R'), ('B&IND0204', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0204', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0204'], 'Transformations': [('B&IND0204', [('B&IND0204', 'None', 'CumSum_', 'T+S+R'), ('B&IND0204', 'None', 'Diff_', 'T+S+R'), ('B&IND0204', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0204', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0204', 'Transformations': [('B&IND0204', 'None', 'CumSum_', 'T+S+R'), ('B&IND0204', 'None', 'Diff_', 'T+S+R'), ('B&IND0204', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0204', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'B&IND0204', 'Transformations': [('B&IND0204', 'None', 'CumSum_', 'T+S+R'), ('B&IND0204', 'None', 'Diff_', 'T+S+R'), ('B&IND0204', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0204', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0204', 'Model': 'RelDiff_B&IND0204_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.03, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0204', 'Model': 'RelDiff_B&IND0204_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0204'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.723, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0204'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.759, ('FINALIZE_TRAINING', {'Signals': ['B&IND0204'], 'Transformations': [('B&IND0204', [('B&IND0204', 'None', 'CumSum_', 'T+S+R'), ('B&IND0204', 'None', 'Diff_', 'T+S+R'), ('B&IND0204', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0204', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0204' Length=104  Min=7010.0 Max=158070.0  Mean=25252.115384615383 StdDev=32015.715872565474
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='RelDiff_B&IND0204' Min=-0.99 Max=34.91525423728814  Mean=2.1034502555173855 StdDev=6.807427785467256
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'RelDiff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'RelDiff_B&IND0204_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_5 + NoAR]
INFO:pyaf.std:TREND_DETAIL 'RelDiff_B&IND0204_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'RelDiff_B&IND0204_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_5]
INFO:pyaf.std:AUTOREG_DETAIL 'RelDiff_B&IND0204_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3355 MAPE_Forecast=0.3355 MAPE_Test=0.3355
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.4483 SMAPE_Forecast=0.4483 SMAPE_Test=0.4483
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6605 MASE_Forecast=0.6605 MASE_Test=0.6605
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1561.1815009895195 CRPS_Forecast=1561.1815009895195 CRPS_Test=1561.1815009895195
INFO:pyaf.std:MODEL_L1 L1_Fit=15240.194672087535 L1_Forecast=15240.194672087535 L1_Test=15240.194672087535
INFO:pyaf.std:MODEL_L2 L2_Fit=34858.574666585744 L2_Forecast=34858.574666585744 L2_Test=34858.574666585744
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=75.11626177185738 LnQ_Forecast=75.11626177185738 LnQ_Test=75.11626177185738
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=3060.0 MedAE_Forecast=3060.0 MedAE_Test=3060.0
INFO:pyaf.std:MODEL_COMPLEXITY 6.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:REALTIVE_DIFFERENCING_TRANSFORMATION RelativeDifference 0.026479544551833708
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND RelDiff_B&IND0204_ConstantTrend 2.1034502555173855
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES RelDiff_B&IND0204_ConstantTrend_residue_bestCycle_byMAPE 5 -2.0892558899220495 {0: -2.1034502555173855, 1: -2.026102189219043, 2: -1.9655192210346268, 3: -2.0963073983745284, 4: -2.296816887587961}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None  RelDiff_B&IND0204  ...  3.333000e-01  3.333000e-01
1   None  RelDiff_B&IND0204  ...  3.355000e-01  3.355000e-01
2   None         _B&IND0204  ...  3.446000e-01  3.446000e-01
3   None         _B&IND0204  ...  3.462000e-01  3.462000e-01
4   None         _B&IND0204  ...  8.317000e-01  8.317000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0204  ...  1.823753e+07  1.823753e+07
60  None  RelDiff_B&IND0204  ...  2.244570e+07  2.244570e+07
61  None  RelDiff_B&IND0204  ...  2.244570e+07  2.244570e+07
62  None  RelDiff_B&IND0204  ...  2.293963e+07  2.293963e+07
63  None  RelDiff_B&IND0204  ...  2.547483e+07  2.547483e+07

[64 rows x 10 columns]
  Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  RelDiff_B&IND0204             T+S+R  ...  0.3333       0.3333   0.3333
1  None  RelDiff_B&IND0204             T+S+R  ...  0.3355       0.3355   0.3355
2  None         _B&IND0204             T+S+R  ...  0.3446       0.3446   0.3446
3  None         _B&IND0204             T+S+R  ...  0.3462       0.3462   0.3462
4  None         _B&IND0204             T+S+R  ...  0.8317       0.8317   0.8317

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0204'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.575, ('FORECASTING', {'Signals': ['B&IND0204'], 'Horizon': 26}))
26 0      5740.0
1      6290.0
2      7240.0
3      8180.0
4     10500.0
5     81920.0
6      4110.0
7      5900.0
8      8950.0
9      9720.0
10    21150.0
11    14440.0
12    15370.0
13    14290.0
14    12060.0
15    15390.0
16    15680.0
17    17270.0
18    16890.0
19    16210.0
20    13090.0
21    13980.0
22    13370.0
23    13280.0
24    12980.0
25    13210.0
Name: B&IND0204, dtype: float64
26 0     11050.200668
1     11050.200668
2     11050.200668
3     11513.560351
4     11545.728639
5     11050.200668
6     11050.200668
7     11050.200668
8     11495.338520
9     11527.376652
10    11050.200668
11    11050.200668
12    11050.200668
13    11477.190415
14    11509.098918
15    11050.200668
16    11050.200668
17    11050.200668
18    11459.115740
19    11490.895138
20    11050.200668
21    11050.200668
22    11050.200668
23    11441.114197
24    11472.765012
25    11050.200668
Name: B&IND0204_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0204 B&IND0204 [5740.0, 6290.0, 7240.0, 8180.0, 10500.0, 81920.0, 4110.0, 5900.0, 8950.0, 9720.0, 21150.0, 14440.0, 15370.0, 14290.0, 12060.0, 15390.0, 15680.0, 17270.0, 16890.0, 16210.0, 13090.0, 13980.0, 13370.0, 13280.0, 12980.0, 13210.0]
FORECAST_DETAIL_PREDICTED B&IND0204 B&IND0204 [11050.20066833667, 11050.20066833667, 11050.20066833667, 11513.560350923239, 11545.72863914412, 11050.20066833667, 11050.20066833667, 11050.20066833667, 11495.338519510486, 11527.376651792703, 11050.20066833667, 11050.20066833667, 11050.20066833667, 11477.190415352208, 11509.09891831901, 11050.20066833667, 11050.20066833667, 11050.20066833667, 11459.115740140955, 11490.895138284817, 11050.20066833667, 11050.20066833667, 11050.20066833667, 11441.114196776256, 11472.765012467516, 11050.20066833667]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0204 B&IND0204 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0204 B&IND0204 4.243459939956665
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0204 B&IND0204 ConstantTrend + Cycle_5 + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0204 B&IND0204 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0204 B&IND0204 0.3983 0.3794 0.8194
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0204 B&IND0204 6341.562335769606 14523.29995086445 -0.0735684780366892
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0204_26'
