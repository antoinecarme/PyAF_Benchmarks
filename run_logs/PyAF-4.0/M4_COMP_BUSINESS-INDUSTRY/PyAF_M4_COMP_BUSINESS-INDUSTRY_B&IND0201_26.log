BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0201 N= 104 H= 26 HEAD= [36530. 45980. 48420. 49740. 41480.] TAIL= [46950. 46700. 46750. 53320. 42240.]
   B&IND0201  Date
0    36530.0     0
1    45980.0     1
2    48420.0     2
3    49740.0     3
4    41480.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0201  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0201'], 'Transformations': [('B&IND0201', 'None', '_', 'T+S+R'), ('B&IND0201', 'None', 'Diff_', 'T+S+R'), ('B&IND0201', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': '_B&IND0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.715, ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': '_B&IND0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': 'Diff_B&IND0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.514, ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': 'Diff_B&IND0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': 'RelDiff_B&IND0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.626, ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': 'RelDiff_B&IND0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': 'CumSum_B&IND0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.501, ('TRAINING', {'Signal': 'B&IND0201', 'Transformation': 'CumSum_B&IND0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.357, ('SIGNAL_TRAINING', {'Signals': ['B&IND0201'], 'Transformations': [('B&IND0201', 'None', '_', 'T+S+R'), ('B&IND0201', 'None', 'Diff_', 'T+S+R'), ('B&IND0201', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0201'], 'Transformations': [('B&IND0201', [('B&IND0201', 'None', 'CumSum_', 'T+S+R'), ('B&IND0201', 'None', 'Diff_', 'T+S+R'), ('B&IND0201', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0201', 'Transformations': [('B&IND0201', 'None', 'CumSum_', 'T+S+R'), ('B&IND0201', 'None', 'Diff_', 'T+S+R'), ('B&IND0201', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'B&IND0201', 'Transformations': [('B&IND0201', 'None', 'CumSum_', 'T+S+R'), ('B&IND0201', 'None', 'Diff_', 'T+S+R'), ('B&IND0201', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0201', 'Model': '_B&IND0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0201', 'Model': '_B&IND0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.562, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.591, ('FINALIZE_TRAINING', {'Signals': ['B&IND0201'], 'Transformations': [('B&IND0201', [('B&IND0201', 'None', 'CumSum_', 'T+S+R'), ('B&IND0201', 'None', 'Diff_', 'T+S+R'), ('B&IND0201', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0201' Length=104  Min=36530.0 Max=66730.0  Mean=47747.0 StdDev=4239.756292887237
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0201' Min=0.0 Max=1.0  Mean=0.37142384105960274 StdDev=0.14038928122143168
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0201_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0201_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0596 MAPE_Forecast=0.0596 MAPE_Test=0.0596
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0592 SMAPE_Forecast=0.0592 SMAPE_Test=0.0592
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9495 MASE_Forecast=0.9495 MASE_Test=0.9495
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=512.6036592667244 CRPS_Forecast=512.6036592667244 CRPS_Test=512.6036592667244
INFO:pyaf.std:MODEL_L1 L1_Fit=2849.691984596069 L1_Forecast=2849.691984596069 L1_Test=2849.691984596069
INFO:pyaf.std:MODEL_L2 L2_Fit=4064.4670309621774 L2_Forecast=4064.4670309621774 L2_Test=4064.4670309621774
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.7202289391405631 LnQ_Forecast=0.7202289391405631 LnQ_Test=0.7202289391405631
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2084.669931665052 MedAE_Forecast=2084.669931665052 MedAE_Test=2084.669931665052
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.4333099834600524, array([-0.12377228]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0201_LinearTrend_residue_bestCycle_byMAPE None -0.006274735898122136 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _B&IND0201             T+S+R  ...  0.0510       0.0510   0.0510
1   None         _B&IND0201             T+S+R  ...  0.0510       0.0510   0.0510
2   None         _B&IND0201             T+S+R  ...  0.0512       0.0512   0.0512
3   None         _B&IND0201             T+S+R  ...  0.0512       0.0512   0.0512
4   None         _B&IND0201             T+S+R  ...  0.0512       0.0512   0.0512
..   ...                ...               ...  ...     ...          ...      ...
59  None  RelDiff_B&IND0201             T+S+R  ...  0.2291       0.2291   0.2291
60  None  RelDiff_B&IND0201             T+S+R  ...  0.2291       0.2291   0.2291
61  None  RelDiff_B&IND0201             T+S+R  ...  0.2291       0.2291   0.2291
62  None   CumSum_B&IND0201             T+S+R  ...  0.3937       0.3937   0.3937
63  None   CumSum_B&IND0201             T+S+R  ...  0.5100       0.5100   0.5100

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     _B&IND0201             T+S+R  ...  0.0510       0.0510   0.0510
1  None     _B&IND0201             T+S+R  ...  0.0510       0.0510   0.0510
2  None     _B&IND0201             T+S+R  ...  0.0512       0.0512   0.0512
3  None     _B&IND0201             T+S+R  ...  0.0512       0.0512   0.0512
4  None     _B&IND0201             T+S+R  ...  0.0512       0.0512   0.0512

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0201'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.414, ('FORECASTING', {'Signals': ['B&IND0201'], 'Horizon': 26}))
26 0     36160.0
1     42920.0
2     41870.0
3     41730.0
4     43540.0
5     44030.0
6     46320.0
7     44980.0
8     48700.0
9     47120.0
10    44110.0
11    45020.0
12    46030.0
13    46010.0
14    46466.0
15    45113.0
16    44240.0
17    44880.0
18    46020.0
19    41880.0
20    41810.0
21    43470.0
22    44930.0
23    41030.0
24    39850.0
25    43020.0
Name: B&IND0201, dtype: float64
26 0     45841.747985
1     45805.457470
2     45769.166956
3     45732.876441
4     45696.585927
5     45660.295412
6     45624.004897
7     45587.714383
8     45551.423868
9     45515.133354
10    45478.842839
11    45442.552325
12    45406.261810
13    45369.971295
14    45333.680781
15    45297.390266
16    45261.099752
17    45224.809237
18    45188.518723
19    45152.228208
20    45115.937693
21    45079.647179
22    45043.356664
23    45007.066150
24    44970.775635
25    44934.485121
Name: B&IND0201_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0201 B&IND0201 [36160.0, 42920.0, 41870.0, 41730.0, 43540.0, 44030.0, 46320.0, 44980.0, 48700.0, 47120.0, 44110.0, 45020.0, 46030.0, 46010.0, 46466.0, 45113.0, 44240.0, 44880.0, 46020.0, 41880.0, 41810.0, 43470.0, 44930.0, 41030.0, 39850.0, 43020.0]
FORECAST_DETAIL_PREDICTED B&IND0201 B&IND0201 [45841.747984933725, 45805.457470361034, 45769.16695578834, 45732.876441215645, 45696.58592664296, 45660.29541207026, 45624.00489749758, 45587.71438292489, 45551.4238683522, 45515.13335377951, 45478.842839206816, 45442.55232463412, 45406.261810061435, 45369.971295488736, 45333.68078091605, 45297.390266343355, 45261.09975177067, 45224.80923719797, 45188.51872262529, 45152.2282080526, 45115.93769347991, 45079.64717890721, 45043.356664334526, 45007.06614976183, 44970.77563518914, 44934.485120616446]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0201 B&IND0201 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0201 B&IND0201 3.474222183227539
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0201 B&IND0201 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0201 B&IND0201 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0201 B&IND0201 0.0519 0.0495 1.2233
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0201 B&IND0201 2161.3861890273324 2973.6366755149747 -0.35800561967781186
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0201_26'
