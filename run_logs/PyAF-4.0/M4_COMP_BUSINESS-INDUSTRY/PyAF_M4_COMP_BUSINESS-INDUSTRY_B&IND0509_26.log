BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 156 H= 26 HEAD= [0 1 2 3 4] TAIL= [151 152 153 154 155]
SIGNAL :  B&IND0509 N= 156 H= 26 HEAD= [ 883. 1151.  926. 1154. 1271.] TAIL= [1634. 1604. 1619. 2189.  908.]
   B&IND0509  Date
0      883.0     0
1     1151.0     1
2      926.0     2
3     1154.0     3
4     1271.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 156 entries, 0 to 155
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0509  156 non-null    float64
 1   Date       156 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.7 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0509'], 'Transformations': [('B&IND0509', 'None', '_', 'T+S+R'), ('B&IND0509', 'None', 'Diff_', 'T+S+R'), ('B&IND0509', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0509', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': '_B&IND0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.012, ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': '_B&IND0509'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': 'Diff_B&IND0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.72, ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': 'Diff_B&IND0509'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': 'RelDiff_B&IND0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.633, ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': 'RelDiff_B&IND0509'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': 'CumSum_B&IND0509'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.507, ('TRAINING', {'Signal': 'B&IND0509', 'Transformation': 'CumSum_B&IND0509'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.876, ('SIGNAL_TRAINING', {'Signals': ['B&IND0509'], 'Transformations': [('B&IND0509', 'None', '_', 'T+S+R'), ('B&IND0509', 'None', 'Diff_', 'T+S+R'), ('B&IND0509', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0509', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0509'], 'Transformations': [('B&IND0509', [('B&IND0509', 'None', 'CumSum_', 'T+S+R'), ('B&IND0509', 'None', 'Diff_', 'T+S+R'), ('B&IND0509', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0509', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0509', 'Transformations': [('B&IND0509', 'None', 'CumSum_', 'T+S+R'), ('B&IND0509', 'None', 'Diff_', 'T+S+R'), ('B&IND0509', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0509', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'B&IND0509', 'Transformations': [('B&IND0509', 'None', 'CumSum_', 'T+S+R'), ('B&IND0509', 'None', 'Diff_', 'T+S+R'), ('B&IND0509', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0509', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0509', 'Model': '_B&IND0509_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0509', 'Model': '_B&IND0509_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0509'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.667, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0509'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.694, ('FINALIZE_TRAINING', {'Signals': ['B&IND0509'], 'Transformations': [('B&IND0509', [('B&IND0509', 'None', 'CumSum_', 'T+S+R'), ('B&IND0509', 'None', 'Diff_', 'T+S+R'), ('B&IND0509', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0509', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0509' Length=156  Min=455.0 Max=2629.0  Mean=1662.179487179487 StdDev=494.8646990324276
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0509' Min=0.0 Max=1.0  Mean=0.555280352888449 StdDev=0.22762865640866026
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0509_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0509_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0509_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0509_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1318 MAPE_Forecast=0.0857 MAPE_Test=0.1127
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1093 SMAPE_Forecast=0.0928 SMAPE_Test=0.0922
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9904 MASE_Forecast=1.2906 MASE_Test=0.979
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=167.44205128205127 CRPS_Forecast=84.8323076923077 CRPS_Test=48.270769230769226
INFO:pyaf.std:MODEL_L1 L1_Fit=159.05769230769232 L1_Forecast=166.23076923076923 L1_Test=140.19230769230768
INFO:pyaf.std:MODEL_L2 L2_Fit=297.1362999857654 L2_Forecast=283.2765704830094 L2_Test=292.18730820643646
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=6.043815672209891 LnQ_Forecast=0.9393551961992656 LnQ_Test=0.9937379804125746
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=93.0 MedAE_Forecast=70.5 MedAE_Test=74.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1968721251149954
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0509_Lag1Trend_residue_bestCycle_byMAPE None 0.0011499540018399257 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_B&IND0509  ...  8.420000e-02  1.096000e-01
1   None   CumSum_B&IND0509  ...  8.420000e-02  1.096000e-01
2   None  RelDiff_B&IND0509  ...  8.470000e-02  1.127000e-01
3   None  RelDiff_B&IND0509  ...  8.470000e-02  1.127000e-01
4   None         _B&IND0509  ...  8.570000e-02  1.127000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0509  ...  2.174748e+07  3.018759e+07
60  None  RelDiff_B&IND0509  ...  2.174748e+07  3.018759e+07
61  None  RelDiff_B&IND0509  ...  2.174748e+07  3.018759e+07
62  None  RelDiff_B&IND0509  ...  2.174748e+07  3.018759e+07
63  None  RelDiff_B&IND0509  ...  2.174748e+07  3.018759e+07

[64 rows x 10 columns]
  Split     Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_B&IND0509             T+S+R  ...  0.1218       0.0842   0.1096
1  None   CumSum_B&IND0509             T+S+R  ...  0.1218       0.0842   0.1096
2  None  RelDiff_B&IND0509             T+S+R  ...  0.1290       0.0847   0.1127
3  None  RelDiff_B&IND0509             T+S+R  ...  0.1290       0.0847   0.1127
4  None         _B&IND0509             T+S+R  ...  0.1318       0.0857   0.1127

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0509'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.426, ('FORECASTING', {'Signals': ['B&IND0509'], 'Horizon': 26}))
26 0     1486.0
1     1563.0
2     1466.0
3     1486.0
4     1480.0
5     1329.0
6     1404.0
7     1378.0
8     1338.0
9     1327.0
10    1320.0
11    1363.0
12    1335.0
13    1280.0
14    1340.0
15    1503.0
16    1749.0
17    1589.0
18    1722.0
19    1674.0
20    1512.0
21    1459.0
22    1473.0
23    1636.0
24    1362.0
25    1667.0
Name: B&IND0509, dtype: float64
26 0     908.0
1     908.0
2     908.0
3     908.0
4     908.0
5     908.0
6     908.0
7     908.0
8     908.0
9     908.0
10    908.0
11    908.0
12    908.0
13    908.0
14    908.0
15    908.0
16    908.0
17    908.0
18    908.0
19    908.0
20    908.0
21    908.0
22    908.0
23    908.0
24    908.0
25    908.0
Name: B&IND0509_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0509 B&IND0509 [1486.0, 1563.0, 1466.0, 1486.0, 1480.0, 1329.0, 1404.0, 1378.0, 1338.0, 1327.0, 1320.0, 1363.0, 1335.0, 1280.0, 1340.0, 1503.0, 1749.0, 1589.0, 1722.0, 1674.0, 1512.0, 1459.0, 1473.0, 1636.0, 1362.0, 1667.0]
FORECAST_DETAIL_PREDICTED B&IND0509 B&IND0509 [908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0, 908.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0509 B&IND0509 156 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0509 B&IND0509 4.1015284061431885
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0509 B&IND0509 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0509 B&IND0509 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0509 B&IND0509 0.3777 0.4685 5.8213
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0509 B&IND0509 562.8076923076923 578.4165055097874 -17.781942206963752
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0509_26'
