BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 156 H= 26 HEAD= [0 1 2 3 4] TAIL= [151 152 153 154 155]
SIGNAL :  B&IND0505 N= 156 H= 26 HEAD= [ 584.  485. 1350. 1300. 1840.] TAIL= [1308. 1819. 1554. 1693.  752.]
   B&IND0505  Date
0      584.0     0
1      485.0     1
2     1350.0     2
3     1300.0     3
4     1840.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 156 entries, 0 to 155
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0505  156 non-null    float64
 1   Date       156 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.7 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0505'], 'Transformations': [('B&IND0505', 'None', '_', 'T+S+R'), ('B&IND0505', 'None', 'Diff_', 'T+S+R'), ('B&IND0505', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0505', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': '_B&IND0505'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.739, ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': '_B&IND0505'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': 'Diff_B&IND0505'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.77, ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': 'Diff_B&IND0505'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': 'RelDiff_B&IND0505'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.64, ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': 'RelDiff_B&IND0505'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': 'CumSum_B&IND0505'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.512, ('TRAINING', {'Signal': 'B&IND0505', 'Transformation': 'CumSum_B&IND0505'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.663, ('SIGNAL_TRAINING', {'Signals': ['B&IND0505'], 'Transformations': [('B&IND0505', 'None', '_', 'T+S+R'), ('B&IND0505', 'None', 'Diff_', 'T+S+R'), ('B&IND0505', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0505', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0505'], 'Transformations': [('B&IND0505', [('B&IND0505', 'None', 'CumSum_', 'T+S+R'), ('B&IND0505', 'None', 'Diff_', 'T+S+R'), ('B&IND0505', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0505', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0505', 'Transformations': [('B&IND0505', 'None', 'CumSum_', 'T+S+R'), ('B&IND0505', 'None', 'Diff_', 'T+S+R'), ('B&IND0505', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0505', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'B&IND0505', 'Transformations': [('B&IND0505', 'None', 'CumSum_', 'T+S+R'), ('B&IND0505', 'None', 'Diff_', 'T+S+R'), ('B&IND0505', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0505', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0505', 'Model': '_B&IND0505_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0505', 'Model': '_B&IND0505_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0505'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.546, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0505'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.573, ('FINALIZE_TRAINING', {'Signals': ['B&IND0505'], 'Transformations': [('B&IND0505', [('B&IND0505', 'None', 'CumSum_', 'T+S+R'), ('B&IND0505', 'None', 'Diff_', 'T+S+R'), ('B&IND0505', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0505', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0505' Length=156  Min=240.0 Max=2470.0  Mean=1284.7948717948718 StdDev=426.6888122951012
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_B&IND0505' Min=0.0 Max=1.0  Mean=0.46851787972864184 StdDev=0.19134027457179426
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_B&IND0505_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_B&IND0505_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_B&IND0505_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_B&IND0505_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.3817 MAPE_Forecast=0.2905 MAPE_Test=0.4149
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2828 SMAPE_Forecast=0.2582 SMAPE_Test=0.3131
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9186 MASE_Forecast=0.6776 MASE_Test=0.9685
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=51.592927350427374 CRPS_Forecast=51.16326923076929 CRPS_Test=61.63326923076928
INFO:pyaf.std:MODEL_L1 L1_Fit=341.42178254437874 L1_Forecast=327.68713017751486 L1_Test=369.14349112426044
INFO:pyaf.std:MODEL_L2 L2_Fit=430.64979446143303 L2_Forecast=392.9245039100119 L2_Test=442.9102644005788
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=17.909760807585727 LnQ_Forecast=2.8299014427785987 LnQ_Test=4.752993542230941
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=244.93269230769283 MedAE_Forecast=325.93269230769283 MedAE_Test=331.43269230769283
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _B&IND0505_ConstantTrend 0.46925232838909997
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _B&IND0505_ConstantTrend_residue_bestCycle_byMAPE None -0.013422731976543922 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_B&IND0505  ...  2.812000e-01  3.790000e-01
1   None         _B&IND0505  ...  2.820000e-01  3.812000e-01
2   None         _B&IND0505  ...  2.820000e-01  3.812000e-01
3   None         _B&IND0505  ...  2.844000e-01  4.031000e-01
4   None         _B&IND0505  ...  2.844000e-01  4.031000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0505  ...  2.484928e+07  4.388383e+03
60  None  RelDiff_B&IND0505  ...  2.888367e+07  3.304334e+07
61  None  RelDiff_B&IND0505  ...  2.888367e+07  3.304334e+07
62  None  RelDiff_B&IND0505  ...  2.888367e+07  3.304334e+07
63  None  RelDiff_B&IND0505  ...  2.888367e+07  3.304334e+07

[64 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_B&IND0505             T+S+R  ...  0.4486       0.2812   0.3790
1  None        _B&IND0505             T+S+R  ...  0.3800       0.2820   0.3812
2  None        _B&IND0505             T+S+R  ...  0.3800       0.2820   0.3812
3  None        _B&IND0505             T+S+R  ...  0.3805       0.2844   0.4031
4  None        _B&IND0505             T+S+R  ...  0.3805       0.2844   0.4031

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0505'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.389, ('FORECASTING', {'Signals': ['B&IND0505'], 'Horizon': 26}))
26 0      579.0
1     1490.0
2     2581.0
3     1730.0
4     1619.0
5     1190.0
6     1712.0
7      704.0
8     1476.0
9     1705.0
10    2788.0
11    1460.0
12    1518.0
13     647.0
14    1067.0
15    1832.0
16    1255.0
17     757.0
18    1838.0
19    1163.0
20    1152.0
21    1430.0
22     472.0
23    1125.0
24    1147.0
25    1530.0
Name: B&IND0505, dtype: float64
26 0     1286.432692
1     1286.432692
2     1286.432692
3     1286.432692
4     1286.432692
5     1286.432692
6     1286.432692
7     1286.432692
8     1286.432692
9     1286.432692
10    1286.432692
11    1286.432692
12    1286.432692
13    1286.432692
14    1286.432692
15    1286.432692
16    1286.432692
17    1286.432692
18    1286.432692
19    1286.432692
20    1286.432692
21    1286.432692
22    1286.432692
23    1286.432692
24    1286.432692
25    1286.432692
Name: B&IND0505_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0505 B&IND0505 [579.0, 1490.0, 2581.0, 1730.0, 1619.0, 1190.0, 1712.0, 704.0, 1476.0, 1705.0, 2788.0, 1460.0, 1518.0, 647.0, 1067.0, 1832.0, 1255.0, 757.0, 1838.0, 1163.0, 1152.0, 1430.0, 472.0, 1125.0, 1147.0, 1530.0]

BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0505 B&IND0505 156 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0505 B&IND0505 3.7471940517425537
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0505 B&IND0505 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0505 B&IND0505 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0505 B&IND0505 0.3712 0.3173 0.6711
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0505 B&IND0505 418.38979289940823 546.5489484492998 -0.03246268596525037
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0505_26'
