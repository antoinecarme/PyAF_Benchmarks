BENCH_DATA M4_COMP_BUSINESS-INDUSTRY
TIME :  Date N= 104 H= 26 HEAD= [0 1 2 3 4] TAIL= [ 99 100 101 102 103]
SIGNAL :  B&IND0211 N= 104 H= 26 HEAD= [146.  75.  71.  59.  68.] TAIL= [ 94. 129. 148. 425. 318.]
   B&IND0211  Date
0      146.0     0
1       75.0     1
2       71.0     2
3       59.0     3
4       68.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 104 entries, 0 to 103
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   B&IND0211  104 non-null    float64
 1   Date       104 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 2.4 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['B&IND0211'], 'Transformations': [('B&IND0211', 'None', '_', 'T+S+R'), ('B&IND0211', 'None', 'Diff_', 'T+S+R'), ('B&IND0211', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': '_B&IND0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.801, ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': '_B&IND0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': 'Diff_B&IND0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.557, ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': 'Diff_B&IND0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': 'RelDiff_B&IND0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.902, ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': 'RelDiff_B&IND0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': 'CumSum_B&IND0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.688, ('TRAINING', {'Signal': 'B&IND0211', 'Transformation': 'CumSum_B&IND0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.949, ('SIGNAL_TRAINING', {'Signals': ['B&IND0211'], 'Transformations': [('B&IND0211', 'None', '_', 'T+S+R'), ('B&IND0211', 'None', 'Diff_', 'T+S+R'), ('B&IND0211', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['B&IND0211'], 'Transformations': [('B&IND0211', [('B&IND0211', 'None', 'CumSum_', 'T+S+R'), ('B&IND0211', 'None', 'Diff_', 'T+S+R'), ('B&IND0211', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'B&IND0211', 'Transformations': [('B&IND0211', 'None', 'CumSum_', 'T+S+R'), ('B&IND0211', 'None', 'Diff_', 'T+S+R'), ('B&IND0211', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'B&IND0211', 'Transformations': [('B&IND0211', 'None', 'CumSum_', 'T+S+R'), ('B&IND0211', 'None', 'Diff_', 'T+S+R'), ('B&IND0211', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0211', 'Model': 'CumSum_B&IND0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'B&IND0211', 'Model': 'CumSum_B&IND0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.657, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'B&IND0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.686, ('FINALIZE_TRAINING', {'Signals': ['B&IND0211'], 'Transformations': [('B&IND0211', [('B&IND0211', 'None', 'CumSum_', 'T+S+R'), ('B&IND0211', 'None', 'Diff_', 'T+S+R'), ('B&IND0211', 'None', 'RelDiff_', 'T+S+R'), ('B&IND0211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=103 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='B&IND0211' Length=104  Min=31.0 Max=479.0  Mean=78.35576923076923 StdDev=65.52229777089258
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_B&IND0211' Min=0.25669642857142855 Max=10.993303571428571  Mean=4.9626759958791204 StdDev=2.890349324449949
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_B&IND0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_B&IND0211_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_B&IND0211_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_B&IND0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.2933 MAPE_Forecast=0.2933 MAPE_Test=0.2933
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.2838 SMAPE_Forecast=0.2838 SMAPE_Test=0.2838
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.0255 MASE_Forecast=1.0255 MASE_Test=1.0255
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.774007902810799 CRPS_Forecast=3.774007902810799 CRPS_Test=3.774007902810799
INFO:pyaf.std:MODEL_L1 L1_Fit=28.415461056199053 L1_Forecast=28.415461056199053 L1_Test=28.415461056199053
INFO:pyaf.std:MODEL_L2 L2_Fit=67.08649266246621 L2_Forecast=67.08649266246621 L2_Test=67.08649266246621
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=21.101671150181417 LnQ_Forecast=21.101671150181417 LnQ_Test=21.101671150181417
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=13.269817613739917 MedAE_Forecast=13.269817613739917 MedAE_Test=13.269817613739917
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.5633554442996536, array([8.7986411]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_B&IND0211_LinearTrend_residue_bestCycle_byMAPE None -0.09082691157562461 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split     Transformation  ...  ForecastMAPE      TestMAPE
0   None   CumSum_B&IND0211  ...  2.933000e-01  2.933000e-01
1   None   CumSum_B&IND0211  ...  2.933000e-01  2.933000e-01
2   None         _B&IND0211  ...  2.936000e-01  2.936000e-01
3   None         _B&IND0211  ...  2.936000e-01  2.936000e-01
4   None         _B&IND0211  ...  3.014000e-01  3.014000e-01
..   ...                ...  ...           ...           ...
59  None  RelDiff_B&IND0211  ...  8.779322e+07  8.779322e+07
60  None  RelDiff_B&IND0211  ...  8.899237e+07  8.899237e+07
61  None  RelDiff_B&IND0211  ...  8.899237e+07  8.899237e+07
62  None  RelDiff_B&IND0211  ...  9.744670e+07  9.744670e+07
63  None  RelDiff_B&IND0211  ...  9.744670e+07  9.744670e+07

[64 rows x 10 columns]
  Split    Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_B&IND0211             T+S+R  ...  0.2933       0.2933   0.2933
1  None  CumSum_B&IND0211             T+S+R  ...  0.2933       0.2933   0.2933
2  None        _B&IND0211             T+S+R  ...  0.2936       0.2936   0.2936
3  None        _B&IND0211             T+S+R  ...  0.2936       0.2936   0.2936
4  None        _B&IND0211             T+S+R  ...  0.3014       0.3014   0.3014

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['B&IND0211'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.445, ('FORECASTING', {'Signals': ['B&IND0211'], 'Horizon': 26}))
26 0     230.0
1      54.0
2      45.0
3      68.0
4      71.0
5      68.0
6      57.0
7      77.0
8      54.0
9      56.0
10     49.0
11     40.0
12     72.0
13     59.0
14     59.0
15     64.0
16     96.0
17     66.0
18     42.0
19     54.0
20     82.0
21     63.0
22     47.0
23     64.0
24     51.0
25     59.0
Name: B&IND0211, dtype: float64
26 0     69.269818
1     69.269818
2     69.269818
3     69.269818
4     69.269818
5     69.269818
6     69.269818
7     69.269818
8     69.269818
9     69.269818
10    69.269818
11    69.269818
12    69.269818
13    69.269818
14    69.269818
15    69.269818
16    69.269818
17    69.269818
18    69.269818
19    69.269818
20    69.269818
21    69.269818
22    69.269818
23    69.269818
24    69.269818
25    69.269818
Name: B&IND0211_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL B&IND0211 B&IND0211 [230.0, 54.0, 45.0, 68.0, 71.0, 68.0, 57.0, 77.0, 54.0, 56.0, 49.0, 40.0, 72.0, 59.0, 59.0, 64.0, 96.0, 66.0, 42.0, 54.0, 82.0, 63.0, 47.0, 64.0, 51.0, 59.0]
FORECAST_DETAIL_PREDICTED B&IND0211 B&IND0211 [69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032, 69.26981761373872, 69.26981761374032, 69.26981761374032]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON B&IND0211 B&IND0211 104 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ B&IND0211 B&IND0211 4.200465440750122
BENCHMARK_PERF_DETAIL_BEST_MODEL B&IND0211 B&IND0211 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT B&IND0211 B&IND0211 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE B&IND0211 B&IND0211 0.2552 0.2378 0.8605
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 B&IND0211 B&IND0211 18.4145171766294 34.89669132203149 -0.0035568018229859
BENCHMARK_SUCCESS 'M4_COMP_BUSINESS-INDUSTRY_B&IND0211_26'
