BENCH_DATA NN3_PART_2
TIME :  Date N= 126 H= 18 HEAD= [0 1 2 3 4] TAIL= [121 122 123 124 125]
SIGNAL :  NN3_105 N= 126 H= 18 HEAD= [5007 5165 4976 4984 5105] TAIL= [4719 4855 4820 4704 4608]
   NN3_105  Date
0     5007     0
1     5165     1
2     4976     2
3     4984     3
4     5105     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 126 entries, 0 to 125
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype
---  ------   --------------  -----
 0   NN3_105  126 non-null    int64
 1   Date     126 non-null    int64
dtypes: int64(2)
memory usage: 3.0 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['NN3_105'], 'Transformations': [('NN3_105', 'None', '_', 'T+S+R'), ('NN3_105', 'None', 'Diff_', 'T+S+R'), ('NN3_105', 'None', 'RelDiff_', 'T+S+R'), ('NN3_105', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NN3_105', 'Transformation': '_NN3_105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.967, ('TRAINING', {'Signal': 'NN3_105', 'Transformation': '_NN3_105'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NN3_105', 'Transformation': 'Diff_NN3_105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.532, ('TRAINING', {'Signal': 'NN3_105', 'Transformation': 'Diff_NN3_105'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NN3_105', 'Transformation': 'RelDiff_NN3_105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.634, ('TRAINING', {'Signal': 'NN3_105', 'Transformation': 'RelDiff_NN3_105'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'NN3_105', 'Transformation': 'CumSum_NN3_105'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.488, ('TRAINING', {'Signal': 'NN3_105', 'Transformation': 'CumSum_NN3_105'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.623, ('SIGNAL_TRAINING', {'Signals': ['NN3_105'], 'Transformations': [('NN3_105', 'None', '_', 'T+S+R'), ('NN3_105', 'None', 'Diff_', 'T+S+R'), ('NN3_105', 'None', 'RelDiff_', 'T+S+R'), ('NN3_105', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['NN3_105'], 'Transformations': [('NN3_105', [('NN3_105', 'None', 'CumSum_', 'T+S+R'), ('NN3_105', 'None', 'Diff_', 'T+S+R'), ('NN3_105', 'None', 'RelDiff_', 'T+S+R'), ('NN3_105', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'NN3_105', 'Transformations': [('NN3_105', 'None', 'CumSum_', 'T+S+R'), ('NN3_105', 'None', 'Diff_', 'T+S+R'), ('NN3_105', 'None', 'RelDiff_', 'T+S+R'), ('NN3_105', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'NN3_105', 'Transformations': [('NN3_105', 'None', 'CumSum_', 'T+S+R'), ('NN3_105', 'None', 'Diff_', 'T+S+R'), ('NN3_105', 'None', 'RelDiff_', 'T+S+R'), ('NN3_105', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NN3_105', 'Model': '_NN3_105_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'NN3_105', 'Model': '_NN3_105_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NN3_105'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.35, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'NN3_105'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.378, ('FINALIZE_TRAINING', {'Signals': ['NN3_105'], 'Transformations': [('NN3_105', [('NN3_105', 'None', 'CumSum_', 'T+S+R'), ('NN3_105', 'None', 'Diff_', 'T+S+R'), ('NN3_105', 'None', 'RelDiff_', 'T+S+R'), ('NN3_105', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=85 TimeDelta=1 Horizon=18
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='NN3_105' Length=126  Min=3532 Max=5299  Mean=4477.396825396825 StdDev=375.1138679896758
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_NN3_105' Min=0.0 Max=1.0  Mean=0.5350293295963926 StdDev=0.2122885500790468
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_NN3_105_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [ConstantTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_NN3_105_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_NN3_105_ConstantTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_NN3_105_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0875 MAPE_Forecast=0.0254 MAPE_Test=0.0247
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0863 SMAPE_Forecast=0.0248 SMAPE_Test=0.025
INFO:pyaf.std:MODEL_MASE MASE_Fit=2.74 MASE_Forecast=1.2397 MASE_Test=1.1995
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=64.90263824289401 CRPS_Forecast=35.419089147287046 CRPS_Test=14.74224806201543
INFO:pyaf.std:MODEL_L1 L1_Fit=385.20822065981616 L1_Forecast=109.26955602537038 L1_Test=114.16666666666667
INFO:pyaf.std:MODEL_L2 L2_Fit=442.9855871185969 L2_Forecast=141.07416012090195 L2_Test=155.54848639795833
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.865906130433103 LnQ_Forecast=0.022859804477839408 LnQ_Test=0.02059029671557056
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=385.0 MedAE_Forecast=79.04651162790742 MedAE_Test=79.0
INFO:pyaf.std:MODEL_COMPLEXITY 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _NN3_105_ConstantTrend 0.5421881786236035
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _NN3_105_ConstantTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE    TestMAPE
0   None   CumSum_NN3_105             T+S+R  ...   0.1197       0.0202      0.0433
1   None   CumSum_NN3_105             T+S+R  ...   0.1197       0.0202      0.0433
2   None         _NN3_105             T+S+R  ...   0.0277       0.0212      0.0215
3   None         _NN3_105             T+S+R  ...   0.0277       0.0212      0.0215
4   None         _NN3_105             T+S+R  ...   0.0313       0.0213      0.0219
..   ...              ...               ...  ...      ...          ...         ...
59  None  RelDiff_NN3_105             T+S+R  ...   9.6073     222.9654    514.5849
60  None  RelDiff_NN3_105             T+S+R  ...   9.6073     222.9654    514.5849
61  None  RelDiff_NN3_105             T+S+R  ...   9.4731     407.7920  13196.6265
62  None  RelDiff_NN3_105             T+S+R  ...  10.3713     530.0550  15497.0101
63  None  RelDiff_NN3_105             T+S+R  ...   8.4401     537.3848  11370.4232

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_NN3_105             T+S+R  ...  0.1197       0.0202   0.0433
1  None  CumSum_NN3_105             T+S+R  ...  0.1197       0.0202   0.0433
2  None        _NN3_105             T+S+R  ...  0.0277       0.0212   0.0215
3  None        _NN3_105             T+S+R  ...  0.0277       0.0212   0.0215
4  None        _NN3_105             T+S+R  ...  0.0313       0.0213   0.0219

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['NN3_105'], 'Horizon': 18}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.261, ('FORECASTING', {'Signals': ['NN3_105'], 'Horizon': 18}))
18 0     4544
1     4451
2     4349
3     4410
4     4564
5     4406
6     4521
7     4858
8     4973
9     4895
10    4815
11    4622
12    4530
13    4541
14    4433
15    4507
16    4665
17    4591
Name: NN3_105, dtype: int64
18 0     4490.046512
1     4490.046512
2     4490.046512
3     4490.046512
4     4490.046512
5     4490.046512
6     4490.046512
7     4490.046512
8     4490.046512
9     4490.046512
10    4490.046512
11    4490.046512
12    4490.046512
13    4490.046512
14    4490.046512
15    4490.046512
16    4490.046512
17    4490.046512
Name: NN3_105_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL NN3_Part2 NN3_105 [4544, 4451, 4349, 4410, 4564, 4406, 4521, 4858, 4973, 4895, 4815, 4622, 4530, 4541, 4433, 4507, 4665, 4591]
FORECAST_DETAIL_PREDICTED NN3_Part2 NN3_105 [4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907, 4490.046511627907]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON NN3_Part2 NN3_105 126 18
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ NN3_Part2 NN3_105 3.3487889766693115
BENCHMARK_PERF_DETAIL_BEST_MODEL NN3_Part2 NN3_105 ConstantTrend + NoCycle + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT NN3_Part2 NN3_105 18
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE NN3_Part2 NN3_105 0.0312 0.032 1.2526
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 NN3_Part2 NN3_105 147.5904392764856 203.90499977528086 -0.34265746085363524
BENCHMARK_SUCCESS 'NN3_PART_2_NN3_105_18'
