BENCH_DATA M4_COMP_DEMOGRAPHICS
TIME :  Date N= 17 H= 6 HEAD= [0 1 2 3 4] TAIL= [12 13 14 15 16]
SIGNAL :  D0212 N= 17 H= 6 HEAD= [42. 42. 42. 43. 43.] TAIL= [40. 38. 37. 35. 34.]
   D0212  Date
0   42.0     0
1   42.0     1
2   42.0     2
3   43.0     3
4   43.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 17 entries, 0 to 16
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   D0212   17 non-null     float64
 1   Date    17 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 408.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['D0212'], 'Transformations': [('D0212', 'None', '_', 'T+S+R'), ('D0212', 'None', 'Diff_', 'T+S+R'), ('D0212', 'None', 'RelDiff_', 'T+S+R'), ('D0212', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0212', 'Transformation': '_D0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0212', 'Transformation': 'Diff_D0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.518, ('TRAINING', {'Signal': 'D0212', 'Transformation': 'Diff_D0212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0212', 'Transformation': 'RelDiff_D0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.569, ('TRAINING', {'Signal': 'D0212', 'Transformation': 'RelDiff_D0212'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0212', 'Transformation': 'CumSum_D0212'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.437, ('TRAINING', {'Signal': 'D0212', 'Transformation': 'CumSum_D0212'}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['D0212'], 'Transformations': [('D0212', [('D0212', 'None', 'CumSum_', 'T+S+R'), ('D0212', 'None', 'Diff_', 'T+S+R'), ('D0212', 'None', 'RelDiff_', 'T+S+R'), ('D0212', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'D0212', 'Transformations': [('D0212', 'None', 'CumSum_', 'T+S+R'), ('D0212', 'None', 'Diff_', 'T+S+R'), ('D0212', 'None', 'RelDiff_', 'T+S+R'), ('D0212', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'D0212', 'Transformations': [('D0212', 'None', 'CumSum_', 'T+S+R'), ('D0212', 'None', 'Diff_', 'T+S+R'), ('D0212', 'None', 'RelDiff_', 'T+S+R'), ('D0212', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0212', 'Model': '_D0212_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0212', 'Model': '_D0212_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.118, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0212'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.144, ('FINALIZE_TRAINING', {'Signals': ['D0212'], 'Transformations': [('D0212', [('D0212', 'None', 'CumSum_', 'T+S+R'), ('D0212', 'None', 'Diff_', 'T+S+R'), ('D0212', 'None', 'RelDiff_', 'T+S+R'), ('D0212', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=16 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='D0212' Length=17  Min=34.0 Max=43.0  Mean=40.8235294117647 StdDev=2.8949305410268895
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_D0212' Min=0.0 Max=1.0  Mean=0.7581699346405228 StdDev=0.3216589490029878
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_D0212_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_D0212_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_D0212_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_D0212_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0155 MAPE_Forecast=0.0155 MAPE_Test=0.0155
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0152 SMAPE_Forecast=0.0152 SMAPE_Test=0.0152
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9412 MASE_Forecast=0.9412 MASE_Test=0.9412
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.7009803921568626 CRPS_Forecast=0.7009803921568626 CRPS_Test=0.7009803921568626
INFO:pyaf.std:MODEL_L1 L1_Fit=0.5882352941176471 L1_Forecast=0.5882352941176471 L1_Test=0.5882352941176471
INFO:pyaf.std:MODEL_L2 L2_Fit=0.9074852129730301 L2_Forecast=0.9074852129730301 L2_Test=0.9074852129730301
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.009568268828295059 LnQ_Forecast=0.009568268828295059 LnQ_Test=0.009568268828295059
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.8888888888888888
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _D0212_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_D0212             T+S+R  ...  0.0110       0.0110   0.0110
1   None     Diff_D0212             T+S+R  ...  0.0110       0.0110   0.0110
2   None         _D0212             T+S+R  ...  0.0143       0.0143   0.0143
3   None         _D0212             T+S+R  ...  0.0143       0.0143   0.0143
4   None         _D0212             T+S+R  ...  0.0155       0.0155   0.0155
..   ...            ...               ...  ...     ...          ...      ...
59  None   CumSum_D0212             T+S+R  ...  0.1196       0.1196   0.1196
60  None   CumSum_D0212             T+S+R  ...  0.1441       0.1441   0.1441
61  None   CumSum_D0212             T+S+R  ...  0.1441       0.1441   0.1441
62  None   CumSum_D0212             T+S+R  ...  0.2416       0.2416   0.2416
63  None   CumSum_D0212             T+S+R  ...  0.2416       0.2416   0.2416

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     Diff_D0212             T+S+R  ...  0.0110       0.0110   0.0110
1  None     Diff_D0212             T+S+R  ...  0.0110       0.0110   0.0110
2  None         _D0212             T+S+R  ...  0.0143       0.0143   0.0143
3  None         _D0212             T+S+R  ...  0.0143       0.0143   0.0143
4  None         _D0212             T+S+R  ...  0.0155       0.0155   0.0155

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['D0212'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.094, ('FORECASTING', {'Signals': ['D0212'], 'Horizon': 6}))
6 0    33.0
1    32.0
2    31.0
3    30.0
4    29.0
5    28.0
Name: D0212, dtype: float64
6 0    34.0
1    34.0
2    34.0
3    34.0
4    34.0
5    34.0
Name: D0212_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL D0212 D0212 [33.0, 32.0, 31.0, 30.0, 29.0, 28.0]
FORECAST_DETAIL_PREDICTED D0212 D0212 [34.0, 34.0, 34.0, 34.0, 34.0, 34.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON D0212 D0212 17 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ D0212 D0212 2.601123094558716
BENCHMARK_PERF_DETAIL_BEST_MODEL D0212 D0212 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT D0212 D0212 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE D0212 D0212 0.1183 0.11 3.5
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 D0212 D0212 3.5 3.8944404818493075 -4.199999999970286
BENCHMARK_SUCCESS 'M4_COMP_DEMOGRAPHICS_D0212_6'
