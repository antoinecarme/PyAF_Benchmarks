BENCH_DATA M4_COMP_DEMOGRAPHICS
TIME :  Date N= 17 H= 6 HEAD= [0 1 2 3 4] TAIL= [12 13 14 15 16]
SIGNAL :  D0211 N= 17 H= 6 HEAD= [7.  6.9 6.8 6.7 6.6] TAIL= [5.5 5.4 5.2 5.  4.8]
   D0211  Date
0    7.0     0
1    6.9     1
2    6.8     2
3    6.7     3
4    6.6     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 17 entries, 0 to 16
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   D0211   17 non-null     float64
 1   Date    17 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 408.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['D0211'], 'Transformations': [('D0211', 'None', '_', 'T+S+R'), ('D0211', 'None', 'Diff_', 'T+S+R'), ('D0211', 'None', 'RelDiff_', 'T+S+R'), ('D0211', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0211', 'Transformation': '_D0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0211', 'Transformation': 'Diff_D0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.461, ('TRAINING', {'Signal': 'D0211', 'Transformation': 'Diff_D0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0211', 'Transformation': 'RelDiff_D0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.559, ('TRAINING', {'Signal': 'D0211', 'Transformation': 'RelDiff_D0211'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0211', 'Transformation': 'CumSum_D0211'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.425, ('TRAINING', {'Signal': 'D0211', 'Transformation': 'CumSum_D0211'}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['D0211'], 'Transformations': [('D0211', [('D0211', 'None', 'CumSum_', 'T+S+R'), ('D0211', 'None', 'Diff_', 'T+S+R'), ('D0211', 'None', 'RelDiff_', 'T+S+R'), ('D0211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'D0211', 'Transformations': [('D0211', 'None', 'CumSum_', 'T+S+R'), ('D0211', 'None', 'Diff_', 'T+S+R'), ('D0211', 'None', 'RelDiff_', 'T+S+R'), ('D0211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'D0211', 'Transformations': [('D0211', 'None', 'CumSum_', 'T+S+R'), ('D0211', 'None', 'Diff_', 'T+S+R'), ('D0211', 'None', 'RelDiff_', 'T+S+R'), ('D0211', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0211', 'Model': 'Diff_D0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.021, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0211', 'Model': 'Diff_D0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.124, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0211'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.151, ('FINALIZE_TRAINING', {'Signals': ['D0211'], 'Transformations': [('D0211', [('D0211', 'None', 'CumSum_', 'T+S+R'), ('D0211', 'None', 'Diff_', 'T+S+R'), ('D0211', 'None', 'RelDiff_', 'T+S+R'), ('D0211', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=16 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='D0211' Length=17  Min=4.8 Max=7.0  Mean=6.03529411764706 StdDev=0.6623853298945528
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_D0211' Min=-0.090909090909091 Max=0.0  Mean=-0.058823529411764705 StdDev=0.025923421697413566
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_D0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_D0211_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_D0211_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_D0211_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0126 MAPE_Forecast=0.0126 MAPE_Test=0.0126
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0127 SMAPE_Forecast=0.0127 SMAPE_Test=0.0127
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.5608 MASE_Forecast=0.5608 MASE_Test=0.5608
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.2348615916955018 CRPS_Forecast=0.2348615916955018 CRPS_Test=0.2348615916955018
INFO:pyaf.std:MODEL_L1 L1_Fit=0.07710843373494 L1_Forecast=0.07710843373494 L1_Test=0.07710843373494
INFO:pyaf.std:MODEL_L2 L2_Fit=0.08524107986341037 L2_Forecast=0.08524107986341037 L2_Test=0.08524107986341037
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.0033905143902450215 LnQ_Forecast=0.0033905143902450215 LnQ_Test=0.0033905143902450215
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.08201630049610209 MedAE_Forecast=0.08201630049610209 MedAE_Test=0.08201630049610209
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (-0.04020359512917983, array([-0.03723987]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_D0211_LinearTrend_residue_bestCycle_byMAPE None 0.0017315250306038574 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_D0211             T+S+R  ...  0.0063       0.0063   0.0063
1   None     Diff_D0211             T+S+R  ...  0.0063       0.0063   0.0063
2   None     Diff_D0211             T+S+R  ...  0.0071       0.0071   0.0071
3   None     Diff_D0211             T+S+R  ...  0.0071       0.0071   0.0071
4   None     Diff_D0211             T+S+R  ...  0.0072       0.0072   0.0072
..   ...            ...               ...  ...     ...          ...      ...
59  None  RelDiff_D0211             T+S+R  ...  0.1783       0.1783   0.1783
60  None   CumSum_D0211             T+S+R  ...  0.1848       0.1848   0.1848
61  None   CumSum_D0211             T+S+R  ...  0.1848       0.1848   0.1848
62  None   CumSum_D0211             T+S+R  ...  0.2781       0.2781   0.2781
63  None   CumSum_D0211             T+S+R  ...  0.2781       0.2781   0.2781

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None     Diff_D0211             T+S+R  ...  0.0063       0.0063   0.0063
1  None     Diff_D0211             T+S+R  ...  0.0063       0.0063   0.0063
2  None     Diff_D0211             T+S+R  ...  0.0071       0.0071   0.0071
3  None     Diff_D0211             T+S+R  ...  0.0071       0.0071   0.0071
4  None     Diff_D0211             T+S+R  ...  0.0072       0.0072   0.0072

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['D0211'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.101, ('FORECASTING', {'Signals': ['D0211'], 'Horizon': 6}))
6 0    4.6
1    4.5
2    4.3
3    4.2
4    4.1
5    3.9
Name: D0211, dtype: float64
6 0    4.624504
1    4.443887
2    4.258150
3    4.067293
4    3.871315
5    3.670216
Name: D0211_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL D0211 D0211 [4.6, 4.5, 4.3, 4.2, 4.1, 3.9]
FORECAST_DETAIL_PREDICTED D0211 D0211 [4.62450389794472, 4.443887313961729, 4.258150248051027, 4.067292700212614, 3.871314670446491, 3.6702161587526563]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON D0211 D0211 17 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ D0211 D0211 2.884927272796631
BENCHMARK_PERF_DETAIL_BEST_MODEL D0211 D0211 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT D0211 D0211 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE D0211 D0211 0.029 0.0296 0.8496
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 D0211 D0211 0.11894046775336704 0.1461787133131598 0.615372108049351
BENCHMARK_SUCCESS 'M4_COMP_DEMOGRAPHICS_D0211_6'
