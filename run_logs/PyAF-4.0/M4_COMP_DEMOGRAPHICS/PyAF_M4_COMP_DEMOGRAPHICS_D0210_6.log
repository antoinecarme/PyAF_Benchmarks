BENCH_DATA M4_COMP_DEMOGRAPHICS
TIME :  Date N= 17 H= 6 HEAD= [0 1 2 3 4] TAIL= [12 13 14 15 16]
SIGNAL :  D0210 N= 17 H= 6 HEAD= [1.3 1.4 1.4 1.5 1.6] TAIL= [1.7 1.6 1.5 1.4 1.3]
   D0210  Date
0    1.3     0
1    1.4     1
2    1.4     2
3    1.5     3
4    1.6     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 17 entries, 0 to 16
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   D0210   17 non-null     float64
 1   Date    17 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 408.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['D0210'], 'Transformations': [('D0210', 'None', '_', 'T+S+R'), ('D0210', 'None', 'Diff_', 'T+S+R'), ('D0210', 'None', 'RelDiff_', 'T+S+R'), ('D0210', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0210', 'Transformation': '_D0210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0210', 'Transformation': 'Diff_D0210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.457, ('TRAINING', {'Signal': 'D0210', 'Transformation': 'Diff_D0210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0210', 'Transformation': 'RelDiff_D0210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.551, ('TRAINING', {'Signal': 'D0210', 'Transformation': 'RelDiff_D0210'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0210', 'Transformation': 'CumSum_D0210'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.421, ('TRAINING', {'Signal': 'D0210', 'Transformation': 'CumSum_D0210'}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['D0210'], 'Transformations': [('D0210', [('D0210', 'None', 'CumSum_', 'T+S+R'), ('D0210', 'None', 'Diff_', 'T+S+R'), ('D0210', 'None', 'RelDiff_', 'T+S+R'), ('D0210', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'D0210', 'Transformations': [('D0210', 'None', 'CumSum_', 'T+S+R'), ('D0210', 'None', 'Diff_', 'T+S+R'), ('D0210', 'None', 'RelDiff_', 'T+S+R'), ('D0210', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'D0210', 'Transformations': [('D0210', 'None', 'CumSum_', 'T+S+R'), ('D0210', 'None', 'Diff_', 'T+S+R'), ('D0210', 'None', 'RelDiff_', 'T+S+R'), ('D0210', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0210', 'Model': '_D0210_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0210', 'Model': '_D0210_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.116, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0210'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.142, ('FINALIZE_TRAINING', {'Signals': ['D0210'], 'Transformations': [('D0210', [('D0210', 'None', 'CumSum_', 'T+S+R'), ('D0210', 'None', 'Diff_', 'T+S+R'), ('D0210', 'None', 'RelDiff_', 'T+S+R'), ('D0210', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=16 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='D0210' Length=17  Min=1.3 Max=1.8  Mean=1.5941176470588236 StdDev=0.17977302105807208
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_D0210' Min=0.0 Max=1.0  Mean=0.588235294117647 StdDev=0.35954604211614416
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_D0210_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_D0210_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_D0210_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_D0210_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0383 MAPE_Forecast=0.0383 MAPE_Test=0.0383
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0383 SMAPE_Forecast=0.0383 SMAPE_Test=0.0383
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9412 MASE_Forecast=0.9412 MASE_Test=0.9412
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.06372549019607844 CRPS_Forecast=0.06372549019607844 CRPS_Test=0.06372549019607844
INFO:pyaf.std:MODEL_L1 L1_Fit=0.058823529411764705 L1_Forecast=0.058823529411764705 L1_Test=0.058823529411764705
INFO:pyaf.std:MODEL_L2 L2_Fit=0.07669649888473705 L2_Forecast=0.07669649888473705 L2_Test=0.07669649888473705
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.04271931521292223 LnQ_Forecast=0.04271931521292223 LnQ_Test=0.04271931521292223
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.09999999999999987 MedAE_Forecast=0.09999999999999987 MedAE_Test=0.09999999999999987
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _D0210_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_D0210             T+S+R  ...  0.0299       0.0299   0.0299
1   None   CumSum_D0210             T+S+R  ...  0.0299       0.0299   0.0299
2   None   CumSum_D0210             T+S+R  ...  0.0311       0.0311   0.0311
3   None   CumSum_D0210             T+S+R  ...  0.0311       0.0311   0.0311
4   None         _D0210             T+S+R  ...  0.0326       0.0326   0.0326
..   ...            ...               ...  ...     ...          ...      ...
59  None  RelDiff_D0210             T+S+R  ...  0.1736       0.1736   0.1736
60  None  RelDiff_D0210             T+S+R  ...  0.1736       0.1736   0.1736
61  None  RelDiff_D0210             T+S+R  ...  0.1736       0.1736   0.1736
62  None   CumSum_D0210             T+S+R  ...  0.2880       0.2880   0.2880
63  None   CumSum_D0210             T+S+R  ...  0.2880       0.2880   0.2880

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None   CumSum_D0210             T+S+R  ...  0.0299       0.0299   0.0299
1  None   CumSum_D0210             T+S+R  ...  0.0299       0.0299   0.0299
2  None   CumSum_D0210             T+S+R  ...  0.0311       0.0311   0.0311
3  None   CumSum_D0210             T+S+R  ...  0.0311       0.0311   0.0311
4  None         _D0210             T+S+R  ...  0.0326       0.0326   0.0326

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['D0210'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.093, ('FORECASTING', {'Signals': ['D0210'], 'Horizon': 6}))
6 0    1.2
1    1.2
2    1.1
3    1.0
4    0.9
5    0.9
Name: D0210, dtype: float64
6 0    1.3
1    1.3
2    1.3
3    1.3
4    1.3
5    1.3
Name: D0210_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL D0210 D0210 [1.2, 1.2, 1.1, 1.0, 0.9, 0.9]
FORECAST_DETAIL_PREDICTED D0210 D0210 [1.3, 1.3, 1.3, 1.3, 1.3, 1.3]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON D0210 D0210 17 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ D0210 D0210 2.8874917030334473
BENCHMARK_PERF_DETAIL_BEST_MODEL D0210 D0210 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT D0210 D0210 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE D0210 D0210 0.2562 0.2191 4.1667
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 D0210 D0210 0.25 0.27988092706244444 -3.9473684158448785
BENCHMARK_SUCCESS 'M4_COMP_DEMOGRAPHICS_D0210_6'
