BENCH_DATA M4_COMP_DEMOGRAPHICS
TIME :  Date N= 21 H= 6 HEAD= [0 1 2 3 4] TAIL= [16 17 18 19 20]
SIGNAL :  D0203 N= 21 H= 6 HEAD= [50. 51. 51. 52. 52.] TAIL= [53. 53. 53. 52. 52.]
   D0203  Date
0   50.0     0
1   51.0     1
2   51.0     2
3   52.0     3
4   52.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 21 entries, 0 to 20
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   D0203   21 non-null     float64
 1   Date    21 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 504.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['D0203'], 'Transformations': [('D0203', 'None', '_', 'T+S+R'), ('D0203', 'None', 'Diff_', 'T+S+R'), ('D0203', 'None', 'RelDiff_', 'T+S+R'), ('D0203', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0203', 'Transformation': '_D0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0203', 'Transformation': 'Diff_D0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.453, ('TRAINING', {'Signal': 'D0203', 'Transformation': 'Diff_D0203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0203', 'Transformation': 'RelDiff_D0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('TRAINING', {'Signal': 'D0203', 'Transformation': 'RelDiff_D0203'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0203', 'Transformation': 'CumSum_D0203'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.417, ('TRAINING', {'Signal': 'D0203', 'Transformation': 'CumSum_D0203'}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['D0203'], 'Transformations': [('D0203', [('D0203', 'None', 'CumSum_', 'T+S+R'), ('D0203', 'None', 'Diff_', 'T+S+R'), ('D0203', 'None', 'RelDiff_', 'T+S+R'), ('D0203', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'D0203', 'Transformations': [('D0203', 'None', 'CumSum_', 'T+S+R'), ('D0203', 'None', 'Diff_', 'T+S+R'), ('D0203', 'None', 'RelDiff_', 'T+S+R'), ('D0203', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'D0203', 'Transformations': [('D0203', 'None', 'CumSum_', 'T+S+R'), ('D0203', 'None', 'Diff_', 'T+S+R'), ('D0203', 'None', 'RelDiff_', 'T+S+R'), ('D0203', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0203', 'Model': '_D0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.02, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0203', 'Model': '_D0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.118, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0203'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.144, ('FINALIZE_TRAINING', {'Signals': ['D0203'], 'Transformations': [('D0203', [('D0203', 'None', 'CumSum_', 'T+S+R'), ('D0203', 'None', 'Diff_', 'T+S+R'), ('D0203', 'None', 'RelDiff_', 'T+S+R'), ('D0203', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=20 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='D0203' Length=21  Min=50.0 Max=54.0  Mean=52.76190476190476 StdDev=1.1507662831994832
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_D0203' Min=0.0 Max=1.0  Mean=0.6904761904761905 StdDev=0.28769157079987073
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_D0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_D0203_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_D0203_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_D0203_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0054 MAPE_Forecast=0.0054 MAPE_Test=0.0054
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0055 SMAPE_Forecast=0.0055 SMAPE_Test=0.0055
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9524 MASE_Forecast=0.9524 MASE_Test=0.9524
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=0.42857142857142855 CRPS_Forecast=0.42857142857142855 CRPS_Test=0.42857142857142855
INFO:pyaf.std:MODEL_L1 L1_Fit=0.2857142857142857 L1_Forecast=0.2857142857142857 L1_Test=0.2857142857142857
INFO:pyaf.std:MODEL_L2 L2_Fit=0.5345224838248488 L2_Forecast=0.5345224838248488 L2_Test=0.5345224838248488
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.002193665242556365 LnQ_Forecast=0.002193665242556365 LnQ_Test=0.002193665242556365
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=0.0 MedAE_Forecast=0.0 MedAE_Test=0.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _D0203_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _D0203             T+S+R  ...  0.0054       0.0054   0.0054
1   None         _D0203             T+S+R  ...  0.0054       0.0054   0.0054
2   None   CumSum_D0203             T+S+R  ...  0.0054       0.0054   0.0054
3   None   CumSum_D0203             T+S+R  ...  0.0054       0.0054   0.0054
4   None     Diff_D0203             T+S+R  ...  0.0054       0.0054   0.0054
..   ...            ...               ...  ...     ...          ...      ...
59  None  RelDiff_D0203             T+S+R  ...  0.0519       0.0519   0.0519
60  None  RelDiff_D0203             T+S+R  ...  0.0519       0.0519   0.0519
61  None  RelDiff_D0203             T+S+R  ...  0.0519       0.0519   0.0519
62  None   CumSum_D0203             T+S+R  ...  0.0773       0.0773   0.0773
63  None   CumSum_D0203             T+S+R  ...  0.0773       0.0773   0.0773

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _D0203             T+S+R  ...  0.0054       0.0054   0.0054
1  None         _D0203             T+S+R  ...  0.0054       0.0054   0.0054
2  None   CumSum_D0203             T+S+R  ...  0.0054       0.0054   0.0054
3  None   CumSum_D0203             T+S+R  ...  0.0054       0.0054   0.0054
4  None     Diff_D0203             T+S+R  ...  0.0054       0.0054   0.0054

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['D0203'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.093, ('FORECASTING', {'Signals': ['D0203'], 'Horizon': 6}))
6 0    51.0
1    50.0
2    50.0
3    50.0
4    50.0
5    50.0
Name: D0203, dtype: float64
6 0    52.0
1    52.0
2    52.0
3    52.0
4    52.0
5    52.0
Name: D0203_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL D0203 D0203 [51.0, 50.0, 50.0, 50.0, 50.0, 50.0]
FORECAST_DETAIL_PREDICTED D0203 D0203 [52.0, 52.0, 52.0, 52.0, 52.0, 52.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON D0203 D0203 21 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ D0203 D0203 2.9245221614837646
BENCHMARK_PERF_DETAIL_BEST_MODEL D0203 D0203 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT D0203 D0203 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE D0203 D0203 0.0366 0.0359 9.1667
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 D0203 D0203 1.8333333333333333 1.8708286933869707 -24.199999996975997
BENCHMARK_SUCCESS 'M4_COMP_DEMOGRAPHICS_D0203_6'
