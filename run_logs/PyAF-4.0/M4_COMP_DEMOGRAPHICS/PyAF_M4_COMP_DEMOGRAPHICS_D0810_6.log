BENCH_DATA M4_COMP_DEMOGRAPHICS
TIME :  Date N= 20 H= 6 HEAD= [0 1 2 3 4] TAIL= [15 16 17 18 19]
SIGNAL :  D0810 N= 20 H= 6 HEAD= [33. 28. 25. 18. 18.] TAIL= [12. 13. 16. 18.  8.]
   D0810  Date
0   33.0     0
1   28.0     1
2   25.0     2
3   18.0     3
4   18.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 20 entries, 0 to 19
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   D0810   20 non-null     float64
 1   Date    20 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 480.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['D0810'], 'Transformations': [('D0810', 'None', '_', 'T+S+R'), ('D0810', 'None', 'Diff_', 'T+S+R'), ('D0810', 'None', 'RelDiff_', 'T+S+R'), ('D0810', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0810', 'Transformation': '_D0810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.82, ('TRAINING', {'Signal': 'D0810', 'Transformation': '_D0810'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0810', 'Transformation': 'Diff_D0810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.65, ('TRAINING', {'Signal': 'D0810', 'Transformation': 'Diff_D0810'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0810', 'Transformation': 'RelDiff_D0810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.616, ('TRAINING', {'Signal': 'D0810', 'Transformation': 'RelDiff_D0810'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'D0810', 'Transformation': 'CumSum_D0810'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.422, ('TRAINING', {'Signal': 'D0810', 'Transformation': 'CumSum_D0810'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.508, ('SIGNAL_TRAINING', {'Signals': ['D0810'], 'Transformations': [('D0810', 'None', '_', 'T+S+R'), ('D0810', 'None', 'Diff_', 'T+S+R'), ('D0810', 'None', 'RelDiff_', 'T+S+R'), ('D0810', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['D0810'], 'Transformations': [('D0810', [('D0810', 'None', 'CumSum_', 'T+S+R'), ('D0810', 'None', 'Diff_', 'T+S+R'), ('D0810', 'None', 'RelDiff_', 'T+S+R'), ('D0810', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'D0810', 'Transformations': [('D0810', 'None', 'CumSum_', 'T+S+R'), ('D0810', 'None', 'Diff_', 'T+S+R'), ('D0810', 'None', 'RelDiff_', 'T+S+R'), ('D0810', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'D0810', 'Transformations': [('D0810', 'None', 'CumSum_', 'T+S+R'), ('D0810', 'None', 'Diff_', 'T+S+R'), ('D0810', 'None', 'RelDiff_', 'T+S+R'), ('D0810', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0810', 'Model': '_D0810_LinearTrend_residue_bestCycle_byMAPE_residue_AR(5)'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'D0810', 'Model': '_D0810_LinearTrend_residue_bestCycle_byMAPE_residue_AR(5)'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0810'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.128, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'D0810'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.156, ('FINALIZE_TRAINING', {'Signals': ['D0810'], 'Transformations': [('D0810', [('D0810', 'None', 'CumSum_', 'T+S+R'), ('D0810', 'None', 'Diff_', 'T+S+R'), ('D0810', 'None', 'RelDiff_', 'T+S+R'), ('D0810', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=19 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='D0810' Length=20  Min=8.0 Max=33.0  Mean=17.55 StdDev=5.536018424824831
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_D0810' Min=0.0 Max=1.0  Mean=0.3820000000000002 StdDev=0.22144073699299327
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_D0810_LinearTrend_residue_bestCycle_byMAPE_residue_AR(5)' [LinearTrend + Cycle_None + AR]
INFO:pyaf.std:TREND_DETAIL '_D0810_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_D0810_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_D0810_LinearTrend_residue_bestCycle_byMAPE_residue_AR(5)' [AR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1632 MAPE_Forecast=0.1632 MAPE_Test=0.1632
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1542 SMAPE_Forecast=0.1542 SMAPE_Test=0.1542
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9649 MASE_Forecast=0.9649 MASE_Test=0.9649
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.4186507279101281 CRPS_Forecast=1.4186507279101281 CRPS_Test=1.4186507279101281
INFO:pyaf.std:MODEL_L1 L1_Fit=2.5898861223071803 L1_Forecast=2.5898861223071803 L1_Test=2.5898861223071803
INFO:pyaf.std:MODEL_L2 L2_Fit=3.1789880334599374 L2_Forecast=3.1789880334599374 L2_Test=3.1789880334599374
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.763126600713555 LnQ_Forecast=0.763126600713555 LnQ_Test=0.763126600713555
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.229701448333728 MedAE_Forecast=2.229701448333728 MedAE_Test=2.229701448333728
INFO:pyaf.std:MODEL_COMPLEXITY 6.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.559962962962963, array([-0.35592593]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _D0810_LinearTrend_residue_bestCycle_byMAPE None -0.02883235867446396 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 _D0810_LinearTrend_residue_bestCycle_byMAPE_residue_Lag1 0.16589264616220226
INFO:pyaf.std:AR_MODEL_COEFF 2 _D0810_LinearTrend_residue_bestCycle_byMAPE_residue_Lag2 0.10006154701226144
INFO:pyaf.std:AR_MODEL_COEFF 3 _D0810_LinearTrend_residue_bestCycle_byMAPE_residue_Lag3 0.06734284401055474
INFO:pyaf.std:AR_MODEL_COEFF 4 _D0810_LinearTrend_residue_bestCycle_byMAPE_residue_Lag4 0.03604230165220909
INFO:pyaf.std:AR_MODEL_COEFF 5 _D0810_LinearTrend_residue_bestCycle_byMAPE_residue_Lag5 -0.00325361613489894
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _D0810             T+S+R  ...  0.1583       0.1583   0.1583
1   None         _D0810             T+S+R  ...  0.1583       0.1583   0.1583
2   None         _D0810             T+S+R  ...  0.1632       0.1632   0.1632
3   None         _D0810             T+S+R  ...  0.1632       0.1632   0.1632
4   None         _D0810             T+S+R  ...  0.1781       0.1781   0.1781
..   ...            ...               ...  ...     ...          ...      ...
59  None  RelDiff_D0810             T+S+R  ...  1.0771       1.0771   1.0771
60  None  RelDiff_D0810             T+S+R  ...  1.0771       1.0771   1.0771
61  None  RelDiff_D0810             T+S+R  ...  1.0771       1.0771   1.0771
62  None  RelDiff_D0810             T+S+R  ...  1.0771       1.0771   1.0771
63  None  RelDiff_D0810             T+S+R  ...  1.0771       1.0771   1.0771

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None         _D0810             T+S+R  ...  0.1583       0.1583   0.1583
1  None         _D0810             T+S+R  ...  0.1583       0.1583   0.1583
2  None         _D0810             T+S+R  ...  0.1632       0.1632   0.1632
3  None         _D0810             T+S+R  ...  0.1632       0.1632   0.1632
4  None         _D0810             T+S+R  ...  0.1781       0.1781   0.1781

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['D0810'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.104, ('FORECASTING', {'Signals': ['D0810'], 'Horizon': 6}))
6 0     8.0
1     8.0
2    10.0
3    10.0
4    13.0
5    21.0
Name: D0810, dtype: float64
6 0    11.893320
1    11.481259
2    10.894491
3    10.354300
4    10.054207
5     9.586461
Name: D0810_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL D0810 D0810 [8.0, 8.0, 10.0, 10.0, 13.0, 21.0]
FORECAST_DETAIL_PREDICTED D0810 D0810 [11.8933197371956, 11.481259349442048, 10.894491464017646, 10.354299553881106, 10.054206825417857, 9.586460611466462]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON D0810 D0810 20 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ D0810 D0810 2.845419406890869
BENCHMARK_PERF_DETAIL_BEST_MODEL D0810 D0810 LinearTrend + Cycle_None + AR
BENCHMARK_PERF_DETAIL_PERF_COUNT D0810 D0810 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE D0810 D0810 0.3028 0.3119 1.4733
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 D0810 D0810 3.83045044460868 5.278088782697397 -0.37760434495669326
BENCHMARK_SUCCESS 'M4_COMP_DEMOGRAPHICS_D0810_6'
