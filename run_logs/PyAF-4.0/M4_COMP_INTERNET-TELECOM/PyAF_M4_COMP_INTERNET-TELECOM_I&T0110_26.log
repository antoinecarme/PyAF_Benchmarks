BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 261 H= 26 HEAD= [0 1 2 3 4] TAIL= [256 257 258 259 260]
SIGNAL :  I&T0110 N= 261 H= 26 HEAD= [ 96.  96. 105. 101.  98.] TAIL= [101. 105. 100.  87.  91.]
   I&T0110  Date
0     96.0     0
1     96.0     1
2    105.0     2
3    101.0     3
4     98.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 261 entries, 0 to 260
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0110  261 non-null    float64
 1   Date     261 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0110'], 'Transformations': [('I&T0110', 'None', '_', 'T+S+R'), ('I&T0110', 'None', 'Diff_', 'T+S+R'), ('I&T0110', 'None', 'RelDiff_', 'T+S+R'), ('I&T0110', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0110', 'Transformation': '_I&T0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.182, ('TRAINING', {'Signal': 'I&T0110', 'Transformation': '_I&T0110'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0110', 'Transformation': 'Diff_I&T0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.594, ('TRAINING', {'Signal': 'I&T0110', 'Transformation': 'Diff_I&T0110'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0110', 'Transformation': 'RelDiff_I&T0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.678, ('TRAINING', {'Signal': 'I&T0110', 'Transformation': 'RelDiff_I&T0110'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0110', 'Transformation': 'CumSum_I&T0110'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.572, ('TRAINING', {'Signal': 'I&T0110', 'Transformation': 'CumSum_I&T0110'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.029, ('SIGNAL_TRAINING', {'Signals': ['I&T0110'], 'Transformations': [('I&T0110', 'None', '_', 'T+S+R'), ('I&T0110', 'None', 'Diff_', 'T+S+R'), ('I&T0110', 'None', 'RelDiff_', 'T+S+R'), ('I&T0110', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0110'], 'Transformations': [('I&T0110', [('I&T0110', 'None', 'CumSum_', 'T+S+R'), ('I&T0110', 'None', 'Diff_', 'T+S+R'), ('I&T0110', 'None', 'RelDiff_', 'T+S+R'), ('I&T0110', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0110', 'Transformations': [('I&T0110', 'None', 'CumSum_', 'T+S+R'), ('I&T0110', 'None', 'Diff_', 'T+S+R'), ('I&T0110', 'None', 'RelDiff_', 'T+S+R'), ('I&T0110', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0110', 'Transformations': [('I&T0110', 'None', 'CumSum_', 'T+S+R'), ('I&T0110', 'None', 'Diff_', 'T+S+R'), ('I&T0110', 'None', 'RelDiff_', 'T+S+R'), ('I&T0110', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0110', 'Model': '_I&T0110_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0110', 'Model': '_I&T0110_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0110'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.571, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0110'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.601, ('FINALIZE_TRAINING', {'Signals': ['I&T0110'], 'Transformations': [('I&T0110', [('I&T0110', 'None', 'CumSum_', 'T+S+R'), ('I&T0110', 'None', 'Diff_', 'T+S+R'), ('I&T0110', 'None', 'RelDiff_', 'T+S+R'), ('I&T0110', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=187 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0110' Length=261  Min=78.0 Max=170.0  Mean=100.44444444444444 StdDev=11.773150251183917
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0110' Min=0.0 Max=1.0  Mean=0.24396135265700483 StdDev=0.12796902446939035
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0110_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0110_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0110_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0110_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0819 MAPE_Forecast=0.0572 MAPE_Test=0.0701
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0815 SMAPE_Forecast=0.0571 SMAPE_Test=0.0692
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9947 MASE_Forecast=0.9826 MASE_Test=0.9919
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.9248686524822696 CRPS_Forecast=2.158341641337386 CRPS_Test=2.6307692307692307
INFO:pyaf.std:MODEL_L1 L1_Fit=8.563829787234043 L1_Forecast=5.340425531914893 L1_Test=7.538461538461538
INFO:pyaf.std:MODEL_L2 L2_Fit=12.662559991246434 L2_Forecast=6.905132226382764 L2_Test=9.844951849708403
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.3690701371889293 LnQ_Forecast=0.26393676759912327 LnQ_Test=0.20431595109835615
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=6.0 MedAE_Forecast=4.0 MedAE_Test=6.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.1956521739130435
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0110_Lag1Trend_residue_bestCycle_byMAPE None -0.0054347826086956486 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation  ...  ForecastMAPE      TestMAPE
0   None         _I&T0110  ...  5.670000e-02  6.780000e-02
1   None         _I&T0110  ...  5.670000e-02  6.780000e-02
2   None         _I&T0110  ...  5.720000e-02  7.010000e-02
3   None         _I&T0110  ...  5.720000e-02  7.010000e-02
4   None   CumSum_I&T0110  ...  5.720000e-02  7.010000e-02
..   ...              ...  ...           ...           ...
59  None  RelDiff_I&T0110  ...  2.036865e+02  1.007000e-01
60  None  RelDiff_I&T0110  ...  1.900250e+07  1.706348e+07
61  None  RelDiff_I&T0110  ...  1.900250e+07  1.706348e+07
62  None  RelDiff_I&T0110  ...  1.900250e+07  1.706348e+07
63  None  RelDiff_I&T0110  ...  1.900250e+07  1.706348e+07

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _I&T0110             T+S+R  ...  0.0633       0.0567   0.0678
1  None        _I&T0110             T+S+R  ...  0.0633       0.0567   0.0678
2  None        _I&T0110             T+S+R  ...  0.0819       0.0572   0.0701
3  None        _I&T0110             T+S+R  ...  0.0819       0.0572   0.0701
4  None  CumSum_I&T0110             T+S+R  ...  0.0829       0.0572   0.0701

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0110'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.419, ('FORECASTING', {'Signals': ['I&T0110'], 'Horizon': 26}))
26 0     104.0
1     105.0
2     111.0
3     107.0
4      99.0
5     104.0
6      98.0
7     104.0
8     104.0
9     123.0
10    102.0
11     98.0
12     97.0
13     89.0
14     86.0
15     91.0
16    104.0
17     98.0
18     95.0
19     85.0
20     99.0
21    104.0
22     99.0
23     97.0
24    106.0
25     99.0
Name: I&T0110, dtype: float64
26 0     91.0
1     91.0
2     91.0
3     91.0
4     91.0
5     91.0
6     91.0
7     91.0
8     91.0
9     91.0
10    91.0
11    91.0
12    91.0
13    91.0
14    91.0
15    91.0
16    91.0
17    91.0
18    91.0
19    91.0
20    91.0
21    91.0
22    91.0
23    91.0
24    91.0
25    91.0
Name: I&T0110_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0110 I&T0110 [104.0, 105.0, 111.0, 107.0, 99.0, 104.0, 98.0, 104.0, 104.0, 123.0, 102.0, 98.0, 97.0, 89.0, 86.0, 91.0, 104.0, 98.0, 95.0, 85.0, 99.0, 104.0, 99.0, 97.0, 106.0, 99.0]
FORECAST_DETAIL_PREDICTED I&T0110 I&T0110 [91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0, 91.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0110 I&T0110 261 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0110 I&T0110 4.14635968208313
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0110 I&T0110 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0110 I&T0110 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0110 I&T0110 0.0991 0.1056 1.507
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0110 I&T0110 10.307692307692308 12.076678096486377 -1.4630758469070049
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0110_26'
