BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 52 H= 26 HEAD= [0 1 2 3 4] TAIL= [47 48 49 50 51]
SIGNAL :  I&T0111 N= 52 H= 26 HEAD= [50. 60. 75. 65. 90.] TAIL= [260. 270. 280. 285. 290.]
   I&T0111  Date
0     50.0     0
1     60.0     1
2     75.0     2
3     65.0     3
4     90.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 52 entries, 0 to 51
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0111  52 non-null     float64
 1   Date     52 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0111'], 'Transformations': [('I&T0111', 'None', '_', 'T+S+R'), ('I&T0111', 'None', 'Diff_', 'T+S+R'), ('I&T0111', 'None', 'RelDiff_', 'T+S+R'), ('I&T0111', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0111', 'Transformation': '_I&T0111'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.915, ('TRAINING', {'Signal': 'I&T0111', 'Transformation': '_I&T0111'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0111', 'Transformation': 'Diff_I&T0111'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.623, ('TRAINING', {'Signal': 'I&T0111', 'Transformation': 'Diff_I&T0111'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0111', 'Transformation': 'RelDiff_I&T0111'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.626, ('TRAINING', {'Signal': 'I&T0111', 'Transformation': 'RelDiff_I&T0111'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0111', 'Transformation': 'CumSum_I&T0111'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.44, ('TRAINING', {'Signal': 'I&T0111', 'Transformation': 'CumSum_I&T0111'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.605, ('SIGNAL_TRAINING', {'Signals': ['I&T0111'], 'Transformations': [('I&T0111', 'None', '_', 'T+S+R'), ('I&T0111', 'None', 'Diff_', 'T+S+R'), ('I&T0111', 'None', 'RelDiff_', 'T+S+R'), ('I&T0111', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0111'], 'Transformations': [('I&T0111', [('I&T0111', 'None', 'CumSum_', 'T+S+R'), ('I&T0111', 'None', 'Diff_', 'T+S+R'), ('I&T0111', 'None', 'RelDiff_', 'T+S+R'), ('I&T0111', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0111', 'Transformations': [('I&T0111', 'None', 'CumSum_', 'T+S+R'), ('I&T0111', 'None', 'Diff_', 'T+S+R'), ('I&T0111', 'None', 'RelDiff_', 'T+S+R'), ('I&T0111', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0111', 'Transformations': [('I&T0111', 'None', 'CumSum_', 'T+S+R'), ('I&T0111', 'None', 'Diff_', 'T+S+R'), ('I&T0111', 'None', 'RelDiff_', 'T+S+R'), ('I&T0111', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0111', 'Model': 'Diff_I&T0111_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0111', 'Model': 'Diff_I&T0111_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0111'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.713, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0111'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.742, ('FINALIZE_TRAINING', {'Signals': ['I&T0111'], 'Transformations': [('I&T0111', [('I&T0111', 'None', 'CumSum_', 'T+S+R'), ('I&T0111', 'None', 'Diff_', 'T+S+R'), ('I&T0111', 'None', 'RelDiff_', 'T+S+R'), ('I&T0111', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=51 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0111' Length=52  Min=50.0 Max=290.0  Mean=180.19230769230768 StdDev=68.09892082662896
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_I&T0111' Min=-0.12500000000000006 Max=0.18750000000000006  Mean=0.019230769230769232 StdDev=0.07307059689216663
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_I&T0111_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_I&T0111_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_I&T0111_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_I&T0111_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0604 MAPE_Forecast=0.0604 MAPE_Test=0.0604
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0613 SMAPE_Forecast=0.0613 SMAPE_Test=0.0613
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6785 MASE_Forecast=0.6785 MASE_Test=0.6785
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=20.581027689199054 CRPS_Forecast=20.581027689199054 CRPS_Test=20.581027689199054
INFO:pyaf.std:MODEL_L1 L1_Fit=9.84454847449387 L1_Forecast=9.84454847449387 L1_Test=9.84454847449387
INFO:pyaf.std:MODEL_L2 L2_Fit=13.240205632184233 L2_Forecast=13.240205632184233 L2_Test=13.240205632184233
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.3496281103652517 LnQ_Forecast=0.3496281103652517 LnQ_Test=0.3496281103652517
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=8.138105781322196 MedAE_Forecast=8.138105781322196 MedAE_Test=8.138105781322196
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.02227411839941531, array([-0.0060867]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_I&T0111_LinearTrend_residue_bestCycle_byMAPE None 0.0033927694958853626 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None     Diff_I&T0111             T+S+R  ...  0.0588       0.0588   0.0588
1   None     Diff_I&T0111             T+S+R  ...  0.0588       0.0588   0.0588
2   None     Diff_I&T0111             T+S+R  ...  0.0590       0.0590   0.0590
3   None     Diff_I&T0111             T+S+R  ...  0.0590       0.0590   0.0590
4   None     Diff_I&T0111             T+S+R  ...  0.0604       0.0604   0.0604
..   ...              ...               ...  ...     ...          ...      ...
59  None  RelDiff_I&T0111             T+S+R  ...  0.6614       0.6614   0.6614
60  None  RelDiff_I&T0111             T+S+R  ...  0.6614       0.6614   0.6614
61  None  RelDiff_I&T0111             T+S+R  ...  0.6614       0.6614   0.6614
62  None   CumSum_I&T0111             T+S+R  ...  1.6030       1.6030   1.6030
63  None   CumSum_I&T0111             T+S+R  ...  1.6030       1.6030   1.6030

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None   Diff_I&T0111             T+S+R  ...  0.0588       0.0588   0.0588
1  None   Diff_I&T0111             T+S+R  ...  0.0588       0.0588   0.0588
2  None   Diff_I&T0111             T+S+R  ...  0.0590       0.0590   0.0590
3  None   Diff_I&T0111             T+S+R  ...  0.0590       0.0590   0.0590
4  None   Diff_I&T0111             T+S+R  ...  0.0604       0.0604   0.0604

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0111'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.563, ('FORECASTING', {'Signals': ['I&T0111'], 'Horizon': 26}))
26 0     270.0
1     245.0
2     290.0
3     265.0
4     275.0
5     300.0
6     310.0
7     320.0
8     380.0
9     360.0
10    355.0
11    380.0
12    390.0
13    435.0
14    415.0
15    435.0
16    450.0
17    450.0
18    405.0
19    485.0
20    395.0
21    400.0
22    405.0
23    405.0
24    400.0
25    410.0
Name: I&T0111, dtype: float64
26 0     293.856338
1     297.684032
2     301.483083
3     305.253490
4     308.995255
5     312.708376
6     316.392854
7     320.048688
8     323.675879
9     327.274427
10    330.844332
11    334.385593
12    337.898212
13    341.382186
14    344.837518
15    348.264206
16    351.662251
17    355.031653
18    358.372411
19    361.684526
20    364.967998
21    368.222826
22    371.449012
23    374.646554
24    377.815452
25    380.955708
Name: I&T0111_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0111 I&T0111 [270.0, 245.0, 290.0, 265.0, 275.0, 300.0, 310.0, 320.0, 380.0, 360.0, 355.0, 380.0, 390.0, 435.0, 415.0, 435.0, 450.0, 450.0, 405.0, 485.0, 395.0, 400.0, 405.0, 405.0, 400.0, 410.0]
FORECAST_DETAIL_PREDICTED I&T0111 I&T0111 [293.85633752861634, 297.6840317709396, 301.48308272696977, 305.25349039670675, 308.9952547801506, 312.7083758773013, 316.3928536881589, 320.04868821272333, 323.67587945099467, 327.27442740297283, 330.8443320686579, 334.38559344804975, 337.89821154114844, 341.3821863479541, 344.8375178684665, 348.2642061026858, 351.662251050612, 355.03165271224503, 358.37241108758496, 361.6845261766317, 364.96799797938536, 368.2228264958458, 371.44901172601317, 374.6465536698874, 377.8154523274685, 380.9557076987564]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0111 I&T0111 52 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0111 I&T0111 4.00835657119751
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0111 I&T0111 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0111 I&T0111 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0111 I&T0111 0.1179 0.1243 1.8648
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0111 I&T0111 45.5019757625464 55.00065194868514 0.27306228744390526
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0111_26'
