BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 94 H= 26 HEAD= [0 1 2 3 4] TAIL= [89 90 91 92 93]
SIGNAL :  I&T0102 N= 94 H= 26 HEAD= [184. 160. 152. 152. 152.] TAIL= [198. 232. 248. 228. 206.]
   I&T0102  Date
0    184.0     0
1    160.0     1
2    152.0     2
3    152.0     3
4    152.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 94 entries, 0 to 93
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0102  94 non-null     float64
 1   Date     94 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 2.2 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0102'], 'Transformations': [('I&T0102', 'None', '_', 'T+S+R'), ('I&T0102', 'None', 'Diff_', 'T+S+R'), ('I&T0102', 'None', 'RelDiff_', 'T+S+R'), ('I&T0102', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0102', 'Transformation': '_I&T0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.093, ('TRAINING', {'Signal': 'I&T0102', 'Transformation': '_I&T0102'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0102', 'Transformation': 'Diff_I&T0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.578, ('TRAINING', {'Signal': 'I&T0102', 'Transformation': 'Diff_I&T0102'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0102', 'Transformation': 'RelDiff_I&T0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.605, ('TRAINING', {'Signal': 'I&T0102', 'Transformation': 'RelDiff_I&T0102'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0102', 'Transformation': 'CumSum_I&T0102'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.636, ('TRAINING', {'Signal': 'I&T0102', 'Transformation': 'CumSum_I&T0102'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.915, ('SIGNAL_TRAINING', {'Signals': ['I&T0102'], 'Transformations': [('I&T0102', 'None', '_', 'T+S+R'), ('I&T0102', 'None', 'Diff_', 'T+S+R'), ('I&T0102', 'None', 'RelDiff_', 'T+S+R'), ('I&T0102', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0102'], 'Transformations': [('I&T0102', [('I&T0102', 'None', 'CumSum_', 'T+S+R'), ('I&T0102', 'None', 'Diff_', 'T+S+R'), ('I&T0102', 'None', 'RelDiff_', 'T+S+R'), ('I&T0102', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0102', 'Transformations': [('I&T0102', 'None', 'CumSum_', 'T+S+R'), ('I&T0102', 'None', 'Diff_', 'T+S+R'), ('I&T0102', 'None', 'RelDiff_', 'T+S+R'), ('I&T0102', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.009, ('MODEL_SELECTION', {'Signal': 'I&T0102', 'Transformations': [('I&T0102', 'None', 'CumSum_', 'T+S+R'), ('I&T0102', 'None', 'Diff_', 'T+S+R'), ('I&T0102', 'None', 'RelDiff_', 'T+S+R'), ('I&T0102', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0102', 'Model': 'CumSum_I&T0102_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.041, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0102', 'Model': 'CumSum_I&T0102_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0102'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.766, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0102'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.816, ('FINALIZE_TRAINING', {'Signals': ['I&T0102'], 'Transformations': [('I&T0102', [('I&T0102', 'None', 'CumSum_', 'T+S+R'), ('I&T0102', 'None', 'Diff_', 'T+S+R'), ('I&T0102', 'None', 'RelDiff_', 'T+S+R'), ('I&T0102', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=93 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0102' Length=94  Min=140.0 Max=268.0  Mean=187.5531914893617 StdDev=34.80053100025202
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_I&T0102' Min=0.34375 Max=34.921875  Mean=12.39029255319149 StdDev=10.327626815366852
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_I&T0102_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [PolyTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_I&T0102_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_I&T0102_PolyTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_I&T0102_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1047 MAPE_Forecast=0.1047 MAPE_Test=0.1047
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.104 SMAPE_Forecast=0.104 SMAPE_Test=0.104
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8484 MASE_Forecast=0.8484 MASE_Test=0.8484
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=7.656744910692415 CRPS_Forecast=7.656744910692415 CRPS_Test=7.656744910692415
INFO:pyaf.std:MODEL_L1 L1_Fit=19.72194536388167 L1_Forecast=19.72194536388167 L1_Test=19.72194536388167
INFO:pyaf.std:MODEL_L2 L2_Fit=24.179034026889138 L2_Forecast=24.179034026889138 L2_Test=24.179034026889138
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.4575894802299156 LnQ_Forecast=1.4575894802299156 LnQ_Test=1.4575894802299156
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=15.914226798348096 MedAE_Forecast=15.914226798348096 MedAE_Test=15.914226798348096
INFO:pyaf.std:MODEL_COMPLEXITY 4.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (0.4621564753068803, array([ 9.36305221, 12.06362766, 12.67879427]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_I&T0102_PolyTrend_residue_bestCycle_byMAPE None -0.11267524378175564 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation  ...  ForecastMAPE      TestMAPE
0   None         _I&T0102  ...  9.470000e-02  9.470000e-02
1   None         _I&T0102  ...  9.470000e-02  9.470000e-02
2   None         _I&T0102  ...  9.680000e-02  9.680000e-02
3   None         _I&T0102  ...  9.680000e-02  9.680000e-02
4   None         _I&T0102  ...  1.037000e-01  1.037000e-01
..   ...              ...  ...           ...           ...
59  None  RelDiff_I&T0102  ...  1.852881e+07  1.852881e+07
60  None  RelDiff_I&T0102  ...  2.054281e+07  2.054281e+07
61  None  RelDiff_I&T0102  ...  2.054281e+07  2.054281e+07
62  None  RelDiff_I&T0102  ...  2.056759e+07  2.056759e+07
63  None  RelDiff_I&T0102  ...  2.056759e+07  2.056759e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None       _I&T0102             T+S+R  ...  0.0947       0.0947   0.0947
1  None       _I&T0102             T+S+R  ...  0.0947       0.0947   0.0947
2  None       _I&T0102             T+S+R  ...  0.0968       0.0968   0.0968
3  None       _I&T0102             T+S+R  ...  0.0968       0.0968   0.0968
4  None       _I&T0102             T+S+R  ...  0.1037       0.1037   0.1037

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0102'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.725, ('FORECASTING', {'Signals': ['I&T0102'], 'Horizon': 26}))
26 0     208.0
1     218.0
2     196.0
3     196.0
4     192.0
5     210.0
6     244.0
7     226.0
8     220.0
9     240.0
10    226.0
11    196.0
12    236.0
13    214.0
14    198.0
15    242.0
16    262.0
17    268.0
18    266.0
19    272.0
20    282.0
21    306.0
22    286.0
23    294.0
24    306.0
25    224.0
Name: I&T0102, dtype: float64
26 0     239.188805
1     240.683811
2     242.190922
3     243.710139
4     245.241462
5     246.784891
6     248.340425
7     249.908065
8     251.487811
9     253.079663
10    254.683620
11    256.299683
12    257.927851
13    259.568126
14    261.220506
15    262.884991
16    264.561583
17    266.250280
18    267.951083
19    269.663991
20    271.389006
21    273.126126
22    274.875351
23    276.636683
24    278.410120
25    280.195663
Name: I&T0102_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0102 I&T0102 [208.0, 218.0, 196.0, 196.0, 192.0, 210.0, 244.0, 226.0, 220.0, 240.0, 226.0, 196.0, 236.0, 214.0, 198.0, 242.0, 262.0, 268.0, 266.0, 272.0, 282.0, 306.0, 286.0, 294.0, 306.0, 224.0]
FORECAST_DETAIL_PREDICTED I&T0102 I&T0102 [239.1888049023164, 240.68381068139934, 242.1909221722526, 243.71013937487805, 245.2414622892702, 246.7848909154327, 248.34042525336918, 249.90806530306872, 251.4878110645459, 253.07966253778613, 254.68361972280036, 256.29968261958675, 257.9278512281344, 259.56812554845965, 261.22050558055344, 262.88499132441393, 264.5615827800484, 266.2502799474496, 267.95108282662295, 269.66399141756665, 271.38900572027705, 273.12612573476144, 274.87535146101254, 276.6366828990358, 278.4101200488258, 280.19566291038973]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0102 I&T0102 94 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0102 I&T0102 4.585200786590576
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0102 I&T0102 PolyTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0102 I&T0102 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0102 I&T0102 0.1257 0.1155 1.4099
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0102 I&T0102 27.52144391563077 33.30719584771642 0.11289929737657689
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0102_26'
