BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 133 H= 26 HEAD= [0 1 2 3 4] TAIL= [128 129 130 131 132]
SIGNAL :  I&T0208 N= 133 H= 26 HEAD= [5. 5. 5. 5. 5.] TAIL= [125. 125. 140. 140. 130.]
   I&T0208  Date
0      5.0     0
1      5.0     1
2      5.0     2
3      5.0     3
4      5.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 133 entries, 0 to 132
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0208  133 non-null    float64
 1   Date     133 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0208'], 'Transformations': [('I&T0208', 'None', '_', 'T+S+R'), ('I&T0208', 'None', 'Diff_', 'T+S+R'), ('I&T0208', 'None', 'RelDiff_', 'T+S+R'), ('I&T0208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0208', 'Transformation': '_I&T0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.976, ('TRAINING', {'Signal': 'I&T0208', 'Transformation': '_I&T0208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0208', 'Transformation': 'Diff_I&T0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.538, ('TRAINING', {'Signal': 'I&T0208', 'Transformation': 'Diff_I&T0208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0208', 'Transformation': 'RelDiff_I&T0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.629, ('TRAINING', {'Signal': 'I&T0208', 'Transformation': 'RelDiff_I&T0208'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0208', 'Transformation': 'CumSum_I&T0208'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.486, ('TRAINING', {'Signal': 'I&T0208', 'Transformation': 'CumSum_I&T0208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.63, ('SIGNAL_TRAINING', {'Signals': ['I&T0208'], 'Transformations': [('I&T0208', 'None', '_', 'T+S+R'), ('I&T0208', 'None', 'Diff_', 'T+S+R'), ('I&T0208', 'None', 'RelDiff_', 'T+S+R'), ('I&T0208', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0208'], 'Transformations': [('I&T0208', [('I&T0208', 'None', 'CumSum_', 'T+S+R'), ('I&T0208', 'None', 'Diff_', 'T+S+R'), ('I&T0208', 'None', 'RelDiff_', 'T+S+R'), ('I&T0208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0208', 'Transformations': [('I&T0208', 'None', 'CumSum_', 'T+S+R'), ('I&T0208', 'None', 'Diff_', 'T+S+R'), ('I&T0208', 'None', 'RelDiff_', 'T+S+R'), ('I&T0208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'I&T0208', 'Transformations': [('I&T0208', 'None', 'CumSum_', 'T+S+R'), ('I&T0208', 'None', 'Diff_', 'T+S+R'), ('I&T0208', 'None', 'RelDiff_', 'T+S+R'), ('I&T0208', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0208', 'Model': '_I&T0208_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0208', 'Model': '_I&T0208_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.572, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0208'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.601, ('FINALIZE_TRAINING', {'Signals': ['I&T0208'], 'Transformations': [('I&T0208', [('I&T0208', 'None', 'CumSum_', 'T+S+R'), ('I&T0208', 'None', 'Diff_', 'T+S+R'), ('I&T0208', 'None', 'RelDiff_', 'T+S+R'), ('I&T0208', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=132 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0208' Length=133  Min=5.0 Max=210.0  Mean=104.32330827067669 StdDev=64.22406136510115
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0208' Min=0.0 Max=1.0  Mean=0.48450394278378894 StdDev=0.3132881042200056
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0208_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0208_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0208_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0208_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0603 MAPE_Forecast=0.0603 MAPE_Test=0.0603
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0631 SMAPE_Forecast=0.0631 SMAPE_Test=0.0631
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9925 MASE_Forecast=0.9925 MASE_Test=0.9925
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=18.872855775803146 CRPS_Forecast=18.872855775803146 CRPS_Test=18.872855775803146
INFO:pyaf.std:MODEL_L1 L1_Fit=4.849624060150376 L1_Forecast=4.849624060150376 L1_Test=4.849624060150376
INFO:pyaf.std:MODEL_L2 L2_Fit=7.11083045603227 L2_Forecast=7.11083045603227 L2_Test=7.11083045603227
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.7722366443673558 LnQ_Forecast=1.7722366443673558 LnQ_Test=1.7722366443673558
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=5.0 MedAE_Forecast=5.0 MedAE_Test=5.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0208_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None        _I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
1   None        _I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
2   None  CumSum_I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
3   None  CumSum_I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
4   None    Diff_I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
..   ...             ...               ...  ...     ...          ...      ...
59  None        _I&T0208             T+S+R  ...  1.9544       1.9544   1.9544
60  None  CumSum_I&T0208             T+S+R  ...  4.8008       4.8008   4.8008
61  None  CumSum_I&T0208             T+S+R  ...  4.8008       4.8008   4.8008
62  None  CumSum_I&T0208             T+S+R  ...  7.5988       7.5988   7.5988
63  None  CumSum_I&T0208             T+S+R  ...  7.5988       7.5988   7.5988

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
1  None        _I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
2  None  CumSum_I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
3  None  CumSum_I&T0208             T+S+R  ...  0.0603       0.0603   0.0603
4  None    Diff_I&T0208             T+S+R  ...  0.0603       0.0603   0.0603

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0208'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.399, ('FORECASTING', {'Signals': ['I&T0208'], 'Horizon': 26}))
26 0     135.0
1     140.0
2     140.0
3     135.0
4     135.0
5     140.0
6     165.0
7     205.0
8     205.0
9     200.0
10    210.0
11    205.0
12    255.0
13    275.0
14    285.0
15    350.0
16    275.0
17    295.0
18    275.0
19    275.0
20    265.0
21    290.0
22    275.0
23    265.0
24    260.0
25    270.0
Name: I&T0208, dtype: float64
26 0     130.0
1     130.0
2     130.0
3     130.0
4     130.0
5     130.0
6     130.0
7     130.0
8     130.0
9     130.0
10    130.0
11    130.0
12    130.0
13    130.0
14    130.0
15    130.0
16    130.0
17    130.0
18    130.0
19    130.0
20    130.0
21    130.0
22    130.0
23    130.0
24    130.0
25    130.0
Name: I&T0208_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0208 I&T0208 [135.0, 140.0, 140.0, 135.0, 135.0, 140.0, 165.0, 205.0, 205.0, 200.0, 210.0, 205.0, 255.0, 275.0, 285.0, 350.0, 275.0, 295.0, 275.0, 275.0, 265.0, 290.0, 275.0, 265.0, 260.0, 270.0]
FORECAST_DETAIL_PREDICTED I&T0208 I&T0208 [130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0, 130.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0208 I&T0208 133 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0208 I&T0208 3.720618724822998
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0208 I&T0208 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0208 I&T0208 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0208 I&T0208 0.3774 0.4991 5.6256
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0208 I&T0208 97.88461538461539 115.81234821900469 -2.500950836446475
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0208_26'
