BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 261 H= 26 HEAD= [0 1 2 3 4] TAIL= [256 257 258 259 260]
SIGNAL :  I&T0301 N= 261 H= 26 HEAD= [ 98. 108. 104. 102. 106.] TAIL= [78. 88. 84. 84. 88.]
   I&T0301  Date
0     98.0     0
1    108.0     1
2    104.0     2
3    102.0     3
4    106.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 261 entries, 0 to 260
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0301  261 non-null    float64
 1   Date     261 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0301'], 'Transformations': [('I&T0301', 'None', '_', 'T+S+R'), ('I&T0301', 'None', 'Diff_', 'T+S+R'), ('I&T0301', 'None', 'RelDiff_', 'T+S+R'), ('I&T0301', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0301', 'Transformation': '_I&T0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.133, ('TRAINING', {'Signal': 'I&T0301', 'Transformation': '_I&T0301'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0301', 'Transformation': 'Diff_I&T0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.586, ('TRAINING', {'Signal': 'I&T0301', 'Transformation': 'Diff_I&T0301'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0301', 'Transformation': 'RelDiff_I&T0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.667, ('TRAINING', {'Signal': 'I&T0301', 'Transformation': 'RelDiff_I&T0301'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0301', 'Transformation': 'CumSum_I&T0301'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.554, ('TRAINING', {'Signal': 'I&T0301', 'Transformation': 'CumSum_I&T0301'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.943, ('SIGNAL_TRAINING', {'Signals': ['I&T0301'], 'Transformations': [('I&T0301', 'None', '_', 'T+S+R'), ('I&T0301', 'None', 'Diff_', 'T+S+R'), ('I&T0301', 'None', 'RelDiff_', 'T+S+R'), ('I&T0301', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0301'], 'Transformations': [('I&T0301', [('I&T0301', 'None', 'CumSum_', 'T+S+R'), ('I&T0301', 'None', 'Diff_', 'T+S+R'), ('I&T0301', 'None', 'RelDiff_', 'T+S+R'), ('I&T0301', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0301', 'Transformations': [('I&T0301', 'None', 'CumSum_', 'T+S+R'), ('I&T0301', 'None', 'Diff_', 'T+S+R'), ('I&T0301', 'None', 'RelDiff_', 'T+S+R'), ('I&T0301', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0301', 'Transformations': [('I&T0301', 'None', 'CumSum_', 'T+S+R'), ('I&T0301', 'None', 'Diff_', 'T+S+R'), ('I&T0301', 'None', 'RelDiff_', 'T+S+R'), ('I&T0301', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0301', 'Model': '_I&T0301_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0301', 'Model': '_I&T0301_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0301'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.576, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0301'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.605, ('FINALIZE_TRAINING', {'Signals': ['I&T0301'], 'Transformations': [('I&T0301', [('I&T0301', 'None', 'CumSum_', 'T+S+R'), ('I&T0301', 'None', 'Diff_', 'T+S+R'), ('I&T0301', 'None', 'RelDiff_', 'T+S+R'), ('I&T0301', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=187 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0301' Length=261  Min=68.0 Max=256.0  Mean=102.27586206896552 StdDev=18.495535127677062
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0301' Min=0.0 Max=1.0  Mean=0.18231841526045434 StdDev=0.09838050599828213
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0301_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0301_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0301_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0301_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0977 MAPE_Forecast=0.1057 MAPE_Test=0.1032
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0972 SMAPE_Forecast=0.1028 SMAPE_Test=0.1063
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.842 MASE_Forecast=0.9117 MASE_Test=0.7995
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=1.7209532136830714 CRPS_Forecast=1.523205415377143 CRPS_Test=1.5490467913354213
INFO:pyaf.std:MODEL_L1 L1_Fit=10.751868868234594 L1_Forecast=9.94949010627223 L1_Test=10.425930454114908
INFO:pyaf.std:MODEL_L2 L2_Fit=17.527669275942895 L2_Forecast=15.522400856136597 L2_Test=16.104965806399967
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.708202284295947 LnQ_Forecast=1.0199612911522151 LnQ_Test=0.5877566020793807
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=7.303623707033594 MedAE_Forecast=8.78263762980265 MedAE_Test=7.2459909854685804
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.2463114213656389, array([-0.0884807]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0301_LinearTrend_residue_bestCycle_byMAPE None -0.011993412311639182 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation  ...  ForecastMAPE      TestMAPE
0   None         _I&T0301  ...  9.620000e-02  1.036000e-01
1   None         _I&T0301  ...  9.620000e-02  1.036000e-01
2   None         _I&T0301  ...  9.920000e-02  1.351000e-01
3   None         _I&T0301  ...  9.920000e-02  1.351000e-01
4   None         _I&T0301  ...  1.057000e-01  1.032000e-01
..   ...              ...  ...           ...           ...
59  None  RelDiff_I&T0301  ...  3.308827e+07  3.291881e+07
60  None  RelDiff_I&T0301  ...  3.308827e+07  3.291881e+07
61  None  RelDiff_I&T0301  ...  3.308827e+07  3.291881e+07
62  None  RelDiff_I&T0301  ...  3.308827e+07  3.291881e+07
63  None  RelDiff_I&T0301  ...  3.308827e+07  3.291881e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None       _I&T0301             T+S+R  ...  0.0884       0.0962   0.1036
1  None       _I&T0301             T+S+R  ...  0.0884       0.0962   0.1036
2  None       _I&T0301             T+S+R  ...  0.0898       0.0992   0.1351
3  None       _I&T0301             T+S+R  ...  0.0898       0.0992   0.1351
4  None       _I&T0301             T+S+R  ...  0.0977       0.1057   0.1032

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0301'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.431, ('FORECASTING', {'Signals': ['I&T0301'], 'Horizon': 26}))
26 0      78.0
1      74.0
2      76.0
3      76.0
4      84.0
5      82.0
6      84.0
7      90.0
8      86.0
9      86.0
10     78.0
11     78.0
12     80.0
13     94.0
14     92.0
15     94.0
16    106.0
17    120.0
18    104.0
19    126.0
20     96.0
21     98.0
22     88.0
23    104.0
24    198.0
25    112.0
Name: I&T0301, dtype: float64
26 0     91.089591
1     91.000637
2     90.911683
3     90.822729
4     90.733775
5     90.644822
6     90.555868
7     90.466914
8     90.377960
9     90.289006
10    90.200052
11    90.111098
12    90.022145
13    89.933191
14    89.844237
15    89.755283
16    89.666329
17    89.577375
18    89.488421
19    89.399468
20    89.310514
21    89.221560
22    89.132606
23    89.043652
24    88.954698
25    88.865744
Name: I&T0301_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0301 I&T0301 [78.0, 74.0, 76.0, 76.0, 84.0, 82.0, 84.0, 90.0, 86.0, 86.0, 78.0, 78.0, 80.0, 94.0, 92.0, 94.0, 106.0, 120.0, 104.0, 126.0, 96.0, 98.0, 88.0, 104.0, 198.0, 112.0]
FORECAST_DETAIL_PREDICTED I&T0301 I&T0301 [91.08959086044226, 91.000637004671, 90.91168314889974, 90.82272929312849, 90.73377543735724, 90.64482158158597, 90.55586772581472, 90.46691387004347, 90.3779600142722, 90.28900615850094, 90.20005230272969, 90.11109844695844, 90.02214459118719, 89.93319073541592, 89.84423687964467, 89.75528302387342, 89.66632916810215, 89.5773753123309, 89.48842145655965, 89.3994676007884, 89.31051374501713, 89.22155988924587, 89.13260603347462, 89.04365217770336, 88.9546983219321, 88.86574446616085]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0301 I&T0301 261 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0301 I&T0301 4.0744788646698
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0301 I&T0301 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0301 I&T0301 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0301 I&T0301 0.1392 0.1487 1.0671
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0301 I&T0301 15.280708218934292 25.610845677331646 -0.08744413510504323
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0301_26'
