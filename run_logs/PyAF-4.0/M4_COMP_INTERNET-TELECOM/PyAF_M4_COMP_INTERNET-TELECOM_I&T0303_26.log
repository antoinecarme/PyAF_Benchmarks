BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 149 H= 26 HEAD= [0 1 2 3 4] TAIL= [144 145 146 147 148]
SIGNAL :  I&T0303 N= 149 H= 26 HEAD= [ 8.  8.  8. 10. 10.] TAIL= [278. 272. 300. 276. 202.]
   I&T0303  Date
0      8.0     0
1      8.0     1
2      8.0     2
3     10.0     3
4     10.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 149 entries, 0 to 148
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0303  149 non-null    float64
 1   Date     149 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 3.5 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0303'], 'Transformations': [('I&T0303', 'None', '_', 'T+S+R'), ('I&T0303', 'None', 'Diff_', 'T+S+R'), ('I&T0303', 'None', 'RelDiff_', 'T+S+R'), ('I&T0303', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0303', 'Transformation': '_I&T0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.976, ('TRAINING', {'Signal': 'I&T0303', 'Transformation': '_I&T0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0303', 'Transformation': 'Diff_I&T0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.716, ('TRAINING', {'Signal': 'I&T0303', 'Transformation': 'Diff_I&T0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0303', 'Transformation': 'RelDiff_I&T0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.637, ('TRAINING', {'Signal': 'I&T0303', 'Transformation': 'RelDiff_I&T0303'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0303', 'Transformation': 'CumSum_I&T0303'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.509, ('TRAINING', {'Signal': 'I&T0303', 'Transformation': 'CumSum_I&T0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.841, ('SIGNAL_TRAINING', {'Signals': ['I&T0303'], 'Transformations': [('I&T0303', 'None', '_', 'T+S+R'), ('I&T0303', 'None', 'Diff_', 'T+S+R'), ('I&T0303', 'None', 'RelDiff_', 'T+S+R'), ('I&T0303', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0303'], 'Transformations': [('I&T0303', [('I&T0303', 'None', 'CumSum_', 'T+S+R'), ('I&T0303', 'None', 'Diff_', 'T+S+R'), ('I&T0303', 'None', 'RelDiff_', 'T+S+R'), ('I&T0303', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0303', 'Transformations': [('I&T0303', 'None', 'CumSum_', 'T+S+R'), ('I&T0303', 'None', 'Diff_', 'T+S+R'), ('I&T0303', 'None', 'RelDiff_', 'T+S+R'), ('I&T0303', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0303', 'Transformations': [('I&T0303', 'None', 'CumSum_', 'T+S+R'), ('I&T0303', 'None', 'Diff_', 'T+S+R'), ('I&T0303', 'None', 'RelDiff_', 'T+S+R'), ('I&T0303', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0303', 'Model': '_I&T0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0303', 'Model': '_I&T0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.584, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0303'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.615, ('FINALIZE_TRAINING', {'Signals': ['I&T0303'], 'Transformations': [('I&T0303', [('I&T0303', 'None', 'CumSum_', 'T+S+R'), ('I&T0303', 'None', 'Diff_', 'T+S+R'), ('I&T0303', 'None', 'RelDiff_', 'T+S+R'), ('I&T0303', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=148 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0303' Length=149  Min=8.0 Max=342.0  Mean=138.7248322147651 StdDev=104.48524246719353
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0303' Min=0.0 Max=1.0  Mean=0.3913917132178596 StdDev=0.31283006726704643
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0303_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0303_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0303_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0861 MAPE_Forecast=0.0861 MAPE_Test=0.0861
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0879 SMAPE_Forecast=0.0879 SMAPE_Test=0.0879
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9933 MASE_Forecast=0.9933 MASE_Test=0.9933
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=28.43834300464636 CRPS_Forecast=28.43834300464636 CRPS_Test=28.43834300464636
INFO:pyaf.std:MODEL_L1 L1_Fit=11.691275167785236 L1_Forecast=11.691275167785236 L1_Test=11.691275167785236
INFO:pyaf.std:MODEL_L2 L2_Fit=19.859236182314927 L2_Forecast=19.859236182314927 L2_Test=19.859236182314927
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.1543518143178866 LnQ_Forecast=2.1543518143178866 LnQ_Test=2.1543518143178866
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=6.0 MedAE_Forecast=6.0 MedAE_Test=6.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0303_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None        _I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
1   None        _I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
2   None  CumSum_I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
3   None  CumSum_I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
4   None    Diff_I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
..   ...             ...               ...  ...     ...          ...      ...
59  None        _I&T0303             T+S+R  ...  2.1197       2.1197   2.1197
60  None  CumSum_I&T0303             T+S+R  ...  4.5099       4.5099   4.5099
61  None  CumSum_I&T0303             T+S+R  ...  4.5099       4.5099   4.5099
62  None  CumSum_I&T0303             T+S+R  ...  5.5437       5.5437   5.5437
63  None  CumSum_I&T0303             T+S+R  ...  5.5437       5.5437   5.5437

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
1  None        _I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
2  None  CumSum_I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
3  None  CumSum_I&T0303             T+S+R  ...  0.0861       0.0861   0.0861
4  None    Diff_I&T0303             T+S+R  ...  0.0861       0.0861   0.0861

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0303'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.408, ('FORECASTING', {'Signals': ['I&T0303'], 'Horizon': 26}))
26 0     188.0
1     158.0
2     168.0
3     176.0
4     192.0
5     192.0
6     186.0
7     186.0
8     182.0
9     186.0
10    180.0
11    164.0
12    168.0
13    152.0
14    170.0
15    218.0
16    180.0
17    192.0
18    212.0
19    220.0
20    206.0
21    218.0
22    202.0
23    172.0
24    188.0
25    204.0
Name: I&T0303, dtype: float64
26 0     202.0
1     202.0
2     202.0
3     202.0
4     202.0
5     202.0
6     202.0
7     202.0
8     202.0
9     202.0
10    202.0
11    202.0
12    202.0
13    202.0
14    202.0
15    202.0
16    202.0
17    202.0
18    202.0
19    202.0
20    202.0
21    202.0
22    202.0
23    202.0
24    202.0
25    202.0
Name: I&T0303_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0303 I&T0303 [188.0, 158.0, 168.0, 176.0, 192.0, 192.0, 186.0, 186.0, 182.0, 186.0, 180.0, 164.0, 168.0, 152.0, 170.0, 218.0, 180.0, 192.0, 212.0, 220.0, 206.0, 218.0, 202.0, 172.0, 188.0, 204.0]
FORECAST_DETAIL_PREDICTED I&T0303 I&T0303 [202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0, 202.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0303 I&T0303 149 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0303 I&T0303 3.962470054626465
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0303 I&T0303 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0303 I&T0303 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0303 I&T0303 0.1145 0.1064 1.3691
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0303 I&T0303 20.153846153846153 23.677317935428935 -0.6820053969606394
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0303_26'
