BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 261 H= 26 HEAD= [0 1 2 3 4] TAIL= [256 257 258 259 260]
SIGNAL :  I&T0405 N= 261 H= 26 HEAD= [38. 52. 58. 56. 54.] TAIL= [68. 86. 74. 74. 70.]
   I&T0405  Date
0     38.0     0
1     52.0     1
2     58.0     2
3     56.0     3
4     54.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 261 entries, 0 to 260
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0405  261 non-null    float64
 1   Date     261 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0405'], 'Transformations': [('I&T0405', 'None', '_', 'T+S+R'), ('I&T0405', 'None', 'Diff_', 'T+S+R'), ('I&T0405', 'None', 'RelDiff_', 'T+S+R'), ('I&T0405', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0405', 'Transformation': '_I&T0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.157, ('TRAINING', {'Signal': 'I&T0405', 'Transformation': '_I&T0405'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0405', 'Transformation': 'Diff_I&T0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.594, ('TRAINING', {'Signal': 'I&T0405', 'Transformation': 'Diff_I&T0405'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0405', 'Transformation': 'RelDiff_I&T0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.664, ('TRAINING', {'Signal': 'I&T0405', 'Transformation': 'RelDiff_I&T0405'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0405', 'Transformation': 'CumSum_I&T0405'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.556, ('TRAINING', {'Signal': 'I&T0405', 'Transformation': 'CumSum_I&T0405'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.974, ('SIGNAL_TRAINING', {'Signals': ['I&T0405'], 'Transformations': [('I&T0405', 'None', '_', 'T+S+R'), ('I&T0405', 'None', 'Diff_', 'T+S+R'), ('I&T0405', 'None', 'RelDiff_', 'T+S+R'), ('I&T0405', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0405'], 'Transformations': [('I&T0405', [('I&T0405', 'None', 'CumSum_', 'T+S+R'), ('I&T0405', 'None', 'Diff_', 'T+S+R'), ('I&T0405', 'None', 'RelDiff_', 'T+S+R'), ('I&T0405', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0405', 'Transformations': [('I&T0405', 'None', 'CumSum_', 'T+S+R'), ('I&T0405', 'None', 'Diff_', 'T+S+R'), ('I&T0405', 'None', 'RelDiff_', 'T+S+R'), ('I&T0405', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0405', 'Transformations': [('I&T0405', 'None', 'CumSum_', 'T+S+R'), ('I&T0405', 'None', 'Diff_', 'T+S+R'), ('I&T0405', 'None', 'RelDiff_', 'T+S+R'), ('I&T0405', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0405', 'Model': '_I&T0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0405', 'Model': '_I&T0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0405'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.552, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0405'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('FINALIZE_TRAINING', {'Signals': ['I&T0405'], 'Transformations': [('I&T0405', [('I&T0405', 'None', 'CumSum_', 'T+S+R'), ('I&T0405', 'None', 'Diff_', 'T+S+R'), ('I&T0405', 'None', 'RelDiff_', 'T+S+R'), ('I&T0405', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=187 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0405' Length=261  Min=38.0 Max=132.0  Mean=79.44061302681992 StdDev=17.230722973328348
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0405' Min=0.0 Max=1.0  Mean=0.44085758539170117 StdDev=0.1833055635460462
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0405_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0405_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0405_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.088 MAPE_Forecast=0.0783 MAPE_Test=0.0683
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0884 SMAPE_Forecast=0.0768 SMAPE_Test=0.0667
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9947 MASE_Forecast=0.9787 MASE_Test=1.0776
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=4.804701843971631 CRPS_Forecast=4.27825896656535 CRPS_Test=2.126153846153846
INFO:pyaf.std:MODEL_L1 L1_Fit=6.98936170212766 L1_Forecast=5.531914893617022 L1_Test=5.0
INFO:pyaf.std:MODEL_L2 L2_Fit=9.044805726951678 L2_Forecast=7.181536610301891 L2_Test=7.157567270432687
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=2.532201108429416 LnQ_Forecast=0.43439959154438024 LnQ_Test=0.23291053412996487
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=6.0 MedAE_Forecast=4.0 MedAE_Test=4.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0405_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None        _I&T0405             T+S+R  ...  0.0880       0.0783   0.0683
1   None        _I&T0405             T+S+R  ...  0.0880       0.0783   0.0683
2   None  CumSum_I&T0405             T+S+R  ...  0.0880       0.0783   0.0683
3   None    Diff_I&T0405             T+S+R  ...  0.0880       0.0783   0.0683
4   None    Diff_I&T0405             T+S+R  ...  0.0880       0.0783   0.0683
..   ...             ...               ...  ...     ...          ...      ...
59  None    Diff_I&T0405             T+S+R  ...  0.2474       0.8178   0.9929
60  None  CumSum_I&T0405             T+S+R  ...  0.1307       0.8731   1.0248
61  None    Diff_I&T0405             T+S+R  ...  0.1230       0.8765   1.3534
62  None    Diff_I&T0405             T+S+R  ...  0.1230       0.8765   1.3534
63  None  CumSum_I&T0405             T+S+R  ...  0.2470       0.8896   1.0143

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _I&T0405             T+S+R  ...   0.088       0.0783   0.0683
1  None        _I&T0405             T+S+R  ...   0.088       0.0783   0.0683
2  None  CumSum_I&T0405             T+S+R  ...   0.088       0.0783   0.0683
3  None    Diff_I&T0405             T+S+R  ...   0.088       0.0783   0.0683
4  None    Diff_I&T0405             T+S+R  ...   0.088       0.0783   0.0683

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0405'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.402, ('FORECASTING', {'Signals': ['I&T0405'], 'Horizon': 26}))
26 0      68.0
1      74.0
2      76.0
3      80.0
4      72.0
5      70.0
6      72.0
7      74.0
8      76.0
9      78.0
10     72.0
11     70.0
12    128.0
13    146.0
14    168.0
15    188.0
16    194.0
17    246.0
18    218.0
19    224.0
20    256.0
21    294.0
22    310.0
23    332.0
24    300.0
25    318.0
Name: I&T0405, dtype: float64
26 0     70.0
1     70.0
2     70.0
3     70.0
4     70.0
5     70.0
6     70.0
7     70.0
8     70.0
9     70.0
10    70.0
11    70.0
12    70.0
13    70.0
14    70.0
15    70.0
16    70.0
17    70.0
18    70.0
19    70.0
20    70.0
21    70.0
22    70.0
23    70.0
24    70.0
25    70.0
Name: I&T0405_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0405 I&T0405 [68.0, 74.0, 76.0, 80.0, 72.0, 70.0, 72.0, 74.0, 76.0, 78.0, 72.0, 70.0, 128.0, 146.0, 168.0, 188.0, 194.0, 246.0, 218.0, 224.0, 256.0, 294.0, 310.0, 332.0, 300.0, 318.0]
FORECAST_DETAIL_PREDICTED I&T0405 I&T0405 [70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0405 I&T0405 261 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0405 I&T0405 4.056562900543213
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0405 I&T0405 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0405 I&T0405 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0405 I&T0405 0.3889 0.5864 5.6556
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0405 I&T0405 91.84615384615384 131.60897794954218 -0.9432358009840855
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0405_26'
