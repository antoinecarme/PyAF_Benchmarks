BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 19 H= 6 HEAD= [0 1 2 3 4] TAIL= [14 15 16 17 18]
SIGNAL :  I&T0608 N= 19 H= 6 HEAD= [2557. 2385. 2617. 2474. 2860.] TAIL= [6092. 6757. 7373. 8385. 9704.]
   I&T0608  Date
0   2557.0     0
1   2385.0     1
2   2617.0     2
3   2474.0     3
4   2860.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 19 entries, 0 to 18
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0608  19 non-null     float64
 1   Date     19 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 456.0 bytes
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0608'], 'Transformations': [('I&T0608', 'None', '_', 'T+S+R'), ('I&T0608', 'None', 'Diff_', 'T+S+R'), ('I&T0608', 'None', 'RelDiff_', 'T+S+R'), ('I&T0608', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0608', 'Transformation': '_I&T0608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.712, ('TRAINING', {'Signal': 'I&T0608', 'Transformation': '_I&T0608'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0608', 'Transformation': 'Diff_I&T0608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.465, ('TRAINING', {'Signal': 'I&T0608', 'Transformation': 'Diff_I&T0608'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0608', 'Transformation': 'RelDiff_I&T0608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('TRAINING', {'Signal': 'I&T0608', 'Transformation': 'RelDiff_I&T0608'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0608', 'Transformation': 'CumSum_I&T0608'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.448, ('TRAINING', {'Signal': 'I&T0608', 'Transformation': 'CumSum_I&T0608'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.208, ('SIGNAL_TRAINING', {'Signals': ['I&T0608'], 'Transformations': [('I&T0608', 'None', '_', 'T+S+R'), ('I&T0608', 'None', 'Diff_', 'T+S+R'), ('I&T0608', 'None', 'RelDiff_', 'T+S+R'), ('I&T0608', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0608'], 'Transformations': [('I&T0608', [('I&T0608', 'None', 'CumSum_', 'T+S+R'), ('I&T0608', 'None', 'Diff_', 'T+S+R'), ('I&T0608', 'None', 'RelDiff_', 'T+S+R'), ('I&T0608', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0608', 'Transformations': [('I&T0608', 'None', 'CumSum_', 'T+S+R'), ('I&T0608', 'None', 'Diff_', 'T+S+R'), ('I&T0608', 'None', 'RelDiff_', 'T+S+R'), ('I&T0608', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'I&T0608', 'Transformations': [('I&T0608', 'None', 'CumSum_', 'T+S+R'), ('I&T0608', 'None', 'Diff_', 'T+S+R'), ('I&T0608', 'None', 'RelDiff_', 'T+S+R'), ('I&T0608', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0608', 'Model': '_I&T0608_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0608', 'Model': '_I&T0608_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0608'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.128, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0608'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.157, ('FINALIZE_TRAINING', {'Signals': ['I&T0608'], 'Transformations': [('I&T0608', [('I&T0608', 'None', 'CumSum_', 'T+S+R'), ('I&T0608', 'None', 'Diff_', 'T+S+R'), ('I&T0608', 'None', 'RelDiff_', 'T+S+R'), ('I&T0608', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=18 TimeDelta=1 Horizon=6
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0608' Length=19  Min=2385.0 Max=9704.0  Mean=4557.8421052631575 StdDev=2147.501296198565
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0608' Min=0.0 Max=1.0  Mean=0.29687691013296325 StdDev=0.2934145779749371
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0608_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [PolyTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0608_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0608_PolyTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0608_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0759 MAPE_Forecast=0.0759 MAPE_Test=0.0759
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0719 SMAPE_Forecast=0.0719 SMAPE_Test=0.0719
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.6833 MASE_Forecast=0.6833 MASE_Test=0.6833
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=627.2468867529074 CRPS_Forecast=627.2468867529074 CRPS_Test=627.2468867529074
INFO:pyaf.std:MODEL_L1 L1_Fit=314.9799647523344 L1_Forecast=314.9799647523344 L1_Test=314.9799647523344
INFO:pyaf.std:MODEL_L2 L2_Fit=466.65041512173786 L2_Forecast=466.65041512173786 L2_Test=466.65041512173786
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.20317413446559351 LnQ_Forecast=0.20317413446559351 LnQ_Test=0.20317413446559351
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=180.43572595134083 MedAE_Forecast=180.43572595134083 MedAE_Test=180.43572595134083
INFO:pyaf.std:MODEL_COMPLEXITY 3.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (0.011456724517335704, array([0.22095889, 0.28185056, 0.29702208]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0608_PolyTrend_residue_bestCycle_byMAPE None -0.00819646705777513 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation DecompositionType  ...  FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_I&T0608             T+S+R  ...   0.0748       0.0748   0.0748
1   None   CumSum_I&T0608             T+S+R  ...   0.0748       0.0748   0.0748
2   None   CumSum_I&T0608             T+S+R  ...   0.0749       0.0749   0.0749
3   None   CumSum_I&T0608             T+S+R  ...   0.0749       0.0749   0.0749
4   None         _I&T0608             T+S+R  ...   0.0753       0.0753   0.0753
..   ...              ...               ...  ...      ...          ...      ...
59  None  RelDiff_I&T0608             T+S+R  ...  41.5102      41.5102  41.5102
60  None  RelDiff_I&T0608             T+S+R  ...  51.0985      51.0985  51.0985
61  None  RelDiff_I&T0608             T+S+R  ...  51.0985      51.0985  51.0985
62  None  RelDiff_I&T0608             T+S+R  ...  63.9573      63.9573  63.9573
63  None  RelDiff_I&T0608             T+S+R  ...  63.9573      63.9573  63.9573

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_I&T0608             T+S+R  ...  0.0748       0.0748   0.0748
1  None  CumSum_I&T0608             T+S+R  ...  0.0748       0.0748   0.0748
2  None  CumSum_I&T0608             T+S+R  ...  0.0749       0.0749   0.0749
3  None  CumSum_I&T0608             T+S+R  ...  0.0749       0.0749   0.0749
4  None        _I&T0608             T+S+R  ...  0.0753       0.0753   0.0753

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0608'], 'Horizon': 6}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.107, ('FORECASTING', {'Signals': ['I&T0608'], 'Horizon': 6}))
6 0    9814.0
1    9563.0
2    9860.0
3    9468.0
4    8917.0
5    9000.0
Name: I&T0608, dtype: float64
6 0     9031.056015
1     9794.521045
2    10615.450352
3    11496.080464
4    12438.647909
5    13445.389213
Name: I&T0608_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0608 I&T0608 [9814.0, 9563.0, 9860.0, 9468.0, 8917.0, 9000.0]
FORECAST_DETAIL_PREDICTED I&T0608 I&T0608 [9031.056015470012, 9794.521045062316, 10615.450352213264, 11496.080464308281, 12438.647908732793, 13445.38921287223]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0608 I&T0608 19 6
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0608 I&T0608 2.5751349925994873
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0608 I&T0608 PolyTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0608 I&T0608 6
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0608 I&T0608 0.2139 0.1834 6.2288
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0608 I&T0608 1960.8388279531453 2500.463561308493 -45.93556588134747
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0608_6'
