BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 69 H= 26 HEAD= [0 1 2 3 4] TAIL= [64 65 66 67 68]
SIGNAL :  I&T0109 N= 69 H= 26 HEAD= [110. 130. 105. 110. 125.] TAIL= [290. 260. 380. 365. 230.]
   I&T0109  Date
0    110.0     0
1    130.0     1
2    105.0     2
3    110.0     3
4    125.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 69 entries, 0 to 68
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0109  69 non-null     float64
 1   Date     69 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.6 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0109'], 'Transformations': [('I&T0109', 'None', '_', 'T+S+R'), ('I&T0109', 'None', 'Diff_', 'T+S+R'), ('I&T0109', 'None', 'RelDiff_', 'T+S+R'), ('I&T0109', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0109', 'Transformation': '_I&T0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.942, ('TRAINING', {'Signal': 'I&T0109', 'Transformation': '_I&T0109'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0109', 'Transformation': 'Diff_I&T0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.479, ('TRAINING', {'Signal': 'I&T0109', 'Transformation': 'Diff_I&T0109'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0109', 'Transformation': 'RelDiff_I&T0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.582, ('TRAINING', {'Signal': 'I&T0109', 'Transformation': 'RelDiff_I&T0109'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0109', 'Transformation': 'CumSum_I&T0109'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.446, ('TRAINING', {'Signal': 'I&T0109', 'Transformation': 'CumSum_I&T0109'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.451, ('SIGNAL_TRAINING', {'Signals': ['I&T0109'], 'Transformations': [('I&T0109', 'None', '_', 'T+S+R'), ('I&T0109', 'None', 'Diff_', 'T+S+R'), ('I&T0109', 'None', 'RelDiff_', 'T+S+R'), ('I&T0109', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0109'], 'Transformations': [('I&T0109', [('I&T0109', 'None', 'CumSum_', 'T+S+R'), ('I&T0109', 'None', 'Diff_', 'T+S+R'), ('I&T0109', 'None', 'RelDiff_', 'T+S+R'), ('I&T0109', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0109', 'Transformations': [('I&T0109', 'None', 'CumSum_', 'T+S+R'), ('I&T0109', 'None', 'Diff_', 'T+S+R'), ('I&T0109', 'None', 'RelDiff_', 'T+S+R'), ('I&T0109', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.005, ('MODEL_SELECTION', {'Signal': 'I&T0109', 'Transformations': [('I&T0109', 'None', 'CumSum_', 'T+S+R'), ('I&T0109', 'None', 'Diff_', 'T+S+R'), ('I&T0109', 'None', 'RelDiff_', 'T+S+R'), ('I&T0109', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0109', 'Model': '_I&T0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0109', 'Model': '_I&T0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0109'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.581, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0109'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.61, ('FINALIZE_TRAINING', {'Signals': ['I&T0109'], 'Transformations': [('I&T0109', [('I&T0109', 'None', 'CumSum_', 'T+S+R'), ('I&T0109', 'None', 'Diff_', 'T+S+R'), ('I&T0109', 'None', 'RelDiff_', 'T+S+R'), ('I&T0109', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=68 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0109' Length=69  Min=80.0 Max=380.0  Mean=170.79710144927537 StdDev=62.841087756649976
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0109' Min=0.0 Max=1.0  Mean=0.3026570048309179 StdDev=0.2094702925221666
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [PolyTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0109_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0109_PolyTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0109_PolyTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1038 MAPE_Forecast=0.1038 MAPE_Test=0.1038
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.101 SMAPE_Forecast=0.101 SMAPE_Test=0.101
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8711 MASE_Forecast=0.8711 MASE_Test=0.8711
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=14.273411259153685 CRPS_Forecast=14.273411259153685 CRPS_Test=14.273411259153685
INFO:pyaf.std:MODEL_L1 L1_Fit=17.03717506289895 L1_Forecast=17.03717506289895 L1_Test=17.03717506289895
INFO:pyaf.std:MODEL_L2 L2_Fit=24.388380580340556 L2_Forecast=24.388380580340556 L2_Test=24.388380580340556
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.272969230011342 LnQ_Forecast=1.272969230011342 LnQ_Test=1.272969230011342
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=13.495950081917869 MedAE_Forecast=13.495950081917869 MedAE_Test=13.495950081917869
INFO:pyaf.std:MODEL_COMPLEXITY 3.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (0.09223326568970122, array([0.13493772, 0.22483145, 0.26592929]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0109_PolyTrend_residue_bestCycle_byMAPE None -0.005041999607806824 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation  ...  ForecastMAPE      TestMAPE
0   None         _I&T0109  ...  1.001000e-01  1.001000e-01
1   None         _I&T0109  ...  1.001000e-01  1.001000e-01
2   None         _I&T0109  ...  1.038000e-01  1.038000e-01
3   None         _I&T0109  ...  1.038000e-01  1.038000e-01
4   None         _I&T0109  ...  1.078000e-01  1.078000e-01
..   ...              ...  ...           ...           ...
59  None  RelDiff_I&T0109  ...  3.790497e+05  3.790497e+05
60  None  RelDiff_I&T0109  ...  7.393599e+05  7.393599e+05
61  None  RelDiff_I&T0109  ...  7.393599e+05  7.393599e+05
62  None  RelDiff_I&T0109  ...  1.386609e+06  1.386609e+06
63  None  RelDiff_I&T0109  ...  1.386609e+06  1.386609e+06

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None       _I&T0109             T+S+R  ...  0.1001       0.1001   0.1001
1  None       _I&T0109             T+S+R  ...  0.1001       0.1001   0.1001
2  None       _I&T0109             T+S+R  ...  0.1038       0.1038   0.1038
3  None       _I&T0109             T+S+R  ...  0.1038       0.1038   0.1038
4  None       _I&T0109             T+S+R  ...  0.1078       0.1078   0.1078

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0109'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.424, ('FORECASTING', {'Signals': ['I&T0109'], 'Horizon': 26}))
26 0     245.0
1     225.0
2     190.0
3     220.0
4     230.0
5     235.0
6     245.0
7     225.0
8     230.0
9     240.0
10    255.0
11    280.0
12    310.0
13    325.0
14    315.0
15    415.0
16    360.0
17    380.0
18    355.0
19    380.0
20    410.0
21    385.0
22    415.0
23    375.0
24    435.0
25    430.0
Name: I&T0109, dtype: float64
26 0     301.544892
1     307.844480
2     314.279806
3     320.852391
4     327.563759
5     334.415431
6     341.408930
7     348.545778
8     355.827498
9     363.255612
10    370.831641
11    378.557110
12    386.433539
13    394.462452
14    402.645370
15    410.983816
16    419.479313
17    428.133382
18    436.947546
19    445.923327
20    455.062248
21    464.365831
22    473.835598
23    483.473072
24    493.279775
25    503.257229
Name: I&T0109_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0109 I&T0109 [245.0, 225.0, 190.0, 220.0, 230.0, 235.0, 245.0, 225.0, 230.0, 240.0, 255.0, 280.0, 310.0, 325.0, 315.0, 415.0, 360.0, 380.0, 355.0, 380.0, 410.0, 385.0, 415.0, 375.0, 435.0, 430.0]
FORECAST_DETAIL_PREDICTED I&T0109 I&T0109 [301.54489200601734, 307.8444800986359, 314.27980569257807, 320.852391128839, 327.56375874841456, 334.4154308923003, 341.40892990149206, 348.5457781169851, 355.8274978797752, 363.255611530858, 370.83164141122927, 378.55710986188427, 386.4335392238188, 394.4624518380284, 402.64537004550897, 410.98381618725574, 419.4793126042645, 428.1333816375309, 436.94754562805053, 445.92332691681895, 455.06224784483186, 464.36583075308477, 473.83559798257335, 483.47307187429334, 493.27977476924013, 503.2572290084093]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0109 I&T0109 69 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0109 I&T0109 3.5786077976226807
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0109 I&T0109 PolyTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0109 I&T0109 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0109 I&T0109 0.3025 0.2544 3.1727
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0109 I&T0109 83.12469966185412 88.01095356530097 -0.26620092191616873
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0109_26'
