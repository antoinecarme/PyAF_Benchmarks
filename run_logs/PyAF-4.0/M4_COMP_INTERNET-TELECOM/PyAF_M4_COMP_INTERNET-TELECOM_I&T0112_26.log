BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 47 H= 26 HEAD= [0 1 2 3 4] TAIL= [42 43 44 45 46]
SIGNAL :  I&T0112 N= 47 H= 26 HEAD= [248. 248. 238. 480. 244.] TAIL= [226. 258. 240. 240. 212.]
   I&T0112  Date
0    248.0     0
1    248.0     1
2    238.0     2
3    480.0     3
4    244.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 47 entries, 0 to 46
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0112  47 non-null     float64
 1   Date     47 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 1.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0112'], 'Transformations': [('I&T0112', 'None', '_', 'T+S+R'), ('I&T0112', 'None', 'Diff_', 'T+S+R'), ('I&T0112', 'None', 'RelDiff_', 'T+S+R'), ('I&T0112', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0112', 'Transformation': '_I&T0112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.994, ('TRAINING', {'Signal': 'I&T0112', 'Transformation': '_I&T0112'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0112', 'Transformation': 'Diff_I&T0112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.469, ('TRAINING', {'Signal': 'I&T0112', 'Transformation': 'Diff_I&T0112'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0112', 'Transformation': 'RelDiff_I&T0112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.572, ('TRAINING', {'Signal': 'I&T0112', 'Transformation': 'RelDiff_I&T0112'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0112', 'Transformation': 'CumSum_I&T0112'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.437, ('TRAINING', {'Signal': 'I&T0112', 'Transformation': 'CumSum_I&T0112'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 2.474, ('SIGNAL_TRAINING', {'Signals': ['I&T0112'], 'Transformations': [('I&T0112', 'None', '_', 'T+S+R'), ('I&T0112', 'None', 'Diff_', 'T+S+R'), ('I&T0112', 'None', 'RelDiff_', 'T+S+R'), ('I&T0112', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0112'], 'Transformations': [('I&T0112', [('I&T0112', 'None', 'CumSum_', 'T+S+R'), ('I&T0112', 'None', 'Diff_', 'T+S+R'), ('I&T0112', 'None', 'RelDiff_', 'T+S+R'), ('I&T0112', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0112', 'Transformations': [('I&T0112', 'None', 'CumSum_', 'T+S+R'), ('I&T0112', 'None', 'Diff_', 'T+S+R'), ('I&T0112', 'None', 'RelDiff_', 'T+S+R'), ('I&T0112', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0112', 'Transformations': [('I&T0112', 'None', 'CumSum_', 'T+S+R'), ('I&T0112', 'None', 'Diff_', 'T+S+R'), ('I&T0112', 'None', 'RelDiff_', 'T+S+R'), ('I&T0112', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0112', 'Model': 'Diff_I&T0112_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.023, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0112', 'Model': 'Diff_I&T0112_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0112'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.573, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0112'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.601, ('FINALIZE_TRAINING', {'Signals': ['I&T0112'], 'Transformations': [('I&T0112', [('I&T0112', 'None', 'CumSum_', 'T+S+R'), ('I&T0112', 'None', 'Diff_', 'T+S+R'), ('I&T0112', 'None', 'RelDiff_', 'T+S+R'), ('I&T0112', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=46 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0112' Length=47  Min=212.0 Max=480.0  Mean=267.36170212765956 StdDev=47.6442604575784
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_I&T0112' Min=-0.8805970149253731 Max=0.9029850746268657  Mean=-0.0028580501746586205 StdDev=0.22596968146666374
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_I&T0112_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_I&T0112_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_I&T0112_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_I&T0112_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.086 MAPE_Forecast=0.086 MAPE_Test=0.086
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0906 SMAPE_Forecast=0.0906 SMAPE_Test=0.0906
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.7938 MASE_Forecast=0.7938 MASE_Test=0.7938
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=5.103934896513857 CRPS_Forecast=5.103934896513857 CRPS_Test=5.103934896513857
INFO:pyaf.std:MODEL_L1 L1_Fit=25.884769899295456 L1_Forecast=25.884769899295456 L1_Test=25.884769899295456
INFO:pyaf.std:MODEL_L2 L2_Fit=44.93738626620289 L2_Forecast=44.93738626620289 L2_Test=44.93738626620289
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.9063013782998262 LnQ_Forecast=0.9063013782998262 LnQ_Test=0.9063013782998262
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=17.4751180056453 MedAE_Forecast=17.4751180056453 MedAE_Test=17.4751180056453
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.13432835820895522
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.011285973297723058, array([-0.02828805]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_I&T0112_LinearTrend_residue_bestCycle_byMAPE None -0.0014466526212836266 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation  ... ForecastMAPE    TestMAPE
0   None     Diff_I&T0112  ...       0.0851      0.0851
1   None     Diff_I&T0112  ...       0.0851      0.0851
2   None     Diff_I&T0112  ...       0.0860      0.0860
3   None     Diff_I&T0112  ...       0.0860      0.0860
4   None         _I&T0112  ...       0.0942      0.0942
..   ...              ...  ...          ...         ...
59  None  RelDiff_I&T0112  ...    7774.4485   7774.4485
60  None  RelDiff_I&T0112  ...   10892.3647  10892.3647
61  None  RelDiff_I&T0112  ...   10892.3647  10892.3647
62  None  RelDiff_I&T0112  ...   13019.2429  13019.2429
63  None  RelDiff_I&T0112  ...   13019.2429  13019.2429

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None   Diff_I&T0112             T+S+R  ...  0.0851       0.0851   0.0851
1  None   Diff_I&T0112             T+S+R  ...  0.0851       0.0851   0.0851
2  None   Diff_I&T0112             T+S+R  ...  0.0860       0.0860   0.0860
3  None   Diff_I&T0112             T+S+R  ...  0.0860       0.0860   0.0860
4  None       _I&T0112             T+S+R  ...  0.0942       0.0942   0.0942

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0112'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.422, ('FORECASTING', {'Signals': ['I&T0112'], 'Horizon': 26}))
26 0     190.0
1     228.0
2     214.0
3     180.0
4     246.0
5     226.0
6     218.0
7     204.0
8     210.0
9     186.0
10    188.0
11    300.0
12    274.0
13    294.0
14    284.0
15    300.0
16    314.0
17    258.0
18    294.0
19    234.0
20    336.0
21    298.0
22    276.0
23    274.0
24    326.0
25    334.0
Name: I&T0112, dtype: float64
26 0     207.278636
1     202.392463
2     197.341481
3     192.125691
4     186.745092
5     181.199685
6     175.489468
7     169.614444
8     163.574610
9     157.369968
10    151.000518
11    144.466259
12    137.767191
13    130.903314
14    123.874629
15    116.681136
16    109.322833
17    101.799722
18     94.111803
19     86.259075
20     78.241538
21     70.059193
22     61.712039
23     53.200076
24     44.523305
25     35.681725
Name: I&T0112_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0112 I&T0112 [190.0, 228.0, 214.0, 180.0, 246.0, 226.0, 218.0, 204.0, 210.0, 186.0, 188.0, 300.0, 274.0, 294.0, 284.0, 300.0, 314.0, 258.0, 294.0, 234.0, 336.0, 298.0, 276.0, 274.0, 326.0, 334.0]
FORECAST_DETAIL_PREDICTED I&T0112 I&T0112 [207.27863564126278, 202.39246266119525, 197.3414810597974, 192.12569083706913, 186.74509199301053, 181.19968452762157, 175.48946844090224, 169.61444373285255, 163.57461040347252, 157.36996845276212, 151.00051788072136, 144.4662586873502, 137.76719087264874, 130.90331443661688, 123.87462937925467, 116.6811357005621, 109.32283340053915, 101.79972247918586, 94.11180293650219, 86.25907477248819, 78.24153798714383, 70.05919258046913, 61.71203855246404, 53.20007590312858, 44.523304632462754, 35.68172474046662]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0112 I&T0112 47 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0112 I&T0112 3.5909371376037598
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0112 I&T0112 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0112 I&T0112 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0112 I&T0112 0.458 0.6807 4.053
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0112 I&T0112 129.69510616402744 158.38030515496595 -9.68723043199081
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0112_26'
