BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 261 H= 26 HEAD= [0 1 2 3 4] TAIL= [256 257 258 259 260]
SIGNAL :  I&T0009 N= 261 H= 26 HEAD= [92. 85. 96. 88. 77.] TAIL= [85. 86. 92. 97. 90.]
   I&T0009  Date
0     92.0     0
1     85.0     1
2     96.0     2
3     88.0     3
4     77.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 261 entries, 0 to 260
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0009  261 non-null    float64
 1   Date     261 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0009'], 'Transformations': [('I&T0009', 'None', '_', 'T+S+R'), ('I&T0009', 'None', 'Diff_', 'T+S+R'), ('I&T0009', 'None', 'RelDiff_', 'T+S+R'), ('I&T0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0009', 'Transformation': '_I&T0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.181, ('TRAINING', {'Signal': 'I&T0009', 'Transformation': '_I&T0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0009', 'Transformation': 'Diff_I&T0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.621, ('TRAINING', {'Signal': 'I&T0009', 'Transformation': 'Diff_I&T0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0009', 'Transformation': 'RelDiff_I&T0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.658, ('TRAINING', {'Signal': 'I&T0009', 'Transformation': 'RelDiff_I&T0009'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0009', 'Transformation': 'CumSum_I&T0009'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.563, ('TRAINING', {'Signal': 'I&T0009', 'Transformation': 'CumSum_I&T0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.025, ('SIGNAL_TRAINING', {'Signals': ['I&T0009'], 'Transformations': [('I&T0009', 'None', '_', 'T+S+R'), ('I&T0009', 'None', 'Diff_', 'T+S+R'), ('I&T0009', 'None', 'RelDiff_', 'T+S+R'), ('I&T0009', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0009'], 'Transformations': [('I&T0009', [('I&T0009', 'None', 'CumSum_', 'T+S+R'), ('I&T0009', 'None', 'Diff_', 'T+S+R'), ('I&T0009', 'None', 'RelDiff_', 'T+S+R'), ('I&T0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0009', 'Transformations': [('I&T0009', 'None', 'CumSum_', 'T+S+R'), ('I&T0009', 'None', 'Diff_', 'T+S+R'), ('I&T0009', 'None', 'RelDiff_', 'T+S+R'), ('I&T0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0009', 'Transformations': [('I&T0009', 'None', 'CumSum_', 'T+S+R'), ('I&T0009', 'None', 'Diff_', 'T+S+R'), ('I&T0009', 'None', 'RelDiff_', 'T+S+R'), ('I&T0009', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0009', 'Model': 'Diff_I&T0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0009', 'Model': 'Diff_I&T0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.6, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0009'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.629, ('FINALIZE_TRAINING', {'Signals': ['I&T0009'], 'Transformations': [('I&T0009', [('I&T0009', 'None', 'CumSum_', 'T+S+R'), ('I&T0009', 'None', 'Diff_', 'T+S+R'), ('I&T0009', 'None', 'RelDiff_', 'T+S+R'), ('I&T0009', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=187 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0009' Length=261  Min=69.0 Max=131.0  Mean=101.73180076628353 StdDev=10.167792674339498
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_I&T0009' Min=-0.4838709677419355 Max=0.45161290322580644  Mean=-0.0001235941169200347 StdDev=0.14099185442298706
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_I&T0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_I&T0009_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_I&T0009_ConstantTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_I&T0009_ConstantTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.1 MAPE_Forecast=0.0445 MAPE_Test=0.0786
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.1072 SMAPE_Forecast=0.0439 SMAPE_Test=0.0753
INFO:pyaf.std:MODEL_MASE MASE_Fit=1.4355 MASE_Forecast=0.8411 MASE_Test=2.2646
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=2.6128350445148647 CRPS_Forecast=0.5730966306667532 CRPS_Test=1.75271276595745
INFO:pyaf.std:MODEL_L1 L1_Fit=10.984721593481215 L1_Forecast=4.242191036668175 L1_Test=7.156096563011463
INFO:pyaf.std:MODEL_L2 L2_Fit=14.084637836103436 L2_Forecast=5.734979988898369 L2_Test=8.477847337108855
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=3.435368135098898 LnQ_Forecast=0.1651759959736123 LnQ_Test=0.2101621093534554
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=9.353723404255327 MedAE_Forecast=2.75 MedAE_Test=6.742021276595757
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.3709677419354839
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_I&T0009_ConstantTrend 0.0004289636238846945
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_I&T0009_ConstantTrend_residue_bestCycle_byMAPE None -0.016557995881949197 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation  ...  ForecastMAPE      TestMAPE
0   None     Diff_I&T0009  ...  4.450000e-02  7.860000e-02
1   None     Diff_I&T0009  ...  4.450000e-02  7.860000e-02
2   None         _I&T0009  ...  4.580000e-02  3.310000e-02
3   None         _I&T0009  ...  4.580000e-02  3.310000e-02
4   None         _I&T0009  ...  4.590000e-02  4.000000e-02
..   ...              ...  ...           ...           ...
59  None  RelDiff_I&T0009  ...  2.394020e+07  2.465308e+07
60  None  RelDiff_I&T0009  ...  2.394020e+07  2.465308e+07
61  None  RelDiff_I&T0009  ...  2.394020e+07  2.465308e+07
62  None  RelDiff_I&T0009  ...  2.394020e+07  2.465308e+07
63  None  RelDiff_I&T0009  ...  2.394020e+07  2.465308e+07

[64 rows x 10 columns]
  Split Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None   Diff_I&T0009             T+S+R  ...  0.1000       0.0445   0.0786
1  None   Diff_I&T0009             T+S+R  ...  0.1000       0.0445   0.0786
2  None       _I&T0009             T+S+R  ...  0.0539       0.0458   0.0331
3  None       _I&T0009             T+S+R  ...  0.0539       0.0458   0.0331
4  None       _I&T0009             T+S+R  ...  0.0539       0.0459   0.0400

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0009'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.419, ('FORECASTING', {'Signals': ['I&T0009'], 'Horizon': 26}))
26 0      86.0
1      79.0
2      82.0
3      84.0
4      78.0
5      85.0
6      80.0
7      84.0
8      81.0
9      83.0
10     85.0
11     80.0
12     82.0
13     83.0
14     85.0
15     93.0
16     99.0
17    100.0
18    101.0
19    103.0
20    101.0
21     91.0
22    100.0
23    101.0
24    102.0
25     96.0
Name: I&T0009, dtype: float64
26 0     98.968085
1     98.994681
2     99.021277
3     99.047872
4     99.074468
5     99.101064
6     99.127660
7     99.154255
8     99.180851
9     99.207447
10    99.234043
11    99.260638
12    99.287234
13    99.313830
14    99.340426
15    99.367021
16    99.393617
17    99.420213
18    99.446809
19    99.473404
20    99.500000
21    99.526596
22    99.553191
23    99.579787
24    99.606383
25    99.632979
Name: I&T0009_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0009 I&T0009 [86.0, 79.0, 82.0, 84.0, 78.0, 85.0, 80.0, 84.0, 81.0, 83.0, 85.0, 80.0, 82.0, 83.0, 85.0, 93.0, 99.0, 100.0, 101.0, 103.0, 101.0, 91.0, 100.0, 101.0, 102.0, 96.0]
FORECAST_DETAIL_PREDICTED I&T0009 I&T0009 [98.968085106383, 98.99468085106385, 99.0212765957447, 99.04787234042556, 99.07446808510639, 99.10106382978725, 99.1276595744681, 99.15425531914894, 99.1808510638298, 99.20744680851065, 99.2340425531915, 99.26063829787236, 99.28723404255321, 99.31382978723406, 99.34042553191492, 99.36702127659576, 99.39361702127661, 99.42021276595747, 99.44680851063832, 99.47340425531917, 99.50000000000001, 99.52659574468088, 99.55319148936172, 99.57978723404257, 99.60638297872342, 99.63297872340428]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0009 I&T0009 261 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0009 I&T0009 4.1669323444366455
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0009 I&T0009 ConstantTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0009 I&T0009 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0009 I&T0009 0.1295 0.1182 2.7537
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0009 I&T0009 10.794394435351887 13.026646827590637 -1.2882156035633816
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0009_26'
