BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 261 H= 26 HEAD= [0 1 2 3 4] TAIL= [256 257 258 259 260]
SIGNAL :  I&T0201 N= 261 H= 26 HEAD= [45. 62. 65. 65. 69.] TAIL= [126. 122. 120. 119. 120.]
   I&T0201  Date
0     45.0     0
1     62.0     1
2     65.0     2
3     65.0     3
4     69.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 261 entries, 0 to 260
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0201  261 non-null    float64
 1   Date     261 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0201'], 'Transformations': [('I&T0201', 'None', '_', 'T+S+R'), ('I&T0201', 'None', 'Diff_', 'T+S+R'), ('I&T0201', 'None', 'RelDiff_', 'T+S+R'), ('I&T0201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0201', 'Transformation': '_I&T0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.236, ('TRAINING', {'Signal': 'I&T0201', 'Transformation': '_I&T0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0201', 'Transformation': 'Diff_I&T0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.599, ('TRAINING', {'Signal': 'I&T0201', 'Transformation': 'Diff_I&T0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0201', 'Transformation': 'RelDiff_I&T0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.704, ('TRAINING', {'Signal': 'I&T0201', 'Transformation': 'RelDiff_I&T0201'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0201', 'Transformation': 'CumSum_I&T0201'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.562, ('TRAINING', {'Signal': 'I&T0201', 'Transformation': 'CumSum_I&T0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.103, ('SIGNAL_TRAINING', {'Signals': ['I&T0201'], 'Transformations': [('I&T0201', 'None', '_', 'T+S+R'), ('I&T0201', 'None', 'Diff_', 'T+S+R'), ('I&T0201', 'None', 'RelDiff_', 'T+S+R'), ('I&T0201', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0201'], 'Transformations': [('I&T0201', [('I&T0201', 'None', 'CumSum_', 'T+S+R'), ('I&T0201', 'None', 'Diff_', 'T+S+R'), ('I&T0201', 'None', 'RelDiff_', 'T+S+R'), ('I&T0201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0201', 'Transformations': [('I&T0201', 'None', 'CumSum_', 'T+S+R'), ('I&T0201', 'None', 'Diff_', 'T+S+R'), ('I&T0201', 'None', 'RelDiff_', 'T+S+R'), ('I&T0201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.007, ('MODEL_SELECTION', {'Signal': 'I&T0201', 'Transformations': [('I&T0201', 'None', 'CumSum_', 'T+S+R'), ('I&T0201', 'None', 'Diff_', 'T+S+R'), ('I&T0201', 'None', 'RelDiff_', 'T+S+R'), ('I&T0201', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0201', 'Model': '_I&T0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.024, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0201', 'Model': '_I&T0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.589, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0201'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.62, ('FINALIZE_TRAINING', {'Signals': ['I&T0201'], 'Transformations': [('I&T0201', [('I&T0201', 'None', 'CumSum_', 'T+S+R'), ('I&T0201', 'None', 'Diff_', 'T+S+R'), ('I&T0201', 'None', 'RelDiff_', 'T+S+R'), ('I&T0201', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=187 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0201' Length=261  Min=45.0 Max=131.0  Mean=91.89272030651341 StdDev=20.076004640658294
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0201' Min=0.0 Max=1.0  Mean=0.5452641896106213 StdDev=0.23344191442625925
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0201_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0201_LinearTrend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0201_LinearTrend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0682 MAPE_Forecast=0.0354 MAPE_Test=0.028
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0675 SMAPE_Forecast=0.035 SMAPE_Test=0.0283
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.8127 MASE_Forecast=1.0918 MASE_Test=0.8128
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.6918862414310736 CRPS_Forecast=0.9225540070225173 CRPS_Test=0.7523439277460267
INFO:pyaf.std:MODEL_L1 L1_Fit=5.515004113196347 L1_Forecast=3.9161944414929266 L1_Test=3.4464038771285135
INFO:pyaf.std:MODEL_L2 L2_Fit=7.017992884462787 L2_Forecast=5.049265352764403 L2_Test=4.122554598345004
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=1.364316959767197 LnQ_Forecast=0.09684229320514895 LnQ_Test=0.02953136739436022
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=4.748062800286192 MedAE_Forecast=3.127362730905844 MedAE_Test=3.3534803236053747
INFO:pyaf.std:MODEL_COMPLEXITY 1.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (0.1730763608539812, array([0.53484678]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0201_LinearTrend_residue_bestCycle_byMAPE None -0.004147173763739881 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None   CumSum_I&T0201             T+S+R  ...  0.0891       0.0308   0.0434
1   None         _I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
2   None         _I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
3   None   CumSum_I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
4   None     Diff_I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
..   ...              ...               ...  ...     ...          ...      ...
59  None  RelDiff_I&T0201             T+S+R  ...  0.4357       0.5949   0.6304
60  None  RelDiff_I&T0201             T+S+R  ...  0.4357       0.5949   0.6304
61  None  RelDiff_I&T0201             T+S+R  ...  0.4357       0.5949   0.6304
62  None  RelDiff_I&T0201             T+S+R  ...  0.4357       0.5949   0.6304
63  None  RelDiff_I&T0201             T+S+R  ...  0.4357       0.5949   0.6304

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None  CumSum_I&T0201             T+S+R  ...  0.0891       0.0308   0.0434
1  None        _I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
2  None        _I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
3  None  CumSum_I&T0201             T+S+R  ...  0.0821       0.0318   0.0385
4  None    Diff_I&T0201             T+S+R  ...  0.0821       0.0318   0.0385

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0201'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.429, ('FORECASTING', {'Signals': ['I&T0201'], 'Horizon': 26}))
26 0     136.0
1     123.0
2     129.0
3     133.0
4     120.0
5     123.0
6     123.0
7     114.0
8     125.0
9     120.0
10    121.0
11    126.0
12    130.0
13    119.0
14    117.0
15    121.0
16    143.0
17    136.0
18    143.0
19    128.0
20    138.0
21    134.0
22    141.0
23    144.0
24    143.0
25    133.0
Name: I&T0201, dtype: float64
26 0     124.083342
1     124.329314
2     124.575287
3     124.821259
4     125.067231
5     125.313203
6     125.559176
7     125.805148
8     126.051120
9     126.297093
10    126.543065
11    126.789037
12    127.035010
13    127.280982
14    127.526954
15    127.772927
16    128.018899
17    128.264871
18    128.510844
19    128.756816
20    129.002788
21    129.248761
22    129.494733
23    129.740705
24    129.986678
25    130.232650
Name: I&T0201_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0201 I&T0201 [136.0, 123.0, 129.0, 133.0, 120.0, 123.0, 123.0, 114.0, 125.0, 120.0, 121.0, 126.0, 130.0, 119.0, 117.0, 121.0, 143.0, 136.0, 143.0, 128.0, 138.0, 134.0, 141.0, 144.0, 143.0, 133.0]
FORECAST_DETAIL_PREDICTED I&T0201 I&T0201 [124.08334191130388, 124.32931422884359, 124.57528654638328, 124.82125886392298, 125.06723118146266, 125.31320349900238, 125.55917581654207, 125.80514813408176, 126.05112045162147, 126.29709276916117, 126.54306508670086, 126.78903740424057, 127.03500972178027, 127.28098203931997, 127.52695435685968, 127.77292667439937, 128.01889899193907, 128.26487130947874, 128.51084362701846, 128.75681594455816, 129.00278826209785, 129.24876057963758, 129.49473289717724, 129.74070521471697, 129.98667753225666, 130.23264984979636]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0201 I&T0201 261 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0201 I&T0201 4.253214597702026
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0201 I&T0201 LinearTrend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0201 I&T0201 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0201 I&T0201 0.0536 0.0543 0.9945
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0201 I&T0201 7.04139393381863 8.376582383095874 0.12454584602622276
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0201_26'
