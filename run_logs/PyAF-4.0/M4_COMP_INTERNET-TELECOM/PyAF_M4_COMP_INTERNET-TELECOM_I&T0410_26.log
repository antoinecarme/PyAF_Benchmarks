BENCH_DATA M4_COMP_INTERNET-TELECOM
TIME :  Date N= 261 H= 26 HEAD= [0 1 2 3 4] TAIL= [256 257 258 259 260]
SIGNAL :  I&T0410 N= 261 H= 26 HEAD= [58. 62. 64. 68. 62.] TAIL= [104. 106. 104. 118. 128.]
   I&T0410  Date
0     58.0     0
1     62.0     1
2     64.0     2
3     68.0     3
4     62.0     4
<class 'pandas.core.frame.DataFrame'>
Int64Index: 261 entries, 0 to 260
Data columns (total 2 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   I&T0410  261 non-null    float64
 1   Date     261 non-null    int64  
dtypes: float64(1), int64(1)
memory usage: 6.1 KB
None
INFO:pyaf.timing:('OPERATION_START', ('SIGNAL_TRAINING', {'Signals': ['I&T0410'], 'Transformations': [('I&T0410', 'None', '_', 'T+S+R'), ('I&T0410', 'None', 'Diff_', 'T+S+R'), ('I&T0410', 'None', 'RelDiff_', 'T+S+R'), ('I&T0410', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0410', 'Transformation': '_I&T0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 1.207, ('TRAINING', {'Signal': 'I&T0410', 'Transformation': '_I&T0410'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0410', 'Transformation': 'Diff_I&T0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.603, ('TRAINING', {'Signal': 'I&T0410', 'Transformation': 'Diff_I&T0410'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0410', 'Transformation': 'RelDiff_I&T0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.665, ('TRAINING', {'Signal': 'I&T0410', 'Transformation': 'RelDiff_I&T0410'}))
INFO:pyaf.timing:('OPERATION_START', ('TRAINING', {'Signal': 'I&T0410', 'Transformation': 'CumSum_I&T0410'}))
DEBUG:pyaf.std:CYCLE_TRAINING_FILTER_SEASONALS_START
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.54, ('TRAINING', {'Signal': 'I&T0410', 'Transformation': 'CumSum_I&T0410'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 3.019, ('SIGNAL_TRAINING', {'Signals': ['I&T0410'], 'Transformations': [('I&T0410', 'None', '_', 'T+S+R'), ('I&T0410', 'None', 'Diff_', 'T+S+R'), ('I&T0410', 'None', 'RelDiff_', 'T+S+R'), ('I&T0410', 'None', 'CumSum_', 'T+S+R')], 'Cores': 4}))
INFO:pyaf.timing:('OPERATION_START', ('FINALIZE_TRAINING', {'Signals': ['I&T0410'], 'Transformations': [('I&T0410', [('I&T0410', 'None', 'CumSum_', 'T+S+R'), ('I&T0410', 'None', 'Diff_', 'T+S+R'), ('I&T0410', 'None', 'RelDiff_', 'T+S+R'), ('I&T0410', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.timing:('OPERATION_START', ('MODEL_SELECTION', {'Signal': 'I&T0410', 'Transformations': [('I&T0410', 'None', 'CumSum_', 'T+S+R'), ('I&T0410', 'None', 'Diff_', 'T+S+R'), ('I&T0410', 'None', 'RelDiff_', 'T+S+R'), ('I&T0410', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.006, ('MODEL_SELECTION', {'Signal': 'I&T0410', 'Transformations': [('I&T0410', 'None', 'CumSum_', 'T+S+R'), ('I&T0410', 'None', 'Diff_', 'T+S+R'), ('I&T0410', 'None', 'RelDiff_', 'T+S+R'), ('I&T0410', 'None', '_', 'T+S+R')]}))
INFO:pyaf.timing:('OPERATION_START', ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0410', 'Model': '_I&T0410_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.022, ('UPDATE_BEST_MODEL_PERFS', {'Signal': 'I&T0410', 'Model': '_I&T0410_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR'}))
INFO:pyaf.timing:('OPERATION_START', ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0410'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.553, ('COMPUTE_PREDICTION_INTERVALS', {'Signal': 'I&T0410'}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.582, ('FINALIZE_TRAINING', {'Signals': ['I&T0410'], 'Transformations': [('I&T0410', [('I&T0410', 'None', 'CumSum_', 'T+S+R'), ('I&T0410', 'None', 'Diff_', 'T+S+R'), ('I&T0410', 'None', 'RelDiff_', 'T+S+R'), ('I&T0410', 'None', '_', 'T+S+R')])], 'Cores': 1}))
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=0 TimeMax=187 TimeDelta=1 Horizon=26
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='I&T0410' Length=261  Min=58.0 Max=130.0  Mean=87.87739463601532 StdDev=18.654765975353865
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_I&T0410' Min=0.0 Max=1.0  Mean=0.4149638143891016 StdDev=0.2590939718799148
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_I&T0410_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [Lag1Trend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_I&T0410_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_I&T0410_Lag1Trend_residue_bestCycle_byMAPE' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_I&T0410_Lag1Trend_residue_bestCycle_byMAPE_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_MAPE MAPE_Fit=0.0395 MAPE_Forecast=0.0313 MAPE_Test=0.0304
INFO:pyaf.std:MODEL_SMAPE SMAPE_Fit=0.0395 SMAPE_Forecast=0.0318 SMAPE_Test=0.0307
INFO:pyaf.std:MODEL_MASE MASE_Fit=0.9947 MASE_Forecast=1.0045 MASE_Test=1.0043
INFO:pyaf.std:MODEL_CRPS CRPS_Fit=3.267254184397163 CRPS_Forecast=2.7805471124620063 CRPS_Test=2.0446153846153843
INFO:pyaf.std:MODEL_L1 L1_Fit=3.021276595744681 L1_Forecast=3.3191489361702127 L1_Test=3.6153846153846154
INFO:pyaf.std:MODEL_L2 L2_Fit=3.8537078028552236 L2_Forecast=4.9336016794949 L2_Test=4.85164524037584
INFO:pyaf.std:MODEL_LnQ LnQ_Fit=0.4933525875750526 LnQ_Forecast=0.10951808626112633 LnQ_Test=0.045638471948157386
INFO:pyaf.std:MODEL_MEDIAN_AE MedAE_Fit=2.0 MedAE_Forecast=2.0 MedAE_Test=2.0
INFO:pyaf.std:MODEL_COMPLEXITY 2.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _I&T0410_Lag1Trend_residue_bestCycle_byMAPE None 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
   Split   Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0   None         _I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
1   None         _I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
2   None   CumSum_I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
3   None     Diff_I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
4   None     Diff_I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
..   ...              ...               ...  ...     ...          ...      ...
59  None  RelDiff_I&T0410             T+S+R  ...  0.2475       0.4494   0.5117
60  None  RelDiff_I&T0410             T+S+R  ...  0.2475       0.4494   0.5117
61  None  RelDiff_I&T0410             T+S+R  ...  0.2475       0.4494   0.5117
62  None  RelDiff_I&T0410             T+S+R  ...  0.2475       0.4494   0.5117
63  None  RelDiff_I&T0410             T+S+R  ...  0.2475       0.4494   0.5117

[64 rows x 10 columns]
  Split  Transformation DecompositionType  ... FitMAPE ForecastMAPE TestMAPE
0  None        _I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
1  None        _I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
2  None  CumSum_I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
3  None    Diff_I&T0410             T+S+R  ...  0.0395       0.0313   0.0304
4  None    Diff_I&T0410             T+S+R  ...  0.0395       0.0313   0.0304

[5 rows x 10 columns]
INFO:pyaf.timing:('OPERATION_START', ('FORECASTING', {'Signals': ['I&T0410'], 'Horizon': 26}))
INFO:pyaf.timing:('OPERATION_END_ELAPSED', 0.401, ('FORECASTING', {'Signals': ['I&T0410'], 'Horizon': 26}))
26 0     122.0
1     128.0
2     138.0
3     142.0
4     136.0
5     134.0
6     130.0
7     128.0
8     130.0
9     128.0
10    130.0
11    136.0
12    124.0
13    138.0
14    142.0
15    136.0
16    144.0
17    150.0
18    154.0
19    146.0
20    154.0
21    158.0
22    160.0
23    154.0
24    156.0
25    146.0
Name: I&T0410, dtype: float64
26 0     128.0
1     128.0
2     128.0
3     128.0
4     128.0
5     128.0
6     128.0
7     128.0
8     128.0
9     128.0
10    128.0
11    128.0
12    128.0
13    128.0
14    128.0
15    128.0
16    128.0
17    128.0
18    128.0
19    128.0
20    128.0
21    128.0
22    128.0
23    128.0
24    128.0
25    128.0
Name: I&T0410_Forecast, dtype: float64
FORECAST_DETAIL_ACTUAL I&T0410 I&T0410 [122.0, 128.0, 138.0, 142.0, 136.0, 134.0, 130.0, 128.0, 130.0, 128.0, 130.0, 136.0, 124.0, 138.0, 142.0, 136.0, 144.0, 150.0, 154.0, 146.0, 154.0, 158.0, 160.0, 154.0, 156.0, 146.0]
FORECAST_DETAIL_PREDICTED I&T0410 I&T0410 [128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0, 128.0]
BENCHMARK_PERF_DETAIL_SIGNAL_HORIZON I&T0410 I&T0410 261 26
BENCHMARK_PERF_DETAIL_BENCH_TIME_IN_SECONDS PYAF_SYSTEM_DEPENDENT_ I&T0410 I&T0410 4.098560333251953
BENCHMARK_PERF_DETAIL_BEST_MODEL I&T0410 I&T0410 Lag1Trend + Cycle_None + NoAR
BENCHMARK_PERF_DETAIL_PERF_COUNT I&T0410 I&T0410 26
BENCHMARK_PERF_DETAIL_PERF_MAPE_SMAPE_MASE I&T0410 I&T0410 0.0874 0.0936 2.3077
BENCHMARK_PERF_DETAIL_PERF_L1_L2_R2 I&T0410 I&T0410 12.923076923076923 16.417626550097353 -1.2125510005827942
BENCHMARK_SUCCESS 'M4_COMP_INTERNET-TELECOM_I&T0410_26'
